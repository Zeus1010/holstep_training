N HAS_COMPLEX_DERIVATIVE_CSQRT
C |- (!z. ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_ABS_NUM
A |- (!n. ((real_abs (real_of_num n)) = (real_of_num n)))
T c= creal_abs creal_of_num f0 creal_of_num f0
D REAL_ABS_NEG
A |- (!x. ((real_abs (real_neg x)) = (real_abs x)))
T c= creal_abs creal_neg f0 creal_abs f0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_LT_REFL
A |- (!x. (~ ((real_lt x) x)))
T c~ creal_lt f0 f0
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D REAL_LE_ADD2
A |- (!w. (!x. (!y. (!z. ((((real_le w) x) /\ ((real_le y) z)) ==> ((real_le ((real_add w) y)) ((real_add x) z)))))))
T c==> c/\ creal_le f0 f1 creal_le f2 f3 creal_le creal_add f0 f2 creal_add f1 f3
D REAL_ABS_1
A |- ((real_abs (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_abs creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_ABS_POS
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) (real_abs x)))
T creal_le creal_of_num cNUMERAL c_0 creal_abs f0
D Real_ext.REAL_LE_LMUL_IMP
A |- (!x. (!y. (!z. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le y) z)) ==> ((real_le ((real_mul x) y)) ((real_mul x) z))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le f1 f2 creal_le creal_mul f0 f1 creal_mul f0 f2
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_neg
A |- (!x. ((vector_neg x) = (lambdai. (real_neg (x $ i)))))
T c= cvector_neg f0 clambda / creal_neg c$ f0 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D VECTOR_SUB_EQ
A |- (!x. (!y. ((((vector_sub x) y) = (vec (NUMERAL _0))) = (x = y))))
T c= c= cvector_sub f0 f1 cvec cNUMERAL c_0 c= f0 f1
D VECTOR_SUB
A |- (((vector_sub x) y) = ((vector_add x) (vector_neg y)))
T c= cvector_sub f0 f1 cvector_add f0 cvector_neg f1
D dist
A |- (!x. (!y. ((distance (x , y)) = (vector_norm ((vector_sub x) y)))))
T c= cdistance c, f0 f1 cvector_norm cvector_sub f0 f1
D NORM_POS_LE
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) (vector_norm x)))
T creal_le creal_of_num cNUMERAL c_0 cvector_norm f0
D NORM_MUL
A |- (!a. (!x. ((vector_norm ((% a) x)) = ((real_mul (real_abs a)) (vector_norm x)))))
T c= cvector_norm c% f0 f1 creal_mul creal_abs f0 cvector_norm f1
D NORM_LE_0
A |- (!x. (((real_le (vector_norm x)) (real_of_num (NUMERAL _0))) = (x = (vec (NUMERAL _0)))))
T c= creal_le cvector_norm f0 creal_of_num cNUMERAL c_0 c= f0 cvec cNUMERAL c_0
D NORM_TRIANGLE_LE
A |- (!x. (!y. (((real_le ((real_add (vector_norm x)) (vector_norm y))) e) ==> ((real_le (vector_norm ((vector_add x) y))) e))))
T c==> creal_le creal_add cvector_norm f0 cvector_norm f1 f2 creal_le cvector_norm cvector_add f0 f1 f2
D CX_DEF
A |- (!a. ((Cx a) = (complex (a , (real_of_num (NUMERAL _0))))))
T c= cCx f0 ccomplex c, f0 creal_of_num cNUMERAL c_0
D complex_div
A |- (!w. (!z. (((complex_div w) z) = ((complex_mul w) (complex_inv z)))))
T c= ccomplex_div f0 f1 ccomplex_mul f0 ccomplex_inv f1
D RE
A |- ((Re (complex (x , y))) = x)
T c= cRe ccomplex c, f0 f1 f0
D IM
A |- ((Im (complex (x , y))) = y)
T c= cIm ccomplex c, f0 f1 f1
D COMPLEX_EQ
A |- (!w. (!z. ((w = z) = (((Re w) = (Re z)) /\ ((Im w) = (Im z))))))
T c= c= f0 f1 c/\ c= cRe f0 cRe f1 c= cIm f0 cIm f1
D COMPLEX_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))))
T c= c= cvector_add f0 f1 cvector_add f0 f2 c= f1 f2
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_0
A |- (!x. (!y. ((((vector_sub x) y) = (Cx (real_of_num (NUMERAL _0)))) = (x = y))))
T c= c= cvector_sub f0 f1 cCx creal_of_num cNUMERAL c_0 c= f0 f1
D COMPLEX_MUL_RINV
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0
D CX_INJ
A |- (!x. (!y. (((Cx x) = (Cx y)) = (x = y))))
T c= c= cCx f0 cCx f1 c= f0 f1
D CX_ADD
A |- (!x. (!y. ((Cx ((real_add x) y)) = ((vector_add (Cx x)) (Cx y)))))
T c= cCx creal_add f0 f1 cvector_add cCx f0 cCx f1
D CX_INV
A |- (!x. ((Cx (real_inv x)) = (complex_inv (Cx x))))
T c= cCx creal_inv f0 ccomplex_inv cCx f0
D CX_MUL
A |- (!x. (!y. ((Cx ((real_mul x) y)) = ((complex_mul (Cx x)) (Cx y)))))
T c= cCx creal_mul f0 f1 ccomplex_mul cCx f0 cCx f1
D RE_CX
A |- (!x. ((Re (Cx x)) = x))
T c= cRe cCx f0 f0
D IM_CX
A |- (!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0))))
T c= cIm cCx f0 creal_of_num cNUMERAL c_0
D COMPLEX_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((vector_add x) ((vector_add y) z)) = ((vector_add ((vector_add x) y)) z))))) /\ ((!x. (!y. (((vector_add x) y) = ((vector_add y) x)))) /\ ((!x. (((vector_add (Cx (real_of_num (NUMERAL _0)))) x) = x)) /\ ((!x. (!y. (!z. (((complex_mul x) ((complex_mul y) z)) = ((complex_mul ((complex_mul x) y)) z))))) /\ ((!x. (!y. (((complex_mul x) y) = ((complex_mul y) x)))) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) x) = x)) /\ ((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) /\ ((!x. (!y. (!z. (((complex_mul x) ((vector_add y) z)) = ((vector_add ((complex_mul x) y)) ((complex_mul x) z)))))) /\ ((!x. (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) /\ (!x. (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n))))))))))))))
T c/\ ! ! ! c= cvector_add b0 cvector_add b1 b2 cvector_add cvector_add b0 b1 b2 c/\ ! ! c= cvector_add b0 b1 cvector_add b1 b0 c/\ ! c= cvector_add cCx creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= ccomplex_mul b0 ccomplex_mul b1 b2 ccomplex_mul ccomplex_mul b0 b1 b2 c/\ ! ! c= ccomplex_mul b0 b1 ccomplex_mul b1 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 c/\ ! ! ! c= ccomplex_mul b0 cvector_add b1 b2 cvector_add ccomplex_mul b0 b1 ccomplex_mul b0 b2 c/\ ! c= ccomplex_pow b0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! ! c= ccomplex_pow b0 cSUC b1 ccomplex_mul b0 ccomplex_pow b0 b1
D COMPLEX_POLY_NEG_CLAUSES
A |- ((!x. ((vector_neg x) = ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) x))) /\ (!x. (!y. (((vector_sub x) y) = ((vector_add x) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) y))))))
T c/\ ! c= cvector_neg b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= cvector_sub b0 b1 cvector_add b0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D COMPLEX_INV_MUL
A |- (!w. (!z. ((complex_inv ((complex_mul w) z)) = ((complex_mul (complex_inv w)) (complex_inv z)))))
T c= ccomplex_inv ccomplex_mul f0 f1 ccomplex_mul ccomplex_inv f0 ccomplex_inv f1
D COMPLEX_VEC_0
A |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_NORM_NZ
A |- (!z. (((real_lt (real_of_num (NUMERAL _0))) (vector_norm z)) = (~ (z = (Cx (real_of_num (NUMERAL _0)))))))
T c= creal_lt creal_of_num cNUMERAL c_0 cvector_norm f0 c~ c= f0 cCx creal_of_num cNUMERAL c_0
D CSQRT
A |- (!z. (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z))
T c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
D HAS_COMPLEX_DERIVATIVE_TRANSFORM_AT
A |- (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> creal_lt cdistance c, b0 f1 f0 c= * f2 b0 * f3 b0 chas_complex_derivative f2 f4 cat f1 chas_complex_derivative f3 f4 cat f1
D HAS_COMPLEX_DERIVATIVE_CHAIN
A |- (!P. (!f. (!g. ((!x. ((P x) ==> (((has_complex_derivative g) (g' x)) (at x)))) ==> ((!x. (!s. (((((has_complex_derivative f) f') ((within (at x)) s)) /\ (P (f x))) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. (((((has_complex_derivative f) f') (at x)) /\ (P (f x))) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c==> ! c==> * f0 b0 chas_complex_derivative f1 * f2 b0 cat b0 c/\ ! ! c==> c/\ chas_complex_derivative f3 f4 cwithin cat b0 b1 * f0 * f3 b0 chas_complex_derivative / * f1 * f3 b2 ccomplex_mul f4 * f2 * f3 b0 cwithin cat b0 b1 ! c==> c/\ chas_complex_derivative f3 f4 cat b0 * f0 * f3 b0 chas_complex_derivative / * f1 * f3 b1 ccomplex_mul f4 * f2 * f3 b0 cat b0
D HAS_COMPLEX_DERIVATIVE_CHAIN_UNIV
A |- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))))
T c==> ! chas_complex_derivative f0 * f1 b0 cat b0 c/\ ! ! c==> chas_complex_derivative f2 f3 cwithin cat b0 b1 chas_complex_derivative / * f0 * f2 b2 ccomplex_mul f3 * f1 * f2 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f2 f3 cat b0 chas_complex_derivative / * f0 * f2 b1 ccomplex_mul f3 * f1 * f2 b0 cat b0
D HAS_COMPLEX_DERIVATIVE_CDIV_AT
A |- (!f. (!f'. (!c. (!x. (!s. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. ((complex_div (f x)) c))) ((complex_div f') c)) (at x))))))))
T c==> chas_complex_derivative f0 f1 cat f2 chas_complex_derivative / ccomplex_div * f0 b0 f3 ccomplex_div f1 f3 cat f2
D HAS_COMPLEX_DERIVATIVE_ID
A |- (!net. (((has_complex_derivative (\x. x)) (Cx (real_of_num (NUMERAL (BIT1 _0))))) net))
T chas_complex_derivative / b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
D HAS_COMPLEX_DERIVATIVE_CEXP
A |- (!z. (((has_complex_derivative cexp) (cexp z)) (at z)))
T chas_complex_derivative part ccexp ccexp f0 cat f0
D HAS_COMPLEX_DERIVATIVE_CLOG
A |- (!z. ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative clog) (complex_inv z)) (at z))))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part cclog ccomplex_inv f0 cat f0
D CSQRT_CEXP_CLOG
A |- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (?z'. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((\c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 * / creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) = (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((% c) ((% d) x)) = ((% ((real_mul c) d)) x))
T c= c% f0 c% f1 f2 c% creal_mul f0 f1 f2
+ |- (!d. (((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) d) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 f4 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z'. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z') = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ (!z. ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
+ ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021644) ((real_add _2021645) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021644) ((real_add _2021645) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021644) ((real_add _2021645) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) /\ F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- ((((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- |- (((((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F) = T)
T c= c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , z))) d) ==> ((f x') = (csqrt x')))) /\ (((has_complex_derivative f) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))))) (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 ccsqrt b2 chas_complex_derivative b0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) z) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (csqrt z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((\d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))) d)
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 chas_complex_derivative f2 f3 cat f0 f4
+ |- (((!x. (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- (((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))) = T)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c= c/\ ! ! c==> chas_complex_derivative f3 f1 cwithin cat b0 b1 chas_complex_derivative / * f2 * f3 b2 ccomplex_mul f1 * f0 * f3 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f3 f1 cat b0 chas_complex_derivative / * f2 * f3 b1 ccomplex_mul f1 * f0 * f3 b0 cat b0 cT
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_sub ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_sub creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ |- (((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))) = ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) ==> ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (csqrt z)) = (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))))))
T c= c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c==> c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\z. (csin (f z)))) ((complex_mul f') (ccos (f z)))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccsin * f0 b0 ccomplex_mul f1 cccos * f0 f2 cwithin cat f2 f3
+ ((vector_norm ((vector_sub x') z)) = _2021645), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) d) |- (((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))) = ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 f4 c= c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f4 c/\ ! c==> creal_lt cdistance c, b0 f0 f4 c= * f1 b0 * f2 b0 chas_complex_derivative f1 f3 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((Im z) = (real_of_num (NUMERAL _0))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = T))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 cT
+ |- (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021644) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b0 b2 c= * b1 b3 * f0 b3 chas_complex_derivative b1 f1 cat b0 chas_complex_derivative f0 f1 cat b0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) ==> (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))))
T c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((!z'. ((~ (z' = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (z = (Cx (real_of_num (NUMERAL _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))) = (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g)
T * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2
- |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z)))) y)
T * / ! c= c= cvector_add f0 b0 cvector_add f0 b1 c= b0 b1 f1
- |- ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P)
T * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0
+ |- (((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z'. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) (complex_inv z))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_inv f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= b1 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b1 ccomplex_inv ccsqrt b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b1 cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= ccomplex_mul cvector_sub b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b1 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b1 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b1 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) z')) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 f1 cCx creal_of_num cNUMERAL c_0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 chas_complex_derivative f2 f3 cat f0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z') ((complex_mul z'') (csqrt z))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f1 ccomplex_mul f2 ccsqrt f0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021645), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') /\ F)
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1
+ |- ((((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z'. (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z'. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) = F)
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) /\ F)
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((!x'. (((real_lt (distance (x' , z))) (vector_norm z)) ==> ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c/\ ! c==> creal_lt cdistance c, b0 f0 cvector_norm f0 c= ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((((real_lt (distance (x' , z))) (vector_norm z)) ==> ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x'))) = T)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> creal_lt cdistance c, f1 f0 cvector_norm f0 c= ccexp ccomplex_div cclog f1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f1 cT
+ |- ((vector_neg x) = ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))
T c= cvector_neg f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') z)))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ |- (!z. (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F))
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- (((vector_add ((% c) x)) ((% d) y)) = ((vector_add ((% c) x)) ((% d) y)))
T c= cvector_add c% f0 f1 c% f2 f3 cvector_add c% f0 f1 c% f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (?z'. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 b0 b1 c= * f0 b2 * f1 b2 chas_complex_derivative f0 f2 cat b0 chas_complex_derivative f1 f2 cat b0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))) = T)
T c= c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 cT
- |- ((t ==> T) = T)
T c= c==> f0 cT cT
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= ccomplex_mul b1 ccomplex_inv b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b1 ccomplex_inv ccsqrt b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b1 cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= ccomplex_mul cvector_sub b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b1 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b1 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b1 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (csqrt z)) (complex_inv (csqrt z)))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z. (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F))
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- |- ((!z'. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z')) (complex_inv (csqrt z'))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (!z. ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') /\ F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!x. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (at z)) ==> ((((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g') ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))) = ((((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g') ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0 c==> c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c==> c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
- ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021646)) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- ((((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))), (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021647), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((\z. ((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))) z)
T * / c==> c~ c= cCx creal_of_num cNUMERAL c_0 b0 c= ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))), ((real_lt (distance (x' , z))) (vector_norm z)) |- ((csqrt x') = (cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> creal_lt cdistance c, f1 f0 cvector_norm f0 c= ccsqrt f1 ccexp ccomplex_div cclog f1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) f) |- (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))
T c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 f3 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f3 b1 * f1 b1 chas_complex_derivative f3 f2 cat f0
- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?z'. (P z')) /\ Q) = (?z'. ((P z') /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((((has_complex_derivative (\z. (clog z))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (at z)) ==> (((has_complex_derivative (\z. ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (at z))) = (((has_complex_derivative (\z. ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (at z)))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> chas_complex_derivative / cclog b0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cat f0 chas_complex_derivative / ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0 chas_complex_derivative / ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- (((!x. (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') z)) = _2021647), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (z = (Cx (real_of_num (NUMERAL _0)))))) = ((\t. (t \/ (~ t))) (z = (Cx (real_of_num (NUMERAL _0))))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cCx creal_of_num cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 cCx creal_of_num cNUMERAL c_0
+ |- ((((has_complex_derivative (\z. (f z))) f') (at z)) ==> (((has_complex_derivative (\z. (cexp (f z)))) ((complex_mul f') (cexp (f z)))) (at z)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccexp * f0 b0 ccomplex_mul f1 ccexp * f0 f2 cat f2
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((!z'. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z')) (complex_inv (csqrt z'))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ (!z. ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- |- (((!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) ==> ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q)) = ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q))
T c= c==> ! c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1 * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1
+ |- ((((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))))
T c= c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x')) |- ((csqrt x') = (cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))
T c==> c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))
T c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
- ((Im z) = (real_of_num (NUMERAL _0))) |- (T = ((Im z) = (real_of_num (NUMERAL _0))))
T c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= cT c= cIm f0 creal_of_num cNUMERAL c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!z'. ((~ (((complex_mul z') (complex_inv z')) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- |- (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((\f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) f)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 * / ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 f2
+ |- (((vector_add x') (vector_neg (vec (NUMERAL _0)))) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x'))
T c= cvector_add f0 cvector_neg cvec cNUMERAL c_0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((!z'. ((~ (z' = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (z = (Cx (real_of_num (NUMERAL _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((real_abs (real_neg (real_of_num n))) = (real_of_num n))
T c= creal_abs creal_neg creal_of_num f0 creal_of_num f0
- |- (((~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!x. (((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) x) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))) ==> ((?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))) = ((?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))))
T c= c==> ! c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * f1 b2 * f2 b2 chas_complex_derivative f1 f3 cat f0 b0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b5 c/\ ! c==> creal_lt cdistance c, b6 b4 b5 c= * b1 b6 * b3 b6 chas_complex_derivative b1 b2 cat b4 chas_complex_derivative b3 b2 cat b4 chas_complex_derivative f2 f3 cat f0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0 c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! chas_complex_derivative f0 * f1 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f2 cwithin cat b1 b2 chas_complex_derivative / * f0 * b0 b3 ccomplex_mul f2 * f1 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f2 cat b1 chas_complex_derivative / * f0 * b0 b2 ccomplex_mul f2 * f1 * b0 b1 cat b1
+ (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((((has_complex_derivative (\z. ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (at z)) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (at z))) = (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (at z)))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> chas_complex_derivative / ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((real_sub x) y) = ((real_add x) (real_neg y)))
T c= creal_sub f0 f1 creal_add f0 creal_neg f1
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\z. ((complex_div (f z)) c))) ((complex_div f') c)) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_div * f0 b0 f4 ccomplex_div f1 f4 cwithin cat f2 f3
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (csqrt z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x')) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) z)))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((!z. t) = t)
T c= ! f0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) (complex_inv z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 ccomplex_inv f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))) ==> ((\x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))) x)) = ((\x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))) x))
T c= c==> ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b0 b2 c= * b1 b3 * f0 b3 chas_complex_derivative b1 f1 cat b0 chas_complex_derivative f0 f1 cat b0 * / c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b0 b2 c= * b1 b3 * f0 b3 chas_complex_derivative b1 f1 cat b0 chas_complex_derivative f0 f1 cat b0 f2 * / c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b0 b2 c= * b1 b3 * f0 b3 chas_complex_derivative b1 f1 cat b0 chas_complex_derivative f0 f1 cat b0 f2
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 chas_complex_derivative f1 f2 cat f0
+ |- ((((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))
T c==> c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- ((vector_norm ((vector_sub x') z)) = _2021645), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (z = (Cx (real_of_num (NUMERAL _0)))) |- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))
T c==> c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1
+ |- (((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0)))) = ((% (real_of_num (NUMERAL (BIT1 _0)))) x'))
T c= c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 c% creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (complex_inv (csqrt z))) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))))) (csqrt z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccomplex_inv ccsqrt f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((Im z) = (real_of_num (NUMERAL _0))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((real_lt (real_of_num (NUMERAL _0))) (Re z))
T c==> c= cIm f0 creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 creal_lt creal_of_num cNUMERAL c_0 cRe f0
+ |- ((((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F) ==> (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)) = (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))), (?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) |- ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) /\ (((has_complex_derivative g) f') (at x)))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 c/\ c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 chas_complex_derivative f1 f2 cat f0
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) |- ((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))
T c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
+ |- ((((real_le (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) \/ ((((Im z) = (real_of_num (NUMERAL _0))) /\ (~ ((real_lt (real_of_num (NUMERAL _0))) (Re z)))) \/ ((~ ((real_lt (vector_norm ((vector_sub x') z))) (vector_norm z))) \/ (~ ((real_le (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((real_lt (distance (x' , z))) (vector_norm z)) ==> (~ (x' = (vec (NUMERAL _0))))))))
T c= c\/ creal_le cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ c/\ c= cIm f0 creal_of_num cNUMERAL c_0 c~ creal_lt creal_of_num cNUMERAL c_0 cRe f0 c\/ c~ creal_lt cvector_norm cvector_sub f1 f0 cvector_norm f0 c~ creal_le cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> creal_lt cdistance c, f1 f0 cvector_norm f0 c~ c= f1 cvec cNUMERAL c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- |- (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- (((real_ge ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0)))))) /\ ((real_ge ((real_mul (real_abs (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) _2021649)) (vector_norm ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c/\ creal_ge creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f3 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 creal_ge creal_mul creal_abs creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1
- |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
+ |- (((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_add ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) ((real_mul (real_abs (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) _2021649))) (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 creal_ge creal_add creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f3 creal_mul creal_abs creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1
+ |- (((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z))) = ((% (real_of_num (NUMERAL (BIT1 _0)))) z))
T c= cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 c% creal_of_num cNUMERAL cBIT1 c_0 f1
- |- ((((Im z) = (real_of_num (NUMERAL _0))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> q')))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 f1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 f1
+ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0
- |- (((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))))) = (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c= c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) z) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') z)) = _2021649) |- ((((real_ge _2021649) (vector_norm ((vector_sub x') z))) ==> (!c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z)))))) = (!c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c= c==> creal_ge f2 cvector_norm cvector_sub f0 f1 ! creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 ! creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1
- |- (((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) ==> (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))) = (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))))
T c= c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_sub ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021648)) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021649))) (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z)))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 creal_ge creal_sub creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_mul creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z'. (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (?z'. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((((Im z) = (real_of_num (NUMERAL _0))) = ((Im z) = (real_of_num (NUMERAL _0)))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> q')))) = ((((Im z) = (real_of_num (NUMERAL _0))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> q'))))
T c= c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 c= cIm f0 creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 f1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 f1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 f1
+ |- ((((has_complex_derivative (\z. ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) f') (at z)) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ((complex_mul f') (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (at z)))
T c==> chas_complex_derivative / ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 cat f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f0 ccexp ccomplex_div cclog f1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f1
+ |- (((!x. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , z))) d) ==> (((\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x') = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))) (vector_norm z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * / ccexp ccomplex_div cclog b2 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 ccsqrt b1 chas_complex_derivative / ccexp ccomplex_div cclog b1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 cvector_norm f0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)
T * / c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
+ |- (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((((Im z) = (real_of_num (NUMERAL _0))) ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = T)) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> T))) = ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> T)))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 cT c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 cT c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) ((complex_mul z') (complex_inv (csqrt z)))))) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_mul f1 ccomplex_inv ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))
T c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> creal_lt cdistance c, b0 f1 f0 c= * f2 b0 * f3 b0 chas_complex_derivative f2 f4 cat f1 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f3 f4 cat f1
+ |- (!z'. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F))
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\z. (ccos (f z)))) ((complex_mul f') (vector_neg (csin (f z))))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / cccos * f0 b0 ccomplex_mul f1 cvector_neg ccsin * f0 f2 cwithin cat f2 f3
- |- ((!z'. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z') = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (!z. ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))) = ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))
T c= c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (complex_inv (csqrt z))) (csqrt z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul ccomplex_inv ccsqrt f0 ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z. (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F))
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((!x. (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))) ==> ((\f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))) f')) = ((\f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))) f'))
T c= c==> ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1 * / ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1 f1 * / ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1 f1
- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= b1 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b1 ccomplex_inv ccsqrt b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b1 cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= ccomplex_mul cvector_sub b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b1 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b1 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b1 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ ((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) d) |- (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 f4 c/\ creal_lt creal_of_num cNUMERAL c_0 f4 c/\ ! c==> creal_lt cdistance c, b0 f0 f4 c= * f1 b0 * f2 b0 chas_complex_derivative f1 f3 cat f0
+ |- ((((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F) = T)
T c= c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = (vector_norm ((vector_sub x') (vec (NUMERAL _0))))), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z') ((complex_mul z'') (csqrt z)))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z'') (complex_inv (csqrt z))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f1 ccomplex_mul f2 ccsqrt f0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((((real_ge _2021648) (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) ==> (!c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0)))))))) = (!c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0))))))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c= c==> creal_ge f1 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 ! creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0 ! creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- (((real_ge (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge _2021648) (vector_norm ((vector_sub x') (vec (NUMERAL _0))))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c/\ creal_ge cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge f1 cvector_norm cvector_sub f0 cvec cNUMERAL c_0
+ (?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) |- ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))
T c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f1 f2 cat f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z))) = ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 f0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , z))) d) ==> ((f x') = (csqrt x')))) /\ (((has_complex_derivative f) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))) = (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 ccsqrt b2 chas_complex_derivative b0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ |- ((((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F) ==> (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)) = (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0))) = (((real_gt _2021644) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at z)) ==> (((has_complex_derivative (\z. (csin (f z)))) ((complex_mul f') (ccos (f z)))) (at z)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccsin * f0 b0 ccomplex_mul f1 cccos * f0 f2 cat f2
+ |- (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))))
T c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- |- ((!z'. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z') = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (!z. ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')), (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) |- (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))
T c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c/\ c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (!z''. (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F))
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- ((\x. ((Re (Cx x)) = x)) x)
T * / c= cRe cCx b0 b0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = (vector_norm ((vector_sub x') (vec (NUMERAL _0))))), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\z. (g z))) g') ((within (at x)) s)) ==> (((has_complex_derivative (\z. ((complex_mul (f z)) (g z)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) ((within (at x)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul * f0 b0 * f4 b0 cvector_add ccomplex_mul * f0 f2 f5 ccomplex_mul f1 * f4 f2 cwithin cat f2 f3
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021648) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0
+ |- ((x = y) = ((real_le (vector_norm ((vector_sub x) y))) (real_of_num (NUMERAL _0))))
T c= c= f0 f1 creal_le cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) /\ F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))) |- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ |- (((!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) ==> ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)) = ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z))
T c= c==> ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0 * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (csqrt z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge (vector_norm ((vector_sub x') z))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (!g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2
+ |- (!z. (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F))
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> ((~ ((f x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. (complex_inv (f z)))) ((complex_div (vector_neg f')) ((complex_pow (f x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> c~ c= * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_inv * f0 b0 ccomplex_div cvector_neg f1 ccomplex_pow * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
+ ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))), ((z = (Cx (real_of_num (NUMERAL _0)))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))) |- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 c==> c==> c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) = (((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))) /\ ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c/\ c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (complex_inv (csqrt z))) (csqrt z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul ccomplex_inv ccsqrt f0 ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') /\ F)
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- ((((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F) = T)
T c= c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF cT
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) /\ (!g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c/\ ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) /\ F)
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z))))) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))) = (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
- |- ((!z'. ((~ (((complex_mul z') (complex_inv z')) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) ==> ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z)) = ((\z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))) z))
T c= c==> ! c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2 * / c= c= cvector_add f0 f1 cvector_add f0 b0 c= f1 b0 f2
- ((vector_norm ((vector_sub x') z)) = _2021645), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= b1 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b1 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b1 cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= ccomplex_mul cvector_sub b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b1 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b1 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b1 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))
T c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_mul (real_abs (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) _2021649)) (vector_norm ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_mul creal_abs creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1
- |- ((!z. ((P z) \/ Q)) = ((!z. (P z)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((\f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))) f')
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b2 b3 c= * f0 b4 * b1 b4 chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 b0 cat b2 f1
+ |- (((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))
T c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ (~ (((real_le (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) \/ ((((Im z) = (real_of_num (NUMERAL _0))) /\ (~ ((real_lt (real_of_num (NUMERAL _0))) (Re z)))) \/ ((~ ((real_lt (vector_norm ((vector_sub x') z))) (vector_norm z))) \/ (~ ((real_le (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0)))))))) |- ((~ (((real_le (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) \/ ((((Im z) = (real_of_num (NUMERAL _0))) /\ (~ ((real_lt (real_of_num (NUMERAL _0))) (Re z)))) \/ ((~ ((real_lt (vector_norm ((vector_sub x') z))) (vector_norm z))) \/ (~ ((real_le (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0)))))))) /\ F)
T c==> c~ c\/ creal_le cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ c/\ c= cIm f0 creal_of_num cNUMERAL c_0 c~ creal_lt creal_of_num cNUMERAL c_0 cRe f0 c\/ c~ creal_lt cvector_norm cvector_sub f1 f0 cvector_norm f0 c~ creal_le cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c~ c\/ creal_le cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ c/\ c= cIm f0 creal_of_num cNUMERAL c_0 c~ creal_lt creal_of_num cNUMERAL c_0 cRe f0 c\/ c~ creal_lt cvector_norm cvector_sub f1 f0 cvector_norm f0 c~ creal_le cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) x'))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (complex_inv (csqrt z))) (csqrt z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul ccomplex_inv ccsqrt f0 ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ ((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) d) |- (((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) d) /\ ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 f4 c/\ * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 f4 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0
+ |- ((((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt _2021646) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x')) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) z)))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))) = T)
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c= ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1 cT
+ |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) ==> ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (csqrt z)) = (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z))))))
T c==> c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt _2021646) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add _2021646) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add _2021646) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) z) = ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) z))
T c= c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((real_neg ((real_sub (Im z)) (real_of_num (NUMERAL _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z)))
T c= creal_neg creal_sub cIm f0 creal_of_num cNUMERAL c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((!z'. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z') = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ (!z. ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021648)) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (((!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))) ==> ((\x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))) x)) = ((\x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))) x))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c= c==> ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 b0 b1 c= * f0 b2 * f1 b2 chas_complex_derivative f0 f2 cat b0 chas_complex_derivative f1 f2 cat b0 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 b0 b1 c= * f0 b2 * f1 b2 chas_complex_derivative f0 f2 cat b0 chas_complex_derivative f1 f2 cat b0 f3 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 b0 b1 c= * f0 b2 * f1 b2 chas_complex_derivative f0 f2 cat b0 chas_complex_derivative f1 f2 cat b0 f3
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (((!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) ==> ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g)) = ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) g))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c= c==> ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 c/\ ! ! c==> chas_complex_derivative f2 f1 cwithin cat b1 b2 chas_complex_derivative / * b0 * f2 b3 ccomplex_mul f1 * f0 * f2 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative f2 f1 cat b1 chas_complex_derivative / * b0 * f2 b2 ccomplex_mul f1 * f0 * f2 b1 cat b1 f3
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , z))) d) ==> (((\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x') = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * / ccexp ccomplex_div cclog b2 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 ccsqrt b1 chas_complex_derivative / ccexp ccomplex_div cclog b1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((\f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x))))) f')
T * / ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b1 b3 c= * b2 b4 * f0 b4 chas_complex_derivative b2 b0 cat b1 chas_complex_derivative f0 b0 cat b1 f1
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((real_lt (real_of_num (NUMERAL _0))) (vector_norm z)) /\ ((!x'. (((real_lt (distance (x' , z))) (vector_norm z)) ==> (((\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x') = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cvector_norm f0 c/\ ! c==> creal_lt cdistance c, b0 f0 cvector_norm f0 c= * / ccexp ccomplex_div cclog b1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 ccsqrt b0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') /\ F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (csqrt z)) (complex_inv (csqrt z)))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (csqrt z)) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt _2021644) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add _2021644) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add _2021644) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) ((complex_mul z') (complex_inv z)))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z')) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 ccomplex_mul f1 ccomplex_inv f0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 cCx creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0))) = (((real_gt _2021646) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z'. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))) = (((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))
T c= c==> c==> c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
- (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ |- (((!x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) ==> ((\x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) x)) = ((\x. ((Im (Cx x)) = (real_of_num (NUMERAL _0)))) x))
T c= c==> ! c= cIm cCx b0 creal_of_num cNUMERAL c_0 * / c= cIm cCx b0 creal_of_num cNUMERAL c_0 f0 * / c= cIm cCx b0 creal_of_num cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_ge b) (vector_norm x)) ==> (!c. ((real_ge ((real_mul (real_abs c)) b)) (vector_norm ((% c) x)))))
T c==> creal_ge f0 cvector_norm f1 ! creal_ge creal_mul creal_abs b0 f0 cvector_norm c% b0 f1
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ (x = y)) = (~ ((real_le (vector_norm ((vector_sub x) y))) (real_of_num (NUMERAL _0)))))
T c= c~ c= f0 f1 c~ creal_le cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0
- |- (((~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z'. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((has_complex_derivative (\z. ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (at z))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative / ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0
+ |- ((\g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))) g)
T * / ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2 f0
+ |- ((\x. (~ ((real_lt x) x))) x)
T * / c~ creal_lt b0 b0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) ==> ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (csqrt z)) = (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (csqrt z)) = (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z))))))
T c= c==> c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
+ |- (((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) ==> (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ==> ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))
T c==> c==> c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c==> c==> c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') /\ F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) z) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL (BIT1 _0)))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) z)) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((~ (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= c==> c= c~ ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (!z'. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F))
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((((has_complex_derivative (\z. (f z))) f') net) ==> ((((has_complex_derivative (\z. (g z))) g') net) ==> (((has_complex_derivative (\z. ((vector_add (f z)) (g z)))) ((vector_add f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
+ |- ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))
T c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 chas_complex_derivative f1 f2 cat f0
+ |- (!z''. (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F))
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) = F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((Cx (real_of_num (NUMERAL _0))) = z) |- (z = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 f0 c= f0 cCx creal_of_num cNUMERAL c_0
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z)))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
+ ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) ==> F), ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) \/ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0))))))) |- F
T c==> c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((real_ge s) t) = ((real_ge ((real_sub s) t)) (real_of_num (NUMERAL _0))))
T c= creal_ge f0 f1 creal_ge creal_sub f0 f1 creal_of_num cNUMERAL c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (T = (~ ((Cx (real_of_num (NUMERAL _0))) = z)))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= cT c~ c= cCx creal_of_num cNUMERAL c_0 f0
- |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) z')) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 f1 cCx creal_of_num cNUMERAL c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- ((!x. (((has_complex_derivative g) (g' x)) (at x))) /\ (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c/\ ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((z = (Cx (real_of_num (NUMERAL _0)))) = F)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c= f0 cCx creal_of_num cNUMERAL c_0 cF
- |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (((!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))) ==> ((\g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))) g)) = ((\g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))) g))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c= c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b1 b2 c= * f0 b3 * b0 b3 chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f1 cat b1 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b1 b2 c= * f0 b3 * b0 b3 chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f1 cat b1 f2 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b1 b2 c= * f0 b3 * b0 b3 chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f1 cat b1 f2
+ |- ((((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F) = T)
T c= c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (~ ((Cx (real_of_num (NUMERAL _0))) = z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c~ c= cCx creal_of_num cNUMERAL c_0 f0
- (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add _2021646) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> ((((has_complex_derivative (\z. (g z))) g') ((within (at x)) s)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. ((complex_div (f z)) (g z)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) ((within (at x)) s)))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> chas_complex_derivative / * f4 b0 f5 cwithin cat f2 f3 c==> c~ c= * f4 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f4 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f4 f2 ccomplex_mul * f0 f2 f5 ccomplex_pow * f4 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = (vector_norm ((vector_sub x') (vec (NUMERAL _0))))), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- F
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b1 b2 c= * f0 b3 * b0 b3 chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f1 cat b1
+ ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt _2021646) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- (!z''. (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') ==> F))
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- (((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z'. (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) = (?z''. ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((~ (x' = (vec (NUMERAL _0)))) = (~ (x' = (Cx (real_of_num (NUMERAL _0))))))
T c= c~ c= f0 cvec cNUMERAL c_0 c~ c= f0 cCx creal_of_num cNUMERAL c_0
- |- ((\p'. (!q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q')))))) p')
T * / ! c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> b0 b1 f1
- |- (((~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) z)) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (((!x. (((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) x) ==> F)) ==> ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F)) = ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= ccomplex_mul b1 ccomplex_inv b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b1 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b1 cNUMERAL cBIT0 cBIT1 c_0 b1 c/\ c= ccomplex_mul cvector_sub b1 cCx creal_of_num cNUMERAL c_0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b1 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b1 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b1 b3 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ |- (((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) \/ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c\/ c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))), (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) /\ ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((vector_add (Cx x)) (Cx y)) = (Cx ((real_add x) y)))
T c= cvector_add cCx f0 cCx f1 cCx creal_add f0 f1
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z'. (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (?z'. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((has_complex_derivative (\z. c)) (Cx (real_of_num (NUMERAL _0)))) net)
T chas_complex_derivative / f0 cCx creal_of_num cNUMERAL c_0 f1
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((real_lt (distance (x' , z))) (vector_norm z)) ==> ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x')))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> creal_lt cdistance c, f1 f0 cvector_norm f0 c= ccexp ccomplex_div cclog f1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f1
+ |- ((((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = (?z''. (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c= c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((y = z) = (((vector_add (vector_neg z)) y) = ((vector_add (vector_neg z)) z)))
T c= c= f0 f1 c= cvector_add cvector_neg f1 f0 cvector_add cvector_neg f1 f1
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644)) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- (((!c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0))))))) ==> ((\c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\c. ((real_ge ((real_mul (real_abs c)) _2021648)) (vector_norm ((% c) ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c= c==> ! creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0 * / creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / creal_ge creal_mul creal_abs b0 f1 cvector_norm c% b0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ |- (((!x. (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) x) ==> F)) ==> ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F)) = ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F))
T c= c==> ! c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) = F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))) = T)
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c= ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b0 b2 c= * b1 b3 * f0 b3 chas_complex_derivative b1 f1 cat b0 chas_complex_derivative f0 f1 cat b0 cT
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((vector_sub x') z)) = ((vector_add ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x')) ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))
T c= c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 cvector_add c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_of_num cNUMERAL cBIT1 c_0 f1
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((\g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))) g)
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ ! c==> creal_lt cdistance c, b3 b1 b2 c= * f0 b3 * b0 b3 chas_complex_derivative f0 f1 cat b1 chas_complex_derivative b0 f1 cat b1 f2
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (vector_norm z)) /\ ((!x'. (((real_lt (distance (x' , z))) (vector_norm z)) ==> (((\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x') = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z)))) = ((\d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , z))) d) ==> (((\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) x') = (csqrt x')))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))) (vector_norm z)))
T c= c/\ creal_lt creal_of_num cNUMERAL c_0 cvector_norm f0 c/\ ! c==> creal_lt cdistance c, b0 f0 cvector_norm f0 c= * / ccexp ccomplex_div cclog b1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 ccsqrt b0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 * / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * / ccexp ccomplex_div cclog b2 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b1 ccsqrt b1 chas_complex_derivative / ccexp ccomplex_div cclog b1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0 cvector_norm f0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z') ((complex_mul z'') (csqrt z))))) ((vector_add ((complex_mul z'') (complex_inv (csqrt z)))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f1 ccomplex_mul f2 ccsqrt f0 cvector_add ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) = (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z'. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z')) (complex_inv (csqrt z'))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ (!z. ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)
T * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- (((!z. (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) ==> ((\z. (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) z)) = ((\z. (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) z))
T c= c==> ! c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)
T * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
+ |- (((!x. (~ ((real_lt x) x))) ==> ((\x. (~ ((real_lt x) x))) x)) = ((\x. (~ ((real_lt x) x))) x))
T c= c==> ! c~ creal_lt b0 b0 * / c~ creal_lt b0 b0 f0 * / c~ creal_lt b0 b0 f0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\z. ((complex_mul c) (f z)))) ((complex_mul c) f')) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul f4 * f0 b0 ccomplex_mul f4 f1 cwithin cat f2 f3
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> (((has_complex_derivative (\z. ((complex_div (f z)) c))) ((complex_div f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_div * f0 b0 f3 ccomplex_div f1 f3 cat f2
- (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> ((((has_complex_derivative (\z. (g z))) g') (at x)) ==> ((~ ((g x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. ((complex_div (f z)) (g z)))) ((complex_div ((vector_sub ((complex_mul f') (g x))) ((complex_mul (f x)) g'))) ((complex_pow (g x)) (NUMERAL (BIT0 (BIT1 _0)))))) (at x)))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 c==> c~ c= * f3 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_div * f0 b0 * f3 b0 ccomplex_div cvector_sub ccomplex_mul f1 * f3 f2 ccomplex_mul * f0 f2 f4 ccomplex_pow * f3 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
+ ((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!z. ((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))) ==> ((\z. ((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))) z)) = ((\z. ((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))) z))
T c= c==> ! c==> c~ c= cCx creal_of_num cNUMERAL c_0 b0 c= ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 * / c==> c~ c= cCx creal_of_num cNUMERAL c_0 b0 c= ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 f0 * / c==> c~ c= cCx creal_of_num cNUMERAL c_0 b0 c= ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ |- ((((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add _2021648) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ ((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- (((\z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') /\ F)
T c==> * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c/\ * / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 cF
+ |- (((csqrt x') = (cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x')))
T c= c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
+ ((vector_norm ((vector_sub x') z)) = _2021649) |- (((!c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) ==> ((\c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c= c==> ! creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 * / creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) x) ==> F)) ==> ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F)) = ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)
T * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
- |- (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- ((\x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))) x)
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 b0 b1 c= * f0 b2 * f1 b2 chas_complex_derivative f0 f2 cat b0 chas_complex_derivative f1 f2 cat b0 f3
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) ((complex_mul z') (complex_inv z))))) (complex_inv z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_mul f1 ccomplex_inv f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL c_0
+ |- (((!g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))) ==> ((\g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))) g)) = ((\g. (!f'. (!x. ((?f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) ==> (((has_complex_derivative g) f') (at x)))))) g))
T c= c==> ! ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2 * / ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2 f0 * / ! ! c==> c? / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b2 b4 c= * b3 b5 * b0 b5 chas_complex_derivative b3 b1 cat b2 chas_complex_derivative b0 b1 cat b2 f0
- |- (((vector_add ((% c) x)) ((% d) x)) = ((% ((real_add c) d)) x))
T c= cvector_add c% f0 f1 c% f2 f1 c% creal_add f0 f2 f1
+ ((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) |- (((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> F) = F)
T c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c= c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
- |- (((((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((~ (((real_le (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) \/ ((((Im z) = (real_of_num (NUMERAL _0))) /\ (~ ((real_lt (real_of_num (NUMERAL _0))) (Re z)))) \/ ((~ ((real_lt (vector_norm ((vector_sub x') z))) (vector_norm z))) \/ (~ ((real_le (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0)))))))) ==> F)
T c==> c~ c\/ creal_le cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c\/ c/\ c= cIm f0 creal_of_num cNUMERAL c_0 c~ creal_lt creal_of_num cNUMERAL c_0 cRe f0 c\/ c~ creal_lt cvector_norm cvector_sub f1 f0 cvector_norm f0 c~ creal_le cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ ((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) f) |- (((?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))) = ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 f3 c= c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f3 b1 * f1 b1 chas_complex_derivative f3 f2 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f1 f2 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f1 f2 cat f0
- (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((\z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) z'') |- ((((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F) = F)
T c==> * / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ ((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) f) |- (((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) f) /\ ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 f3 c/\ * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 f3 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f1 f2 cat f0
+ |- (((real_mul (real_of_num m)) (real_neg (real_of_num n))) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_of_num f0 creal_neg creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) ((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (at z))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cat f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021646) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0
+ |- (!z'. (((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F))
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ |- (((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) ==> ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x)) = ((\x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) x))
T c= c==> ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0 * / ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 f0
+ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F) ==> (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)) = (((~ q) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt _2021648) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- (((!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) ==> ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)) = ((\z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z))
T c= c==> ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0 * / c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
+ |- ((((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((real_of_num m) = (real_of_num n)) = (m = n))
T c= c= creal_of_num f0 creal_of_num f1 c= f0 f1
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\z. ((complex_pow (f z)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_pow * f0 b0 f4 ccomplex_mul cCx creal_of_num f4 ccomplex_mul ccomplex_pow * f0 f2 c- f4 cNUMERAL cBIT1 c_0 f1 cwithin cat f2 f3
+ ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0
+ |- ((((\z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) (complex_inv z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 ccomplex_inv f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) (complex_inv z))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_inv f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!z'. ((~ (z' = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (z = (Cx (real_of_num (NUMERAL _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- (((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x))))))) = T)
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c= c==> ! chas_complex_derivative f2 * f0 b0 cat b0 ! c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b1 b2 chas_complex_derivative / * f2 * b0 b3 ccomplex_mul f1 * f0 * b0 b1 cwithin cat b1 b2 ! c==> chas_complex_derivative b0 f1 cat b1 chas_complex_derivative / * f2 * b0 b2 ccomplex_mul f1 * f0 * b0 b1 cat b1 cT
+ ((csqrt x') = (cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) |- ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x'))
T c==> c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
+ |- (!z'. (((\z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') ==> F))
T c==> * / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) z)
T * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((((~ (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= c==> c= c~ ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
+ |- ((((~ (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))) = (!z. ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= c==> c= c~ ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
+ |- ((((\f. (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))))) f) ==> ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x)))) = T)
T c= c==> * / c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b1 c/\ ! c==> creal_lt cdistance c, b2 f0 b1 c= * b0 b2 * f1 b2 chas_complex_derivative b0 f2 cat f0 f3 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f1 f2 cat f0 cT
+ |- (((complex_mul (Cx x)) (Cx y)) = (Cx ((real_mul x) y)))
T c= ccomplex_mul cCx f0 cCx f1 cCx creal_mul f0 f1
+ (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))), (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) |- (((has_complex_derivative g) f') (at x))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> creal_lt cdistance c, b0 f1 f0 c= * f2 b0 * f3 b0 chas_complex_derivative f2 f4 cat f1 chas_complex_derivative f3 f4 cat f1
+ |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) z)) = ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) z))
T c= c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
+ (~ (z = (Cx (real_of_num (NUMERAL _0))))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))), ((real_lt (distance (x' , z))) (vector_norm z)) |- (((real_lt (distance (x' , z))) (vector_norm z)) /\ ((cexp ((complex_div (clog x')) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt x')))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> creal_lt cdistance c, f1 f0 cvector_norm f0 c/\ creal_lt cdistance c, f1 f0 cvector_norm f0 c= ccexp ccomplex_div cclog f1 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f1
+ |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) ==> (((has_complex_derivative csqrt) (complex_inv ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (csqrt z)))) (at z))))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 chas_complex_derivative part ccsqrt ccomplex_inv ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 cat f0
+ |- ((~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))
T c\/ c~ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
+ ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021645)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) ((real_add _2021644) ((real_add _2021645) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> (((has_complex_derivative (\z. ((complex_mul (f z)) c))) ((complex_mul f') c)) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 f3 ccomplex_mul f1 f3 cat f2
- |- ((\Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))) Q)
T * / c= ! c/\ * f0 b1 * b0 b1 c/\ ! * f0 b1 ! * b0 b1 f1
+ |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z'. (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (?z'. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (?z''. ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c? / c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((\z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) z) ==> F) = T)
T c= c==> * / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- (((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ (?z'. (?z''. ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))) = (?z'. ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ (?z''. ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))
T c= c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c? / c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c? / c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((Re (Cx x)) = x)) ==> ((\x. ((Re (Cx x)) = x)) x)) = ((\x. ((Re (Cx x)) = x)) x))
T c= c==> ! c= cRe cCx b0 b0 * / c= cRe cCx b0 b0 f0 * / c= cRe cCx b0 b0 f0
+ |- ((((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) ==> F) ==> (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q)) = (((~ q) = (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 f0
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) = F)
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- (((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) ==> ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z)) = ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) z))
T c= c==> ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 * / c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0 * / c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 f0
+ ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0))) = (((real_gt _2021648) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (real_of_num (NUMERAL _0)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
+ |- ((\z. (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) z)
T * / c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- |- (((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0)))) = ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c= c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) |- (((!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))) ==> ((\f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))) f')) = ((\f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x))))))) f'))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c= c==> ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b2 b3 c= * f0 b4 * b1 b4 chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 b0 cat b2 * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b2 b3 c= * f0 b4 * b1 b4 chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 b0 cat b2 f1 * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ ! c==> creal_lt cdistance c, b4 b2 b3 c= * f0 b4 * b1 b4 chas_complex_derivative f0 b0 cat b2 chas_complex_derivative b1 b0 cat b2 f1
+ ((\z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) z') |- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c==> * / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 f1 c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g)) = ((\g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) g))
T c= c==> ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2 * / c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2 f2
+ (!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))), (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) |- ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) /\ (((has_complex_derivative g) f') (at x)))
T c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ ! c==> creal_lt cdistance c, b0 f1 f0 c= * f2 b0 * f3 b0 chas_complex_derivative f2 f4 cat f1 c/\ ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f3 f4 cat f1
- |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!p'. (!q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> b0 b1 * / ! c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> b0 b1 f1 * / ! c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 b0 c==> c==> b0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b1 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> b0 b1 f1
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_sub ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021648)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_sub creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- (((!c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) ==> ((\c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c= c==> ! creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 * / creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * / creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') net) ==> ((((has_complex_derivative (\z. (g z))) g') net) ==> (((has_complex_derivative (\z. ((vector_sub (f z)) (g z)))) ((vector_sub f') g')) net)))
T c==> chas_complex_derivative / * f0 b0 f1 f2 c==> chas_complex_derivative / * f3 b0 f4 f2 chas_complex_derivative / cvector_sub * f0 b0 * f3 b0 cvector_sub f1 f4 f2
- |- ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q'))))
T c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 f2 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> f1 f2
- |- ((!z. (P \/ (Q z))) = (P \/ (!z. (Q z))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> (((has_complex_derivative (\z. ((complex_mul c) (f z)))) ((complex_mul c) f')) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_mul f3 * f0 b0 ccomplex_mul f3 f1 cat f2
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (Re z)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt cRe f0 creal_of_num cNUMERAL c_0
- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!z'. ((~ (((complex_mul z') (complex_inv z')) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((csqrt z) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_sub ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_sub creal_mul creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((!q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q'))))) ==> ((\q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q'))))) q')) = ((\q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b0 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> f1 b0 * / c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b0 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> f1 b0 f2 * / c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b0 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> f1 b0 f2
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021647), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) z) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL _0))))) (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') net) ==> (((has_complex_derivative (\z. (vector_neg (f z)))) (vector_neg f')) net))
T c==> chas_complex_derivative / * f0 b0 f1 f2 chas_complex_derivative / cvector_neg * f0 b0 cvector_neg f1 f2
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((\c. ((real_ge ((real_mul (real_abs c)) _2021649)) (vector_norm ((% c) ((vector_sub x') z))))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 * / creal_ge creal_mul creal_abs b0 f2 cvector_norm c% b0 cvector_sub f0 f1 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) ==> ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P)) = ((\P. (!Q. ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x)))))) P))
T c= c==> ! ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0 * / ! c= ! c/\ * b0 b2 * b1 b2 c/\ ! * b0 b2 ! * b1 b2 f0
- |- (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')), (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) |- ((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) /\ (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z)))
T c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c/\ c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (csqrt z)) (complex_inv (csqrt z)))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (~ ((Cx (real_of_num (NUMERAL _0))) = z)) |- ((~ ((Cx (real_of_num (NUMERAL _0))) = z)) /\ ((cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (csqrt z)))
T c==> c~ c= cCx creal_of_num cNUMERAL c_0 f0 c/\ c~ c= cCx creal_of_num cNUMERAL c_0 f0 c= ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0
- (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') z)) = _2021649), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f0 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at z)) s)) ==> ((~ ((ccos (f z)) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. (ctan (f z)))) ((complex_mul f') (complex_inv ((complex_pow (ccos (f z))) (NUMERAL (BIT0 (BIT1 _0))))))) ((within (at z)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> c~ c= cccos * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / cctan * f0 b0 ccomplex_mul f1 ccomplex_inv ccomplex_pow cccos * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_mul (real_abs (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') z))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_mul creal_abs creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))), (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- ((~ (z = (Cx (real_of_num (NUMERAL _0))))) /\ ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (complex_inv (csqrt z))) (csqrt z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul ccomplex_inv ccsqrt f0 ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_sub _2021648) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_sub f1 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0
- (?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) |- ((?d. (((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x))))) /\ ((!f. (!f'. (!g. (!x. (!d. ((((real_lt (real_of_num (NUMERAL _0))) d) /\ ((!x'. (((real_lt (distance (x' , x))) d) ==> ((f x') = (g x')))) /\ (((has_complex_derivative f) f') (at x)))) ==> (((has_complex_derivative g) f') (at x)))))))) ==> (((has_complex_derivative g) f') (at x))))
T c==> c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 c/\ c? / c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ ! c==> creal_lt cdistance c, b1 f0 b0 c= * f1 b1 * f2 b1 chas_complex_derivative f1 f3 cat f0 c==> ! ! ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b4 c/\ ! c==> creal_lt cdistance c, b5 b3 b4 c= * b0 b5 * b2 b5 chas_complex_derivative b0 b1 cat b3 chas_complex_derivative b2 b1 cat b3 chas_complex_derivative f2 f3 cat f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg z)) ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) = ((vector_add (vector_neg z)) z))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg f0 ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 cvector_add cvector_neg f0 f0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'')) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) |- ((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) /\ (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f2 creal_of_num cNUMERAL c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((~ ((Cx (real_of_num (NUMERAL _0))) = z)) ==> (((Cx (real_of_num (NUMERAL _0))) = z) = F)) = (((Cx (real_of_num (NUMERAL _0))) = z) = F))
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c==> c~ c= cCx creal_of_num cNUMERAL c_0 f0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- |- ((((has_complex_derivative (\z. (f z))) f') (at z)) ==> (((has_complex_derivative (\z. (ccos (f z)))) ((complex_mul f') (vector_neg (csin (f z))))) (at z)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / cccos * f0 b0 ccomplex_mul f1 cvector_neg ccsin * f0 f2 cat f2
- (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) |- ((((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))) /\ (((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) /\ (((complex_mul ((complex_div ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = g')) ==> (((has_complex_derivative (\z. (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) g') (at z))))
T c==> c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c/\ c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0 c==> c/\ c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= ccomplex_mul ccomplex_div ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 chas_complex_derivative / ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 cat f0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at z)) s)) ==> (((has_complex_derivative (\z. (cexp (f z)))) ((complex_mul f') (cexp (f z)))) ((within (at z)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccexp * f0 b0 ccomplex_mul f1 ccexp * f0 f2 cwithin cat f2 f3
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_add _2021648) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) x'))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\q'. ((((Im z) = (real_of_num (NUMERAL _0))) = p') ==> ((p' ==> (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = q')) ==> ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (p' ==> q'))))) q')
T * / c==> c= c= cIm f0 creal_of_num cNUMERAL c_0 f1 c==> c==> f1 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 b0 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> f1 b0 f2
- |- (((((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) |- ((\z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) z)
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 * / c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
- ((vector_norm ((vector_sub x') z)) = _2021647), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021647)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((Im z) = (real_of_num (NUMERAL _0))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((Im z) = (real_of_num (NUMERAL _0))) /\ (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = T))
T c==> c= cIm f0 creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c/\ c= cIm f0 creal_of_num cNUMERAL c_0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 cT
- (?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= b0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt b0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) ==> (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- |- (((real_gt _2021648) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021648) (real_of_num (NUMERAL _0)))))
T c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((!x. ((P x) /\ (Q x))) = ((!x. (P x)) /\ (!x. (Q x))))
T c= ! c/\ * f0 b0 * f1 b0 c/\ ! * f0 b0 ! * f1 b0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (vector_norm ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) z)) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Cx (real_of_num (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt cvector_norm cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))), (!x. (((has_complex_derivative g) (g' x)) (at x))) |- ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c==> ! chas_complex_derivative f2 * f0 b0 cat b0 c/\ ! ! c==> chas_complex_derivative f3 f1 cwithin cat b0 b1 chas_complex_derivative / * f2 * f3 b2 ccomplex_mul f1 * f0 * f3 b0 cwithin cat b0 b1 ! c==> chas_complex_derivative f3 f1 cat b0 chas_complex_derivative / * f2 * f3 b1 ccomplex_mul f1 * f0 * f3 b0 cat b0
- ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021644)) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- (((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') z)) = ((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x')) ((% (real_neg (real_of_num (NUMERAL (BIT1 _0))))) z)))
T c= c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 f1 cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1
- (?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) ==> (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- ((((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) = (((Im z) = (real_of_num (NUMERAL _0))) ==> T))
T c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c==> c= cIm f0 creal_of_num cNUMERAL c_0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) z')) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 f1 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) (complex_inv z))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_inv f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- |- (((((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F) ==> (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) = (~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))
T c= c==> c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\z. (f z)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') z)) = _2021645), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021644) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021644)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021644)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- (!p'. (!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul (Cx ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') ((complex_mul (complex_inv z)) (csqrt z))))) ((vector_add ((complex_mul (Cx ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul cCx creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_mul ccomplex_inv f0 ccsqrt f0 cvector_add ccomplex_mul cCx creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!z'. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z')) (complex_inv (csqrt z'))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z')) (NUMERAL (BIT0 (BIT1 _0)))) = z')) \/ ((z' = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z'))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z')) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z')))))))))) = ((~ (z = (Cx (real_of_num (NUMERAL _0))))) \/ (!z. ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))))
T c= ! c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 c\/ c~ c= f0 cCx creal_of_num cNUMERAL c_0 ! c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c\/ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_sub ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021648)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_sub creal_mul creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at z)) ==> ((~ ((ccos (f z)) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. (ctan (f z)))) ((complex_mul f') (complex_inv ((complex_pow (ccos (f z))) (NUMERAL (BIT0 (BIT1 _0))))))) (at z))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> c~ c= cccos * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / cctan * f0 b0 ccomplex_mul f1 ccomplex_inv ccomplex_pow cccos * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cat f2
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) (complex_inv z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 ccomplex_inv f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- ((!x. (!y. (!z. ((((vector_add x) y) = ((vector_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((vector_add ((complex_mul w) y)) ((complex_mul x) z)) = ((vector_add ((complex_mul w) z)) ((complex_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= cvector_add b0 b1 cvector_add b0 b2 c= b1 b2 ! ! ! ! c= c= cvector_add ccomplex_mul b0 b2 ccomplex_mul b1 b3 cvector_add ccomplex_mul b0 b3 ccomplex_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- (((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q')))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c= c==> f0 f2 c==> f1 f3 cT
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021644), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021644))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021646))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 c==> c/\ creal_gt cvector_norm cvector_sub f2 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_add _2021648) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) ((vector_sub x') (vec (NUMERAL _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((Im z) = (real_of_num (NUMERAL _0))), (((Im z) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re z))) |- (((real_lt (real_of_num (NUMERAL _0))) (Re z)) = T)
T c==> c= cIm f0 creal_of_num cNUMERAL c_0 c==> c==> c= cIm f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe f0 c= creal_lt creal_of_num cNUMERAL c_0 cRe f0 cT
- (?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) |- ((?z. (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))))) /\ F)
T c==> c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt b0 ccomplex_inv ccsqrt b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt b0 cNUMERAL cBIT0 cBIT1 c_0 b0 c/\ c= ccomplex_mul cvector_sub b0 cCx creal_of_num cNUMERAL c_0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv b0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt b0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt b0 b2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z') ((complex_mul z'') (csqrt z)))) ((vector_add ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z'') (complex_inv (csqrt z))))) (Cx (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f1 ccomplex_mul f2 ccsqrt f0 cvector_add ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f2 ccomplex_inv ccsqrt f0 cCx creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- (?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) |- ((?z'. (?z''. ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))) /\ F)
T c==> c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 b1 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') z)) = _2021649), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul z) (complex_inv z))) = ((vector_add (vector_neg (Cx (real_of_num (NUMERAL (BIT1 _0)))))) (Cx (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul f0 ccomplex_inv f0 cvector_add cvector_neg cCx creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (z = (Cx (real_of_num (NUMERAL _0))))) |- (((Cx (real_of_num (NUMERAL _0))) = z) = F)
T c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= c= cCx creal_of_num cNUMERAL c_0 f0 cF
- |- (~ ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))))
T c~ c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> ((((has_complex_derivative (\z. (g z))) g') (at x)) ==> (((has_complex_derivative (\z. ((complex_mul (f z)) (g z)))) ((vector_add ((complex_mul (f x)) g')) ((complex_mul f') (g x)))) (at x))))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 c==> chas_complex_derivative / * f3 b0 f4 cat f2 chas_complex_derivative / ccomplex_mul * f0 b0 * f3 b0 cvector_add ccomplex_mul * f0 f2 f4 ccomplex_mul f1 * f3 f2 cat f2
- |- ((!z'. ((~ (((complex_mul z') (complex_inv z')) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))))) \/ ((~ ((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= ccomplex_mul b0 ccomplex_inv b0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_mul z) (complex_inv z))) (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_mul f0 ccomplex_inv f0 cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 cCx creal_of_num cNUMERAL c_0
- |- (((~ ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)) = (((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F))
T c= c==> c~ c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((((complex_mul z) (complex_inv z)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= ccomplex_mul f0 ccomplex_inv f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add _2021648) ((real_add _2021649) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z))))))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f3 creal_add f2 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ (((csqrt z) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) = F)
T c= c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccsqrt f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 cF
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge (vector_norm ((vector_sub x') (vec (NUMERAL _0))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (!z. ((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))) |- (((~ (z = (Cx (real_of_num (NUMERAL _0))))) ==> ((csqrt z) = (cexp ((complex_div (clog z)) (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) = T)
T c==> ! c==> c~ c= b0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt b0 ccexp ccomplex_div cclog b0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= c==> c~ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccsqrt f0 ccexp ccomplex_div cclog f0 cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cT
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021647), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021646), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (Im z))) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021646) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021646)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021646)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cIm f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at z)) s)) ==> ((((Im (f z)) = (real_of_num (NUMERAL _0))) ==> ((real_lt (real_of_num (NUMERAL _0))) (Re (f z)))) ==> (((has_complex_derivative (\z. (clog (f z)))) ((complex_mul f') (complex_inv (f z)))) ((within (at z)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> c==> c= cIm * f0 f2 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 cRe * f0 f2 chas_complex_derivative / cclog * f0 b0 ccomplex_mul f1 ccomplex_inv * f0 f2 cwithin cat f2 f3
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((vector_add ((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0))))) ((complex_mul (Cx (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) z)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 ccomplex_mul cCx creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 cCx creal_of_num cNUMERAL c_0
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0
- ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648) |- ((real_ge ((real_add _2021648) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0))))))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f1 creal_ge creal_add f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> ((~ ((f x) = (Cx (real_of_num (NUMERAL _0))))) ==> (((has_complex_derivative (\z. (complex_inv (f z)))) ((complex_div (vector_neg f')) ((complex_pow (f x)) (NUMERAL (BIT0 (BIT1 _0)))))) ((within (at x)) s))))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 c==> c~ c= * f0 f2 cCx creal_of_num cNUMERAL c_0 chas_complex_derivative / ccomplex_inv * f0 b0 ccomplex_div cvector_neg f1 ccomplex_pow * f0 f2 cNUMERAL cBIT0 cBIT1 c_0 cwithin cat f2 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((z = (Cx (real_of_num (NUMERAL _0)))) /\ (((Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) = (Cx (real_of_num (NUMERAL _0)))) /\ ((((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z) /\ ((((complex_mul ((vector_sub z) (Cx (real_of_num (NUMERAL _0))))) z') = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vector_sub ((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z))) ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))) z'') = (Cx (real_of_num (NUMERAL (BIT1 _0)))))))))) |- (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= f0 cCx creal_of_num cNUMERAL c_0 c/\ c= cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL c_0 c/\ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c/\ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c/\ c= ccomplex_mul cvector_sub f0 cCx creal_of_num cNUMERAL c_0 f1 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul cvector_sub ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 f2 cCx creal_of_num cNUMERAL cBIT1 c_0 c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0
- (!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) |- ((!f. (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))) /\ (!g. ((!x. (((has_complex_derivative g) (g' x)) (at x))) ==> (!f. ((!x. (!s. ((((has_complex_derivative f) f') ((within (at x)) s)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) ((within (at x)) s))))) /\ (!x. ((((has_complex_derivative f) f') (at x)) ==> (((has_complex_derivative (\x. (g (f x)))) ((complex_mul f') (g' (f x)))) (at x)))))))))
T c==> ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 c/\ ! ! c==> ! chas_complex_derivative b1 * f0 b2 cat b2 c/\ ! ! c==> chas_complex_derivative b0 f1 cwithin cat b2 b3 chas_complex_derivative / * b1 * b0 b4 ccomplex_mul f1 * f0 * b0 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b0 f1 cat b2 chas_complex_derivative / * b1 * b0 b3 ccomplex_mul f1 * f0 * b0 b2 cat b2 ! c==> ! chas_complex_derivative b0 * f0 b1 cat b1 ! c/\ ! ! c==> chas_complex_derivative b1 f1 cwithin cat b2 b3 chas_complex_derivative / * b0 * b1 b4 ccomplex_mul f1 * f0 * b1 b2 cwithin cat b2 b3 ! c==> chas_complex_derivative b1 f1 cat b2 chas_complex_derivative / * b0 * b1 b3 ccomplex_mul f1 * f0 * b1 b2 cat b2
- |- ((((has_complex_derivative (\z. (f z))) f') (at x)) ==> (((has_complex_derivative (\z. ((complex_pow (f z)) n))) ((complex_mul (Cx (real_of_num n))) ((complex_mul ((complex_pow (f x)) (n - (NUMERAL (BIT1 _0))))) f'))) (at x)))
T c==> chas_complex_derivative / * f0 b0 f1 cat f2 chas_complex_derivative / ccomplex_pow * f0 b0 f3 ccomplex_mul cCx creal_of_num f3 ccomplex_mul ccomplex_pow * f0 f2 c- f3 cNUMERAL cBIT1 c_0 f1 cat f2
- ((vector_norm ((vector_sub x') z)) = _2021649), ((vector_norm ((vector_sub x') (vec (NUMERAL _0)))) = _2021648), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt _2021648) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021648)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) _2021648)) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c= cvector_norm cvector_sub f0 cvec cNUMERAL c_0 f3 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f3 creal_of_num cNUMERAL c_0
- (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Im z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- ((real_gt (Im z)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt cvector_norm cvector_sub f0 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cIm f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt cIm f0 creal_of_num cNUMERAL c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((vector_norm ((vector_sub x') z)) = _2021649) |- ((real_ge ((real_sub _2021649) (vector_norm ((vector_sub x') z)))) (real_of_num (NUMERAL _0)))
T c==> c= cvector_norm cvector_sub f0 f1 f2 creal_ge creal_sub f2 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0
- |- ((!z'. ((~ (z' = (Cx (real_of_num (NUMERAL _0))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z)))))))))) = ((!z. (~ (z = (Cx (real_of_num (NUMERAL _0)))))) \/ ((~ (((complex_mul (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_mul (csqrt z)) (complex_inv (csqrt z))) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))) \/ ((~ (((complex_pow (csqrt z)) (NUMERAL (BIT0 (BIT1 _0)))) = z)) \/ ((z = (Cx (real_of_num (NUMERAL _0)))) \/ (((complex_mul ((complex_mul ((complex_mul (Cx (real_of_num (NUMERAL (BIT1 _0))))) (complex_inv z))) (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (csqrt z)) = ((complex_mul (complex_inv (Cx (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (complex_inv (csqrt z))))))))))
T c= ! c\/ c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0 c\/ ! c~ c= b0 cCx creal_of_num cNUMERAL c_0 c\/ c~ c= ccomplex_mul cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_mul ccsqrt f0 ccomplex_inv ccsqrt f0 cCx creal_of_num cNUMERAL cBIT1 c_0 c\/ c~ c= ccomplex_pow ccsqrt f0 cNUMERAL cBIT0 cBIT1 c_0 f0 c\/ c= f0 cCx creal_of_num cNUMERAL c_0 c= ccomplex_mul ccomplex_mul ccomplex_mul cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_inv f0 ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccsqrt f0 ccomplex_mul ccomplex_inv cCx creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ccomplex_inv ccsqrt f0
- |- ((((has_complex_derivative (\z. (f z))) f') ((within (at x)) s)) ==> (((has_complex_derivative (\z. ((complex_mul (f z)) c))) ((complex_mul f') c)) ((within (at x)) s)))
T c==> chas_complex_derivative / * f0 b0 f1 cwithin cat f2 f3 chas_complex_derivative / ccomplex_mul * f0 b0 f4 ccomplex_mul f1 f4 cwithin cat f2 f3
- ((vector_norm ((vector_sub x') z)) = _2021649), (((real_gt (vector_norm ((vector_sub z) (Cx (real_of_num (NUMERAL _0)))))) (real_of_num (NUMERAL _0))) /\ (((real_gt (Re z)) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_add (vector_norm z)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') z))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (vector_norm ((vector_sub x') (vec (NUMERAL _0)))))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) _2021649)) (vector_norm ((% (real_of_num (NUMERAL (BIT1 _0)))) z)))) (real_of_num (NUMERAL _0))))
T c==> c= cvector_norm cvector_sub f0 f1 f2 c==> c/\ creal_gt cvector_norm cvector_sub f1 cCx creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt cRe f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cvector_norm f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cvector_norm cvector_sub f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f2 cvector_norm c% creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
