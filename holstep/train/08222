N Oxlzlez.cc_4_UL
C |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D RIGHT_FORALL_OR_THM
A |- (!P. (!Q. ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
D RIGHT_OR_FORALL_THM
A |- (!P. (!Q. ((P \/ (!x. (Q x))) = (!x. (P \/ (Q x))))))
T c= c\/ f0 ! * f1 b0 ! c\/ f0 * f1 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D Basics.EL_EXPLICIT
A |- (!h. (!t. ((((EL (NUMERAL _0)) ((CONS h) t)) = h) /\ ((((EL (NUMERAL (BIT1 _0))) ((CONS h) t)) = ((EL (NUMERAL _0)) t)) /\ ((((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))))))))
T c/\ c= cEL cNUMERAL c_0 cCONS f0 f1 f0 c/\ c= cEL cNUMERAL cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
D Geomdetail.PAIR_EQ_EXPAND
A |- (((a INSERT (b INSERT EMPTY)) = (c INSERT (d INSERT EMPTY))) = (((a = c) /\ (b = d)) \/ ((a = d) /\ (b = c))))
T c= c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c/\ c= f0 f2 c= f1 f3 c/\ c= f0 f3 c= f1 f2
D Bump.MCELL4
A |- (!V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))))
T c= * * part cmcell4 f0 f1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 f1
D Leaf_cell.cc_cell
A |- (!V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))))
T c= * * part ccc_cell f0 f1 * * * part cmcell ccc_ke f0 f1 f0 ccc_uh f0 f1
D Leaf_cell.LIST_OF_CC_UH
A |- (!V. (!ul. (((saturated V) /\ ((packing V) /\ ((leaf V) ul))) ==> (((cc_uh V) ul) = ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ul)) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ul))) NIL))))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 f1 c= ccc_uh f0 f1 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 f1 cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 f1 cNIL
D Oxlzlez.LEAF_RANK_PERIODIC
A |- (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))
T c==> cleaf_rank f0 f1 f2 f3 f4 cperiodic f4 f3
D Oxlzlez.CC_CELL_WEDGE_MATCH_UH
A |- (!V. (!ul. (!u0. (!u1. (!w0. (!n. (!f. (!i. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cNIL f2 f3 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f3 c/\ c= * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f5 cCONS f6 cCONS * f4 f7 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 * f4 f8 * f4 cSUC f8 c= ccc_ke f0 cCONS f5 cCONS f6 cCONS * f4 f7 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * f4 f7 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f5 cCONS f6 cCONS * f4 f7 cNIL part cEMPTY * * part cINSERT * f4 f8 * * part cINSERT * f4 cSUC f8 part cEMPTY
D Oxlzlez.K4_CC_WI_ALT
A |- (!V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cNIL f2 f3 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 f1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 f1 * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f3 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 f1 cCONS cEL cNUMERAL cBIT1 c_0 f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 f1 cEL cNUMERAL cBIT1 c_0 f1 * f4 f5 * f4 cSUC f5
D Oxlzlez.LEAF_RANK_SUC_INJ
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c< cNUMERAL cBIT1 c_0 f4 c~ c= * f5 f6 * f5 cSUC f6
D Oxlzlez.cc_4_cc_ke4
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
D Oxlzlez.LEAF_RANK_LEAF
A |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
- (~ ((I packing) V)), (packing V) |- ((~ ((I packing) V)) /\ ((I packing) V))
T c==> c~ cI part cpacking f0 c==> cpacking f0 c/\ c~ cI part cpacking f0 cI part cpacking f0
+ |- ((\f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))))))) f)
T * / ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b5 b4 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b3 b2 b1 b0 f0 c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * b0 f0 * b0 cSUC f0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * b0 f0 c==> c~ c= * * part ccc_cell b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL * * part cmcell4 b3 cCONS b2 cCONS b1 cCONS * b0 f0 cCONS * b0 cSUC f0 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b6 c/\ csaturated b6 c/\ cleaf_rank b6 cCONS b6 cCONS b6 cNIL b6 b6 b6 c/\ c~ ccollinear * * part cINSERT b6 * * part cINSERT b6 * * part cINSERT b6 part cEMPTY c< cNUMERAL cBIT1 c_0 b6 c~ c= * b6 b6 * b6 cSUC b6 cF f1
+ |- ((\i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))))) i)
T * / ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c~ c/\ cperiodic b1 b5 cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 cleaf b7 cCONS b7 cCONS b7 cCONS * b7 b7 cNIL c==> ! ! ! ! ! c==> cleaf_rank b7 b7 b8 b8 b8 cperiodic b8 b8 cF f0
+ |- (((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)) = ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))
T c= c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f3 cCONS f0 cCONS f1 cNIL b0 b1 f5 cF
- |- ((_7288412 = _7288414) ==> ((~ (_7288413 = _7288415)) \/ (((I _7288414) _7288415) \/ (~ ((I _7288412) _7288413)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I periodic) f)) n)) ==> ((I ((I periodic) f)) n))
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ cI * * part cI part cperiodic f5 f4 cI * * part cI part cperiodic f5 f4
- |- (((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))) = ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c= c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
+ |- ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF
- (_7288504 = _7288506), (_7288505 = _7288507) |- ((_7288505 = _7288507) /\ (((I _7288504) _7288505) = ((I _7288506) _7288507)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- ((!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))) = T)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= ! ! ! ! c==> c? / c? / cleaf_rank f0 cCONS b0 cCONS b1 cNIL b4 b5 b2 cleaf f0 cCONS b0 cCONS b1 cCONS * b2 b3 cNIL cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) |- (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c/\ c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- (((!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f)) = ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) f))
T c= c==> ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5 * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic b0 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL ccc_4 f0 f1 f2 b0 b1 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f5
+ |- ((\q'. ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 f7 c==> c==> f7 c= c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f7 b0 f8
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((cc_4 V) u0) u1) f) i) /\ ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> ccc_4 f0 f1 f2 f5 f6 c/\ ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f3 f0 f1 f5 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((\f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))))))))) f)
T * / ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b6 b5 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b3 b2 b1 b0 b4 c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL * b0 cSUC b4 c==> c~ c? / c? / cleaf_rank b3 cCONS b2 cCONS b1 cNIL b7 b7 b0 cF f0
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
+ |- (!w0. (((\w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) w0) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c==> * / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 f4 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL
+ (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) |- (!n. (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) _7288335) n) f)))
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 ! c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 b0 f3
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288356 = _7288361), (_7288354 = _7288359), (_7288355 = _7288360) |- ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), ((~ ((I ((I periodic) f)) n)) ==> F), ((~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))) ==> F) |- F
T c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> c==> c~ cI * * part cI part cperiodic f0 f1 cF c==> c==> c~ cI * * part cI part cleaf f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f0 f5 cNIL cF cF
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1
- |- ((~ (_7288387 = _7288388)) \/ ((BIT1 _7288387) = (BIT1 _7288388)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((\p'. (!q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b1 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> b0 b1 f6
- (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) ==> (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c~ c? / c? / cleaf_rank f3 cCONS f0 cCONS f1 cNIL b0 b1 f4 cF
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5
+ |- ((\u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))) u1)
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cperiodic b3 b2 c/\ c< cNUMERAL cBIT1 c_0 b2 c/\ cleaf f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL ccc_4 f0 f1 b0 b3 b4 c= ccc_ke f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2
+ |- ((\i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))))))) i)
T * / ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * b1 b0 * b1 cSUC b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c~ c= * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part cmcell4 b4 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b7 c/\ csaturated b7 c/\ cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c< cNUMERAL cBIT1 c_0 b7 c~ c= * b7 b7 * b7 cSUC b7 cF f0
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- (((!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))) ==> ((\V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))) V)) = ((\V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))) V))
T c= c==> ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f2 f3 * f2 cSUC f3 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * f2 f3 c==> c~ c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b3 c/\ csaturated b3 c/\ cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF * / ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f2 f3 * f2 cSUC f3 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * f2 f3 c==> c~ c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b3 c/\ csaturated b3 c/\ cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f4 * / ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c= ccc_ke b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f2 f3 * f2 cSUC f3 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * f2 f3 c==> c~ c= * * part ccc_cell b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL * * part cmcell4 b0 cCONS f0 cCONS f1 cCONS * f2 f3 cCONS * f2 cSUC f3 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b3 c/\ csaturated b3 c/\ cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f4
+ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) /\ F)
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c/\ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288341 = _7288346), (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288341 = _7288346) /\ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
+ |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))))))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! ! ! c==> c? / c? / cleaf_rank f0 cCONS b0 cCONS b1 cNIL b4 b5 b2 cleaf f0 cCONS b0 cCONS b1 cCONS * b2 b3 cNIL
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) _7288329))) NIL))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL
+ |- ((((\w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) w0) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = T)
T c= c==> * / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 f4 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL cT
+ |- (((!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ==> ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)) = ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul))
T c= c==> ! c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1 * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
+ |- (((!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) ==> ((\u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) u1)) = ((\u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) u1))
T c= c==> ! ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS b0 cNIL b3 b4 b1 cleaf f0 cCONS f1 cCONS b0 cCONS * b1 b2 cNIL * / ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS b0 cNIL b3 b4 b1 cleaf f0 cCONS f1 cCONS b0 cCONS * b1 b2 cNIL f2 * / ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS b0 cNIL b3 b4 b1 cleaf f0 cCONS f1 cCONS b0 cCONS * b1 b2 cNIL f2
+ |- (((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 _0))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 c_0 f1
+ |- (((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))) = (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c= c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> c= * * part cINSERT * f3 f4 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= c==> c= * * part cINSERT * f3 f4 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((I saturated) V) /\ (((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f) /\ (((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n) /\ (((I f) i) = ((I f) ((I SUC) i))))))
T c==> csaturated f0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f2 cNIL * f1 f2 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f5 f1 c/\ cI part csaturated f0 c/\ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cNIL f6 f5 f1 c/\ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f5 c= cI f1 f2 cI f1 cI part cSUC f2
- (_7288501 = _7288503) |- ((_7288500 = _7288502) ==> (((I _7288500) _7288501) = ((I _7288502) _7288503)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (~ ((I saturated) V)), (saturated V) |- ((~ ((I saturated) V)) /\ ((I saturated) V))
T c==> c~ cI part csaturated f0 c==> csaturated f0 c/\ c~ cI part csaturated f0 cI part csaturated f0
- (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288337 = _7288342) ==> ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288355 = _7288360) |- ((_7288354 = _7288359) ==> ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b2 c/\ csaturated b2 c/\ cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f5
- (_7288363 = _7288364) |- ((((saturated _7288363) = (saturated _7288364)) ==> ((saturated _7288364) \/ (~ (saturated _7288363)))) = ((saturated _7288364) \/ (~ (saturated _7288363))))
T c==> c= f0 f1 c= c==> c= csaturated f0 csaturated f1 c\/ csaturated f1 c~ csaturated f0 c\/ csaturated f1 c~ csaturated f0
+ ((NUMERAL (BIT1 _0)) < n) |- ((((I f) i) = ((I f) ((I SUC) i))) = (((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n) /\ (((I f) i) = ((I f) ((I SUC) i)))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c= c= cI f1 f2 cI f1 cI part cSUC f2 c/\ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0 c= cI f1 f2 cI f1 cI part cSUC f2
- |- ((_7288501 = _7288503) ==> ((~ (_7288500 = _7288502)) \/ (((I _7288500) _7288501) = ((I _7288502) _7288503))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ |- ((\p'. (!q'. (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL b1 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> b0 b1 f7
+ |- ((\u1'. (!w0. (!n. (!f'. (!i'. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f') /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1' INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1') ((CONS (f' j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f' i')) (f' (SUC i')))) /\ (((cc_ke V) ((CONS u0) ((CONS u1') ((CONS (f' j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f' j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1') ((CONS (f' j)) NIL))))) INSERT EMPTY)) = ((f' i') INSERT ((f' (SUC i')) INSERT EMPTY)))))))))) u1)
T * / ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 c/\ c= * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b3 b4 * b3 cSUC b4 c= ccc_ke f0 cCONS f1 cCONS b0 cCONS * b3 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b3 b5 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS b0 cCONS * b3 b5 cNIL part cEMPTY * * part cINSERT * b3 b4 * * part cINSERT * b3 cSUC b4 part cEMPTY f2
+ |- ((!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))))))))))))) = T)
T c= ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * f4 f5 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b1 c/\ csaturated b1 c/\ cleaf_rank b1 cCONS b2 cCONS b3 cNIL b4 b4 b5 c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cT
+ |- ((\ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul)))) ul)
T * / c= * * part ccc_cell f0 b0 * * * part cmcell ccc_ke f0 b0 f0 ccc_uh f0 b0 f1
+ |- (((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))) ==> ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))) n)) = ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))) n))
T c= c==> ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c~ c/\ cperiodic f3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b2 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b2 b3 b4 b4 b4 cperiodic b4 b4 cF * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c~ c/\ cperiodic f3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b2 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b2 b3 b4 b4 b4 cperiodic b4 b4 cF f5 * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c~ c/\ cperiodic f3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b2 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b2 b3 b4 b4 b4 cperiodic b4 b4 cF f5
+ (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) /\ ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))))))
T c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c/\ c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ |- (((!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) ==> ((\f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) f)) = ((\f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) f))
T c= c==> ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL * / ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL f3 * / ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL f3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c/\ cperiodic f3 f4 cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f6 cNIL c==> cpacking f5 c==> csaturated f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f4 f3 c==> ccc_4 f5 f0 f1 f3 f6 c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
+ (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (((I ((I leaf) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) ((I ((I CONS) ((I _7288328) _7288329))) NIL)))) \/ (~ ((I ((I ((I ((I ((I leaf_rank) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) NIL)))) _7288326)) _7288327)) _7288328)))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c\/ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f5 f6 f3
- |- ((_7288504 = _7288506) ==> ((~ (_7288505 = _7288507)) \/ (((I _7288504) _7288505) = ((I _7288506) _7288507))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- (_7288412 = _7288414) |- ((_7288412 = _7288414) /\ ((~ (_7288413 = _7288415)) \/ (((I _7288414) _7288415) \/ (~ ((I _7288412) _7288413)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ |- ((\n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i)))))))) n)
T * / ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b1 b2 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b1 b2 * b1 cSUC b2 f4
- |- ((?n. (P n)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- (((!V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) ==> ((\V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) V)) = ((\V. (!ul. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i))))))))))) V))
T c= c==> ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 * / ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 f0 * / ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b1 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b1 * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c= ccc_ke b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell b0 cCONS cEL cNUMERAL c_0 b1 cCONS cEL cNUMERAL cBIT1 c_0 b1 cCONS * b4 b5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b1 cEL cNUMERAL cBIT1 c_0 b1 * b4 b5 * b4 cSUC b5 f0
+ (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) |- (((!w0. (!n. (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> ((\w0. (!n. (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) _7288335)) = ((\w0. (!n. (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) _7288335))
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c= c==> ! ! c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 * / ! c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 f4 * / ! c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 f4
+ |- (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))
T c==> c= c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY f5 c==> c==> f5 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL f6 c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> f5 f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- ((\i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL * / c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- |- (((!q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> f6 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f6 b0 * / c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> f6 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f6 b0 f7 * / c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> f6 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f6 b0 f7
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- (~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
+ |- (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f3 cCONS f0 cCONS f1 cNIL b0 b1 f5 cF
+ (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) |- (((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL)))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c= c==> c==> cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- (((!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ==> ((\ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ul)) = ((\ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul))) ul))
T c= c==> ! c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 * / c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 f1 * / c= * * part cmcell4 f0 b0 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 b0 f1
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5
+ (packing V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> cpacking f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))
T c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (((!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) ==> ((\n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) n)) = ((\n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) n))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= c==> ! ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL * / ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL f4 * / ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 b1 cleaf f0 cCONS f1 cCONS f2 cCONS * b1 b2 cNIL f4
+ |- ((!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))))))))))))) = T)
T c= ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> c~ c/\ cperiodic f4 f3 cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b1 cCONS b2 cCONS b3 cNIL b4 b4 b5 cleaf b1 cCONS b2 cCONS b3 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b1 b2 b3 b3 b4 cperiodic b4 b3 cT
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))) ==> (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))))
T c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
+ |- ((\w0. (!n. (!f'. (!i'. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f') /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f' i')) (f' (SUC i')))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f' j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL))))) INSERT EMPTY)) = ((f' i') INSERT ((f' (SUC i')) INSERT EMPTY))))))))) w0)
T * / ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b2 b4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b2 b3 * b2 cSUC b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b2 b4 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * b2 b4 cNIL part cEMPTY * * part cINSERT * b2 b3 * * part cINSERT * b2 cSUC b3 part cEMPTY f5
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (((I ((I ((I ((I ((I leaf_rank) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) NIL)))) _7288326)) _7288327)) _7288328) ==> ((I ((I leaf) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) ((I ((I CONS) ((I _7288328) _7288329))) NIL)))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL
+ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (~ ((I ((I periodic) f)) n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- F
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> c~ cI * * part cI part cperiodic f0 f1 c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f1 f0 cF
- (_7288416 = _7288418), (_7288417 = _7288419) |- (((((I _7288416) _7288417) = ((I _7288418) _7288419)) ==> (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417)))) = (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
- |- (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> q')))
T c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6
+ |- (((!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i)) = ((\i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) i))
T c= c==> ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL ccc_4 f0 f1 f2 f5 b0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c==> c==> c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL f7 c= c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c==> c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f7
+ |- ((!i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))))))))))))))))))) = (!i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))))))))
T c= ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * b1 b0 * b1 cSUC b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c~ c= * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part cmcell4 b4 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b7 c/\ csaturated b7 c/\ cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c< cNUMERAL cBIT1 c_0 b7 c~ c= * b7 b7 * b7 cSUC b7 ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c= ccc_ke b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * b1 b0 * b1 cSUC b0 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * b1 b0 c==> c~ c= * * part ccc_cell b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL * * part cmcell4 b4 cCONS b3 cCONS b2 cCONS * b1 b0 cCONS * b1 cSUC b0 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b7 c/\ csaturated b7 c/\ cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 c/\ c~ ccollinear * * part cINSERT b7 * * part cINSERT b7 * * part cINSERT b7 part cEMPTY c< cNUMERAL cBIT1 c_0 b7 c~ c= * b7 b7 * b7 cSUC b7 cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cF
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))))))))))) = T)
T c= ! ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b1 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 f0 f1 f2 f3 b0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL * f3 cSUC b0 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b3 b3 f3 cT
+ ((\n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) n) |- (((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> * / cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 f4 f5 c= c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f5 f4 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL
+ |- (((!ul. (!u0. (!u1. (!w0. (!n. (!f. (!i. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))))))) ==> ((\ul. (!u0. (!u1. (!w0. (!n. (!f. (!i. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))))))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((\ul. (!u0. (!u1. (!w0. (!n. (!f. (!i. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))))))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b5 b6 * b5 cSUC b6 c= ccc_ke f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b5 b7 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL part cEMPTY * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY * / ! ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b5 b6 * b5 cSUC b6 c= ccc_ke f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b5 b7 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL part cEMPTY * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * / ! ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b5 b6 * b5 cSUC b6 c= ccc_ke f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b5 b7 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL part cEMPTY * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) /\ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ |- ((!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))))))))))))))) = (!f. (!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))))))))))
T c= ! ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b6 b5 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b3 b2 b1 b0 b4 c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL * b0 cSUC b4 c? / c? / cleaf_rank b3 cCONS b2 cCONS b1 cNIL b7 b7 b0 ! ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b6 b5 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b3 b2 b1 b0 b4 c==> c= ccc_ke b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b3 cCONS b2 cCONS b1 cCONS * b0 b4 cNIL * b0 cSUC b4 c==> c~ c? / c? / cleaf_rank b3 cCONS b2 cCONS b1 cNIL b7 b7 b0 cF
+ (saturated V) |- ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))))))))
T c==> csaturated f0 c/\ csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- ((\u1. (!w0. (!n. (!f. (!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))))) _7288403)
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 * / ! ! ! ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS b0 cNIL b1 b2 b3 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT b0 * * part cI * * part cI part cINSERT b1 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b2 c~ c= cI b3 b4 cI b3 cI part cSUC b4 f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))
T c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> f5 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL f6 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> f5 f6
+ |- ((\f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))) f)
T * / ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b0 b1 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b0 b1 * b0 cSUC b1 f5
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
- |- ((!ul. t) = t)
T c= ! f0 f0
+ (packing V), (saturated V), ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- |- ((_7288385 = _7288386) ==> ((BIT0 _7288385) = (BIT0 _7288386)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7288412 = _7288414)) \/ ((~ (_7288413 = _7288415)) \/ (((I _7288414) _7288415) \/ (~ ((I _7288412) _7288413)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 cSUC f6 c? / c? / cleaf_rank f3 cCONS f0 cCONS f1 cNIL b0 b1 f5
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 * f4 cSUC f5 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!x. (((\w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) x) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) ==> ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) = ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c= c==> ! c==> * / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b2 f3 b0 c==> ! ! ! ! ! ! ! c==> cleaf_rank b1 cCONS b2 cCONS b3 cNIL b4 b5 b6 cleaf b1 cCONS b2 cCONS b3 cCONS * b6 b7 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) ==> ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) w0)) = ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((cc_ke V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> (((cc_cell V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) NIL)))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) NIL)))) (f i)) (f (SUC i))))))))) w0))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 f3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 c= ccc_ke f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cSUBSET * * part ccc_cell f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL cCONS * b2 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cNIL * b2 b3 * b2 cSUC b3 f3
+ (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
- |- ((_7288365 = _7288366) ==> ((packing _7288366) \/ (~ (packing _7288365))))
T c==> c= f0 f1 c\/ cpacking f1 c~ cpacking f0
+ |- ((\w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))) w0)
T * / c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * f4 f5 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b1 c/\ csaturated b1 c/\ cleaf_rank b1 cCONS b2 cCONS b3 cNIL b4 b4 b5 c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF f6
+ |- ((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))))))))))) = T)
T c= ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b2 f3 cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i))))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- (((!n. (!f. (!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) n)) f)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))) ==> ((\n. (!f. (!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) n)) f)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))) _7288405)) = ((\n. (!f. (!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) n)) f)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))) _7288405))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c= c==> ! ! ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 b0 b1 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b0 c~ c= cI b1 b2 cI b1 cI part cSUC b2 * / ! ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 b0 b1 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b0 c~ c= cI b1 b2 cI b1 cI part cSUC b2 f4 * / ! ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 b0 b1 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b0 c~ c= cI b1 b2 cI b1 cI part cSUC b2 f4
- (_7288347 = _7288349), (_7288348 = _7288350) |- ((((_7288347 < _7288348) = (_7288349 < _7288350)) ==> ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348)))) = ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c< f0 f2 c< f1 f3 c\/ c< f1 f3 c~ c< f0 f2 c\/ c< f1 f3 c~ c< f0 f2
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))) ==> ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL)))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL
- (_7288355 = _7288360) |- ((_7288355 = _7288360) /\ ((~ (_7288353 = _7288358)) \/ ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ |- ((!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))))))))))))) = T)
T c= ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c~ c/\ cperiodic f1 b2 cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 cleaf b4 cCONS b4 cCONS b4 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b4 b4 b5 b5 b5 cperiodic b5 b5 cT
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (T = (((~ ((I ((I ((I ((I ((I leaf_rank) _7288318)) _7288319)) _7288320)) _7288321)) _7288322)) \/ ((I ((I periodic) _7288322)) _7288321)) = (((I ((I periodic) _7288322)) _7288321) \/ (~ ((I ((I ((I ((I ((I leaf_rank) _7288318)) _7288319)) _7288320)) _7288321)) _7288322)))))
T c= cT c= c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 f1 f2 f3 f4 cI * * part cI part cperiodic f4 f3 c\/ cI * * part cI part cperiodic f4 f3 c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 f1 f2 f3 f4
- |- ((~ (_7288417 = _7288419)) \/ ((~ (_7288416 = _7288418)) \/ (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- ((\V. (!ul. (((cc_cell V) ul) = (((mcell ((cc_ke V) ul)) V) ((cc_uh V) ul))))) V)
T * / ! c= * * part ccc_cell b0 b1 * * * part cmcell ccc_ke b0 b1 b0 ccc_uh b0 b1 f0
+ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) |- (((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL c= c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))) = ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))
T c= c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?n. t) = t)
T c= c? / f0 f0
+ (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) |- ((~ ((periodic f) n)) \/ (~ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c\/ c~ cperiodic f0 f1 c~ cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL
- (saturated V) |- ((~ ((I saturated) V)) ==> ((I saturated) V))
T c==> csaturated f0 c==> c~ cI part csaturated f0 cI part csaturated f0
- |- (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))
T c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> q')))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> q'))))
T c= c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6
- (_7288500 = _7288502), (_7288501 = _7288503) |- ((_7288500 = _7288502) /\ (((I _7288500) _7288501) = ((I _7288502) _7288503)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cI f0 f2 * * part cI f1 f3
- (_7288338 = _7288343) |- ((_7288338 = _7288343) /\ ((~ (_7288339 = _7288344)) \/ ((~ (_7288337 = _7288342)) \/ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ |- (((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))) ==> ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))) n)) = ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))) n))
T c= c==> ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b2 c/\ csaturated b2 c/\ cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b2 c/\ csaturated b2 c/\ cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f5 * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b2 c/\ csaturated b2 c/\ cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f5
+ |- ((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))))) = T)
T c= ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b1 ccc_4 f0 f1 f2 b2 b3 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * b2 b3 cCONS * b2 cSUC b3 cNIL cT
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- (!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)))))) \/ (~ (((I _7288406) i) = ((I _7288406) ((I SUC) i))))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 b0 cI f5 cI part cSUC b0
+ |- (((!V. (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))) ==> ((\V. (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))) V)) = ((\V. (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))) V))
T c= c==> ! ! ! ! ! c==> c? / c? / cleaf_rank b0 cCONS b1 cCONS b2 cNIL b5 b6 b3 cleaf b0 cCONS b1 cCONS b2 cCONS * b3 b4 cNIL * / ! ! ! ! c==> c? / c? / cleaf_rank b0 cCONS b1 cCONS b2 cNIL b5 b6 b3 cleaf b0 cCONS b1 cCONS b2 cCONS * b3 b4 cNIL f0 * / ! ! ! ! c==> c? / c? / cleaf_rank b0 cCONS b1 cCONS b2 cNIL b5 b6 b3 cleaf b0 cCONS b1 cCONS b2 cCONS * b3 b4 cNIL f0
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))), (packing V), (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY))))) ==> ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> cpacking f0 c==> csaturated f0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f3 cCONS f4 cCONS * f1 f2 cNIL * f1 f2 c==> c< cNUMERAL cBIT1 c_0 f5 c==> cleaf_rank f0 cCONS f3 cCONS f4 cNIL f6 f5 f1 c==> c~ cI part ccollinear * * part cI * * part cI part cINSERT f3 * * part cI * * part cI part cINSERT f4 * * part cI * * part cI part cINSERT f6 part cEMPTY cI part ccollinear * * part cI * * part cI part cINSERT f3 * * part cI * * part cI part cINSERT f4 * * part cI * * part cI part cINSERT f6 part cEMPTY
+ |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))
T c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ cpacking f2 c/\ csaturated f2 c/\ cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ cperiodic f0 f1 c/\ c< cNUMERAL cBIT1 c_0 f1 c/\ cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL ccc_4 f2 f3 f4 f0 f5 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ cpacking f2 c/\ csaturated f2 c/\ cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ cperiodic f0 f1 c/\ c< cNUMERAL cBIT1 c_0 f1 c/\ cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL ccc_4 f2 f3 f4 f0 f5 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) |- ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))
T c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f7 c==> c==> f7 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL f8 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> f7 f8
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c==> c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))) n)
T * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c~ c/\ cperiodic f3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b2 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b2 b3 b4 b4 b4 cperiodic b4 b4 cF f5
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS b0 cNIL b3 b4 b1 cleaf f0 cCONS f1 cCONS b0 cCONS * b1 b2 cNIL
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))))))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! ! ! ! ! ! c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 cI * * part cI part cleaf b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cI * * part cI part cCONS cI b5 b6 cNIL
- |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> q')))
T c==> c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL f6 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
- |- ((~ (_7288372 = _7288374)) \/ ((~ (_7288371 = _7288373)) \/ (((EL _7288371) _7288372) = ((EL _7288373) _7288374))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) |- (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = T)
T c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 cT
+ |- (((!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))) ==> ((\u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))) u1)) = ((\u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))) u1))
T c= c==> ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> c~ c/\ cperiodic f0 b3 cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b5 cCONS b5 cCONS b5 cNIL b5 b5 b5 cleaf b5 cCONS b5 cCONS b5 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b5 b5 b6 b6 b6 cperiodic b6 b6 cF * / ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> c~ c/\ cperiodic f0 b3 cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b5 cCONS b5 cCONS b5 cNIL b5 b5 b5 cleaf b5 cCONS b5 cCONS b5 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b5 b5 b6 b6 b6 cperiodic b6 b6 cF f2 * / ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> c~ c/\ cperiodic f0 b3 cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b5 cCONS b5 cCONS b5 cNIL b5 b5 b5 cleaf b5 cCONS b5 cCONS b5 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b5 b5 b6 b6 b6 cperiodic b6 b6 cF f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288340 = _7288345) /\ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (_7288492 = _7288494), (_7288493 = _7288495) |- ((_7288493 = _7288495) /\ (((I _7288492) _7288493) = ((I _7288494) _7288495)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7288347 = _7288349), (_7288348 = _7288350) |- ((_7288348 = _7288350) /\ ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
+ |- ((((\n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) n) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) = T)
T c= c==> * / cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 f4 f5 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f6 cNIL cT
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (((!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))) ==> ((\w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))) w0)) = ((\w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))) w0))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= c==> ! ! ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL * / ! ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL f3 * / ! ! ! c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL f3
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- ((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ ((~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)) \/ (~ (((I _7288406) _7288407) = ((I _7288406) ((I SUC) _7288407)))))))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c\/ c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 f6 cI f5 cI part cSUC f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge u0) u1) (f i)) (f (SUC i)))) = ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge f0 f1 * f4 f5 * f4 cSUC f5 c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 * f4 cSUC f5 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (!V. (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))) = (!V. (!u0. (!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))
T c= c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! ! ! ! c==> c? / c? / cleaf_rank b0 cCONS b1 cCONS b2 cNIL b5 b6 b3 cleaf b0 cCONS b1 cCONS b2 cCONS * b3 b4 cNIL ! ! ! ! ! c==> c? / c? / cleaf_rank b0 cCONS b1 cCONS b2 cNIL b5 b6 b3 cleaf b0 cCONS b1 cCONS b2 cCONS * b3 b4 cNIL
+ |- (((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F) = F)
T c= c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF cF
+ |- ((\u0'. (!u1'. (!w0. (!n. (!f'. (!i'. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f') /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0' INSERT (u1' INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f' i')) (f' (SUC i')))) /\ (((cc_ke V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f' j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL))))) INSERT EMPTY)) = ((f' i') INSERT ((f' (SUC i')) INSERT EMPTY))))))))))) u0)
T * / ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL b2 b3 b4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT b2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b3 c/\ c= * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b0 cCONS b1 cCONS * b4 b6 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b4 b5 * b4 cSUC b5 c= ccc_ke f0 cCONS b0 cCONS b1 cCONS * b4 b6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b4 b6 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS b0 cCONS b1 cCONS * b4 b6 cNIL part cEMPTY * * part cINSERT * b4 b5 * * part cINSERT * b4 cSUC b5 part cEMPTY f1
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- ((!u1. (!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))) = T)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= ! ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS b0 cNIL b3 b4 b1 cleaf f0 cCONS f1 cCONS b0 cCONS * b1 b2 cNIL cT
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) /\ (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f6 f1 f0 c/\ ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ |- (((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c= c==> c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))), ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) ==> F)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c==> c~ cF cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((I ((I periodic) f)) n) ==> F) = F)
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= c==> cI * * part cI part cperiodic f5 f4 cF cF
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- |- (((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> q')))) = ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> q'))))
T c= c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL f6 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL f6 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6
- (_7288367 = _7288369) |- ((_7288367 = _7288369) /\ ((~ (_7288368 = _7288370)) \/ (((cc_uh _7288367) _7288368) = ((cc_uh _7288369) _7288370))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- |- ((_7288375 = _7288376) ==> ((SUC _7288375) = (SUC _7288376)))
T c==> c= f0 f1 c= cSUC f0 cSUC f1
+ (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) |- (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) _7288335) _7288336) f))
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 f5 f3
+ ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((NUMERAL (BIT1 _0)) < n) /\ ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))))))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> cleaf_rank f1 cCONS f2 cCONS f3 cNIL f4 f0 f5 c/\ c< cNUMERAL cBIT1 c_0 f0 c==> ccc_4 f1 f2 f3 f5 f6 c==> c~ c/\ cperiodic f5 f0 cleaf f1 cCONS f2 cCONS f3 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
- |- ((~ (_7288395 = _7288397)) \/ ((~ (_7288396 = _7288398)) \/ (((CONS _7288395) _7288396) = ((CONS _7288397) _7288398))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7288381 = _7288383), (_7288382 = _7288384) |- ((_7288382 = _7288384) /\ (((cc_ke _7288381) _7288382) = ((cc_ke _7288383) _7288384)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- ((_7288338 = _7288343) ==> ((~ (_7288339 = _7288344)) \/ ((~ (_7288337 = _7288342)) \/ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ |- (((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))) ==> ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))) n)) = ((\n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))) n))
T c= c==> ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b2 f3 cF * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b2 f3 cF f5 * / ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b2 f3 cF f5
+ |- (((!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))))) ==> ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))))) u0)) = ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))))) u0))
T c= c==> ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c~ c/\ cperiodic f1 b2 cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 cleaf b4 cCONS b4 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b4 b4 b5 b5 b5 cperiodic b5 b5 cF * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c~ c/\ cperiodic f1 b2 cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 cleaf b4 cCONS b4 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b4 b4 b5 b5 b5 cperiodic b5 b5 cF f3 * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c~ c/\ cperiodic f1 b2 cleaf b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 cleaf b4 cCONS b4 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b4 b4 b5 b5 b5 cperiodic b5 b5 cF f3
+ |- ((\u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))))))) u1)
T * / ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * f0 f1 c==> c~ c= * * part ccc_cell b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL * * part cmcell4 b2 cCONS b1 cCONS b0 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b5 c/\ csaturated b5 c/\ cleaf_rank b5 cCONS b5 cCONS b5 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b5 * * part cINSERT b5 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f2
+ |- ((\p'. (!q'. ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 b0 c==> c==> b0 c= c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> b0 b1 f7
- |- ((\q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> f6 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b0 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> f6 b0 f7
- |- (((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))) = ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c= c==> c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL
+ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n) |- (((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n) /\ (((I f) i) = ((I f) ((I SUC) i))))
T c==> c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 f1 c==> c< cNUMERAL cBIT1 c_0 f5 c/\ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f5 c= cI f0 f1 cI f0 cI part cSUC f1
+ |- (((!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))) ==> ((\V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))) V)) = ((\V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))) V))
T c= c==> ! ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c~ c/\ cperiodic f2 b1 cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b3 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b3 b3 b4 b4 b4 cperiodic b4 b4 cF * / ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c~ c/\ cperiodic f2 b1 cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b3 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b3 b3 b4 b4 b4 cperiodic b4 b4 cF f4 * / ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c~ c/\ cperiodic f2 b1 cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b3 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b3 b3 b4 b4 b4 cperiodic b4 b4 cF f4
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c= c==> c==> c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL ccc_4 f3 f0 f1 f5 f6 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> c==> c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ |- ((!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))))))))))) = T)
T c= ! ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b0 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b1 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b0 c==> ccc_4 f0 f1 f2 f3 f4 c==> c~ c/\ cperiodic f3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b2 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b2 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b2 b3 b4 b4 b4 cperiodic b4 b4 cT
+ |- ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- (_7288504 = _7288506) |- ((_7288505 = _7288507) ==> (((I _7288504) _7288505) = ((I _7288506) _7288507)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
+ |- ((\q'. (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')
T * / c==> c= c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY f5 c==> c==> f5 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL b0 c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> f5 b0 f6
+ |- (((!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))))))) ==> ((\u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))))))) u1)) = ((\u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))))))) u1))
T c= c==> ! ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 b3 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL * f0 cSUC b3 c==> c~ c? / c? / cleaf_rank b2 cCONS b1 cCONS b0 cNIL b6 b6 f0 cF * / ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 b3 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL * f0 cSUC b3 c==> c~ c? / c? / cleaf_rank b2 cCONS b1 cCONS b0 cNIL b6 b6 f0 cF f1 * / ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 b3 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL * f0 cSUC b3 c==> c~ c? / c? / cleaf_rank b2 cCONS b1 cCONS b0 cNIL b6 b6 f0 cF f1
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((!V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) ==> ((\V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) V)) = ((\V. (!ul. (((mcell4 V) ul) = (((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ul)))) V))
T c= c==> ! ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 * / ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 f0 * / ! c= * * part cmcell4 b0 b1 * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 b1 f0
- (~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) |- (~ (((I ((I cc_cell) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL)))) = ((I ((I mcell4) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) ((I ((I CONS) ((I f) ((I SUC) i)))) NIL)))))))
T c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c~ c= * * part cI * * part cI part ccc_cell f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL * * part cI * * part cI part cmcell4 f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cI * * part cI part cCONS cI f3 cI part cSUC f4 cNIL
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))) ==> (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))
T c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- (((!i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)))))) \/ (~ (((I _7288406) i) = ((I _7288406) ((I SUC) i)))))) ==> ((\i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)))))) \/ (~ (((I _7288406) i) = ((I _7288406) ((I SUC) i)))))) _7288407)) = ((\i. (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)))))) \/ (~ (((I _7288406) i) = ((I _7288406) ((I SUC) i)))))) _7288407))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c= c==> ! c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 b0 cI f5 cI part cSUC b0 * / c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 b0 cI f5 cI part cSUC b0 f6 * / c\/ c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 b0 cI f5 cI part cSUC b0 f6
- |- (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> f6 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f7 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f6 f7
+ |- ((\n. (!f'. (!i'. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f') /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f' i')) (f' (SUC i')))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f' j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f' j)) NIL))))) INSERT EMPTY)) = ((f' i') INSERT ((f' (SUC i')) INSERT EMPTY)))))))) n)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 b0 b1 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b0 c/\ c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b1 b3 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * b1 b2 * b1 cSUC b2 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b1 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b1 b3 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * b1 b3 cNIL part cEMPTY * * part cINSERT * b1 b2 * * part cINSERT * b1 cSUC b2 part cEMPTY f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ |- ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
+ |- (((!i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))))) ==> ((\i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))))) i)) = ((\i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))))) i))
T c= c==> ! ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c~ c/\ cperiodic b1 b5 cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 cleaf b7 cCONS b7 cCONS b7 cCONS * b7 b7 cNIL c==> ! ! ! ! ! c==> cleaf_rank b7 b7 b8 b8 b8 cperiodic b8 b8 cF * / ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c~ c/\ cperiodic b1 b5 cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 cleaf b7 cCONS b7 cCONS b7 cCONS * b7 b7 cNIL c==> ! ! ! ! ! c==> cleaf_rank b7 b7 b8 b8 b8 cperiodic b8 b8 cF f0 * / ! ! ! ! ! ! c==> cpacking b4 c==> csaturated b4 c==> cleaf_rank b4 cCONS b3 cCONS b2 cNIL b6 b5 b1 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b6 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b5 c==> ccc_4 b4 b3 b2 b1 b0 c==> c~ c/\ cperiodic b1 b5 cleaf b4 cCONS b3 cCONS b2 cCONS * b1 b0 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b7 cCONS b7 cCONS b7 cNIL b7 b7 b7 cleaf b7 cCONS b7 cCONS b7 cCONS * b7 b7 cNIL c==> ! ! ! ! ! c==> cleaf_rank b7 b7 b8 b8 b8 cperiodic b8 b8 cF f0
+ (packing V), (saturated V), ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
+ (packing V), (saturated V), ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> cpacking f0 c==> csaturated f0 c==> c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- |- ((~ (_7288367 = _7288369)) \/ ((~ (_7288368 = _7288370)) \/ (((cc_uh _7288367) _7288368) = ((cc_uh _7288369) _7288370))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288356 = _7288361), (_7288354 = _7288359), (_7288355 = _7288360) |- ((_7288356 = _7288361) /\ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c/\ c= f4 f5 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
+ ((\n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) n) |- (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)
T c==> * / cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 f4 f5 cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f5 f4
+ |- ((!u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 b3 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL * f0 cSUC b3 c? / c? / cleaf_rank b2 cCONS b1 cCONS b0 cNIL b6 b6 f0 cT
+ |- ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0)
T * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
+ |- ((!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))) = T)
T c= ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 b0 b1 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * b0 b1 cCONS * b0 cSUC b1 cNIL cT
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288354 = _7288359), (_7288355 = _7288360) |- ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))
T c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c/\ cperiodic f3 f4 cleaf f5 cCONS f0 cCONS f1 cCONS * f3 f6 cNIL c==> cpacking f5 c==> csaturated f5 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f5 cCONS f0 cCONS f1 cNIL f2 f4 f3 c==> ccc_4 f5 f0 f1 f3 f6 cF
+ (packing V), (saturated V), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- (((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))))))) ==> ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))))))) _7288401)) = ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))))))) _7288401))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c= c==> ! ! ! ! ! ! ! c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT b1 * * part cI * * part cI part cINSERT b2 * * part cI * * part cI part cINSERT b3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b4 c~ c= cI b5 b6 cI b5 cI part cSUC b6 * / ! ! ! ! ! ! c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT b1 * * part cI * * part cI part cINSERT b2 * * part cI * * part cI part cINSERT b3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b4 c~ c= cI b5 b6 cI b5 cI part cSUC b6 f0 * / ! ! ! ! ! ! c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT b1 * * part cI * * part cI part cINSERT b2 * * part cI * * part cI part cINSERT b3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b4 c~ c= cI b5 b6 cI b5 cI part cSUC b6 f0
+ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!f. ((P f) \/ Q)) = ((!f. (P f)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5
+ |- (((!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((\i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i)) = ((\i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i))
T c= c==> ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b2 f3 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL * / c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b2 f3 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL f4 * / c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b2 f3 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL f4
- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) |- (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL))))) = ((I f) (SUC i)))
T c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cI f3 cSUC f4
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL ! ! ! ! ! ! c==> cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL
- |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))
T c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288341 = _7288346), (_7288338 = _7288343), (_7288339 = _7288344) |- ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
+ (packing V) |- ((I packing) V)
T c==> cpacking f0 cI part cpacking f0
+ (packing V), (saturated V) |- ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c/\ csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ |- ((\j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))))) i)
T * / c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 * f3 cSUC f4 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * f3 b0 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY f4
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))), (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) /\ F)
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF
+ |- ((!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> cpacking b3 c==> csaturated b3 c==> cleaf_rank b3 cCONS b2 cCONS b1 cNIL b5 b4 b0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b3 b2 b1 b0 f0 c==> c~ c/\ cperiodic b0 b4 cleaf b3 cCONS b2 cCONS b1 cCONS * b0 f0 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b6 cCONS b6 cCONS b6 cNIL b6 b6 b6 cleaf b6 cCONS b6 cCONS b6 cCONS * b6 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b6 b6 b7 b7 b7 cperiodic b7 b7 cT
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n)))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f3 f0 f1 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) |- (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) ==> F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) /\ ((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 * f4 cSUC f5 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= * * part cINSERT * f4 f5 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS * f4 cSUC f5 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ |- ((\V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))) V)
T * / ! ! c==> cpacking b0 c==> csaturated b0 c==> cleaf_rank b0 cCONS f0 cCONS f1 cNIL b2 b1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b1 c==> ccc_4 b0 f0 f1 f2 f3 c==> c~ c/\ cperiodic f2 b1 cleaf b0 cCONS f0 cCONS f1 cCONS * f2 f3 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b3 cCONS b3 cCONS b4 cNIL b5 b5 b5 cleaf b3 cCONS b3 cCONS b4 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b3 b3 b4 b4 b4 cperiodic b4 b4 cF f4
+ |- (T = (((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ ((~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)) \/ (~ (((I _7288406) _7288407) = ((I _7288406) ((I SUC) _7288407))))))))) = (((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))) \/ ((~ ((I packing) _7288401)) \/ ((~ ((I saturated) _7288401)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406)) \/ ((~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405)) \/ (~ (((I _7288406) _7288407) = ((I _7288406) ((I SUC) _7288407)))))))))))
T c= cT c= c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c\/ c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 f6 cI f5 cI part cSUC f6 c\/ cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c\/ c~ cI part cpacking f0 c\/ c~ cI part csaturated f0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c\/ c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c~ c= cI f5 f6 cI f5 cI part cSUC f6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ ((((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))) ==> ((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL)))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))) = ((((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL)))))) ==> ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= c==> c/\ cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c==> c= ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS * f4 cSUC f5 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS * f4 cSUC f5 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c==> c==> cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS * f4 cSUC f5 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((periodic f) n) = T)
T c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= cperiodic f0 f1 cT
+ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) /\ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))
T c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3
+ |- ((\q'. (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')
T * / c==> c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f7 c==> c==> f7 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL b0 c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cperiodic f5 f4 c/\ c< cNUMERAL cBIT1 c_0 f4 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL ccc_4 f0 f1 f2 f5 f6 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> f7 b0 f8
+ |- ((\u1. (!u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))))))) u1)
T * / ! ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b5 b4 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b5 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b4 c==> ccc_4 b2 b1 b0 f0 b3 c==> c= ccc_ke b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b2 cCONS b1 cCONS b0 cCONS * f0 b3 cNIL * f0 cSUC b3 c==> c~ c? / c? / cleaf_rank b2 cCONS b1 cCONS b0 cNIL b6 b6 f0 cF f1
+ |- (((!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))))) ==> ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))))) u0)) = ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))))) u0))
T c= c==> ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * f1 f2 c==> c~ c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b4 c/\ csaturated b4 c/\ cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * f1 f2 c==> c~ c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b4 c/\ csaturated b4 c/\ cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f3 * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * f1 f2 c==> c~ c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b4 c/\ csaturated b4 c/\ cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f3
- |- ((~ (_7288355 = _7288360)) \/ ((~ (_7288353 = _7288358)) \/ ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
+ |- (!u0'. (!u1'. (!w0. (!n. (!f'. (!i'. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f') /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0' INSERT (u1' INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f' i')) (f' (SUC i')))) /\ (((cc_ke V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f' j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0') ((CONS u1') ((CONS (f' j)) NIL))))) INSERT EMPTY)) = ((f' i') INSERT ((f' (SUC i')) INSERT EMPTY)))))))))))
T c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f7 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f8 * * part cINSERT f9 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f8 cCONS f9 cCONS * f7 f10 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f7 f11 * f7 cSUC f11 c= ccc_ke f0 cCONS f8 cCONS f9 cCONS * f7 f10 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * f7 f10 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f8 cCONS f9 cCONS * f7 f10 cNIL part cEMPTY * * part cINSERT * f7 f11 * * part cINSERT * f7 cSUC f11 part cEMPTY
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) /\ ((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c= c==> c= * * part cINSERT * f4 f5 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL c/\ c/\ cpacking f3 c/\ csaturated f3 c/\ cleaf_rank f3 cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNIL f2 f6 f4 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT f2 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 * f4 cSUC f5 c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= * * part cINSERT * f4 f5 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL part cEMPTY * * part cINSERT * f4 f5 * * part cINSERT * f4 cSUC f5 part cEMPTY c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
+ |- (((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> F) = (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c= c==> c~ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cF c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- ((!f. (!i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) = T)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= ! ! c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b2 b3 b0 cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL cT
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))) = ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))
T c= c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
+ |- (!i. (!f. (!u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))))))))))))))))))))
T c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ |- ((\u0. (!V. (!i. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))))))) u0)
T * / ! ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b4 b3 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b1 b0 f0 f1 b2 c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 b2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f0 cCONS * f1 b2 cNIL * f1 cSUC b2 c==> c~ c? / c? / cleaf_rank b1 cCONS b0 cCONS f0 cNIL b5 b5 f1 cF f2
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- (_7288501 = _7288503) |- ((_7288501 = _7288503) /\ ((~ (_7288500 = _7288502)) \/ (((I _7288500) _7288501) = ((I _7288502) _7288503))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c==> c==> c/\ csaturated f3 c/\ cpacking f3 cleaf f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL c= ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNIL c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f4 f5 cCONS * f4 cSUC f5 cNIL
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288355 = _7288360) |- ((_7288357 = _7288362) /\ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
+ |- (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 cSUC f1 c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 f1 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f) ==> ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) _7288329))) NIL))))) = ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) _7288329))) NIL)))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c= c==> cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL
- (_7288396 = _7288398), (_7288395 = _7288397) |- ((_7288396 = _7288398) /\ (((CONS _7288395) _7288396) = ((CONS _7288397) _7288398)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cCONS f2 f0 cCONS f3 f1
+ |- ((\u1. (!u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F)))))))))))))) u1)
T * / ! ! ! ! c==> cpacking b2 c==> csaturated b2 c==> cleaf_rank b2 cCONS b1 cCONS b0 cNIL b4 b3 f0 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b3 c==> ccc_4 b2 b1 b0 f0 f1 c==> c~ c/\ cperiodic f0 b3 cleaf b2 cCONS b1 cCONS b0 cCONS * f0 f1 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b5 cCONS b5 cCONS b5 cNIL b5 b5 b5 cleaf b5 cCONS b5 cCONS b5 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b5 b5 b6 b6 b6 cperiodic b6 b6 cF f2
+ (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) |- (((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c==> c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL c= c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ |- ((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = T)
T c= c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL cT
- |- ((~ (_7288363 = _7288364)) \/ ((saturated _7288364) \/ (~ (saturated _7288363))))
T c\/ c~ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
+ |- ((\ul. (!u0. (!u1. (!w0. (!n. (!f. (!i. (!j. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ul)) ((CONS ((EL (NUMERAL (BIT1 _0))) ul)) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ul) INSERT (((EL (NUMERAL (BIT1 _0))) ul) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ul)) ((EL (NUMERAL (BIT1 _0))) ul)) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f j) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f j)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))))))))))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))
T * / ! ! ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 b0 cCONS cEL cNUMERAL cBIT1 c_0 b0 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 * * part cINSERT b3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b4 c/\ c= * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 b0 * * part cINSERT cEL cNUMERAL cBIT1 c_0 b0 part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 b0 cEL cNUMERAL cBIT1 c_0 b0 * b5 b6 * b5 cSUC b6 c= ccc_ke f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * b5 b7 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS b1 cCONS b2 cCONS * b5 b7 cNIL part cEMPTY * * part cINSERT * b5 b6 * * part cINSERT * b5 cSUC b6 part cEMPTY cCONS f1 cCONS f2 cCONS * f3 f4 cNIL
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((_7288347 = _7288349) ==> ((~ (_7288348 = _7288350)) \/ ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))), (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) /\ F)
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL * f3 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 f6 f3 c==> ccc_4 f0 f1 f2 f3 f5 c/\ c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 cF
+ |- ((!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))))))) = T)
T c= ! ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS b0 cNIL b1 b2 b3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 b2 ccc_4 f0 f1 b0 b3 b4 c= * * part ccc_cell f0 cCONS f1 cCONS b0 cCONS * b3 b4 cNIL * * part cmcell4 f0 cCONS f1 cCONS b0 cCONS * b3 b4 cCONS * b3 cSUC b4 cNIL cT
+ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((I ((I periodic) f)) n)
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cI * * part cI part cperiodic f5 f4
+ |- (((EL (NUMERAL _0)) ((CONS h) t)) = h)
T c= cEL cNUMERAL c_0 cCONS f0 f1 f0
- |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))
T c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> f6 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL f7 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> f6 f7
+ |- (((saturated V) /\ ((packing V) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> (((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) NIL))))))
T c==> c/\ csaturated f0 c/\ cpacking f0 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL c= ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL
+ (packing V), ((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((((cc_4 V) u0) u1) f) i)))))) |- (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c==> cpacking f0 c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f4 ccc_4 f0 f1 f2 f5 f6 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- |- ((~ (_7288338 = _7288343)) \/ ((~ (_7288339 = _7288344)) \/ ((~ (_7288337 = _7288342)) \/ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- (!V. (!u0. (!u1. (!w0. (!n. (!f. (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (!i. (~ (((I f) i) = ((I f) ((I SUC) i))))))))))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 ! ! ! ! ! ! c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT b1 * * part cI * * part cI part cINSERT b2 * * part cI * * part cI part cINSERT b3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b4 ! c~ c= cI b5 b6 cI b5 cI part cSUC b6
- (_7288389 = _7288390) |- ((_7288389 = _7288390) /\ ((NUMERAL _7288389) = (NUMERAL _7288390)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) |- (((!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))) ==> ((\u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))) u0)) = ((\u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))))) u0))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c= c==> ! ! ! ! ! ! c==> cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL * / ! ! ! ! ! c==> cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL f1 * / ! ! ! ! ! c==> cleaf_rank f0 cCONS b0 cCONS b1 cNIL b2 b3 b4 cleaf f0 cCONS b0 cCONS b1 cCONS * b4 b5 cNIL f1
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- ((((I packing) _7288401) /\ (((I saturated) _7288401) /\ (((I ((I ((I ((I ((I leaf_rank) _7288401)) ((I ((I CONS) _7288402)) ((I ((I CONS) _7288403)) NIL)))) _7288404)) _7288405)) _7288406) /\ (((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) _7288405) /\ (((I _7288406) _7288407) = ((I _7288406) ((I SUC) _7288407))))))) ==> ((I collinear) ((I ((I INSERT) _7288402)) ((I ((I INSERT) _7288403)) ((I ((I INSERT) _7288404)) EMPTY)))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> c/\ cI part cpacking f0 c/\ cI part csaturated f0 c/\ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c/\ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f4 c= cI f5 f6 cI f5 cI part cSUC f6 cI part ccollinear * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY
+ |- ((\i. ((?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) i)
T * / c==> c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b2 f3 cleaf f0 cCONS f1 cCONS f2 cCONS * f3 b0 cNIL f4
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL
+ |- ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> q')))
T c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL f5 c= c==> c= * * part cINSERT * f3 f4 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5
- |- ((!f'. ((~ (((((leaf_rank V) ul) w0) n) f)) \/ ((periodic f') n))) = ((~ (((((leaf_rank V) ul) w0) n) f)) \/ (!f. ((periodic f) n))))
T c= ! c\/ c~ cleaf_rank f0 f1 f2 f3 f4 cperiodic b0 f3 c\/ c~ cleaf_rank f0 f1 f2 f3 f4 ! cperiodic b0 f3
- (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ |- (((!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0)) = ((\w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ (((periodic f) n) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) /\ (((((cc_4 V) u0) u1) f) i)))))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) w0))
T c= c==> ! ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 * / ! ! ! c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 b2 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cperiodic b2 b1 c/\ c< cNUMERAL cBIT1 c_0 b1 c/\ cleaf f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL ccc_4 f0 f1 f2 b2 b3 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * b2 b3 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
- (_7288387 = _7288388) |- ((_7288387 = _7288388) /\ ((BIT1 _7288387) = (BIT1 _7288388)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) |- ((~ (((I f) i) = ((I f) ((I SUC) i)))) ==> (((I f) i) = ((I f) ((I SUC) i))))
T c==> c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 f1 c==> c~ c= cI f0 f1 cI f0 cI part cSUC f1 c= cI f0 f1 cI f0 cI part cSUC f1
+ |- ((!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))))))))))) = T)
T c= ! c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 f3 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f3 c==> ccc_4 f0 f1 f2 f4 f5 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL * f4 cSUC f5 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b1 b1 f4 cT
+ |- (((((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) NIL))) w0) n) f) /\ ((~ (collinear (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (w0 INSERT EMPTY))))) /\ (((NUMERAL (BIT1 _0)) < n) /\ (((u0 INSERT (u1 INSERT EMPTY)) = (((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT (((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) INSERT EMPTY))) /\ ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) SUBSET ((((wedge_ge ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) (f i)) (f (SUC i)))) /\ (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))) ==> (((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))))
T c= c==> c==> c/\ cpacking f0 c/\ csaturated f0 c/\ cleaf_rank f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNIL f5 f6 f3 c/\ c~ ccollinear * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT f5 part cEMPTY c/\ c< cNUMERAL cBIT1 c_0 f6 c/\ c= * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cINSERT cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY c/\ cSUBSET * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * * * part cwedge_ge cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 * f3 cSUC f4 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part cINSERT * f3 f4 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL part cEMPTY * * part cINSERT * f3 f4 * * part cINSERT * f3 cSUC f4 part cEMPTY c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c/\ c/\ cperiodic f5 f4 cleaf f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL
- (_7288372 = _7288374) |- ((_7288371 = _7288373) ==> (((EL _7288371) _7288372) = ((EL _7288373) _7288374)))
T c==> c= f0 f1 c==> c= f2 f3 c= cEL f2 f0 cEL f3 f1
- |- ((~ (_7288389 = _7288390)) \/ ((NUMERAL _7288389) = (NUMERAL _7288390)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288341 = _7288346), (_7288338 = _7288343), (_7288339 = _7288344) |- ((((((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341) = (((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346)) ==> ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))) = ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= ccc_4 f2 f6 f8 f0 f4 ccc_4 f3 f7 f9 f1 f5 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4 c\/ ccc_4 f3 f7 f9 f1 f5 c~ ccc_4 f2 f6 f8 f0 f4
- (_7288363 = _7288364) |- ((_7288363 = _7288364) /\ ((saturated _7288364) \/ (~ (saturated _7288363))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- |- ((_7288391 = _7288393) ==> ((~ (_7288392 = _7288394)) \/ ((_7288391 INSERT _7288392) = (_7288393 INSERT _7288394))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7288372 = _7288374) |- ((_7288372 = _7288374) /\ ((~ (_7288371 = _7288373)) \/ (((EL _7288371) _7288372) = ((EL _7288373) _7288374))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- (_7288392 = _7288394), (_7288391 = _7288393) |- ((_7288392 = _7288394) /\ ((_7288391 INSERT _7288392) = (_7288393 INSERT _7288394)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- |- (((!q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) ==> ((\q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')) = ((\q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> f6 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b0 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> f6 b0 * / c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> f6 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b0 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> f6 b0 f7 * / c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f6 c==> c==> f6 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b0 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> f6 b0 f7
+ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) |- ((\V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((~ ((I packing) V)) \/ ((~ ((I saturated) V)) \/ ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) \/ (((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))) \/ (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)))))) \/ (~ (((I f) i) = ((I f) ((I SUC) i)))))))))))) _7288401)
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 * / ! ! ! ! ! ! c\/ c\/ c~ cI part cpacking b0 c\/ c~ cI part csaturated b0 c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank b0 cI * * part cI part cCONS b1 cI * * part cI part cCONS b2 cNIL b3 b4 b5 c\/ cI part ccollinear * * part cI * * part cI part cINSERT b1 * * part cI * * part cI part cINSERT b2 * * part cI * * part cI part cINSERT b3 part cEMPTY c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 b4 c~ c= cI b5 b6 cI b5 cI part cSUC b6 f0
+ |- ((((mcell (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) V) ((CONS ((EL (NUMERAL _0)) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT1 _0))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS ((EL (NUMERAL (BIT0 (BIT1 _0)))) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ((CONS (f (SUC i))) NIL))))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))
T c= * * * part cmcell cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 cCONS cEL cNUMERAL c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS cEL cNUMERAL cBIT0 cBIT1 c_0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cCONS * f3 cSUC f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- ((((((cc_4 V) u0) u1) f) i) /\ ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> (~ (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c< cNUMERAL cBIT1 c_0 f4 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f4 f5 c==> ccc_4 f3 f0 f1 f5 f6 c/\ ccc_4 f3 f0 f1 f5 f6 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f3 cCONS f0 cCONS f1 cCONS * f5 f6 cNIL * * part cmcell4 f3 cCONS f0 cCONS f1 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c~ ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6
+ |- (((!p'. (!q'. (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> (((((f i) INSERT (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) INSERT EMPTY)) = ((f i) INSERT ((f (SUC i)) INSERT EMPTY))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL b1 c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> b0 b1 * / ! c==> c= c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL b1 c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> b0 b1 f5 * / ! c==> c= c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL b1 c= c==> c= * * part cINSERT * f0 f1 * * part cINSERT cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL part cEMPTY * * part cINSERT * f0 f1 * * part cINSERT * f0 cSUC f1 part cEMPTY c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f1 cCONS * f0 cSUC f1 cNIL c==> b0 b1 f5
- |- ((_7288492 = _7288494) ==> ((~ (_7288493 = _7288495)) \/ (((I _7288492) _7288493) = ((I _7288494) _7288495))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
+ (packing V) |- ((packing V) /\ ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> (~ (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))))))))))))
T c==> cpacking f0 c/\ cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c~ ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3
+ |- ((\u0. (!V. (!n. (!w0. ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))))) u0)
T * / ! ! ! c==> cpacking b1 c==> csaturated b1 c==> cleaf_rank b1 cCONS b0 cCONS f0 cNIL b3 b2 f1 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 b2 c==> ccc_4 b1 b0 f0 f1 f2 c==> c= ccc_ke b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f1 f2 * f1 cSUC f2 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * f1 f2 c==> c~ c= * * part ccc_cell b1 cCONS b0 cCONS f0 cCONS * f1 f2 cNIL * * part cmcell4 b1 cCONS b0 cCONS f0 cCONS * f1 f2 cCONS * f1 cSUC f2 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b4 c/\ csaturated b4 c/\ cleaf_rank b4 cCONS b4 cCONS b4 cNIL b5 b5 b5 c/\ c~ ccollinear * * part cINSERT b4 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c< cNUMERAL cBIT1 c_0 b5 c~ c= * b5 b6 * b5 cSUC b6 cF f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ F), (~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) /\ F)
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ cF c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c~ cF cF
+ (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c= ccc_ke f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> ccc_4 f3 f0 f1 f4 f5 c? / c? / cleaf_rank f3 cCONS f0 cCONS f1 cNIL b0 b1 f4
- (_7288416 = _7288418), (_7288417 = _7288419) |- ((_7288416 = _7288418) /\ (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
+ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))))))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5
- |- ((_7288372 = _7288374) ==> ((~ (_7288371 = _7288373)) \/ (((EL _7288371) _7288372) = ((EL _7288373) _7288374))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cEL f2 f0 cEL f3 f1
- |- ((~ (_7288375 = _7288376)) \/ ((SUC _7288375) = (SUC _7288376)))
T c\/ c~ c= f0 f1 c= cSUC f0 cSUC f1
- (_7288395 = _7288397) |- ((_7288396 = _7288398) ==> (((CONS _7288395) _7288396) = ((CONS _7288397) _7288398)))
T c==> c= f0 f1 c==> c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- ((~ (_7288381 = _7288383)) \/ ((~ (_7288382 = _7288384)) \/ (((cc_ke _7288381) _7288382) = ((cc_ke _7288383) _7288384))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (~ (((I f) i) = ((I f) ((I SUC) i)))), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) |- ((~ (((I f) i) = ((I f) ((I SUC) i)))) /\ (((I f) i) = ((I f) ((I SUC) i))))
T c==> c~ c= cI f0 f1 cI f0 cI part cSUC f1 c==> c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 f1 c/\ c~ c= cI f0 f1 cI f0 cI part cSUC f1 c= cI f0 f1 cI f0 cI part cSUC f1
- (_7288381 = _7288383) |- ((_7288381 = _7288383) /\ ((~ (_7288382 = _7288384)) \/ (((cc_ke _7288381) _7288382) = ((cc_ke _7288383) _7288384))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))), (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) ==> F)
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c==> c~ cF cF
- |- ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t)))))
T c/\ c= cEL cNUMERAL cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7288365 = _7288366) |- ((_7288365 = _7288366) /\ ((packing _7288366) \/ (~ (packing _7288365))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- |- ((!f'. (((~ (packing V)) \/ ((~ (saturated V)) \/ ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f')) \/ ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) \/ (~ ((NUMERAL (BIT1 _0)) < n)))))) \/ (!i. (~ ((f i) = (f (SUC i))))))) = ((!f. ((~ (packing V)) \/ ((~ (saturated V)) \/ ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) \/ ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) \/ (~ ((NUMERAL (BIT1 _0)) < n))))))) \/ (!i. (~ ((f i) = (f (SUC i)))))))
T c= ! c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c\/ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c< cNUMERAL cBIT1 c_0 f4 ! c~ c= * f5 b1 * f5 cSUC b1 c\/ ! c\/ c~ cpacking f0 c\/ c~ csaturated f0 c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 c\/ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c< cNUMERAL cBIT1 c_0 f4 ! c~ c= * f5 b0 * f5 cSUC b0
- |- ((_7288389 = _7288390) ==> ((NUMERAL _7288389) = (NUMERAL _7288390)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((~ (_7288391 = _7288393)) \/ ((~ (_7288392 = _7288394)) \/ ((_7288391 INSERT _7288392) = (_7288393 INSERT _7288394))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288337 = _7288342) /\ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288339 = _7288344) /\ ((~ (_7288337 = _7288342)) \/ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) /\ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))
T c==> c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5
- (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288340 = _7288345) ==> ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- |- (((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t))
T c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
- |- ((_7288367 = _7288369) ==> ((~ (_7288368 = _7288370)) \/ (((cc_uh _7288367) _7288368) = ((cc_uh _7288369) _7288370))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- (_7288417 = _7288419) |- ((_7288417 = _7288419) /\ ((~ (_7288416 = _7288418)) \/ (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) |- (((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = T)
T c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cT
- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((I ((I cc_ke) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL)))) = ((I NUMERAL) ((I BIT0) ((I BIT0) ((I BIT1) _0)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cI * * part cI part ccc_ke f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI part cNUMERAL cI part cBIT0 cI part cBIT0 cI part cBIT1 c_0
- |- ((_7288381 = _7288383) ==> ((~ (_7288382 = _7288384)) \/ (((cc_ke _7288381) _7288382) = ((cc_ke _7288383) _7288384))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- (_7288367 = _7288369) |- ((_7288368 = _7288370) ==> (((cc_uh _7288367) _7288368) = ((cc_uh _7288369) _7288370)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- |- ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL
- (_7288347 = _7288349) |- ((_7288347 = _7288349) /\ ((~ (_7288348 = _7288350)) \/ ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (((((cc_4 V) u0) u1) f) i) |- ((I ((I ((I ((I ((I cc_4) V)) u0)) u1)) f)) i)
T c==> ccc_4 f0 f1 f2 f3 f4 cI * * part cI * * part cI * * part cI * * part cI part ccc_4 f0 f1 f2 f3 f4
- |- ((_7288387 = _7288388) ==> ((BIT1 _7288387) = (BIT1 _7288388)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) /\ ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c/\ c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
- |- ((((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F))))))))))) = ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))
T c= c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF
- (_7288375 = _7288376) |- ((_7288375 = _7288376) /\ ((SUC _7288375) = (SUC _7288376)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cSUC f0 cSUC f1
- |- (T = (((~ ((I ((I ((I ((I ((I leaf_rank) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) NIL)))) _7288326)) _7288327)) _7288328)) \/ ((I ((I leaf) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) ((I ((I CONS) ((I _7288328) _7288329))) NIL))))) = (((I ((I leaf) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) ((I ((I CONS) ((I _7288328) _7288329))) NIL)))) \/ (~ ((I ((I ((I ((I ((I leaf_rank) _7288323)) ((I ((I CONS) _7288324)) ((I ((I CONS) _7288325)) NIL)))) _7288326)) _7288327)) _7288328)))))
T c= cT c= c\/ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL c\/ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f5 f6 cNIL c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))) |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))) /\ ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) ==> ((~ (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))) ==> F)))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF c/\ c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c/\ c= * f5 f6 * f5 cSUC f6 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 f6 c==> c~ c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f5 f6 cCONS * f5 cSUC f6 cNIL c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 cF
- |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
- |- (((!p'. (!q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL b0 c==> c==> b0 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL b0 c==> c==> b0 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> b0 b1 f6 * / ! c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL b0 c==> c==> b0 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> b0 b1 f6
- |- ((\p'. (!q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')
T * / ! c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b1 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> b0 b1 f5
- |- ((~ (_7288347 = _7288349)) \/ ((~ (_7288348 = _7288350)) \/ ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))), (~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY))))), (packing V), (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY))))) /\ ((I collinear) ((I ((I INSERT) u0)) ((I ((I INSERT) u1)) ((I ((I INSERT) w0)) EMPTY)))))
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))), (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))), (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f), (((((cc_4 V) u0) u1) f) i) |- F
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cpacking f0 c==> csaturated f0 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f5 cNIL * f3 cSUC f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 f6 f3 c==> ccc_4 f0 f1 f2 f3 f5 cF
- (_7288353 = _7288358), (_7288355 = _7288360) |- ((_7288353 = _7288358) /\ ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f1 f3 f5 f7 f9 c~ ccc_4 f0 f2 f4 f6 f8
- (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))) |- (((I ((I EL) ((I NUMERAL) ((I BIT1) ((I BIT1) _0))))) ((I ((I cc_uh) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))) = ((I f) i))
T c==> c/\ c= * f0 f1 * f0 cSUC f1 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f2 cCONS f3 cCONS f4 cCONS * f0 f1 cNIL * f0 f1 c= cI * * part cI part cEL cI part cNUMERAL cI part cBIT1 cI part cBIT1 c_0 cI * * part cI part ccc_uh f2 cI * * part cI part cCONS f3 cI * * part cI part cCONS f4 cI * * part cI part cCONS cI f0 f1 cNIL cI f0 f1
- |- ((~ (_7288351 = _7288352)) \/ ((collinear _7288352) \/ (~ (collinear _7288351))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((_7288341 = _7288346) ==> ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- |- ((((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT1 _0)))) t)) /\ ((((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t)) /\ (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))))
T c/\ c= cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT1 c_0 f1 c/\ c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (_7288347 = _7288349) |- ((_7288348 = _7288350) ==> ((_7288349 < _7288350) \/ (~ (_7288347 < _7288348))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c< f1 f3 c~ c< f0 f2
- (_7288355 = _7288360) |- ((_7288353 = _7288358) ==> ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- ((NUMERAL (BIT1 _0)) < n) |- ((~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)) ==> ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n))
T c==> c< cNUMERAL cBIT1 c_0 f0 c==> c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0 cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0
- (_7288391 = _7288393) |- ((_7288392 = _7288394) ==> ((_7288391 INSERT _7288392) = (_7288393 INSERT _7288394)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!f'. (((~ (packing V)) \/ ((~ (saturated V)) \/ ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) \/ ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) \/ (~ ((NUMERAL (BIT1 _0)) < n)))))) \/ (!i. (~ ((f' i) = (f' (SUC i))))))) = (((~ (packing V)) \/ ((~ (saturated V)) \/ ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) \/ ((collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY)))) \/ (~ ((NUMERAL (BIT1 _0)) < n)))))) \/ (!f. (!i. (~ ((f i) = (f (SUC i))))))))
T c= ! c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c\/ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c< cNUMERAL cBIT1 c_0 f4 ! c~ c= * b0 b1 * b0 cSUC b1 c\/ c\/ c~ cpacking f0 c\/ c~ csaturated f0 c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c\/ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c< cNUMERAL cBIT1 c_0 f4 ! ! c~ c= * b0 b1 * b0 cSUC b1
- |- ((~ (_7288504 = _7288506)) \/ ((~ (_7288505 = _7288507)) \/ (((I _7288504) _7288505) = ((I _7288506) _7288507))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))), (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F)))))))))) |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))) /\ ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) ==> ((~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c/\ c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL * f5 cSUC f6 c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f5 cF
- (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (~ F), (~ ((I ((I periodic) f)) n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) /\ F)
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> c~ cF c==> c~ cI * * part cI part cperiodic f0 f1 c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f1 f0 c/\ c~ cF cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)), ((NUMERAL (BIT1 _0)) < n) |- ((~ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n)) /\ ((I ((I <) ((I NUMERAL) ((I BIT1) _0)))) n))
T c==> c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0 c==> c< cNUMERAL cBIT1 c_0 f0 c/\ c~ cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0 cI * * part cI part c< cI part cNUMERAL cI part cBIT1 c_0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((!f'. ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) \/ (!i. ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f' i)) NIL))))))) = ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) \/ (!f. (!i. ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))))
T c= ! c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 ! cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 ! ! cleaf f0 cCONS f1 cCONS f2 cCONS * b0 b1 cNIL
- (_7288416 = _7288418), (_7288417 = _7288419) |- (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((\p'. (!q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL b0 c==> c==> b0 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b1 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> b0 b1 f6
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288355 = _7288360) |- ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f5 f9 f1 c~ cleaf_rank f2 f6 f4 f8 f0
- |- ((_7288351 = _7288352) ==> ((collinear _7288352) \/ (~ (collinear _7288351))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_7288395 = _7288397) |- ((_7288395 = _7288397) /\ ((~ (_7288396 = _7288398)) \/ (((CONS _7288395) _7288396) = ((CONS _7288397) _7288398))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- |- (((!q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) ==> ((\q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')) = ((\q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> f5 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b0 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> f5 b0 * / c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> f5 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b0 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> f5 b0 f6 * / c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> f5 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b0 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> f5 b0 f6
- ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) /\ ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c/\ c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
- |- (((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- |- (((EL (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) ((CONS h) t)) = ((EL (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) t))
T c= cEL cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCONS f0 f1 cEL cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
- (packing V) |- ((~ ((I packing) V)) ==> ((I packing) V))
T c==> cpacking f0 c==> c~ cI part cpacking f0 cI part cpacking f0
- (_7288412 = _7288414), (_7288413 = _7288415) |- ((_7288413 = _7288415) /\ (((I _7288414) _7288415) \/ (~ ((I _7288412) _7288413))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
- |- ((_7288417 = _7288419) ==> ((~ (_7288416 = _7288418)) \/ (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- (_7288492 = _7288494) |- ((_7288492 = _7288494) /\ ((~ (_7288493 = _7288495)) \/ (((I _7288492) _7288493) = ((I _7288494) _7288495))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7288340 = _7288345), (_7288337 = _7288342), (_7288338 = _7288343), (_7288339 = _7288344) |- ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f3 f5 f7 f1 f9 c~ ccc_4 f2 f4 f6 f0 f8
- (_7288351 = _7288352) |- ((((collinear _7288351) = (collinear _7288352)) ==> ((collinear _7288352) \/ (~ (collinear _7288351)))) = ((collinear _7288352) \/ (~ (collinear _7288351))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) ==> ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f))
T c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5
- |- ((~ (_7288492 = _7288494)) \/ ((~ (_7288493 = _7288495)) \/ (((I _7288492) _7288493) = ((I _7288494) _7288495))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cI f0 f2 cI f1 f3
- (_7288367 = _7288369), (_7288368 = _7288370) |- ((_7288368 = _7288370) /\ (((cc_uh _7288367) _7288368) = ((cc_uh _7288369) _7288370)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= ccc_uh f0 f2 ccc_uh f1 f3
- |- ((\q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q'))))) q')
T * / c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> f5 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b0 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> f5 b0 f6
- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS ((I f) i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c= ccc_ke f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f0 cCONS f1 cCONS f2 cCONS cI f3 f4 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((_7288355 = _7288360) ==> ((~ (_7288353 = _7288358)) \/ ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f7 f1 f9 f5 c~ cleaf_rank f2 f6 f0 f8 f4
- (_7288417 = _7288419) |- ((_7288416 = _7288418) ==> (((I _7288418) _7288419) \/ (~ ((I _7288416) _7288417))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!ul. (P ul)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (_7288492 = _7288494) |- ((_7288493 = _7288495) ==> (((I _7288492) _7288493) = ((I _7288494) _7288495)))
T c==> c= f0 f1 c==> c= f2 f3 c= cI f0 f2 cI f1 f3
- (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (~ ((I ((I periodic) f)) n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) ==> F)
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> c~ cI * * part cI part cperiodic f0 f1 c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f1 f0 c==> c~ cF cF
- (_7288385 = _7288386) |- ((_7288385 = _7288386) /\ ((BIT0 _7288385) = (BIT0 _7288386)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_7288391 = _7288393) |- ((_7288391 = _7288393) /\ ((~ (_7288392 = _7288394)) \/ ((_7288391 INSERT _7288392) = (_7288393 INSERT _7288394))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_7288353 = _7288358), (_7288355 = _7288360) |- ((_7288357 = _7288362) ==> ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288354 = _7288359), (_7288355 = _7288360) |- ((_7288354 = _7288359) /\ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f4 f5 c\/ c~ c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- |- ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))))
T c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL
- |- (((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = ((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))))) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> q')))) = ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> q'))))
T c= c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL f5 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5 c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL f5 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5
- (_7288504 = _7288506) |- ((_7288504 = _7288506) /\ ((~ (_7288505 = _7288507)) \/ (((I _7288504) _7288505) = ((I _7288506) _7288507))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f0 f2 * * part cI f1 f3
- |- ((~ (_7288385 = _7288386)) \/ ((BIT0 _7288385) = (BIT0 _7288386)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- |- ((~ (_7288365 = _7288366)) \/ ((packing _7288366) \/ (~ (packing _7288365))))
T c\/ c~ c= f0 f1 c\/ cpacking f1 c~ cpacking f0
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288356 = _7288361), (_7288354 = _7288359), (_7288355 = _7288360) |- ((((((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357) = (((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362)) ==> ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357)))) = ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c= c==> c= cleaf_rank f2 f6 f8 f4 f0 cleaf_rank f3 f7 f9 f5 f1 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0 c\/ cleaf_rank f3 f7 f9 f5 f1 c~ cleaf_rank f2 f6 f8 f4 f0
- |- ((!f'. ((~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f')) \/ (!i. ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))) = ((!f. (~ (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f))) \/ (!i. ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))
T c= ! c\/ c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 ! cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b1 cNIL c\/ ! c~ cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 b0 ! cleaf f0 cCONS f1 cCONS f2 cCONS * f5 b0 cNIL
- (_7288357 = _7288362), (_7288353 = _7288358), (_7288354 = _7288359), (_7288355 = _7288360) |- ((_7288356 = _7288361) ==> ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c==> c= f8 f9 c\/ cleaf_rank f3 f5 f7 f9 f1 c~ cleaf_rank f2 f4 f6 f8 f0
- (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))), ((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) |- (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((_7288395 = _7288397) ==> ((~ (_7288396 = _7288398)) \/ (((CONS _7288395) _7288396) = ((CONS _7288397) _7288398))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cCONS f0 f2 cCONS f1 f3
- (_7288353 = _7288358), (_7288355 = _7288360) |- ((~ (_7288357 = _7288362)) \/ ((~ (_7288354 = _7288359)) \/ ((~ (_7288356 = _7288361)) \/ ((((((leaf_rank _7288358) _7288359) _7288360) _7288361) _7288362) \/ (~ (((((leaf_rank _7288353) _7288354) _7288355) _7288356) _7288357))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ cleaf_rank f1 f7 f3 f9 f5 c~ cleaf_rank f0 f6 f2 f8 f4
- (!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))), (~ ((I ((I periodic) f)) n)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I periodic) f)) n)) /\ ((I ((I periodic) f)) n))
T c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 c==> c~ cI * * part cI part cperiodic f0 f1 c==> cleaf_rank f2 cCONS f3 cCONS f4 cNIL f5 f1 f0 c/\ c~ cI * * part cI part cperiodic f0 f1 cI * * part cI part cperiodic f0 f1
- (_7288371 = _7288373), (_7288372 = _7288374) |- ((_7288371 = _7288373) /\ (((EL _7288371) _7288372) = ((EL _7288373) _7288374)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= cEL f0 f2 cEL f1 f3
- |- ((!f'. ((~ (((((leaf_rank V) ul) w0) n) f')) \/ ((periodic f) n))) = ((!f. (~ (((((leaf_rank V) ul) w0) n) f))) \/ ((periodic f) n)))
T c= ! c\/ c~ cleaf_rank f0 f1 f2 f3 b0 cperiodic f4 f3 c\/ ! c~ cleaf_rank f0 f1 f2 f3 b0 cperiodic f4 f3
- (_7288338 = _7288343) |- ((_7288339 = _7288344) ==> ((~ (_7288337 = _7288342)) \/ ((~ (_7288340 = _7288345)) \/ ((~ (_7288341 = _7288346)) \/ ((((((cc_4 _7288342) _7288343) _7288344) _7288345) _7288346) \/ (~ (((((cc_4 _7288337) _7288338) _7288339) _7288340) _7288341)))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ c~ c= f8 f9 c\/ ccc_4 f5 f1 f3 f7 f9 c~ ccc_4 f4 f0 f2 f6 f8
- (~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f)) /\ ((I ((I ((I ((I ((I leaf_rank) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) NIL)))) w0)) n)) f))
T c==> c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c/\ c~ cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5 cI * * part cI * * part cI * * part cI * * part cI part cleaf_rank f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cNIL f3 f4 f5
- |- (((!p'. (!q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b1 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> b0 b1 * / ! c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b1 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> b0 b1 f6 * / ! c==> c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL b1 c= c==> c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= * * part ccc_cell f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL * * part cmcell4 f2 cCONS f3 cCONS f4 cCONS * f0 f5 cCONS * f0 cSUC f5 cNIL c==> b0 b1 f6
- (_7288351 = _7288352) |- ((_7288351 = _7288352) /\ ((collinear _7288352) \/ (~ (collinear _7288351))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- |- (((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))) ==> ((packing V) ==> ((saturated V) ==> ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) ==> (((NUMERAL (BIT1 _0)) < n) ==> ((((((cc_4 V) u0) u1) f) i) ==> ((~ (((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))) ==> ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((!V. (!ul. (!w0. (!n. (!f. ((((((leaf_rank V) ul) w0) n) f) ==> ((periodic f) n))))))) ==> F))))))))))
T c==> c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF c==> cpacking f0 c==> csaturated f0 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 f4 f5 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c< cNUMERAL cBIT1 c_0 f4 c==> ccc_4 f0 f1 f2 f5 f6 c==> c~ c/\ cperiodic f5 f4 cleaf f0 cCONS f1 cCONS f2 cCONS * f5 f6 cNIL c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> ! ! ! ! ! c==> cleaf_rank b0 b1 b2 b3 b4 cperiodic b4 b3 cF
- |- (((!p'. (!q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) = p') ==> ((p' ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b1 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> b0 b1 * / ! c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b1 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> b0 b1 f5 * / ! c==> c= c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 b0 c==> c==> b0 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL b1 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> b0 b1 f5
- (_7288381 = _7288383) |- ((_7288382 = _7288384) ==> (((cc_ke _7288381) _7288382) = ((cc_ke _7288383) _7288384)))
T c==> c= f0 f1 c==> c= f2 f3 c= ccc_ke f0 f2 ccc_ke f1 f3
- |- ((\q'. (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = p') ==> ((p' ==> ((((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = q')) ==> (((((periodic f) n) /\ ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) ==> (((cc_ke V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL f6 c==> c==> f6 c= c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 b0 c= c==> c/\ cperiodic f0 f1 cleaf f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL c= ccc_ke f2 cCONS f3 cCONS f4 cCONS * f0 f5 cNIL cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> f6 b0 f7
- (~ F), (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 f5 f3 c/\ c~ cF cF
- |- ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> ((((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL)))))) = q')) ==> ((((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> (((cc_cell V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))) = ((mcell4 V) ((CONS u0) ((CONS u1) ((CONS (f i)) ((CONS (f (SUC i))) NIL))))))) = (((((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f (SUC i))) \/ (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i)))) ==> q')))
T c==> c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL f5 c= c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 c= * * part ccc_cell f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * * part cmcell4 f0 cCONS f1 cCONS f2 cCONS * f3 f4 cCONS * f3 cSUC f4 cNIL c==> c\/ c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 cSUC f4 c/\ c= * f3 f4 * f3 cSUC f4 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f0 cCONS f1 cCONS f2 cCONS * f3 f4 cNIL * f3 f4 f5
- |- ((_7288363 = _7288364) ==> ((saturated _7288364) \/ (~ (saturated _7288363))))
T c==> c= f0 f1 c\/ csaturated f1 c~ csaturated f0
- (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) |- ((?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)) /\ ((!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))))
T c==> c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 f4 c/\ c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL f3 b0 f4 c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL cleaf f0 cCONS f1 cCONS f2 cCONS * f4 f5 cNIL
- (~ (?w0. (?n. (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f)))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) ==> F)
T c==> c~ c? / c? / cleaf_rank f0 cCONS f1 cCONS f2 cNIL b0 b1 f3 c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f4 f5 f3 c==> c~ cF cF
- (_7288365 = _7288366) |- ((((packing _7288365) = (packing _7288366)) ==> ((packing _7288366) \/ (~ (packing _7288365)))) = ((packing _7288366) \/ (~ (packing _7288365))))
T c==> c= f0 f1 c= c==> c= cpacking f0 cpacking f1 c\/ cpacking f1 c~ cpacking f0 c\/ cpacking f1 c~ cpacking f0
- |- ((~ (_7288501 = _7288503)) \/ ((~ (_7288500 = _7288502)) \/ (((I _7288500) _7288501) = ((I _7288502) _7288503))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cI f2 f0 * * part cI f3 f1
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. (((packing V) /\ ((saturated V) /\ ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) /\ ((~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))) /\ ((NUMERAL (BIT1 _0)) < n))))) ==> (~ ((f i) = (f (SUC i)))))))))))), (~ F), (~ (collinear (u0 INSERT (u1 INSERT (w0 INSERT EMPTY))))), (packing V), (saturated V), (((f i) = (f (SUC i))) /\ (((EL (NUMERAL (BIT1 (BIT1 _0)))) ((cc_uh V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL))))) = (f i))), ((NUMERAL (BIT1 _0)) < n), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ F) /\ F)
T c==> ! ! ! ! ! ! ! c==> c/\ cpacking b0 c/\ csaturated b0 c/\ cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c< cNUMERAL cBIT1 c_0 b4 c~ c= * b5 b6 * b5 cSUC b6 c==> c~ cF c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cpacking f3 c==> csaturated f3 c==> c/\ c= * f4 f5 * f4 cSUC f5 c= cEL cNUMERAL cBIT1 cBIT1 c_0 ccc_uh f3 cCONS f0 cCONS f1 cCONS * f4 f5 cNIL * f4 f5 c==> c< cNUMERAL cBIT1 c_0 f6 c==> cleaf_rank f3 cCONS f0 cCONS f1 cNIL f2 f6 f4 c/\ c~ cF cF
- (!V. (!u0. (!u1. (!w0. (!n. (!f. (!i. ((((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) ==> ((leaf V) ((CONS u0) ((CONS u1) ((CONS (f i)) NIL)))))))))))), (~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))), (((((leaf_rank V) ((CONS u0) ((CONS u1) NIL))) w0) n) f) |- ((~ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL))))) /\ ((I ((I leaf) V)) ((I ((I CONS) u0)) ((I ((I CONS) u1)) ((I ((I CONS) ((I f) i))) NIL)))))
T c==> ! ! ! ! ! ! ! c==> cleaf_rank b0 cCONS b1 cCONS b2 cNIL b3 b4 b5 cleaf b0 cCONS b1 cCONS b2 cCONS * b5 b6 cNIL c==> c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL c==> cleaf_rank f0 cCONS f1 cCONS f2 cNIL f5 f6 f3 c/\ c~ cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL cI * * part cI part cleaf f0 cI * * part cI part cCONS f1 cI * * part cI part cCONS f2 cI * * part cI part cCONS cI f3 f4 cNIL
