N Hexagons.h0_EQ_B_SCS_5I2
C |- ((!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((scs_b_v39 scs_5I2) i) j) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((scs_a_v39 scs_5I2) i) j) = sqrt8)))))
T c/\ ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cscs_b_v39 cscs_5I2 b0 b1 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cscs_a_v39 cscs_5I2 b0 b1 csqrt8
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D Sphere.h0
A |- (h0 = ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))
T c= ch0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0
D Appendix.scs_a_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))))
T c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f2
D Appendix.scs_b_v39_explicit
A |- (!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))))
T c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f5
D Appendix.mk_unadorned_v39
A |- (!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))))
T c= cmk_unadorned_v39 f0 f1 f2 f3 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, f3 c, f3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY
D Appendix.scs_diag
A |- (!i. (!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k)))))))))
T c= cscs_diag f0 f1 f2 c/\ c~ c= cMOD f1 f0 cMOD f2 f0 c/\ c~ c= cMOD cSUC f1 f0 cMOD f2 f0 c~ c= cMOD f1 f0 cMOD cSUC f2 f0
D Appendix.scs_5I2
A |- (scs_5I2 = ((((mk_unadorned_v39 (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT0 (BIT0 (BIT1 _0)))))))))))) (NUMERAL (BIT0 (BIT0 (BIT0 (BIT1 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))))))) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) (((cs_adj (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= cscs_5I2 cmk_unadorned_v39 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT0 cBIT1 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 * * * part ccs_adj cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
D Zithlqn.CS_ADJ
A |- (cs_adj = (\k. (\a1. (\a2. (\i. (\j. (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((COND (((j MOD k) = ((SUC i) MOD k)) \/ (((SUC j) MOD k) = (i MOD k)))) a1) a2))))))))
T c= part ccs_adj / / / / / cCOND c= cMOD b3 b0 cMOD b4 b0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b4 b0 cMOD cSUC b3 b0 c= cMOD cSUC b4 b0 cMOD b3 b0 b1 b2
- |- ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
- |- ((\mkj. (!q. (!p. (!s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s)))))))) mkj)
T * / ! ! ! c= cscs_half_slice_v39 b3 b2 b1 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b5 c, f0 c, b8 c, b8 c, b9 c, b9 c, b10 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b10 b5 * * part cINSERT cMOD b11 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY b0 * * * b7 * part cscs_J_v39 b3 b10 b11 / / cCOND c= * * part cINSERT cMOD b9 b5 * * part cINSERT cMOD b10 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b3 b2 b1 * * * b6 * part cscs_b_v39 b3 b9 b10 / / cCOND c= * * part cINSERT cMOD b8 b5 * * part cINSERT cMOD b9 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b3 b2 b1 * * * b6 * part cscs_a_v39 b3 b8 b9 / / / * * b7 c+ cMOD b8 b5 b4 c+ cMOD b9 b5 b4 / / / * * b6 c+ cMOD b7 b5 b4 c+ cMOD b8 b5 b4 cMOD c+ b1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b3 b4 cscs_k_v39 b3 cMOD b2 cscs_k_v39 b3 f1
+ (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F)
T c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha)
T * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cF
- |- (((!s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) ==> ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s)) = ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s))
T c= c==> ! c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0 * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0
- |- ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))
T c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1
- |- ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))
T c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT1 _0))) |- ((NUMERAL (BIT1 _0)) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) ==> ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)) = ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo))
T c= c==> ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
+ |- (((!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))))) = ((!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))))))
T c= c/\ ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c/\ ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta)
T * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- (((!x. (x = x)) ==> ((\x. (x = x)) x)) = ((\x. (x = x)) x))
T c= c==> ! c= b0 b0 * / c= b0 b0 f0 * / c= b0 b0 f0
+ |- ((!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = T)
T c= ! c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (~ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) (i , (j + (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = ((psort (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) (i , j)))
T c= cpsort cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, f0 c+ f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cpsort cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c, f0 f1
- |- ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))
T c= cscs_basic_v39 f0 c/\ cunadorned_v39 f0 ! ! c= cscs_J_v39 f0 b0 b1 cF
- |- ((\u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))))) u')
T * / ! ! ! c= cfunlistA_v39 f0 f1 b0 b1 b2 b3 cCOND c= cMOD b2 b1 cMOD b3 b1 f1 cASSOCD_v39 cpsort b1 c, b2 b3 cMAP * part cGABS / ! ! cGEQ * b4 c, b5 b6 c, cpsort b1 b5 b6 f0 b0 f2
- (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (T = ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cT c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) ==> ((\k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) k)) = ((\k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) k))
T c= c==> ! c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 * / c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 f2 * / c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 f2
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))
T c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) ==> ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)) = ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str))
T c= c==> ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9 * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 cF
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))))))
T c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) ==> ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo)) = ((\lo. (!str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k))) lo))
T c= c==> ! ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8 * / ! c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f0 f8
- |- (~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))
T c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b4 f2
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))
T c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))) alpha)
T * / ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b3 f5
- |- ((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- (((!i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) ==> ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i)) = ((\i. (!j. ((((((funlist_v39 data) d) k) i) j) = (((COND ((i MOD k) = (j MOD k))) (real_of_num (NUMERAL _0))) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) d))))) i))
T c= c==> ! ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3 * / ! c= cfunlist_v39 f0 f1 f2 b0 b1 cCOND c= cMOD b0 f2 cMOD b1 f2 creal_of_num cNUMERAL c_0 cASSOCD_v39 cpsort f2 c, b0 b1 cMAP * part cGABS / ! ! cGEQ * b2 c, b3 b4 c, cpsort f2 b3 b4 f0 f1 f3
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- ((\k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u')))))) k)
T * / ! ! c= cfunlistA_v39 f0 f1 f2 b0 b1 b2 cCOND c= cMOD b1 b0 cMOD b2 b0 f1 cASSOCD_v39 cpsort b0 c, b1 b2 cMAP * part cGABS / ! ! cGEQ * b3 c, b4 b5 c, cpsort b0 b4 b5 f0 f2 f3
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((a + (NUMERAL _0)) = a)
T c= c+ f0 cNUMERAL c_0 f0
- |- ((\J. (!lo. (!str. ((scs_bm_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = beta)))) J)
T * / ! ! c= * part cscs_bm_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f4 f7
- |- (((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) ==> (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F)) = (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) = F))
T c= c==> c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cF
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2 * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) = F)
T c= c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cF
- |- (((!t'. (!e'. (((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f2 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f2 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f2 b0 b1 f3 * / ! c==> c= c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f2 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f2 b0 b1 f3
- |- ((\str. ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)) str)
T * / c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f0 f9
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))
T c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
+ |- ((!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))) = T)
T c= ! c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 cT
- |- ((((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = g') ==> ((g' ==> ((real_of_num (NUMERAL _0)) = t')) ==> (((~ g') ==> ((((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8) = e')) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = (((COND g') t') e')))))
T c==> c= c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= creal_of_num cNUMERAL c_0 f3 c==> c==> c~ f2 c= cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 f4 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 cCOND f2 f3 f4
- |- ((unadorned_v39 s) = (((scs_lo_v39 s) = EMPTY) /\ (((scs_hi_v39 s) = EMPTY) /\ (((scs_str_v39 s) = EMPTY) /\ (((scs_a_v39 s) = (scs_am_v39 s)) /\ ((scs_b_v39 s) = (scs_bm_v39 s)))))))
T c= cunadorned_v39 f0 c/\ c= * part cscs_lo_v39 f0 part cEMPTY c/\ c= * part cscs_hi_v39 f0 part cEMPTY c/\ c= * part cscs_str_v39 f0 part cEMPTY c/\ c= * part cscs_a_v39 f0 * part cscs_am_v39 f0 c= * part cscs_b_v39 f0 * part cscs_bm_v39 f0
- |- (((!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) ==> ((\b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) b)) = ((\b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d)))))) b))
T c= c==> ! ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1 * / ! ! c= c= c, f0 b0 c, b1 b2 c/\ c= f0 b1 c= b0 b2 f1
- |- ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))
T c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\t'. (!e'. (((((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) = g') ==> ((g' ==> (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0) = t')) ==> (((~ g') ==> ((real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = e')) ==> ((((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 b0 c==> c==> c~ f2 c= creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= cCOND c\/ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cCOND f2 b0 b1 f3
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) ==> ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a)) = ((\a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) a))
T c= c==> ! ! c= cASSOCD_v39 b0 cNIL b1 b1 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0 * / ! c= cASSOCD_v39 b0 cNIL b1 b1 f0
- |- (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 (BIT1 _0))))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))))))))))))))))))))))))))))))))))))))
T c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((!p'. (!q'. (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) = p') ==> ((p' ==> (((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8) = q')) ==> (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) = p') ==> ((p' ==> (((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8) = q')) ==> (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) = p') ==> ((p' ==> (((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8) = q')) ==> (((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 b0 c==> c==> b0 c= c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 b1 c= c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c==> b0 b1 * / ! c==> c= cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 b0 c==> c==> b0 c= c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 b1 c= c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c==> b0 b1 f2 * / ! c==> c= cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 b0 c==> c==> b0 c= c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 b1 c= c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0 f1 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c==> b0 b1 f2
- ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0
- |- (((!k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) ==> ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k)) = ((\k. (!f. (((periodic2 f) k) = (!i. (!j. ((((f (i + k)) j) = ((f i) j)) /\ (((f i) (j + k)) = ((f i) j)))))))) k))
T c= c==> ! ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0 * / ! c= cperiodic2 b1 b0 ! ! c/\ c= * * b1 c+ b2 b0 b3 * * b1 b2 b3 c= * * b1 b2 c+ b3 b0 * * b1 b2 b3 f0
+ |- ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)
T * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL _0)))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL c_0
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) = T)
T c= c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cT
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b2 f2
- ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 (BIT1 _0)))) |- ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c==> c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)
T * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- (((!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) ==> ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J)) = ((\J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))) J))
T c= c==> ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7 * / ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f5 f7
+ |- (((!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta))
T c= c==> ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6 * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F)
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- (((!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k)))))))) ==> ((\j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k)))))))) j)) = ((\j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k)))))))) j))
T c= c==> ! ! c= cscs_diag b1 f0 b0 c/\ c~ c= cMOD f0 b1 cMOD b0 b1 c/\ c~ c= cMOD cSUC f0 b1 cMOD b0 b1 c~ c= cMOD f0 b1 cMOD cSUC b0 b1 * / ! c= cscs_diag b1 f0 b0 c/\ c~ c= cMOD f0 b1 cMOD b0 b1 c/\ c~ c= cMOD cSUC f0 b1 cMOD b0 b1 c~ c= cMOD f0 b1 cMOD cSUC b0 b1 f1 * / ! c= cscs_diag b1 f0 b0 c/\ c~ c= cMOD f0 b1 cMOD b0 b1 c/\ c~ c= cMOD cSUC f0 b1 cMOD b0 b1 c~ c= cMOD f0 b1 cMOD cSUC b0 b1 f1
+ |- ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)
T * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
+ (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (~ ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))
T c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (((!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) ==> ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)) = ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J))
T c= c==> ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7 * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- ((((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)) = T)
T c= c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 cT
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- ((((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = T)
T c= c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ |- ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)
T * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ |- ((\k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))) k)
T * / c= cscs_diag b0 f0 f1 c/\ c~ c= cMOD f0 b0 cMOD f1 b0 c/\ c~ c= cMOD cSUC f0 b0 cMOD f1 b0 c~ c= cMOD f0 b0 cMOD cSUC f1 b0 f2
+ |- ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)
T * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ |- (((!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) ==> ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)) = ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2 * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) ==> ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d)) = ((\d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))))) d))
T c= c==> ! ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1 * / ! ! c= cmk_unadorned_v39 f0 b0 b1 b2 cscs_v39 c, f0 c, b0 c, b1 c, b1 c, b2 c, b2 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f1
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)
T * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) ==> ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)) = ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo))
T c= c==> ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8 * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- ((((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F)
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- (((!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) ==> ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)) = ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str))
T c= c==> ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9 * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- ((!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)))))
T c/\ ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) ==> ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)) = ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k))
T c= c==> ! ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0 * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ |- (((!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) h0)) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))))) = ((!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((scs_b_v39 scs_5I2) i) j) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. ((((scs_diag (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) i) j) ==> ((((scs_a_v39 scs_5I2) i) j) = sqrt8))))))
T c= c/\ ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 ch0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c/\ ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cscs_b_v39 cscs_5I2 b0 b1 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> cscs_diag cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 b1 c= cscs_a_v39 cscs_5I2 b0 b1 csqrt8
+ |- ((\k. (!d. (!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))))) k)
T * / ! ! ! c= cmk_unadorned_v39 b0 b1 b2 b3 cscs_v39 c, b0 c, b1 c, b2 c, b2 c, b3 c, b3 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f0
+ ((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) |- (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)) str)
T * / c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f2 f9
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
+ |- ((!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)))))
T c/\ ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5 * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))), ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) |- ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) ==> ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo)) = ((\lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))) lo))
T c= c==> ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8 * / ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f5 f8
+ |- (!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))))
T c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b2 f1
+ |- ((\j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k)))))))) j)
T * / ! c= cscs_diag b1 f0 b0 c/\ c~ c= cMOD f0 b1 cMOD b0 b1 c/\ c~ c= cMOD cSUC f0 b1 cMOD b0 b1 c~ c= cMOD f0 b1 cMOD cSUC b0 b1 f1
+ |- (((!i. (!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))))) ==> ((\i. (!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))))) i)) = ((\i. (!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))))) i))
T c= c==> ! ! ! c= cscs_diag b2 b0 b1 c/\ c~ c= cMOD b0 b2 cMOD b1 b2 c/\ c~ c= cMOD cSUC b0 b2 cMOD b1 b2 c~ c= cMOD b0 b2 cMOD cSUC b1 b2 * / ! ! c= cscs_diag b2 b0 b1 c/\ c~ c= cMOD b0 b2 cMOD b1 b2 c/\ c~ c= cMOD cSUC b0 b2 cMOD b1 b2 c~ c= cMOD b0 b2 cMOD cSUC b1 b2 f0 * / ! ! c= cscs_diag b2 b0 b1 c/\ c~ c= cMOD b0 b2 cMOD b1 b2 c/\ c~ c= cMOD cSUC b0 b2 cMOD b1 b2 c~ c= cMOD b0 b2 cMOD cSUC b1 b2 f0
+ |- ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)
T * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8)))) = ((!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) /\ (!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))))))
T c= ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8 c/\ ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! ! c==> c/\ c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- ((\lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))) lo)
T * / ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f2 f8
+ |- ((F \/ t) = t)
T c= c\/ cF f0 f0
+ |- ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))))) k)
T * / ! ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b3 f1
+ |- (((!a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) ==> ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)) = ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a))
T c= c==> ! ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2 * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ |- ((\a. (!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY))))))))))))) a)
T * / ! c= cmk_unadorned_v39 f0 f1 b0 b1 cscs_v39 c, f0 c, f1 c, b0 c, b0 c, b1 c, b1 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f2
+ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((~ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F)) = ((((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F))
T c==> c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c==> c~ c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ |- (((!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) ==> ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)) = ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha))
T c= c==> ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5 * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- ((\i. (!j. (!k. ((((scs_diag k) i) j) = ((~ ((i MOD k) = (j MOD k))) /\ ((~ (((SUC i) MOD k) = (j MOD k))) /\ (~ ((i MOD k) = ((SUC j) MOD k))))))))) i)
T * / ! ! c= cscs_diag b2 b0 b1 c/\ c~ c= cMOD b0 b2 cMOD b1 b2 c/\ c~ c= cMOD cSUC b0 b2 cMOD b1 b2 c~ c= cMOD b0 b2 cMOD cSUC b1 b2 f0
+ (~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) |- (((~ ((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F)) = (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) = F))
T c==> c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c==> c~ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF c= c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
+ ((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) |- (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) /\ ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) sqrt8)) = sqrt8))
T c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 csqrt8 csqrt8
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3 * / ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b0 f3
+ |- ((\J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))) J)
T * / ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, b0 c, b1 c, f6 b2 f2 f7
+ |- (((!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) ==> ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)) = ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a))
T c= c==> ! ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3 * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c==> c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- (!i. (!j. (((~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ ((~ (((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) /\ (~ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))) ==> ((((COND ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) (((COND (((j MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC i) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) \/ (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((DECIMAL (NUMERAL (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0))))))))))) (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (real_of_num (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> c/\ c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c~ c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCOND c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cCOND c\/ c= cMOD f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cDECIMAL cNUMERAL cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))) alpha)
T * / ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f3 f5
+ |- ((\a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)))))))) a)
T * / ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, b0 c, b2 c, b3 c, b1 c, b4 c, b5 c, f2 b6 b1 f3
+ |- (((!b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) ==> ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b)) = ((\b. (((((mk_unadorned_v39 k) d) a) b) = (scs_v39 (k , (d , (a , (a , (b , (b , ((\i. (\j. F)) , (EMPTY , (EMPTY , EMPTY)))))))))))) b))
T c= c==> ! c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3 * / c= cmk_unadorned_v39 f0 f1 f2 b0 cscs_v39 c, f0 c, f1 c, f2 c, f2 c, b0 c, b0 c, / / cF c, part cEMPTY c, part cEMPTY part cEMPTY f3
+ |- ((\beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))) beta)
T * / ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f2 f6
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4 * / ! ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 b0 f4
+ ((i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) |- (((SUC j) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (i MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c==> c= cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cMOD cSUC f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cMOD f0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((\str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b)) str)
T * / c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 b0 f5 f9
+ |- (((!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) ==> ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b)) = ((\b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))) b))
T c= c==> ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4 * / ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b1 c, b2 c, b0 c, b3 c, b4 c, f3 b5 f2 f4
+ |- ((\d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a))))))))) d)
T * / ! ! ! ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, b0 c, b1 c, b3 c, b4 c, b2 c, b5 c, b6 c, f1 b7 b1 f2
+ |- (((!beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) ==> ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta)) = ((\beta. (!J. (!lo. (!str. ((scs_b_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = b))))) beta))
T c= c==> ! ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6 * / ! ! ! c= * part cscs_b_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 f4 f6
