N Lp_ineqs_proofs.dart4_y4'_lo
C |- (!V. (!E. ((lp_fan (V , E)) ==> (!d. ((d IN ((darts_k (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) (hypermap_of_fan (V , E)))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) ((y4'_fan (V , E)) d)))))))
T c==> clp_fan c, f0 f1 ! c==> cIN b0 * * part cdarts_k cNUMERAL cBIT0 cBIT0 cBIT1 c_0 chypermap_of_fan c, f0 f1 creal_le cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cy4'_fan c, f0 f1 b0
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D pair_INDUCT
A |- (!P. ((!x. (!y. (P (x , y)))) ==> (!p. (P p))))
T c==> ! ! * f0 c, b0 b1 ! * f0 b0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Hypermap.res
A |- (!f. (!s. (!x. ((((res f) s) x) = (((COND (x IN s)) (f x)) x)))))
T c= cres f0 f1 f2 cCOND cIN f2 f1 * f0 f2 f2
D Hypermap_and_fan.COMPONENTS_HYPERMAP_OF_FAN
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (((dart (hypermap_of_fan (V , E))) = (dart_of_fan (V , E))) /\ (((edge_map (hypermap_of_fan (V , E))) = (e_fan_pair_ext (V , E))) /\ (((node_map (hypermap_of_fan (V , E))) = (n_fan_pair_ext (V , E))) /\ ((face_map (hypermap_of_fan (V , E))) = (f_fan_pair_ext (V , E)))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ c= * part cdart chypermap_of_fan c, f0 f1 * part cdart_of_fan c, f0 f1 c/\ c= * part cedge_map chypermap_of_fan c, f0 f1 * part ce_fan_pair_ext c, f0 f1 c/\ c= * part cnode_map chypermap_of_fan c, f0 f1 * part cn_fan_pair_ext c, f0 f1 c= * part cface_map chypermap_of_fan c, f0 f1 * part cf_fan_pair_ext c, f0 f1
D Hypermap_and_fan.INVERSE_F_FAN_PAIR_EXT_EXPLICIT
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((inverse (f_fan_pair_ext (V , E))) = ((res (GABS (\f. (!v. (!w. ((GEQ (f (v , w))) ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) , v))))))) (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c= * part cinverse * part cf_fan_pair_ext c, f0 f1 * * part cres * part cGABS / ! ! cGEQ * b0 c, b1 b2 c, csigma_fan cvec cNUMERAL c_0 f0 f1 b1 b2 b1 * part cdart1_of_fan c, f0 f1
D Hypermap_and_fan.PAIR_IN_DART_OF_FAN
A |- (!V. (!E. (!v. (!w. (((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((v , w) IN (dart_of_fan (V , E)))) ==> ((v IN V) /\ (w IN V)))))))
T c==> c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 cIN c, f2 f3 * part cdart_of_fan c, f0 f1 c/\ cIN f2 f0 cIN f3 f0
D Add_triangle.inE_eq_in_dart1
A |- (!V. (!E. (!v. (!w. (((v INSERT (w INSERT EMPTY)) IN E) = ((v , w) IN (dart1_of_fan (V , E))))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cIN c, f0 f1 * part cdart1_of_fan c, f3 f2
D Add_triangle.fully_surrounded_dart_of_fan_eq
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> ((dart_of_fan (V , E)) = (dart1_of_fan (V , E)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 c= * part cdart_of_fan c, f0 f1 * part cdart1_of_fan c, f0 f1
D Add_triangle.sigma_fan_inV
A |- (!E. (!V. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. (((v , w) IN (dart1_of_fan (V , E))) ==> ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) IN V)))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> cIN c, b0 b1 * part cdart1_of_fan c, f0 f1 cIN csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 f0
D Add_triangle.sigma_fan_not_fixed
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ (fully_surrounded (V , E))) ==> (~ ((((((sigma_fan (vec (NUMERAL _0))) V) E) v) w) = w))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 cfully_surrounded c, f0 f1 c~ c= csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 b1
D Add_triangle.fully_surrounded_diag_not_in_dart
A |- (!V. (!E. ((FAN ((vec (NUMERAL _0)) , (V , E))) ==> ((fully_surrounded (V , E)) ==> (!v. (!w. ((((v , w) IN (dart_of_fan (V , E))) /\ ((NUMERAL (BIT1 (BIT1 _0))) < (CARD ((face (hypermap_of_fan (V , E))) (v , w))))) ==> (~ ((w , (((((sigma_fan (vec (NUMERAL _0))) V) E) v) w)) IN (dart_of_fan (V , E)))))))))))
T c==> cFAN c, cvec cNUMERAL c_0 c, f0 f1 c==> cfully_surrounded c, f0 f1 ! ! c==> c/\ cIN c, b0 b1 * part cdart_of_fan c, f0 f1 c< cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_fan c, f0 f1 c, b0 b1 c~ cIN c, b1 csigma_fan cvec cNUMERAL c_0 f0 f1 b0 b1 * part cdart_of_fan c, f0 f1
D List_hypermap.darts_k
A |- (!H. (!k. (((darts_k k) H) = (GSPEC (\GEN%PVAR%8595. (?d. (((SETSPEC GEN%PVAR%8595) ((d IN (dart H)) /\ ((CARD ((face H) d)) = k))) d)))))))
T c= * * part cdarts_k f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * part cdart f1 c= cCARD * * part cface f1 b1 f0 b1
D Lp_ineqs_def.y4'_fan
A |- (!V. (!E. (!x. (((y4'_fan (V , E)) x) = (distance ((SND x) , (FST ((inverse (f_fan_pair_ext (V , E))) x))))))))
T c= cy4'_fan c, f0 f1 f2 cdistance c, cSND f2 cFST cinverse * part cf_fan_pair_ext c, f0 f1 f2
D Lp_ineqs_proofs.lp_fan
A |- (!E. (!V. ((lp_fan (V , E)) = ((FAN ((vec (NUMERAL _0)) , (V , E))) /\ ((fully_surrounded (V , E)) /\ ((!v. (!w. (((v IN V) /\ ((w IN V) /\ ((~ (v = w)) /\ (~ ((v INSERT (w INSERT EMPTY)) IN E))))) ==> ((real_le ((DECIMAL (NUMERAL (BIT0 (BIT0 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 (BIT1 _0)))))))))) (NUMERAL (BIT0 (BIT0 (BIT1 (BIT0 (BIT0 (BIT1 (BIT1 _0)))))))))) (distance (v , w)))))) /\ ((V SUBSET ball_annulus) /\ (packing V))))))))
T c= clp_fan c, f0 f1 c/\ cFAN c, cvec cNUMERAL c_0 c, f0 f1 c/\ cfully_surrounded c, f0 f1 c/\ ! ! c==> c/\ cIN b0 f0 c/\ cIN b1 f0 c/\ c~ c= b0 b1 c~ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1 creal_le cDECIMAL cNUMERAL cBIT0 cBIT0 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 cBIT0 cBIT0 cBIT1 cBIT1 c_0 cdistance c, b0 b1 c/\ cSUBSET f0 part cball_annulus cpacking f0
