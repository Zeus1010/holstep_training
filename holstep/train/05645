N Oxlzlez.radius_le_circumradius
C |- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D BIT0
A |- (!n. ((BIT0 n) = (n + n)))
T c= cBIT0 f0 c+ f0 f0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D MULT_ASSOC
A |- (!m. (!n. (!p. ((m * (n * p)) = ((m * n) * p)))))
T c= c* f0 c* f1 f2 c* c* f0 f1 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D EQ_MULT_LCANCEL
A |- (!m. (!n. (!p. (((m * n) = (m * p)) = ((m = (NUMERAL _0)) \/ (n = p))))))
T c= c= c* f0 f1 c* f0 f2 c\/ c= f0 cNUMERAL c_0 c= f1 f2
D MULT_2
A |- (!n. (((NUMERAL (BIT0 (BIT1 _0))) * n) = (n + n)))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 f0 c+ f0 f0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D ARITH_EQ
A |- ((!m. (!n. (((NUMERAL m) = (NUMERAL n)) = (m = n)))) /\ (((_0 = _0) = T) /\ ((!n. (((BIT0 n) = _0) = (n = _0))) /\ ((!n. (((BIT1 n) = _0) = F)) /\ ((!n. ((_0 = (BIT0 n)) = (_0 = n))) /\ ((!n. ((_0 = (BIT1 n)) = F)) /\ ((!m. (!n. (((BIT0 m) = (BIT0 n)) = (m = n)))) /\ ((!m. (!n. (((BIT0 m) = (BIT1 n)) = F))) /\ ((!m. (!n. (((BIT1 m) = (BIT0 n)) = F))) /\ (!m. (!n. (((BIT1 m) = (BIT1 n)) = (m = n)))))))))))))
T c/\ ! ! c= c= cNUMERAL b0 cNUMERAL b1 c= b0 b1 c/\ c= c= c_0 c_0 cT c/\ ! c= c= cBIT0 b0 c_0 c= b0 c_0 c/\ ! c= c= cBIT1 b0 c_0 cF c/\ ! c= c= c_0 cBIT0 b0 c= c_0 b0 c/\ ! c= c= c_0 cBIT1 b0 cF c/\ ! ! c= c= cBIT0 b0 cBIT0 b1 c= b0 b1 c/\ ! ! c= c= cBIT0 b0 cBIT1 b1 cF c/\ ! ! c= c= cBIT1 b0 cBIT0 b1 cF ! ! c= c= cBIT1 b0 cBIT1 b1 c= b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D real_div
A |- (!x. (!y. (((real_div x) y) = ((real_mul x) (real_inv y)))))
T c= creal_div f0 f1 creal_mul f0 creal_inv f1
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_LT_LE
A |- (!x. (!y. (((real_lt x) y) = (((real_le x) y) /\ (~ (x = y))))))
T c= creal_lt f0 f1 c/\ creal_le f0 f1 c~ c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_ENTIRE
A |- (!x. (!y. ((((real_mul x) y) = (real_of_num (NUMERAL _0))) = ((x = (real_of_num (NUMERAL _0))) \/ (y = (real_of_num (NUMERAL _0)))))))
T c= c= creal_mul f0 f1 creal_of_num cNUMERAL c_0 c\/ c= f0 creal_of_num cNUMERAL c_0 c= f1 creal_of_num cNUMERAL c_0
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_AC
A |- ((((real_mul m) n) = ((real_mul n) m)) /\ ((((real_mul ((real_mul m) n)) p) = ((real_mul m) ((real_mul n) p))) /\ (((real_mul m) ((real_mul n) p)) = ((real_mul n) ((real_mul m) p)))))
T c/\ c= creal_mul f0 f1 creal_mul f1 f0 c/\ c= creal_mul creal_mul f0 f1 f2 creal_mul f0 creal_mul f1 f2 c= creal_mul f0 creal_mul f1 f2 creal_mul f1 creal_mul f0 f2
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D REAL_LT_01
A |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
D REAL_INV_INV
A |- (!x. ((real_inv (real_inv x)) = x))
T c= creal_inv creal_inv f0 f0
D REAL_INV_NEG
A |- (!x. ((real_inv (real_neg x)) = (real_neg (real_inv x))))
T c= creal_inv creal_neg f0 creal_neg creal_inv f0
D REAL_DIV_1
A |- (!x. (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_INV_MUL
A |- (!x. (!y. ((real_inv ((real_mul x) y)) = ((real_mul (real_inv x)) (real_inv y)))))
T c= creal_inv creal_mul f0 f1 creal_mul creal_inv f0 creal_inv f1
D REAL_INV_DIV
A |- (!x. (!y. ((real_inv ((real_div x) y)) = ((real_div y) x))))
T c= creal_inv creal_div f0 f1 creal_div f1 f0
D Collect_geom.pow_g
A |- (!x. ((real_le (real_of_num (NUMERAL _0))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))))
T creal_le creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0
D DECIMAL
A |- (!x. (!y. (((DECIMAL x) y) = ((real_div (real_of_num x)) (real_of_num y)))))
T c= cDECIMAL f0 f1 creal_div creal_of_num f0 creal_of_num f1
D RAT_LEMMA2
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> (((real_add ((real_div x1) y1)) ((real_div x2) y2)) = ((real_mul ((real_add ((real_mul x1) y2)) ((real_mul x2) y1))) ((real_mul (real_inv y1)) (real_inv y2)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= creal_add creal_div f2 f0 creal_div f3 f1 creal_mul creal_add creal_mul f2 f1 creal_mul f3 f0 creal_mul creal_inv f0 creal_inv f1
D RAT_LEMMA5
A |- ((((real_lt (real_of_num (NUMERAL _0))) y1) /\ ((real_lt (real_of_num (NUMERAL _0))) y2)) ==> ((((real_div x1) y1) = ((real_div x2) y2)) = (((real_mul x1) y2) = ((real_mul x2) y1))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 c= c= creal_div f2 f0 creal_div f3 f1 c= creal_mul f2 f1 creal_mul f3 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Trigonometry2.POW2_COND
A |- (!a. (!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
D Rogers.AFFINE_HULL_RADV
A |- (!s. (!t. (((~ (affine_dependent s)) /\ ((t SUBSET s) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV s)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter s)))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV s)) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t)))))))
T c==> c/\ c~ caffine_dependent f0 c/\ cSUBSET f1 f0 c~ c= f1 part cEMPTY c/\ c= creal_pow cradV f0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter f1 ccircumcenter f0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV f0 creal_le creal_of_num cNUMERAL c_0 cradV f1
D Oxlzlez.RADV2
A |- (!u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))))
T c= cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1
D Oxlzlez.AFF_DEP_COPLANAR
A |- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D Oxlzlez.NOT_COPLANAR_IMP_CARD4_ALT
A |- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY)))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- ((\P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))) P)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 * / c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le f0 f1 f2
- (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((~ (x = u2)) /\ (~ (x = u3)))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f4
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((!t. (((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((t SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t)))))) ==> ((\t. (((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((t SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t)))))) (u0 INSERT (u1 INSERT EMPTY)))) = ((\t. (((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((t SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t)))))) (u0 INSERT (u1 INSERT EMPTY))))
T c= c==> ! c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV b0 * / c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * / c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((!x. ((~ (x = u0)) /\ (~ (x = u1)))) = ((!x. (~ (x = u0))) /\ (!x. (~ (x = u1)))))
T c= ! c/\ c~ c= b0 f0 c~ c= b0 f1 c/\ ! c~ c= b0 f0 ! c~ c= b0 f1
+ |- ((((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) = (~ ((((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) /\ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) \/ ((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) /\ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))))))
T c= c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ c\/ c/\ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c/\ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- (((!x. (~ (x = u0))) ==> ((\x. (~ (x = u0))) _7306808)) = ((\x. (~ (x = u0))) _7306808))
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c= c==> ! c~ c= b0 f1 * / c~ c= b0 f1 f2 * / c~ c= b0 f1 f2
- |- ((!d'. ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((affine_dependent (a INSERT (b INSERT (c INSERT (d' INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d' INSERT EMPTY))))))) /\ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d' INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d' INSERT EMPTY))))))))) = ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (!d. (((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))) /\ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))
T c= ! c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ! c/\ c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
- (x = u1) |- ((~ (x = u3)) = (~ (u1 = u3)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
+ (~ ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))) |- ((~ ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))) /\ F)
T c==> c~ c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 c/\ c~ c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 cF
- |- ((~ (_7306791 = _7306792)) \/ ((CARD _7306791) = (CARD _7306792)))
T c\/ c~ c= f0 f1 c= cCARD f0 cCARD f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL _0) < (NUMERAL (BIT0 (BIT1 _0)))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- ((!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b))))) = T)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 c= ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * f0 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * f0 creal_le b0 b1 cT
+ |- (((!u1. (!u0. (!u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))))) ==> ((\u1. (!u0. (!u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))))) u1)) = ((\u1. (!u0. (!u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))))) u1))
T c= c==> ! ! ! ! c==> c~ c/\ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 c~ ! c~ c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ c/\ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 c~ ! c~ c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ c/\ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 c~ ! c~ c\/ c= b4 b1 c= b4 b0 cF f0
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (u1 = u1)) ==> (u1 = u1))
T c==> c~ c= f0 f0 c= f0 f0
+ |- ((((\u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) u2) ==> F) = T)
T c= c==> * / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 f3 cF cT
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) \/ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) |- (((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c= creal_le f2 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> F), ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) ==> ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) u1)) = ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) u1))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7306793 = _7306794)) \/ ((BIT1 _7306793) = (BIT1 _7306794)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c= creal_le creal_of_num cNUMERAL c_0 creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 cT
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (real_of_num (NUMERAL _0))) r) = T)
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_le creal_of_num cNUMERAL c_0 f4 cT
- (_7306787 = _7306788) |- ((((affine_dependent _7306787) = (affine_dependent _7306788)) ==> ((affine_dependent _7306788) \/ (~ (affine_dependent _7306787)))) = ((affine_dependent _7306788) \/ (~ (affine_dependent _7306787))))
T c==> c= f0 f1 c= c==> c= caffine_dependent f0 caffine_dependent f1 c\/ caffine_dependent f1 c~ caffine_dependent f0 c\/ caffine_dependent f1 c~ caffine_dependent f0
- |- ((!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cT
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow f2 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ |- (T = ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))))))
T c= cT c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY
+ (~ ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))) |- (?u1. (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))))
T c==> c~ c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 c? / c? / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b5 b0 ! c~ c= b5 b1
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
- |- (((real_le d) r) = ((\x. ((\v. v) x)) ((real_le d) r)))
T c= creal_le f0 f1 * / * / b1 b0 creal_le f0 f1
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))) ==> ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))) u1)) = ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))) u1))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f2 * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f2
- |- ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))))) u2)
T * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f1
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))
T * / ! c= * / * b0 b2 b1 * b0 b1 / b0
+ |- ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) u0)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
- |- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((_7306791 = _7306792) ==> ((CARD _7306791) = (CARD _7306792)))
T c==> c= f0 f1 c= cCARD f0 cCARD f1
+ |- (((?x. (P x)) \/ Q) = (?x. ((P x) \/ Q)))
T c= c\/ c? / * f0 b0 f1 c? / c\/ * f0 b0 f1
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) /\ ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 creal_le f5 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) |- (((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c= c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) = ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))
T c= creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
- |- ((!d'. ((~ ((CARD (a INSERT (b INSERT (c INSERT (d' INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))) /\ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))) = ((!d. (~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) \/ (((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))) /\ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))
T c= ! c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ! c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (T = ((real_le (real_of_num (NUMERAL _0))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT creal_le creal_of_num cNUMERAL c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
+ |- ((\P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) P)
T * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2 f0
- (((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) |- ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le f0 f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((\a. (!b. (!c. (!d. (((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))) _7306783)
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c/\ c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!u3. ((!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) = ((!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) /\ (!u3. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))
T c= ! c/\ ! ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 f0 c\/ c= b2 f1 c\/ c= b2 b1 c= b2 b0 c~ ! c~ c\/ c= b1 f0 c= b1 f1 c/\ ! ! ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 f0 c\/ c= b2 f1 c\/ c= b2 b1 c= b2 b0 ! c~ ! c~ c\/ c= b1 f0 c= b1 f1
+ |- (((!x. (((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) x) ==> F)) ==> ((?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) ==> F)) = ((?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 f0 c/\ c~ c= b4 b1 c/\ c~ c= b4 f0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b4 f0 ! c~ c= b4 b1 b0 cF c==> c? / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 cF c==> c? / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 cF
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (!a. (!b. (!c. (!d. ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))) /\ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c\/ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((\s. (!t. (((~ (affine_dependent s)) /\ ((t SUBSET s) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV s)) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter s)))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV s)) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t))))))) (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T * / ! c==> c/\ c~ caffine_dependent b0 c/\ cSUBSET b1 b0 c~ c= b1 part cEMPTY c/\ c= creal_pow cradV b0 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter b1 ccircumcenter b0 cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV b0 creal_le creal_of_num cNUMERAL c_0 cradV b1 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!u3. (((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) ==> F))
T c==> * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (~ (!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) = (x IN EMPTY)))))
T c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY
- (_7306787 = _7306788) |- ((_7306787 = _7306788) /\ ((affine_dependent _7306788) \/ (~ (affine_dependent _7306787))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ caffine_dependent f1 c~ caffine_dependent f0
+ ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
+ |- (((~ ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))) ==> F) = ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1)))))))))
T c= c==> c~ c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 cF c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) ==> ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 creal_le f2 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- (((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) /\ F)
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c/\ c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 cF
+ |- (((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1)))))) = ((!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (~ (!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) = (x IN EMPTY))))))
T c= c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?u0. (P u0)) /\ Q) = (?u0. ((P u0) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- ((\u1. (!u0. (!u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))))) u1)
T * / ! ! ! c==> c~ c/\ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 c~ ! c~ c\/ c= b4 b1 c= b4 b0 cF f0
+ |- (((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F) = F)
T c= c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((?u1. (?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))))) \/ (?u0. (?u1. ((!x. (~ (x = u0))) /\ (!x. (~ (x = u1))))))) = (?u1. ((?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))))) \/ (?u1'. ((!x. (~ (x = u1))) /\ (!x. (~ (x = u1'))))))))
T c= c\/ c? / c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1 c? / c\/ c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1
- (x = u1), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c~ cF cF
+ ((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) |- (((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) /\ F)
T c==> * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 c/\ * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 cF
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (!r. (((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r))))
T c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ |- (((!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) ==> ((\v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) v)) = ((\v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v))))) v))
T c= c==> ! c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 * / c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 f1 * / c= cradV * * part cINSERT f0 * * part cINSERT b0 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 b0 f1
+ (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (((!a. (!b. (!c. (!d. (((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))) ==> ((\a. (!b. (!c. (!d. (((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))) _7306783)) = ((\a. (!b. (!c. (!d. (((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))) _7306783))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! ! ! c/\ c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c/\ c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c/\ c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (~ (!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) = (x IN EMPTY))))) = (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY))))
T c= c/\ ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))))) |- (((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c/\ c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f4 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))), ((x = u0) ==> F), ((x = u1) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c==> c= f0 f1 cF c==> c==> c= f0 f2 cF cF
+ |- ((!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) ==> (!P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) |- ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) /\ (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c/\ c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
+ |- ((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- |- ((?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))
T c==> c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * f1 creal_le f0 b0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F), (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) |- ((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) /\ ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
+ (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((x = u0) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c= f0 f1 cF
- |- ((_7306795 = _7306796) ==> ((BIT0 _7306795) = (BIT0 _7306796)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ |- ((((?u1. (?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))))) \/ (?u1. (?u1'. ((!x. (~ (x = u1))) /\ (!x. (~ (x = u1'))))))) = (?u1. ((?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))))) \/ (?u1'. ((!x. (~ (x = u1))) /\ (!x. (~ (x = u1')))))))) = (((?u1. (?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))))) \/ (?u0. (?u1. ((!x. (~ (x = u0))) /\ (!x. (~ (x = u1))))))) = (?u1. ((?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))))) \/ (?u1'. ((!x. (~ (x = u1))) /\ (!x. (~ (x = u1')))))))))
T c= c= c\/ c? / c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1 c? / c\/ c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1 c= c\/ c? / c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1 c? / c\/ c? / c? / c? / c? / c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c? / c/\ ! c~ c= b2 b0 ! c~ c= b2 b1
+ |- ((?u0. ((!x. (~ (x = u0))) /\ (!x. (~ (x = u1))))) = ((?u0. (!x. (~ (x = u0)))) /\ (!x. (~ (x = u1)))))
T c= c? / c/\ ! c~ c= b1 b0 ! c~ c= b1 f0 c/\ c? / ! c~ c= b1 b0 ! c~ c= b0 f0
+ |- ((!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))) = T)
T c= ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le f0 f1 cT
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- ((~ ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = (real_of_num (NUMERAL _0)))) /\ ((~ ((real_of_num (NUMERAL (BIT1 _0))) = (real_of_num (NUMERAL _0)))) /\ ((((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))) = (real_neg (real_of_num (NUMERAL (BIT1 _0))))) /\ ((((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))))
T c/\ c~ c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c~ c= creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((\d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))))))) _7306786)
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ |- (((((real_le x) ((real_add x) y)) /\ ((real_le (real_of_num (NUMERAL _0))) y)) \/ ((~ ((real_le x) ((real_add x) y))) /\ (~ ((real_le (real_of_num (NUMERAL _0))) y)))) = (((real_le x) ((real_add x) y)) = ((real_le (real_of_num (NUMERAL _0))) y)))
T c= c\/ c/\ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1 c= creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (x = u0))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f1
- ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- (~ (_7306807 = u1))
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c~ c= f2 f0
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ ((\u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) u2) |- (((?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) ==> F) = F)
T c==> * / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 f3 c= c==> c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f3 c~ c= b0 f2 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 cF cF
- |- ((?u0'. ((!x. (~ (x = u0))) /\ (!x. (~ (x = u1))))) = ((!x. (~ (x = u0))) /\ (?u0. (!x. (~ (x = u1))))))
T c= c? / c/\ ! c~ c= b1 f0 ! c~ c= b1 f1 c/\ ! c~ c= b0 f0 c? / ! c~ c= b1 f1
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) |- ((?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) /\ F)
T c==> c? / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 c/\ c? / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 cF
- |- (((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) ==> (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))) = (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)))
T c= c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
+ |- (((!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) ==> ((\u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) u2)) = ((\u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) u2))
T c= c==> ! c==> c~ c/\ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 c~ ! c~ c\/ c= b1 f0 c= b1 f1 cF * / c==> c~ c/\ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 c~ ! c~ c\/ c= b1 f0 c= b1 f1 cF f3 * / c==> c~ c/\ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 c~ ! c~ c\/ c= b1 f0 c= b1 f1 cF f3
+ ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) |- (((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) = T)
T c==> creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c= creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 cT
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
+ |- ((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
+ |- (~ (((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))))
T c~ c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
+ ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) ==> ((\P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) P)) = ((\P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) P))
T c= c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2 * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2 f0 * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2 f0
- ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) |- ((((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r))) = (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))
T c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- ((\a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) a)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 f0
+ |- (((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) u3)) = ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) u3))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
+ |- (((!u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) ==> ((\u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) u)) = ((\u. (!v. ((radV (u INSERT (v INSERT EMPTY))) = ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u , v)))))) u))
T c= c==> ! ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 * / ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 f0 * / ! c= cradV * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, b0 b1 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le f0 f1
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) ==> (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)))
T c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY)))
T c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY
+ |- (((?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))) = (?u3. ((?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))
T c= c\/ c? / c? / c? / c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b0 f1 ! c~ c= b0 f0 c? / c\/ c? / c? / c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0
+ |- ((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d))) = T)
T c= c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 cT
- |- ((~ (_7306789 = _7306790)) \/ ((coplanar _7306790) \/ (~ (coplanar _7306789))))
T c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u0 = u0))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) |- ((?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) /\ F)
T c==> c? / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 c/\ c? / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 cF
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((!x. (((\u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) x) ==> F)) ==> ((?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) ==> F)) = ((?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) ==> F))
T c= c==> ! c==> * / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 b0 cF c==> c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 cF c==> c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?x'. (((x' = u0) \/ (x' = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))) = ((?x. ((x = u0) \/ (x = u1))) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))
T c= c? / c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= f2 f0 c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4 c/\ c? / c\/ c= b0 f0 c= b0 f1 c/\ c~ c= f2 f0 c/\ c~ c= f2 f1 c/\ c~ c= f2 f3 c~ c= f2 f4
+ |- ((\b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) b)
T * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 c= creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
- |- ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = T)
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f4 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))) = (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))
T c= c\/ c? / c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b0 f1 ! c~ c= b0 f0 c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0
+ |- (((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))
T c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
- |- ((?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))
T c==> c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ ((\x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) x) |- (((\x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) x) /\ F)
T c==> * / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 f4 c/\ * / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 f4 cF
+ |- (((!u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))) ==> ((\u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))) u3)) = ((\u3. (!u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))) u3))
T c= c==> ! ! c==> c~ c/\ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 f0 c\/ c= b2 f1 c\/ c= b2 b1 c= b2 b0 c~ ! c~ c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ c/\ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 f0 c\/ c= b2 f1 c\/ c= b2 b1 c= b2 b0 c~ ! c~ c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ c/\ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 f0 c\/ c= b2 f1 c\/ c= b2 b1 c= b2 b0 c~ ! c~ c\/ c= b2 f0 c= b2 f1 cF f2
+ ((\u1. (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))))) u1) |- (((?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) ==> F) = F)
T c==> * / c? / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b5 b0 ! c~ c= b5 b1 f0 c= c==> c? / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 cF cF
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F), ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
+ |- (((!x. (((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) x) ==> F)) ==> ((?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) ==> F)) = ((?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c\/ c/\ c\/ c= b3 f0 c= b3 f1 c/\ c~ c= b3 f0 c/\ c~ c= b3 f1 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 b0 cF c==> c? / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 cF c==> c? / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 cF
+ (~ (~ (((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))))) |- (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (_7306789 = _7306790) |- ((((coplanar _7306789) = (coplanar _7306790)) ==> ((coplanar _7306790) \/ (~ (coplanar _7306789)))) = ((coplanar _7306790) \/ (~ (coplanar _7306789))))
T c==> c= f0 f1 c= c==> c= ccoplanar f0 ccoplanar f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c~ ccoplanar f0
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))), ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) |- (((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) /\ ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 f5 c/\ * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 f5 creal_le f2 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (~ F), (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))))) |- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (T = ((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
+ |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ (~ (~ (((~ ((real_le x) ((real_add x) y))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) y))) /\ (((real_le x) ((real_add x) y)) \/ ((real_le (real_of_num (NUMERAL _0))) y))))) |- (((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0))))))
T c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c\/ c\/ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))), ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) |- (T = ((((real_le (real_of_num (NUMERAL _0))) d) /\ ((real_le (real_of_num (NUMERAL _0))) r)) /\ ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 c= cT c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f5 creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((real_le (real_of_num (NUMERAL _0))) d)
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le creal_of_num cNUMERAL c_0 f2
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (((!c. (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))))) ==> ((\c. (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))))) _7306785)) = ((\c. (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))))) _7306785))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ ((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) |- (((?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) ==> F) = F)
T c==> * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 c= c==> c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 cF cF
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((~ ((real_le x) ((real_add x) y))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) y))) /\ (((real_le x) ((real_add x) y)) \/ ((real_le (real_of_num (NUMERAL _0))) y))) = (~ ((((real_le x) ((real_add x) y)) /\ ((real_le (real_of_num (NUMERAL _0))) y)) \/ ((~ ((real_le x) ((real_add x) y))) /\ (~ ((real_le (real_of_num (NUMERAL _0))) y))))))
T c= c/\ c\/ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c~ c\/ c/\ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (((!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))))))) ==> ((\d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))))))) _7306786)) = ((\d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (d INSERT EMPTY))))))))) _7306786))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ ((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) u0) |- (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))
T c==> * / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 f1 c? / c? / c? / c\/ c/\ c\/ c= b2 f1 c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f0 ! c~ c= b3 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY)))) /\ (((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV (u0 INSERT (u1 INSERT EMPTY)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV (u0 INSERT (u1 INSERT EMPTY)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT EMPTY))))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = ((((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ ((u0 INSERT (u1 INSERT EMPTY)) = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV (u0 INSERT (u1 INSERT EMPTY)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT EMPTY))))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!d. ((P d) \/ Q)) = ((!d. (P d)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ |- (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r))
T c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
+ |- ((((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) u0) ==> F) = T)
T c= c==> * / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 f1 cF cT
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ ((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) u0) |- (((?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) ==> F) = F)
T c==> * / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 f1 c= c==> c? / c? / c? / c\/ c/\ c\/ c= b2 f1 c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f0 ! c~ c= b3 f1 cF cF
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- (((!x. (~ (x = u1))) ==> ((\x. (~ (x = u1))) _7306807)) = ((\x. (~ (x = u1))) _7306807))
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c= c==> ! c~ c= b0 f0 * / c~ c= b0 f0 f2 * / c~ c= b0 f0 f2
+ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- (~ (_7306808 = u0))
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c~ c= f2 f1
+ |- ((((\u1. (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))))) u1) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b5 b0 ! c~ c= b5 b1 f0 cF cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((~ (~ (((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))))) ==> F) ==> (~ (((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))))) = (~ (((~ ((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) \/ (~ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) /\ (((real_le x) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y)) \/ ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)))))
T c= c==> c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 cF c~ c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c~ c/\ c\/ c~ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 c~ creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 c\/ creal_le f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1
+ |- ((!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b))))) = T)
T c= ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * b1 creal_le f0 b0 cT
- ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((real_mul ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_mul creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) /\ F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- (((u1 = u1) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ ((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) |- (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))
T c==> * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0
+ |- (((?u0. (!x. (~ (x = u0)))) /\ (?u1. (!x. (~ (x = u1))))) = (?u0. ((!x. (~ (x = u0))) /\ (?u1. (!x. (~ (x = u1)))))))
T c= c/\ c? / ! c~ c= b1 b0 c? / ! c~ c= b1 b0 c? / c/\ ! c~ c= b1 b0 c? / ! c~ c= b2 b1
+ |- (((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) u2)) = ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) u2))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (((!x. (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) x) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) ==> ((?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c= c==> ! c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b1 b0 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- ((((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) ==> ((\b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) b)) = ((\b. ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) ==> (((real_le a) b) = ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0)))))))) b))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 c= creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 c= creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f1 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 c= creal_le f0 b0 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f1
+ |- ((~ ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1))))))))) ==> F)
T c==> c~ c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (!r. (((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) ==> ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 ! c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 b0 creal_le f2 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
- |- ((?x'. (((x = u0) \/ (x = u1)) /\ ((~ (x' = u0)) /\ ((~ (x' = u1)) /\ ((~ (x' = u2)) /\ (~ (x' = u3))))))) = (((x = u0) \/ (x = u1)) /\ (?x. ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))
T c= c? / c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4 c/\ c\/ c= f0 f1 c= f0 f2 c? / c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c/\ c~ c= b0 f3 c~ c= b0 f4
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. v)))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / b0 * / ! c= * / * b0 b2 b1 * b0 b1 / b0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((((\u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))) u3) ==> F) = T)
T c= c==> * / c? / c? / c\/ c/\ c\/ c= b2 f0 c= b2 f1 c/\ c~ c= b2 f0 c/\ c~ c= b2 f1 c/\ c~ c= b2 b1 c~ c= b2 b0 c/\ ! c~ c= b3 f1 ! c~ c= b3 f0 f2 cF cT
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7306789 = _7306790) ==> ((coplanar _7306790) \/ (~ (coplanar _7306789))))
T c==> c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- (!d. (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 ! c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b1 b0 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) |- (((real_pow r) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0))))))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c= creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
+ (P c), (b = c) |- ((P c) /\ (P b))
T c==> * f0 f1 c==> c= f2 f1 c/\ * f0 f1 * f0 f2
+ |- (((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))) ==> F)
T c==> c\/ c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ ! c~ c= b0 f2 ! c~ c= b0 f1 cF
+ |- (((!x. (((\x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) x) ==> F)) ==> ((?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) ==> F)) = ((?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) ==> F))
T c= c==> ! c==> * / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 f2 c~ c= b1 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 b0 cF c==> c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 cF c==> c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 cF
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((\c. (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))))) _7306785)
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- (_7306797 = _7306798) |- ((_7306797 = _7306798) /\ ((NUMERAL _7306797) = (NUMERAL _7306798)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_le x) ((real_add x) y)) /\ ((real_le (real_of_num (NUMERAL _0))) y)) \/ ((~ ((real_le x) ((real_add x) y))) /\ (~ ((real_le (real_of_num (NUMERAL _0))) y))))
T c\/ c/\ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1
- (_7306793 = _7306794) |- ((_7306793 = _7306794) /\ ((BIT1 _7306793) = (BIT1 _7306794)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) ==> ((real_le ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f4 creal_le creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (!b. (!c. (!d. (((~ ((CARD (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_7306797 = _7306798)) \/ ((NUMERAL _7306797) = (NUMERAL _7306798)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_7306799 = _7306801) ==> ((~ (_7306800 = _7306802)) \/ ((_7306799 INSERT _7306800) = (_7306801 INSERT _7306802))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((real_le (real_of_num (NUMERAL _0))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0))))) = ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_add ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_le creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0
- (_7306800 = _7306802), (_7306799 = _7306801) |- ((_7306800 = _7306802) /\ ((_7306799 INSERT _7306800) = (_7306801 INSERT _7306802)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ |- (((!x. ((real_le (real_of_num (NUMERAL _0))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) ==> ((\x. ((real_le (real_of_num (NUMERAL _0))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) x)) = ((\x. ((real_le (real_of_num (NUMERAL _0))) ((real_pow x) (NUMERAL (BIT0 (BIT1 _0)))))) x))
T c= c==> ! creal_le creal_of_num cNUMERAL c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * / creal_le creal_of_num cNUMERAL c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0 * / creal_le creal_of_num cNUMERAL c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (!t. (((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((t SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t))))))
T c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET f4 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f4 part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV f4 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter f4 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV f4
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((x = u1) ==> F)
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c= f0 f2 cF
- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ F) ==> F)
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ cF cF
- |- ((((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r))) = T)
T c= c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cT
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) y)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) |- ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) /\ F)
T c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 c/\ c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))), ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) |- ((real_le d) r)
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 creal_le f5 f4
- |- ((_7306797 = _7306798) ==> ((NUMERAL _7306797) = (NUMERAL _7306798)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((!u1. ((!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))))) /\ (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1)))))))) = ((!u1. (!u0. (!u3. (!u2. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) /\ (!u1. (!u0. (~ (!x. (~ ((x = u0) \/ (x = u1)))))))))
T c= ! c/\ ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! c~ ! c~ c\/ c= b2 b1 c= b2 b0 c/\ ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b1 c\/ c= b4 b0 c\/ c= b4 b3 c= b4 b2 ! ! c~ ! c~ c\/ c= b2 b1 c= b2 b0
+ |- (~ (~ ((((real_le x) ((real_add x) y)) /\ ((real_le (real_of_num (NUMERAL _0))) y)) \/ ((~ ((real_le x) ((real_add x) y))) /\ (~ ((real_le (real_of_num (NUMERAL _0))) y))))))
T c~ c~ c\/ c/\ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1
+ |- (~ (((~ ((real_le x) ((real_add x) y))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) y))) /\ (((real_le x) ((real_add x) y)) \/ ((real_le (real_of_num (NUMERAL _0))) y))))
T c~ c/\ c\/ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1
+ |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) |- ((!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) /\ (!P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 c/\ ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2
- |- ((~ (_7306799 = _7306801)) \/ ((~ (_7306800 = _7306802)) \/ ((_7306799 INSERT _7306800) = (_7306801 INSERT _7306802))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((\y. (((\x. ((\v. v) x)) y) = ((\v. v) y))) ((real_le d) r))
T * / c= * / * / b2 b1 b0 * / b1 b0 creal_le f0 f1
- |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) = ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r))
T c= c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
+ (~ (P b)), (P c), (b = c) |- F
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 cF
+ |- (((?u0. (?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))))) \/ (?u1'. ((!x. (~ (x = u1))) /\ (!x. (~ (x = u1')))))) = (?u0. ((?u3. (?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))
T c= c\/ c? / c? / c? / c? / c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c? / c/\ ! c~ c= b1 f0 ! c~ c= b1 b0 c? / c\/ c? / c? / c? / c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b1 f0 ! c~ c= b1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (b = c) |- ((P c) ==> (P b))
T c==> c= f0 f1 c==> * f2 f1 * f2 f0
+ |- ((\b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))) b)
T * / c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * f1 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 * f1 creal_le f0 b0 f2
+ ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) |- ((((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) ==> ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c= c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 creal_le f5 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le f5 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- |- (((!x. (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) x) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))) ==> ((?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))) = ((?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d))))
T c= c==> ! c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b1 b0 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b1 c==> c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c==> c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
+ |- ((~ (~ (((~ ((real_le x) ((real_add x) y))) \/ (~ ((real_le (real_of_num (NUMERAL _0))) y))) /\ (((real_le x) ((real_add x) y)) \/ ((real_le (real_of_num (NUMERAL _0))) y))))) ==> F)
T c==> c~ c~ c/\ c\/ c~ creal_le f0 creal_add f0 f1 c~ creal_le creal_of_num cNUMERAL c_0 f1 c\/ creal_le f0 creal_add f0 f1 creal_le creal_of_num cNUMERAL c_0 f1 cF
+ ((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) u0) |- (((\u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))))) u0) /\ F)
T c==> * / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 f1 c/\ * / c? / c? / c? / c\/ c/\ c\/ c= b3 b0 c= b3 f0 c/\ c~ c= b3 b0 c/\ c~ c= b3 f0 c/\ c~ c= b3 b2 c~ c= b3 b1 c/\ ! c~ c= b4 f0 ! c~ c= b4 b0 f1 cF
+ |- ((\t. (((~ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((t SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (t = EMPTY)))) ==> ((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV t)) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter t) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV t)))))) (u0 INSERT (u1 INSERT EMPTY)))
T * / c==> c/\ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= b0 part cEMPTY c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter b0 ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ ((\u1. (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))))) u1) |- (((\u1. (?u0. (?u3. (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))))) u1) /\ F)
T c==> * / c? / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b5 b0 ! c~ c= b5 b1 f0 c/\ * / c? / c? / c? / c? / c\/ c/\ c\/ c= b4 b1 c= b4 b0 c/\ c~ c= b4 b1 c/\ c~ c= b4 b0 c/\ c~ c= b4 b3 c~ c= b4 b2 c/\ ! c~ c= b5 b0 ! c~ c= b5 b1 f0 cF
+ (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
+ |- (((?u2. (?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))) = (?u2. ((?x. (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))))
T c= c\/ c? / c? / c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b0 f1 ! c~ c= b0 f0 c? / c\/ c? / c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0
+ |- (!y. (((\x. ((\v. v) x)) y) = ((\v. v) y)))
T c= * / * / b1 b0 f0 * / b0 f0
- |- ((!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cT
+ |- ((((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = (((((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow (radV (u0 INSERT (u1 INSERT EMPTY)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))) /\ (((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c= c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c/\ creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- ((\u2. ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) u2)
T * / c==> c~ c/\ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 f0 c\/ c= b1 f1 c\/ c= b1 b0 c= b1 f2 c~ ! c~ c\/ c= b1 f0 c= b1 f1 cF f3
+ (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) ==> ((real_le d) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 creal_le f2 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_7306791 = _7306792) |- ((_7306791 = _7306792) /\ ((CARD _7306791) = (CARD _7306792)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cCARD f0 cCARD f1
+ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- (!c. (!d. (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))))) /\ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (c INSERT (d INSERT EMPTY))))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! c/\ c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))
T creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c==> c~ cF cF
+ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c==> c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((real_mul (real_of_num m)) (real_neg (real_of_num n))) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_of_num f0 creal_neg creal_of_num f1 creal_neg creal_of_num c* f0 f1
+ |- (((!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) ==> (!P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b))))))) = (!P. (!a. (!b. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))))
T c= c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2 ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 creal_le creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b2 cNUMERAL cBIT0 cBIT1 c_0 * b0 creal_le b1 b2
+ (((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))) \/ ((((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) \/ (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))) |- F
T c==> c\/ c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c\/ c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 cF
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), (((real_pow (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) (NUMERAL (BIT0 (BIT1 _0)))) = ((real_add ((real_pow ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow (distance ((circumcenter (u0 INSERT (u1 INSERT EMPTY))) , (circumcenter (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) (NUMERAL (BIT0 (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))) |- ((real_le d) r)
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> c= creal_pow cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 creal_add creal_pow creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 cNUMERAL cBIT0 cBIT1 c_0 creal_pow cdistance c, ccircumcenter * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ccircumcenter * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 creal_le f5 f4
+ ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r), (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d), ((real_le (real_of_num (NUMERAL _0))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((real_le (real_of_num (NUMERAL _0))) ((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1)))), ((real_le ((real_pow d) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow r) (NUMERAL (BIT0 (BIT1 _0))))) |- ((\x. ((\v. v) x)) ((real_le d) r))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f5 c==> creal_le creal_of_num cNUMERAL c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 c==> creal_le creal_pow f5 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f4 cNUMERAL cBIT0 cBIT1 c_0 * / * / b1 b0 creal_le f5 f4
- |- ((_7306793 = _7306794) ==> ((BIT1 _7306793) = (BIT1 _7306794)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) ==> (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))))
T c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))))) u3)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!d. (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d))))
T c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = u1), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u1 = u0))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f2
- (_7306789 = _7306790) |- ((_7306789 = _7306790) /\ ((coplanar _7306790) \/ (~ (coplanar _7306789))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
- (~ F), (x = u1), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c/\ c~ cF cF
- |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- (_7306799 = _7306801) |- ((_7306800 = _7306802) ==> ((_7306799 INSERT _7306800) = (_7306801 INSERT _7306802)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (~ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c==> c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((real_ge y) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))))
T c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- |- ((!d. (P \/ (Q d))) = (P \/ (!d. (Q d))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) = ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c= c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))), (~ F), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ F) /\ F)
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ cF cF
- (?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) |- ((?u2. (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0))))))) /\ F)
T c==> c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 c/\ c? / c? / c\/ c/\ c\/ c= b1 f0 c= b1 f1 c/\ c~ c= b1 f0 c/\ c~ c= b1 f1 c/\ c~ c= b1 b0 c~ c= b1 f2 c/\ ! c~ c= b2 f1 ! c~ c= b2 f0 cF
- |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cT
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!x. (((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) x) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))) ==> ((?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))) = ((?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) ==> (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r))))
T c= c==> ! c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 b0 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c==> c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c==> c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- (~ F), ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c/\ c~ cF cF
- (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) |- ((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) /\ (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)))
T c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) |- (((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) /\ (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c/\ c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- ((!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))))))
T c= ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u0 = u2))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f3
- |- ((_7306787 = _7306788) ==> ((affine_dependent _7306788) \/ (~ (affine_dependent _7306787))))
T c==> c= f0 f1 c\/ caffine_dependent f1 c~ caffine_dependent f0
- |- (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))
T c= c* cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- (((real_ge y) (real_of_num (NUMERAL _0))) = (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) = ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) |- (((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) ==> (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d))) = (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))
T c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c= c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) y)) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u0 = u3))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f4
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) u0)
T * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3
- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) |- ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) \/ (~ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))), (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (x = u3))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f4
- |- ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))) u1)
T * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cF f2
- |- (((!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) ==> ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) u0)) = ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))) u0))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3 * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cF f3
- ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) |- (((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r) /\ (?r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)))
T c==> * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c/\ * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4 c? / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F)))))))) u3))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY ccoplanar * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY cF f0
- ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r) |- ((\r. ((radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = r)) r)
T c==> c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 * / c= cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 f4
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_7306795 = _7306796) |- ((_7306795 = _7306796) /\ ((BIT0 _7306795) = (BIT0 _7306796)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (_7306799 = _7306801) |- ((_7306799 = _7306801) /\ ((~ (_7306800 = _7306802)) \/ ((_7306799 INSERT _7306800) = (_7306801 INSERT _7306802))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (((real_gt ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) y)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (x = u1), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u1 = u2))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cT
- |- ((~ (_7306795 = _7306796)) \/ ((BIT0 _7306795) = (BIT0 _7306796)))
T c\/ c~ c= f0 f1 c= cBIT0 f0 cBIT0 f1
- (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))), ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) |- ((!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) /\ (P ((real_le a) b)))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 * f2 creal_le f0 f1
- |- ((((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) = ((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d))
T c= c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2
- (x = u1), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u1 = u3))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f4
- (?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) |- ((?x. ((((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) \/ ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))))) /\ F)
T c==> c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 c/\ c? / c\/ c/\ c\/ c= b0 f0 c= b0 f1 c/\ c~ c= b0 f0 c/\ c~ c= b0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c/\ ! c~ c= b1 f1 ! c~ c= b1 f0 cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- (~ (u1 = u1)) |- ((~ (u1 = u1)) /\ (u1 = u1))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- (((!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))))) ==> ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))))) u2)) = ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> ((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> F))))))) u2))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f1 * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> caffine_dependent * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> c= cCARD * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cF f1
- ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- ((~ F) ==> F)
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 c==> c~ cF cF
- ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) |- ((!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))) ==> (P ((real_le a) b)))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 * f2 creal_le f0 f1
- (((real_gt ((real_add ((real_mul ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y)) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) x)) y))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0 f1 creal_of_num cNUMERAL c_0
- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!a. (!b. (!P. (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) ==> (P ((real_le a) b)))))), ((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) |- (((((real_le (real_of_num (NUMERAL _0))) a) /\ ((real_le (real_of_num (NUMERAL _0))) b)) /\ (P ((real_le ((real_pow a) (NUMERAL (BIT0 (BIT1 _0))))) ((real_pow b) (NUMERAL (BIT0 (BIT1 _0))))))) /\ (P ((real_le a) b)))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 creal_le creal_pow b0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow b1 cNUMERAL cBIT0 cBIT1 c_0 * b2 creal_le b0 b1 c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 creal_le creal_pow f0 cNUMERAL cBIT0 cBIT1 c_0 creal_pow f1 cNUMERAL cBIT0 cBIT1 c_0 * f2 creal_le f0 f1
- ((!x. (~ (x = u1))) /\ (!x. (~ (x = u0)))) |- ((\x. (~ (x = u1))) _7306807)
T c==> c/\ ! c~ c= b0 f0 ! c~ c= b0 f1 * / c~ c= b0 f0 f2
- (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d) |- ((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d)
T c==> c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 f2 * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2
- |- (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = u0), (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (u0 = u1))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f1 f2
- (((x = u0) \/ (x = u1)) /\ ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))) |- (~ (x = u2))
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4 c~ c= f0 f3
- ((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) |- (((\d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)) d) /\ (?d. (((real_mul (real_inv (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (distance (u0 , u1))) = d)))
T c==> * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c/\ * / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0 f2 c? / c= creal_mul creal_inv creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cdistance c, f0 f1 b0
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- ((affine_dependent (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (~ (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((affine_dependent (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (coplanar (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= caffine_dependent * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- (T = (((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ ((~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY)))))) \/ (coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))))) = ((coplanar (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) \/ ((~ ((CARD (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) \/ (~ (affine_dependent (_7306783 INSERT (_7306784 INSERT (_7306785 INSERT (_7306786 INSERT EMPTY))))))))))
T c= cT c= c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c\/ c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ c~ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c~ caffine_dependent * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) |- (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) /\ ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) |- ((((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F), (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) ==> ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F)) |- (((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F) /\ ((~ ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) /\ (~ (!x. (~ ((x = u0) \/ (x = u1))))))) ==> F))
T c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF c==> c~ c/\ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c~ ! c~ c\/ c= b0 f0 c= b0 f1 cF
- |- ((~ (_7306787 = _7306788)) \/ ((affine_dependent _7306788) \/ (~ (affine_dependent _7306787))))
T c\/ c~ c= f0 f1 c\/ caffine_dependent f1 c~ caffine_dependent f0
