N TRANSP_MATRIX_ADD
C |- (!A. (!B. ((transp ((matrix_add A) B)) = ((matrix_add (transp A)) (transp B)))))
T c= ctransp cmatrix_add f0 f1 cmatrix_add ctransp f0 ctransp f1
D TRUTH
A |- T
T cT
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D matrix_add
A |- (!A. (!B. (((matrix_add A) B) = (lambdai. (lambdaj. ((real_add ((A $ i) $ j)) ((B $ i) $ j)))))))
T c= cmatrix_add f0 f1 clambda / clambda / creal_add c$ c$ f0 b0 b1 c$ c$ f1 b0 b1
D transp
A |- (!A. ((transp A) = (lambdai. (lambdaj. ((A $ j) $ i)))))
T c= ctransp f0 clambda / clambda / c$ c$ f0 b1 b0
+ |- (((!A. (!B. (((matrix_add A) B) = (lambdai. (lambdaj. ((real_add ((A $ i) $ j)) ((B $ i) $ j))))))) ==> ((\A. (!B. (((matrix_add A) B) = (lambdai. (lambdaj. ((real_add ((A $ i) $ j)) ((B $ i) $ j))))))) A)) = ((\A. (!B. (((matrix_add A) B) = (lambdai. (lambdaj. ((real_add ((A $ i) $ j)) ((B $ i) $ j))))))) A))
T c= c==> ! ! c= cmatrix_add b0 b1 clambda / clambda / creal_add c$ c$ b0 b2 b3 c$ c$ b1 b2 b3 * / ! c= cmatrix_add b0 b1 clambda / clambda / creal_add c$ c$ b0 b2 b3 c$ c$ b1 b2 b3 f0 * / ! c= cmatrix_add b0 b1 clambda / clambda / creal_add c$ c$ b0 b2 b3 c$ c$ b1 b2 b3 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> (((((transp ((matrix_add A) B)) $ i) $ i') = ((((matrix_add (transp A)) (transp B)) $ i) $ i')) = T)) ==> (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp ((matrix_add A) B)) $ i) $ i') = ((((matrix_add (transp A)) (transp B)) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> T))) = (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp ((matrix_add A) B)) $ i) $ i') = ((((matrix_add (transp A)) (transp B)) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> T)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c= c$ c$ ctransp cmatrix_add f2 f3 f0 f1 c$ c$ cmatrix_add ctransp f2 ctransp f3 f0 f1 cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ ctransp cmatrix_add f2 f3 f0 f1 c$ c$ cmatrix_add ctransp f2 ctransp f3 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV cT c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ ctransp cmatrix_add f2 f3 f0 f1 c$ c$ cmatrix_add ctransp f2 ctransp f3 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((transp ((matrix_add A) B)) $ i) = (((matrix_add (transp A)) (transp B)) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> T))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ ctransp cmatrix_add f1 f2 f0 c$ cmatrix_add ctransp f1 ctransp f2 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV cT
+ |- ((\A. (!B. (((matrix_add A) B) = (lambdai. (lambdaj. ((real_add ((A $ i) $ j)) ((B $ i) $ j))))))) A)
T * / ! c= cmatrix_add b0 b1 clambda / clambda / creal_add c$ c$ b0 b2 b3 c$ c$ b1 b2 b3 f0
+ (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((lambdaj. ((real_add ((lambdaj. ((A $ j) $ i)) $ j)) ((lambdaj. ((B $ j) $ i)) $ j))) $ i') = ((\j. ((real_add ((lambdaj. ((A $ j) $ i)) $ j)) ((lambdaj. ((B $ j) $ i)) $ j))) i'))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / c$ c$ f1 b1 f2 b0 c$ clambda / c$ c$ f3 b1 f2 b0 f0 * / creal_add c$ clambda / c$ c$ f1 b1 f2 b0 c$ clambda / c$ c$ f3 b1 f2 b0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> ((((transp ((matrix_add A) B)) $ i) $ i') = ((((matrix_add (transp A)) (transp B)) $ i) $ i'))) = ((((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) ==> T))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV c= c$ c$ ctransp cmatrix_add f2 f3 f0 f1 c$ c$ cmatrix_add ctransp f2 ctransp f3 f0 f1 c==> c/\ c<= cNUMERAL cBIT1 c_0 f1 c<= f1 cdimindex part cUNIV cT
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (T = (!A. (!B. ((transp ((matrix_add A) B)) = ((matrix_add (transp A)) (transp B))))))
T c= cT ! ! c= ctransp cmatrix_add b0 b1 cmatrix_add ctransp b0 ctransp b1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= i') = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- ((i' <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((\j. (f j)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))) |- (T = (((NUMERAL (BIT1 _0)) <= i') /\ (i' <= (dimindex UNIV))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= cT c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV
- |- ((T /\ t) = t)
T c= c/\ cT f0 f0
