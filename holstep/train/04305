N HAS_REAL_INTEGRAL_CONST
C |- (!a. (!b. (!c. (((real_le a) b) ==> (((has_real_integral (\x. c)) ((real_mul c) ((real_sub b) a))) (closed_real_interval ((CONS (a , b)) NIL)))))))
T c==> creal_le f0 f1 chas_real_integral / f2 creal_mul f2 creal_sub f1 f0 * part cclosed_real_interval cCONS c, f0 f1 cNIL
D TRUTH
A |- T
T cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D REAL_MUL_SYM
A |- (!x. (!y. (((real_mul x) y) = ((real_mul y) x))))
T c= creal_mul f0 f1 creal_mul f1 f0
D LIFT_DROP
A |- ((!x. ((lift (drop x)) = x)) /\ (!x. ((drop (lift x)) = x)))
T c/\ ! c= clift cdrop b0 b0 ! c= cdrop clift b0 b0
D LIFT_CMUL
A |- (!x. (!c. ((lift ((real_mul c) x)) = ((% c) (lift x)))))
T c= clift creal_mul f0 f1 c% f0 clift f1
D CONTENT_1
A |- (!a. (!b. (((real_le (drop a)) (drop b)) ==> ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))))))
T c==> creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0
D HAS_INTEGRAL_CONST
A |- (!a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL))))))
T chas_integral / f0 c% ccontent * part cclosed_interval cCONS c, f1 f2 cNIL f0 * part cclosed_interval cCONS c, f1 f2 cNIL
D IMAGE_LIFT_REAL_INTERVAL
A |- ((((IMAGE lift) (closed_real_interval ((CONS (a , b)) NIL))) = (closed_interval ((CONS ((lift a) , (lift b))) NIL))) /\ (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b)))))
T c/\ c= * * part cIMAGE part clift * part cclosed_real_interval cCONS c, f0 f1 cNIL * part cclosed_interval cCONS c, clift f0 clift f1 cNIL c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
D has_real_integral
A |- (!f. (!y. (!s. ((((has_real_integral f) y) s) = (((has_integral (lift o (f o drop))) (lift y)) ((IMAGE lift) s))))))
T c= chas_real_integral f0 f1 f2 chas_integral * * part co part clift * * part co f0 part cdrop clift f1 * * part cIMAGE part clift f2
+ ((real_le a) b) |- (T = ((real_le (drop (lift a))) (drop (lift b))))
T c==> creal_le f0 f1 c= cT creal_le cdrop clift f0 cdrop clift f1
+ (((has_integral (\x. (lift c))) ((% ((real_sub b) a)) (lift c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) |- ((((has_integral (\x. (lift c))) ((% ((real_sub b) a)) (lift c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) /\ ((((has_integral (lift o ((\x. c) o drop))) (lift ((real_mul ((real_sub b) a)) c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) = T))
T c==> chas_integral / clift f0 c% creal_sub f1 f2 clift f0 * part cclosed_interval cCONS c, clift f2 clift f1 cNIL c/\ chas_integral / clift f0 c% creal_sub f1 f2 clift f0 * part cclosed_interval cCONS c, clift f2 clift f1 cNIL c= chas_integral * * part co part clift * * part co / f0 part cdrop clift creal_mul creal_sub f1 f2 f0 * part cclosed_interval cCONS c, clift f2 clift f1 cNIL cT
- |- (((!x. ((lift (drop x)) = x)) ==> ((\x. ((lift (drop x)) = x)) x)) = ((\x. ((lift (drop x)) = x)) x))
T c= c==> ! c= clift cdrop b0 b0 * / c= clift cdrop b0 b0 f0 * / c= clift cdrop b0 b0 f0
+ |- (((((has_integral (\x. (lift c))) ((% (content (closed_interval ((CONS ((lift a) , (lift b))) NIL)))) (lift c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) = p') ==> ((p' ==> ((((has_integral (lift o ((\x. c) o drop))) (lift ((real_mul ((real_sub b) a)) c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) = q')) ==> (((((has_integral (\x. (lift c))) ((% (content (closed_interval ((CONS ((lift a) , (lift b))) NIL)))) (lift c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL))) ==> (((has_integral (lift o ((\x. c) o drop))) (lift ((real_mul ((real_sub b) a)) c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))) = (p' ==> q'))))
T c==> c= chas_integral / clift f0 c% ccontent * part cclosed_interval cCONS c, clift f1 clift f2 cNIL clift f0 * part cclosed_interval cCONS c, clift f1 clift f2 cNIL f3 c==> c==> f3 c= chas_integral * * part co part clift * * part co / f0 part cdrop clift creal_mul creal_sub f2 f1 f0 * part cclosed_interval cCONS c, clift f1 clift f2 cNIL f4 c= c==> chas_integral / clift f0 c% ccontent * part cclosed_interval cCONS c, clift f1 clift f2 cNIL clift f0 * part cclosed_interval cCONS c, clift f1 clift f2 cNIL chas_integral * * part co part clift * * part co / f0 part cdrop clift creal_mul creal_sub f2 f1 f0 * part cclosed_interval cCONS c, clift f1 clift f2 cNIL c==> f3 f4
- |- (((IMAGE lift) (open_real_interval (a , b))) = (open_interval ((lift a) , (lift b))))
T c= * * part cIMAGE part clift * part copen_real_interval c, f0 f1 * part copen_interval c, clift f0 clift f1
+ |- (((!x. ((drop (lift x)) = x)) ==> ((\x. ((drop (lift x)) = x)) x)) = ((\x. ((drop (lift x)) = x)) x))
T c= c==> ! c= cdrop clift b0 b0 * / c= cdrop clift b0 b0 f0 * / c= cdrop clift b0 b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))))) ==> ((\a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))))) (lift a))) = ((\a. (!b. (!c. (((has_integral (\x. c)) ((% (content (closed_interval ((CONS (a , b)) NIL)))) c)) (closed_interval ((CONS (a , b)) NIL)))))) (lift a)))
T c= c==> ! ! ! chas_integral / b2 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL b2 * part cclosed_interval cCONS c, b0 b1 cNIL * / ! ! chas_integral / b2 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL b2 * part cclosed_interval cCONS c, b0 b1 cNIL clift f0 * / ! ! chas_integral / b2 c% ccontent * part cclosed_interval cCONS c, b0 b1 cNIL b2 * part cclosed_interval cCONS c, b0 b1 cNIL clift f0
+ ((real_le a) b) |- (((has_integral (lift o ((\x. c) o drop))) (lift ((real_mul ((real_sub b) a)) c))) (closed_interval ((CONS ((lift a) , (lift b))) NIL)))
T c==> creal_le f0 f1 chas_integral * * part co part clift * * part co / f2 part cdrop clift creal_mul creal_sub f1 f0 f2 * part cclosed_interval cCONS c, clift f0 clift f1 cNIL
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((\x. ((lift (drop x)) = x)) x)
T * / c= clift cdrop b0 b0 f0
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((real_le (drop a)) (drop b)) |- (((real_le (drop a)) (drop b)) /\ ((content (closed_interval ((CONS (a , b)) NIL))) = ((real_sub (drop b)) (drop a))))
T c==> creal_le cdrop f0 cdrop f1 c/\ creal_le cdrop f0 cdrop f1 c= ccontent * part cclosed_interval cCONS c, f0 f1 cNIL creal_sub cdrop f1 cdrop f0
- |- ((lift (drop x)) = x)
T c= clift cdrop f0 f0
