N Hypermap.lemma_disjoint_new_loops
C |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (SUC (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 cSUC cindex f2 chyp'z f0 f1 f2 f3 chyp'y f0 f1 f2 f3 cpre_card_dart_of_loop f2 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c/\ c~ cIN cloop1_transform f0 f1 f2 f3 f1 c/\ c~ cIN cloop2_transform f0 f1 f2 f3 f1 ! c==> cin_dart_of_loop b0 f2 c\/ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_IMP
A |- (!t1. (!t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))))
T c= c~ c==> f0 f1 c/\ f0 c~ f1
D CONTRAPOS_THM
A |- (!t1. (!t2. (((~ t1) ==> (~ t2)) = (t2 ==> t1))))
T c= c==> c~ f0 c~ f1 c==> f1 f0
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D Hypermap.EQ_SUC
A |- (!m. (!n. (((SUC m) = (SUC n)) = (m = n))))
T c= c= cSUC f0 cSUC f1 c= f0 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D Ssrnat.add0n
A |- (!n. (((NUMERAL _0) + n) = n))
T c= c+ cNUMERAL c_0 f0 f0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D ADD_ASSOC
A |- (!m. (!n. (!p. ((m + (n + p)) = ((m + n) + p)))))
T c= c+ f0 c+ f1 f2 c+ c+ f0 f1 f2
D ADD_AC
A |- (((m + n) = (n + m)) /\ ((((m + n) + p) = (m + (n + p))) /\ ((m + (n + p)) = (n + (m + p)))))
T c/\ c= c+ f0 f1 c+ f1 f0 c/\ c= c+ c+ f0 f1 f2 c+ f0 c+ f1 f2 c= c+ f0 c+ f1 f2 c+ f1 c+ f0 f2
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D ADD1
A |- (!m. ((SUC m) = (m + (NUMERAL (BIT1 _0)))))
T c= cSUC f0 c+ f0 cNUMERAL cBIT1 c_0
D Ssrnat.mulSnr
A |- (!m. (!n. (((SUC m) * n) = ((m * n) + n))))
T c= c* cSUC f0 f1 c+ c* f0 f1 f1
D Ssrnat.mul0n
A |- (!n. (((NUMERAL _0) * n) = (NUMERAL _0)))
T c= c* cNUMERAL c_0 f0 cNUMERAL c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D Ssrnat.mul1n
A |- (!n. (((NUMERAL (BIT1 _0)) * n) = n))
T c= c* cNUMERAL cBIT1 c_0 f0 f0
D LEFT_ADD_DISTRIB
A |- (!m. (!n. (!p. ((m * (n + p)) = ((m * n) + (m * p))))))
T c= c* f0 c+ f1 f2 c+ c* f0 f1 c* f0 f2
D MULT_AC
A |- (((m * n) = (n * m)) /\ ((((m * n) * p) = (m * (n * p))) /\ ((m * (n * p)) = (n * (m * p)))))
T c/\ c= c* f0 f1 c* f1 f0 c/\ c= c* c* f0 f1 f2 c* f0 c* f1 f2 c= c* f0 c* f1 f2 c* f1 c* f0 f2
D Ssrnat.expnS
A |- (!m. (!n. ((m EXP (SUC n)) = (m * (m EXP n)))))
T c= cEXP f0 cSUC f1 c* f0 cEXP f0 f1
D Ssrnat.expn0
A |- (!m. ((m EXP (NUMERAL _0)) = (NUMERAL (BIT1 _0))))
T c= cEXP f0 cNUMERAL c_0 cNUMERAL cBIT1 c_0
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LT_SUC_LE
A |- (!m. (!n. ((m < (SUC n)) = (m <= n))))
T c= c< f0 cSUC f1 c<= f0 f1
D LE_SUC
A |- (!m. (!n. (((SUC m) <= (SUC n)) = (m <= n))))
T c= c<= cSUC f0 cSUC f1 c<= f0 f1
D LT_SUC
A |- (!m. (!n. (((SUC m) < (SUC n)) = (m < n))))
T c= c< cSUC f0 cSUC f1 c< f0 f1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D Seq.gtS0
A |- (!n. ((NUMERAL _0) < (SUC n)))
T c< cNUMERAL c_0 cSUC f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LE_ANTISYM
A |- (!m. (!n. (((m <= n) /\ (n <= m)) = (m = n))))
T c= c/\ c<= f0 f1 c<= f1 f0 c= f0 f1
D LTE_TRANS
A |- (!m. (!n. (!p. (((m < n) /\ (n <= p)) ==> (m < p)))))
T c==> c/\ c< f0 f1 c<= f1 f2 c< f0 f2
D LT_LE
A |- (!m. (!n. ((m < n) = ((m <= n) /\ (~ (m = n))))))
T c= c< f0 f1 c/\ c<= f0 f1 c~ c= f0 f1
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D NOT_LT
A |- (!m. (!n. ((~ (m < n)) = (n <= m))))
T c= c~ c< f0 f1 c<= f1 f0
D LT_IMP_LE
A |- (!m. (!n. ((m < n) ==> (m <= n))))
T c==> c< f0 f1 c<= f0 f1
D LT_NZ
A |- (!n. (((NUMERAL _0) < n) = (~ (n = (NUMERAL _0)))))
T c= c< cNUMERAL c_0 f0 c~ c= f0 cNUMERAL c_0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D LE_ADDR
A |- (!m. (!n. (n <= (m + n))))
T c<= f0 c+ f1 f0
D LE_ADD_LCANCEL
A |- (!m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p)))))
T c= c<= c+ f0 f1 c+ f0 f2 c<= f1 f2
D LE_ADD_RCANCEL
A |- (!m. (!n. (!p. (((m + p) <= (n + p)) = (m <= n)))))
T c= c<= c+ f0 f1 c+ f2 f1 c<= f0 f2
D LT_ADD_RCANCEL
A |- (!m. (!n. (!p. (((m + p) < (n + p)) = (m < n)))))
T c= c< c+ f0 f1 c+ f2 f1 c< f0 f2
D LET_ADD2
A |- (!m. (!n. (!p. (!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))))))
T c==> c/\ c<= f0 f1 c< f2 f3 c< c+ f0 f2 c+ f1 f3
D SUB_SUC
A |- (!m. (!n. (((SUC m) - (SUC n)) = (m - n))))
T c= c- cSUC f0 cSUC f1 c- f0 f1
D ADD_SUB2
A |- (!m. (!n. (((m + n) - m) = n)))
T c= c- c+ f0 f1 f0 f1
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_eq
A |- (!x. (!y. ((x = y) = ((real_of_int x) = (real_of_int y)))))
T c= c= f0 f1 c= creal_of_int f0 creal_of_int f1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D Hypermap.GE_1
A |- (!n. ((NUMERAL (BIT1 _0)) <= (SUC n)))
T c<= cNUMERAL cBIT1 c_0 cSUC f0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Fan.POWER_1
A |- (!f. (((POWER f) (NUMERAL (BIT1 _0))) = f))
T c= * * part cPOWER f0 cNUMERAL cBIT1 c_0 f0
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Hypermap.face_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
D Hypermap.simple_hypermap
A |- (!H. ((simple_hypermap H) = (!x. ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY))))))
T c= csimple_hypermap f0 ! c==> cIN b0 * part cdart f0 c= * * part cINTER * * part cnode f0 b0 * * part cface f0 b0 * * part cINSERT b0 part cEMPTY
D Hypermap.COM_POWER_FUNCTION
A |- (!f. (!x. (!n. ((f (((POWER f) n) x)) = (((POWER f) (SUC n)) x)))))
T c= * f0 cPOWER f0 f1 f2 cPOWER f0 cSUC f1 f2
D Hypermap.POWER_FUNCTION
A |- (!f. (!x. (!n. ((((POWER f) n) (f x)) = (((POWER f) (SUC n)) x)))))
T c= cPOWER f0 f1 * f0 f2 cPOWER f0 cSUC f1 f2
D Hypermap.lemma_add_exponent_function
A |- (!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))))))
T c= cPOWER f0 c+ f1 f2 f3 cPOWER f0 f1 cPOWER f0 f2 f3
D Hypermap.inverse_power_function
A |- (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))
T c==> cpermutes f0 f1 c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2
D Hypermap.lemma_dart_invariant_power_face
A |- (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H))))))
T c==> cIN f0 * part cdart f1 cIN cPOWER * part cface_map f1 f2 f0 * part cdart f1
D Hypermap.LT1_NZ
A |- (!n. (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)))
T c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
D Hypermap.LT0_LE1
A |- (!n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)))
T c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
D Hypermap.lemma_inj_list
A |- (!p. (!n. (((is_inj_list p) n) = (!i. (!j. (((i <= n) /\ (j < i)) ==> (~ ((p j) = (p i)))))))))
T c= cis_inj_list f0 f1 ! ! c==> c/\ c<= b0 f1 c< b1 b0 c~ c= * f0 b1 * f0 b0
D Hypermap.lemma_inj_list2
A |- (!p. (!n. (((is_inj_list p) n) = (!i. (!j. (((i <= n) /\ ((j <= n) /\ ((p i) = (p j)))) ==> (i = j)))))))
T c= cis_inj_list f0 f1 ! ! c==> c/\ c<= b0 f1 c/\ c<= b1 f1 c= * f0 b0 * f0 b1 c= b0 b1
D Hypermap.node_refl
A |- (!H. (!x. (x IN ((node H) x))))
T cIN f0 * * part cnode f1 f0
D Hypermap.node_contour
A |- (!H. (!x. (!i. ((((node_contour H) x) i) = (((POWER (inverse (node_map H))) i) x)))))
T c= cnode_contour f0 f1 f2 cPOWER * part cinverse * part cnode_map f0 f2 f1
D Hypermap.lemma_congruence_on_orbit
A |- (!s. (!p. (!x. (!n. (!m. (((FINITE s) /\ (((permutes p) s) /\ ((n < (CARD ((orbit_map p) x))) /\ ((((POWER p) n) x) = (((POWER p) m) x))))) ==> (?q. (m = ((q * (CARD ((orbit_map p) x))) + n)))))))))
T c==> c/\ cFINITE f0 c/\ cpermutes f1 f0 c/\ c< f2 cCARD * * part corbit_map f1 f3 c= cPOWER f1 f2 f3 cPOWER f1 f4 f3 c? / c= f4 c+ c* b0 cCARD * * part corbit_map f1 f3 f2
D Hypermap.lemma_node_identity
A |- (!H. (!x. (!y. ((y IN ((node H) x)) ==> (((node H) x) = ((node H) y))))))
T c==> cIN f0 * * part cnode f1 f2 c= * * part cnode f1 f2 * * part cnode f1 f0
D Hypermap.lemma_face_identity
A |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))))
T c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
D Hypermap.lemma_inj_contour_via_list
A |- (!H. (!p. (!n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n))))))
T c= cis_inj_contour f0 f1 f2 c/\ cis_contour f0 f1 f2 cis_inj_list f1 f2
D Hypermap.card_dart_of_loop
A |- (!L. ((card_dart_of_loop L) = (CARD (dart_of_loop L))))
T c= ccard_dart_of_loop f0 cCARD * part cdart_of_loop f0
D Hypermap.path_of_loop
A |- (!L. (!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))))
T c= cpath_of_loop f0 f1 f2 cPOWER * part cloop_map f0 f2 f1
D Hypermap.loop_lemma
A |- (!L. ((FINITE (dart_of_loop L)) /\ (((permutes (loop_map L)) (dart_of_loop L)) /\ (?x. (((in_dart_of_loop x) L) /\ (((orbit_map (loop_map L)) x) = (dart_of_loop L)))))))
T c/\ cFINITE * part cdart_of_loop f0 c/\ cpermutes * part cloop_map f0 * part cdart_of_loop f0 c? / c/\ cin_dart_of_loop b0 f0 c= * * part corbit_map * part cloop_map f0 b0 * part cdart_of_loop f0
D Hypermap.lemma_permute_loop
A |- (!L. (((permutes (loop_map L)) (dart_of_loop L)) /\ ((permutes (inv_loop_map L)) (dart_of_loop L))))
T c/\ cpermutes * part cloop_map f0 * part cdart_of_loop f0 cpermutes * part cinv_loop_map f0 * part cdart_of_loop f0
D Hypermap.lemma_transitive_permutation
A |- (!L. (!x. (((in_dart_of_loop x) L) ==> ((dart_of_loop L) = ((orbit_map (loop_map L)) x)))))
T c==> cin_dart_of_loop f0 f1 c= * part cdart_of_loop f1 * * part corbit_map * part cloop_map f1 f0
D Hypermap.lemma_card_dart_of_loop
A |- (!L. ((~ ((dart_of_loop L) = EMPTY)) /\ (((NUMERAL _0) < (card_dart_of_loop L)) /\ ((card_dart_of_loop L) = (SUC (pre_card_dart_of_loop L))))))
T c/\ c~ c= * part cdart_of_loop f0 part cEMPTY c/\ c< cNUMERAL c_0 ccard_dart_of_loop f0 c= ccard_dart_of_loop f0 cSUC cpre_card_dart_of_loop f0
D Hypermap.lemma_order_loop_map
A |- (!L. (((POWER (loop_map L)) (card_dart_of_loop L)) = I))
T c= * * part cPOWER * part cloop_map f0 ccard_dart_of_loop f0 part cI
D Hypermap.lemma_inverse_evaluation
A |- (!L. (!x. ((((inv_loop_map L) ((loop_map L) x)) = x) /\ (((loop_map L) ((inv_loop_map L) x)) = x))))
T c/\ c= cinv_loop_map f0 cloop_map f0 f1 f1 c= cloop_map f0 cinv_loop_map f0 f1 f1
D Hypermap.lemma_loop_map_power_representation
A |- (!L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (?k. ((k <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) k) x))))))))
T c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop f2 f1 c? / c/\ c<= b0 cpre_card_dart_of_loop f1 c= f2 cPOWER * part cloop_map f1 b0 f0
D Hypermap.lemma_loop_index
A |- (!L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (((((index L) x) y) <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) (((index L) x) y)) x)))))))
T c==> c/\ cin_dart_of_loop f0 f1 cin_dart_of_loop f2 f1 c/\ c<= cindex f1 f0 f2 cpre_card_dart_of_loop f1 c= f2 cPOWER * part cloop_map f1 cindex f1 f0 f2 f0
D Hypermap.lemma_power_loop_map_in_loop
A |- (!L. (!x. (!k. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L)))))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cPOWER * part cloop_map f1 f2 f0 f1
D Hypermap.lemma_loop_map_in_loop
A |- (!L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L))))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cloop_map f1 f0 f1
D Hypermap.lemma_inv_loop_map_in_loop
A |- (!L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((inv_loop_map L) x)) L))))
T c==> cin_dart_of_loop f0 f1 cin_dart_of_loop cinv_loop_map f1 f0 f1
D Hypermap.let_order_for_loop
A |- (!H. (!L. (!x. ((((is_loop H) L) /\ ((in_dart_of_loop x) L)) ==> ((((is_inj_contour H) ((path_of_loop L) x)) (pre_card_dart_of_loop L)) /\ (((one_step_contour H) (((path_of_loop L) x) (pre_card_dart_of_loop L))) (((path_of_loop L) x) (NUMERAL _0))))))))
T c==> c/\ cis_loop f0 f1 cin_dart_of_loop f2 f1 c/\ cis_inj_contour f0 * * part cpath_of_loop f1 f2 cpre_card_dart_of_loop f1 cone_step_contour f0 cpath_of_loop f1 f2 cpre_card_dart_of_loop f1 cpath_of_loop f1 f2 cNUMERAL c_0
D Hypermap.lemma_inj_node_contour
A |- (!H. (!x. (!k. ((k < (CARD ((node H) x))) ==> (((is_inj_contour H) ((node_contour H) x)) k)))))
T c==> c< f0 cCARD * * part cnode f1 f2 cis_inj_contour f1 * * part cnode_contour f1 f2 f0
D Hypermap.is_normal
A |- (!H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))))
T c= cis_normal f0 f1 c/\ ! c==> cIN b0 f1 c/\ cis_loop f0 b0 c? / c/\ cIN b1 * part cdart f0 cin_dart_of_loop b1 b0 c/\ ! c==> cIN b0 f1 c? / c? / c/\ cin_dart_of_loop b1 b0 c/\ cin_dart_of_loop b2 b0 c~ c= * * part cnode f0 b1 * * part cnode f0 b2 c/\ ! ! ! c==> c/\ cIN b0 f1 c/\ cIN b1 f1 c/\ cin_dart_of_loop b2 b0 cin_dart_of_loop b2 b1 c= b0 b1 ! ! ! c==> c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 b0 cIN b2 * * part cnode f0 b1 c? / c/\ cIN b3 f1 cin_dart_of_loop b2 b3
D Hypermap.lemma_in_dart
A |- (!H. (!NF. (!L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H)))))))
T c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 cin_dart_of_loop f3 f2 cIN f3 * part cdart f0
D Hypermap.lemma_in_support2
A |- (!NF. (!L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF))))))
T c==> c/\ cin_dart_of_loop f0 f1 cIN f1 f2 cIN f0 * part cdarts_of_family f2
D Hypermap.disjoint_loops
A |- (!H. (!NF. (!L. (!L'. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L'))))) ==> (L = L')))))))
T c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cin_dart_of_loop f4 f2 cin_dart_of_loop f4 f3 c= f2 f3
D Hypermap.lemma_in_node2
A |- (!H. (!x. (!n. ((((POWER (node_map H)) n) x) IN ((node H) x)))))
T cIN cPOWER * part cnode_map f0 f1 f2 * * part cnode f0 f2
D Hypermap.lemma_in_face
A |- (!H. (!x. (!n. ((((POWER (face_map H)) n) x) IN ((face H) x)))))
T cIN cPOWER * part cface_map f0 f1 f2 * * part cface f0 f2
D Hypermap.lemma_power_inverse_in_node2
A |- (!H. (!x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x)))))
T cIN cPOWER * part cinverse * part cnode_map f0 f1 f2 * * part cnode f0 f2
D Hypermap.lemma_complement_path
A |- (!H. (!x. (((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (x IN (dart H)))) ==> ((!i. ((((complement H) x) (((complement_index H) x) i)) = ((node_map H) (((POWER (inverse (face_map H))) i) x)))) /\ ((!i. ((((complement H) x) (SUC (((complement_index H) x) i))) = ((inverse (node_map H)) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ ((!i. (((face_map H) (((complement H) x) (((complement_index H) x) i))) = (((complement H) x) (SUC (((complement_index H) x) i))))) /\ ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x))))) ==> ((((complement H) x) ((((complement_index H) x) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) x)))))) /\ (!n. (((is_contour H) ((complement H) x)) n)))))))))
T c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! c= ccomplement f0 f1 ccomplement_index f0 f1 b0 cnode_map f0 cPOWER * part cinverse * part cface_map f0 b0 f1 c/\ ! c= ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 cinverse * part cnode_map f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c/\ ! c= cface_map f0 ccomplement f0 f1 ccomplement_index f0 f1 b0 ccomplement f0 f1 cSUC ccomplement_index f0 f1 b0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Hypermap.is_split_condition
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x)))))))))))
T c= cis_split_condition f0 f1 f2 f3 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
D Hypermap.lemma_on_hyp_y
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x))))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ cin_dart_of_loop chyp'y f0 f1 f2 f3 f2 c/\ c= cloop_map f2 chyp'y f0 f1 f2 f3 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 f3
D Hypermap.lemma_split_marked_loop
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cis_split_condition f0 f1 f2 f3
D Hypermap.hyp_z
A |- (!H. (!NF. (!L. (!x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))))))
T c= chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 f3 chyp'y f0 f1 f2 f3
D Hypermap.lemma_on_hyp_z
A |- (!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))))))
T c==> cis_split_condition f0 f1 f2 f3 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 f2 f3 * * part cnode f0 chyp'z f0 f1 f2 f3 c< cSUC chyp'p f0 f1 f2 f3 cCARD * * part cface f0 f3
D Hypermap.lemmaHQYMRTX
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((in_dart_of_loop ((((hyp'z H) NF) L) x)) L) /\ (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (SUC ((((hyp'm H) NF) L) x)))) ==> (~ (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) k) x)))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop chyp'z f0 f1 f2 f3 f2 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cSUC chyp'm f0 f1 f2 f3 c~ c= chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 b0 f3
D Hypermap.card1_transform
A |- (!H. (!NF. (!L. (!x. (((((card1_transform H) NF) L) x) = ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + ((((hyp'p H) NF) L) x)))))))
T c= ccard1_transform f0 f1 f2 f3 c+ cindex f2 chyp'z f0 f1 f2 f3 chyp'y f0 f1 f2 f3 chyp'p f0 f1 f2 f3
D Hypermap.card2_transform
A |- (!H. (!NF. (!L. (!x. (((((card2_transform H) NF) L) x) = ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))))))))
T c= ccard2_transform f0 f1 f2 f3 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 ccomplement_index f0 chyp'z f0 f1 f2 f3 chyp'p f0 f1 f2 f3
D Hypermap.lemma_complement_index
A |- (!H. (!x. (!m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j))))))))))))
T c==> c/\ cis_node_nondegenerate f0 c/\ cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 f2 c<= f2 ccomplement_index f0 f1 f3 c? / c? / c/\ c< b0 f3 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= f2 c+ ccomplement_index f0 f1 b0 b1
D Hypermap.reduce_exponent
A |- (!s. (!p. (!m. (!n. (!x. ((((permutes p) s) /\ (m <= n)) ==> ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x))))))))
T c==> c/\ cpermutes f0 f1 c<= f2 f3 c= cPOWER * part cinverse f0 f2 cPOWER f0 f3 f4 cPOWER f0 c- f3 f2 f4
D Hypermap.lemma_on_adding_darts
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((inv_loop_map L) ((((hyp'z H) NF) L) x)) = ((node_map H) ((((hyp'z H) NF) L) x)))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cloop_map f2 chyp'y f0 f1 f2 f3 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c= cinv_loop_map f2 chyp'z f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3
D Hypermap.lemma_on_loop1_transform
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path1_transform H) NF) L) x) (NUMERAL _0)) = ((((hyp'z H) NF) L) x)) /\ (((in_dart_of_loop ((((hyp'z H) NF) L) x)) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((card1_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x))) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) ((((hyp'z H) NF) L) x)) = (((POWER (loop_map L)) i) ((((hyp'z H) NF) L) x))))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + i)) ((((hyp'z H) NF) L) x)) = (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x))))))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cpath1_transform f0 f1 f2 f3 cNUMERAL c_0 chyp'z f0 f1 f2 f3 c/\ cin_dart_of_loop chyp'z f0 f1 f2 f3 cloop1_transform f0 f1 f2 f3 c/\ c= cpre_card_dart_of_loop cloop1_transform f0 f1 f2 f3 ccard1_transform f0 f1 f2 f3 c/\ ! c==> c<= b0 cindex f2 chyp'z f0 f1 f2 f3 chyp'y f0 f1 f2 f3 c= cPOWER * part cloop_map cloop1_transform f0 f1 f2 f3 b0 chyp'z f0 f1 f2 f3 cPOWER * part cloop_map f2 b0 chyp'z f0 f1 f2 f3 ! c==> c<= b0 chyp'p f0 f1 f2 f3 c= cPOWER * part cloop_map cloop1_transform f0 f1 f2 f3 c+ cindex f2 chyp'z f0 f1 f2 f3 chyp'y f0 f1 f2 f3 b0 chyp'z f0 f1 f2 f3 cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3
D Hypermap.lemma_on_loop2_transform
A |- (!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cpath2_transform f0 f1 f2 f3 cNUMERAL c_0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 c/\ cin_dart_of_loop cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cloop2_transform f0 f1 f2 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f0 f1 f2 f3 ccard2_transform f0 f1 f2 f3 c/\ ! c==> c<= b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 f3 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cPOWER * part cloop_map f2 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 ! c==> c<= b0 ccomplement_index f0 chyp'z f0 f1 f2 f3 chyp'p f0 f1 f2 f3 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 f3 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 b0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 ccomplement f0 chyp'z f0 f1 f2 f3 b0
D Hypermap.lemma_node_outside_darts_of_family
A |- (!H. (!NF. (!L. (!x. (!i. ((((((is_split_condition H) NF) L) x) /\ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x)))) ==> (!y. ((y IN ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))) ==> (~ (y IN (darts_of_family NF)))))))))))
T c==> c/\ cis_split_condition f0 f1 f2 f3 c/\ c<= cNUMERAL cBIT1 c_0 f4 c<= f4 chyp'p f0 f1 f2 f3 ! c==> cIN b0 * * part cnode f0 cPOWER * part cface_map f0 f4 chyp'y f0 f1 f2 f3 c~ cIN b0 * part cdarts_of_family f1
+ ((ny + (SUC nz)) = (pre_card_dart_of_loop L)) |- (((((k + (SUC nz)) <= (ny + (SUC nz))) ==> (~ ((((path_of_loop L) z) t) = (((path_of_loop L) z) (k + (SUC nz)))))) ==> (L IN ((final_loops H) NF))) = ((((k + (SUC nz)) <= (pre_card_dart_of_loop L)) ==> (~ ((((path_of_loop L) z) t) = (((path_of_loop L) z) (k + (SUC nz)))))) ==> (L IN ((final_loops H) NF))))
T c==> c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2 c= c==> c==> c<= c+ f3 cSUC f1 c+ f0 cSUC f1 c~ c= cpath_of_loop f2 f4 f5 cpath_of_loop f2 f4 c+ f3 cSUC f1 cIN f2 * * part cfinal_loops f6 f7 c==> c==> c<= c+ f3 cSUC f1 cpre_card_dart_of_loop f2 c~ c= cpath_of_loop f2 f4 f5 cpath_of_loop f2 f4 c+ f3 cSUC f1 cIN f2 * * part cfinal_loops f6 f7
+ (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((in_dart_of_loop (((POWER (loop_map L)) (SUC k)) y)) L)
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 cin_dart_of_loop cPOWER * part cloop_map f2 cSUC f5 f4 f2
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (nu = (nz + (SUC q))), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) u) = nu), ((((index L) z) y) = nz), ((((index L) z) u) <= (pre_card_dart_of_loop L)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- ((in_dart_of_loop (((POWER (loop_map L)) ((SUC q) + nz)) z)) ((((loop2_transform H) NF) L) x))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> c= f5 cPOWER * part cloop_map f3 cindex f3 f6 f5 f6 c==> c= f7 c+ f8 cSUC f9 c==> c= c+ f0 cSUC f8 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f10 f7 c==> c= cindex f3 f6 f5 f8 c==> c<= cindex f3 f6 f10 cpre_card_dart_of_loop f3 c==> cin_dart_of_loop cloop_map f3 f5 cloop2_transform f1 f2 f3 f4 cin_dart_of_loop cPOWER * part cloop_map f3 c+ cSUC f9 f8 f6 cloop2_transform f1 f2 f3 f4
+ ((((index L) z) y) = nz) |- (((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC nz)) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))) = ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> c= cindex f0 f1 f2 f3 c= c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC f3 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC cindex f0 f1 f2 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! ! c==> cpermutes f0 f1 c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
+ ((\j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + j)))))) b) |- ((a < m) /\ (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + b)))))
T c==> * / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 f5 c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 f5 c/\ c< f5 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 f5
+ (t = (nz + (SUC d))) |- ((((nz + (SUC d)) <= (nz + m)) ==> (L IN ((final_loops H) NF))) = ((t <= (nz + m)) ==> (L IN ((final_loops H) NF))))
T c==> c= f0 c+ f1 cSUC f2 c= c==> c<= c+ f1 cSUC f2 c+ f1 f3 cIN f4 * * part cfinal_loops f5 f6 c==> c<= f0 c+ f1 f3 cIN f4 * * part cfinal_loops f5 f6
+ (~ (L IN ((final_loops H) NF))), (u = (((POWER (loop_map L)) t) z)), (z = (((POWER (face_map H)) (SUC m)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (a < m), (L IN NF) |- ((u = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) z))) ==> (L IN ((final_loops H) NF)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= f5 cPOWER * part cface_map f1 cSUC f6 f7 c==> c= chyp'y f1 f2 f0 f8 f7 c==> c= chyp'z f1 f2 f0 f8 f5 c==> c= chyp'p f1 f2 f0 f8 f6 c==> c/\ cis_marked c, f1 c, f2 c, f0 f8 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c< f9 f6 c==> cIN f0 f2 c==> c= f3 cPOWER * part cinverse * part cnode_map f1 f10 cPOWER * part cinverse * part cface_map f1 cSUC f9 f5 cIN f0 * * part cfinal_loops f1 f2
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ (nz = (pre_card_dart_of_loop L))), ((((index L) z) y) = nz), ((((index L) z) y) <= (pre_card_dart_of_loop L)) |- ((((SUC nz) < (SUC (pre_card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c~ c= f0 cpre_card_dart_of_loop f1 c==> c= cindex f1 f2 f3 f0 c==> c<= cindex f1 f2 f3 cpre_card_dart_of_loop f1 c= c==> c< cSUC f0 cSUC cpre_card_dart_of_loop f1 c= c+ f4 cSUC f0 cpre_card_dart_of_loop f1 c= c+ f4 cSUC f0 cpre_card_dart_of_loop f1
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! c==> cIN f0 * part cdart f1 cIN cPOWER * part cface_map f1 b0 f0 * part cdart f1
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), ((SUC w) <= (((complement_index H) z) m)) |- (((u = (((complement H) z) (SUC w))) ==> (L IN ((final_loops H) NF))) = ((u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + (SUC w))) ((loop_map L) y))) ==> (L IN ((final_loops H) NF))))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c<= cSUC f8 ccomplement_index f0 f1 f2 c= c==> c= f9 ccomplement f0 f1 cSUC f8 cIN f4 * * part cfinal_loops f0 f3 c==> c= f9 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 cSUC f8 cloop_map f4 f7 cIN f4 * * part cfinal_loops f0 f3
- |- ((((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = T)
T c= c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0 cT
+ (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (t <= nz) |- (((u = (((POWER (loop_map L)) t) z)) ==> (L IN ((final_loops H) NF))) = ((u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) t) z)) ==> (L IN ((final_loops H) NF))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f5 cPOWER * part cloop_map f3 b0 f5 c==> c<= f6 f0 c= c==> c= f7 cPOWER * part cloop_map f3 f6 f5 cIN f3 * * part cfinal_loops f1 f2 c==> c= f7 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 f6 f5 cIN f3 * * part cfinal_loops f1 f2
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((index L) z) u) <= (pre_card_dart_of_loop L)) /\ (u = (((POWER (loop_map L)) (((index L) z) u)) z))), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- ((((((index L) z) u) <= (pre_card_dart_of_loop L)) /\ (u = (((POWER (loop_map L)) (((index L) z) u)) z))) /\ (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 f6 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f7 cPOWER * part cloop_map f3 b0 f7 c==> c= f5 cPOWER * part cloop_map f3 cindex f3 f7 f5 f7 c==> c= c+ f0 cSUC f6 cpre_card_dart_of_loop f3 c==> c= cindex f3 f7 f5 f6 c==> c/\ c<= cindex f3 f7 f8 cpre_card_dart_of_loop f3 c= f8 cPOWER * part cloop_map f3 cindex f3 f7 f8 f7 c==> cin_dart_of_loop f7 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop cloop_map f3 f5 cloop2_transform f1 f2 f3 f4 c/\ c/\ c<= cindex f3 f7 f8 cpre_card_dart_of_loop f3 c= f8 cPOWER * part cloop_map f3 cindex f3 f7 f8 f7 c\/ cin_dart_of_loop f8 cloop1_transform f1 f2 f3 f4 cin_dart_of_loop f8 cloop2_transform f1 f2 f3 f4
+ |- ((\p. (!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q))))) p)
T * / ! c==> c/\ c<= f0 b0 c< f1 b1 c< c+ f0 f1 c+ b0 b1 f2
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (k = (ny + (SUC w))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC w) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (((SUC w) <= (((complement_index H) z) m)) /\ (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cface_map f0 cSUC f9 f7 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f10 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f10 c+ f6 cSUC f11 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f11 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c<= cSUC f11 ccomplement_index f0 f1 f2 cIN f4 * * part cfinal_loops f0 f3
+ |- (((?nu. ((((index L) z) u) = nu)) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))) = (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))
T c= c==> c? / c= cindex f0 f1 f2 b0 c\/ cin_dart_of_loop f2 cloop1_transform f3 f4 f0 f5 cin_dart_of_loop f2 cloop2_transform f3 f4 f0 f5 c\/ cin_dart_of_loop f2 cloop1_transform f3 f4 f0 f5 cin_dart_of_loop f2 cloop2_transform f3 f4 f0 f5
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))), (x IN (dart H)) |- ((x IN (dart H)) /\ (!n. ((((POWER (face_map H)) n) x) IN (dart H))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 c==> cIN f0 * part cdart f1 c/\ cIN f0 * part cdart f1 ! cIN cPOWER * part cface_map f1 b0 f0 * part cdart f1
+ ((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) |- (((u = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (m - a)) y))) ==> (L IN ((final_loops H) NF))) = ((u = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)))) ==> (L IN ((final_loops H) NF))))
T c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cPOWER * part cface_map f0 c- f2 f1 f3 c= c==> c= f4 cPOWER * part cinverse * part cnode_map f0 f5 cPOWER * part cface_map f0 c- f2 f1 f3 cIN f6 * * part cfinal_loops f0 f7 c==> c= f4 cPOWER * part cinverse * part cnode_map f0 f5 cPOWER * part cinverse * part cface_map f0 cSUC f1 cPOWER * part cface_map f0 cSUC f2 f3 cIN f6 * * part cfinal_loops f0 f7
+ ((NUMERAL (BIT1 _0)) = q) |- (q = (NUMERAL (BIT1 _0)))
T c==> c= cNUMERAL cBIT1 c_0 f0 c= f0 cNUMERAL cBIT1 c_0
+ |- ((\H. (!NF. (!L. (!x. (((((card2_transform H) NF) L) x) = ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x)))))))) H)
T * / ! ! ! c= ccard2_transform b0 b1 b2 b3 c+ cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 ccomplement_index b0 chyp'z b0 b1 b2 b3 chyp'p b0 b1 b2 b3 f0
+ (u = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))) |- ((((((POWER (face_map H)) (SUC p)) y) = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))) ==> (L IN ((final_loops H) NF))) = (((((POWER (face_map H)) (SUC p)) y) = u) ==> (L IN ((final_loops H) NF))))
T c==> c= f0 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 cSUC f3 f4 c= c==> c= cPOWER * part cface_map f1 cSUC f3 f4 cPOWER * part cinverse * part cnode_map f1 f2 cPOWER * part cface_map f1 cSUC f3 f4 cIN f5 * * part cfinal_loops f1 f6 c==> c= cPOWER * part cface_map f1 cSUC f3 f4 f0 cIN f5 * * part cfinal_loops f1 f6
+ (is_restricted H) |- (plain_hypermap H)
T c==> cis_restricted f0 cplain_hypermap f0
+ |- (((int_le (int_of_num (NUMERAL _0))) _2502782) ==> (((int_le (int_of_num (NUMERAL _0))) _2502783) ==> (((int_le (int_of_num (NUMERAL _0))) _2502784) ==> (((int_le (int_of_num (NUMERAL _0))) _2502785) ==> (((int_le (int_of_num (NUMERAL _0))) _2502786) ==> ((~ ((int_lt ((int_add _2502786) _2502784)) _2502784)) \/ (((int_add _2502782) ((int_add _2502783) (int_of_num (NUMERAL (BIT1 _0))))) = _2502785)))))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c==> cint_le cint_of_num cNUMERAL c_0 f2 c==> cint_le cint_of_num cNUMERAL c_0 f3 c==> cint_le cint_of_num cNUMERAL c_0 f4 c\/ c~ cint_lt cint_add f4 f2 f2 c= cint_add f0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f3
+ ((\nz. ((((index L) z) y) = nz)) nz) |- ((((((index L) z) y) = nz) ==> ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))) = ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> * / c= cindex f0 f1 f2 b0 f3 c= c==> c= cindex f0 f1 f2 f3 c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC cindex f0 f1 f2 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC cindex f0 f1 f2 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6
+ (is_restricted H), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))) |- ((((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (SUC (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))
T c==> cis_restricted f0 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3 c/\ c= c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3 cSUC cindex f2 chyp'z f0 f1 f2 f3 chyp'y f0 f1 f2 f3 cpre_card_dart_of_loop f2 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c/\ c~ cIN cloop1_transform f0 f1 f2 f3 f1 c/\ c~ cIN cloop2_transform f0 f1 f2 f3 f1 ! c==> cin_dart_of_loop b0 f2 c\/ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- (((!x'. (((\y. (((((hyp'y H) NF) L) x) = y)) x') ==> (?y. (((((hyp'y H) NF) L) x) = y)))) ==> ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))) = ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c= c==> ! c==> * / c= chyp'y f0 f1 f2 f3 b1 b0 c? / c= chyp'y f0 f1 f2 f3 b1 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0 c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
+ (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L))) |- ((q = (NUMERAL _0)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c= c+ cSUC f0 cSUC f1 c* f2 ccard_dart_of_loop f3 c==> c= f2 cNUMERAL c_0 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f3
+ |- ((\p. (!n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n))))) p)
T * / ! c= cis_inj_contour f0 b0 b1 c/\ cis_contour f0 b0 b1 cis_inj_list b0 b1 f1
+ |- ((q = (NUMERAL _0)) \/ (~ (q = (NUMERAL _0))))
T c\/ c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((NUMERAL _0) < (card_dart_of_loop L))
T c< cNUMERAL c_0 ccard_dart_of_loop f0
+ ((NUMERAL (BIT1 _0)) <= b) |- (((NUMERAL (BIT1 _0)) <= b) = T)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
+ (nu = (nz + (SUC q))) |- (((nu <= (pre_card_dart_of_loop L)) ==> ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x))) = (((nz + (SUC q)) <= (pre_card_dart_of_loop L)) ==> ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x))))
T c==> c= f0 c+ f1 cSUC f2 c= c==> c<= f0 cpre_card_dart_of_loop f3 cin_dart_of_loop cPOWER * part cloop_map f3 cSUC f2 f4 cloop2_transform f5 f6 f3 f7 c==> c<= c+ f1 cSUC f2 cpre_card_dart_of_loop f3 cin_dart_of_loop cPOWER * part cloop_map f3 cSUC f2 f4 cloop2_transform f5 f6 f3 f7
- |- ((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) t) z)), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (t = (nz + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- ((t <= (nz + m)) ==> (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 f10 f6 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f11 cloop_map f3 f7 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= f10 c+ f5 cSUC f12 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c<= f11 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 c==> c<= f10 c+ f5 f0 cIN f3 * * part cfinal_loops f1 f2
+ |- ((\n. (!p. (((m + n) <= (m + p)) = (n <= p)))) n)
T * / ! c= c<= c+ f0 b0 c+ f0 b1 c<= b0 b1 f1
- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n)) |- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n))
T c==> c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((((hyp'p H) NF) L) x) = m) |- ((\m. (((((hyp'p H) NF) L) x) = m)) m)
T c==> c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
+ |- ((\x. (!y. ((x = (((POWER (inverse (node_map H))) n) y)) = (y = (((POWER (node_map H)) n) x))))) x)
T * / ! c= c= b0 cPOWER * part cinverse * part cnode_map f0 f1 b1 c= b1 cPOWER * part cnode_map f0 f1 b0 f2
+ (~ (nz = (pre_card_dart_of_loop L))), (~ (L IN ((final_loops H) NF))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y))), (((((hyp'z H) NF) L) x) = z), ((((index L) z) y) = nz), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((index L) z) y) <= (pre_card_dart_of_loop L)), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((ny + (SUC nz)) = (pre_card_dart_of_loop L))
T c==> c~ c= f0 cpre_card_dart_of_loop f1 c==> c~ cIN f1 * * part cfinal_loops f2 f3 c==> c= f4 cPOWER * part cloop_map f1 cindex f1 f5 f4 f5 c==> c= cinv_loop_map f1 f5 cPOWER * part cloop_map f1 cindex f1 cloop_map f1 f4 cinv_loop_map f1 f5 cloop_map f1 f4 c==> c= chyp'z f2 f3 f1 f6 f5 c==> c= cindex f1 f5 f4 f0 c==> c= cindex f1 cloop_map f1 f4 cinv_loop_map f1 f5 f7 c==> c/\ cis_marked c, f2 c, f3 c, f1 f6 c~ cIN f1 * * part cfinal_loops f2 f3 c==> c<= cindex f1 f5 f4 cpre_card_dart_of_loop f1 c==> c<= cindex f1 cloop_map f1 f4 cinv_loop_map f1 f5 cpre_card_dart_of_loop f1 c= c+ f7 cSUC f0 cpre_card_dart_of_loop f1
+ (~ (L IN ((final_loops H) NF))), (u = (((POWER (loop_map L)) t) z)), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF) |- ((~ (u IN (darts_of_family NF))) ==> (L IN ((final_loops H) NF)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= chyp'z f1 f2 f0 f6 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f6 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> c~ cIN f3 * part cdarts_of_family f2 cIN f0 * * part cfinal_loops f1 f2
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- (((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y)))) /\ (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c/\ c<= f9 c+ f8 ccomplement_index f1 f6 f0 c= f10 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f9 cloop_map f3 f7 c==> cIN f3 f2 c==> cin_dart_of_loop f10 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 c/\ c/\ c<= f9 c+ f8 ccomplement_index f1 f6 f0 c= f10 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f9 cloop_map f3 f7 cIN f3 * * part cfinal_loops f1 f2
+ |- (((!x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) ==> ((\x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) x)) = ((\x. (!k. ((((path_of_loop L) x) k) = (((POWER (loop_map L)) k) x)))) x))
T c= c==> ! ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 * / ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 f1 * / ! c= cpath_of_loop f0 b0 b1 cPOWER * part cloop_map f0 b1 b0 f1
+ ((ny + (SUC nz)) = (pre_card_dart_of_loop L)) |- ((((nz + (SUC q)) <= (pre_card_dart_of_loop L)) ==> ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x))) = (((nz + (SUC q)) <= (nz + (SUC ny))) ==> ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x))))
T c==> c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2 c= c==> c<= c+ f1 cSUC f3 cpre_card_dart_of_loop f2 cin_dart_of_loop cPOWER * part cloop_map f2 cSUC f3 f4 cloop2_transform f5 f6 f2 f7 c==> c<= c+ f1 cSUC f3 c+ f1 cSUC f0 cin_dart_of_loop cPOWER * part cloop_map f2 cSUC f3 f4 cloop2_transform f5 f6 f2 f7
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) ==> ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L)) = ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L))
T c= c==> ! ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2 * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2
+ |- (((!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))))) ==> ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))))) L)) = ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x))))))) L))
T c= c==> ! ! c==> cis_split_condition f0 f1 b0 b1 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 chyp'z f0 f1 b0 b1 c< cSUC chyp'p f0 f1 b0 b1 cCARD * * part cface f0 b1 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 chyp'z f0 f1 b0 b1 c< cSUC chyp'p f0 f1 b0 b1 cCARD * * part cface f0 b1 f2 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 chyp'z f0 f1 b0 b1 c< cSUC chyp'p f0 f1 b0 b1 cCARD * * part cface f0 b1 f2
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0
+ |- (((!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) ==> ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x)) = ((\x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x)))) x))
T c= c==> ! c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3 * / c= cPOWER f0 c+ f1 f2 b0 cPOWER f0 f1 cPOWER f0 f2 b0 f3
+ (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= m), (L IN NF), ((in_dart_of_loop u) L) |- (((in_dart_of_loop u) L) /\ (L IN ((final_loops H) NF)))
T c==> c= f0 cPOWER * part cface_map f1 cSUC f2 f3 c==> c= chyp'y f1 f4 f5 f6 f3 c==> c= chyp'p f1 f4 f5 f6 f7 c==> c/\ cis_marked c, f1 c, f4 c, f5 f6 c~ cIN f5 * * part cfinal_loops f1 f4 c==> c<= cSUC f2 f7 c==> cIN f5 f4 c==> cin_dart_of_loop f0 f5 c/\ cin_dart_of_loop f0 f5 cIN f5 * * part cfinal_loops f1 f4
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((!x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= (((complement_index H) z) m)) ==> (L IN ((final_loops H) NF))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= f3 ccomplement f1 f5 cSUC f6 c==> c= chyp'y f1 f2 f0 f7 f8 c==> c= chyp'z f1 f2 f0 f7 f5 c==> c= chyp'p f1 f2 f0 f7 f9 c==> c/\ cis_marked c, f1 c, f2 c, f0 f7 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c<= cNUMERAL cBIT1 c_0 cSUC f6 c==> c<= cSUC f6 ccomplement_index f1 f5 f9 cIN f0 * * part cfinal_loops f1 f2
+ |- ((\L. (!x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (?k. ((k <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) k) x)))))))) L)
T * / ! ! c==> c/\ cin_dart_of_loop b1 b0 cin_dart_of_loop b2 b0 c? / c/\ c<= b3 cpre_card_dart_of_loop b0 c= b2 cPOWER * part cloop_map b0 b3 b1 f0
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (T = ((NUMERAL _0) < (CARD ((orbit_map (loop_map L)) z))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= cT c< cNUMERAL c_0 cCARD * * part corbit_map * part cloop_map f0 f4
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) t) z)), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF), ((\d. (t = (nz + (SUC d)))) d) |- (((\d. (t = (nz + (SUC d)))) d) /\ ((t <= (nz + m)) ==> (L IN ((final_loops H) NF))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 f10 f6 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f11 cloop_map f3 f7 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c<= f11 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 c==> * / c= f10 c+ f5 cSUC b0 f12 c/\ * / c= f10 c+ f5 cSUC b0 f12 c==> c<= f10 c+ f5 f0 cIN f3 * * part cfinal_loops f1 f2
+ ((plain_hypermap H) /\ ((is_node_nondegenerate H) /\ (z IN (dart H)))) |- ((!i. (!j. ((((NUMERAL (BIT1 _0)) <= j) /\ (j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z))))) ==> ((((complement H) z) ((((complement_index H) z) i) + j)) = (((POWER (inverse (node_map H))) j) (((POWER (inverse (face_map H))) (SUC i)) z)))))) /\ (!n. (((is_contour H) ((complement H) z)) n)))
T c==> c/\ cplain_hypermap f0 c/\ cis_node_nondegenerate f0 cIN f1 * part cdart f0 c/\ ! ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c< b1 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 c= ccomplement f0 f1 c+ ccomplement_index f0 f1 b0 b1 cPOWER * part cinverse * part cnode_map f0 b1 cPOWER * part cinverse * part cface_map f0 cSUC b0 f1 ! cis_contour f0 * * part ccomplement f0 f1 b0
+ |- ((\x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF)))) x)
T * / c==> c/\ cin_dart_of_loop b0 f0 cIN f0 f1 cIN b0 * part cdarts_of_family f1 f2
+ (!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (~ (L IN ((final_loops H) NF))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))
T c==> ! c==> cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c==> ! c==> c<= b0 f4 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 f3 b0 cloop_map f2 f5 cPOWER * part cloop_map f2 b0 cloop_map f2 f5 c==> ! c==> c<= b0 f6 c= cPOWER * part cloop_map cloop1_transform f0 f1 f2 f3 b0 f7 cPOWER * part cloop_map f2 b0 f7 c==> c~ cIN f2 * * part cfinal_loops f0 f1 c==> c= f5 cPOWER * part cloop_map f2 cindex f2 f7 f5 f7 c==> c= chyp'y f0 f1 f2 f3 f5 c==> c= chyp'z f0 f1 f2 f3 f7 c==> c= c+ f4 cSUC f6 cpre_card_dart_of_loop f2 c==> c= cindex f2 f7 f5 f6 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c==> cIN f2 f1 c==> cin_dart_of_loop f7 cloop1_transform f0 f1 f2 f3 c==> cin_dart_of_loop cloop_map f2 f5 cloop2_transform f0 f1 f2 f3 c==> cis_normal f0 f1 c/\ c~ cIN cloop1_transform f0 f1 f2 f3 f1 c/\ c~ cIN cloop2_transform f0 f1 f2 f3 f1 ! c==> cin_dart_of_loop b0 f2 c\/ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3
+ |- ((\x. (((((card1_transform H) NF) L) x) = ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + ((((hyp'p H) NF) L) x)))) x)
T * / c= ccard1_transform f0 f1 f2 b0 c+ cindex f2 chyp'z f0 f1 f2 b0 chyp'y f0 f1 f2 b0 chyp'p f0 f1 f2 b0 f3
+ |- (((?nz. ((((index L) z) y) = nz)) ==> ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))) = ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c= c==> c? / c= cindex f0 f1 f2 b0 c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC cindex f0 f1 f2 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 c~ cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5 c~ cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 c/\ c~ cIN cloop1_transform f3 f4 f0 f5 f4 c/\ c~ cIN cloop2_transform f3 f4 f0 f5 f4 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5 c/\ c= c+ cindex f0 cloop_map f0 f2 cinv_loop_map f0 f1 cSUC cindex f0 f1 f2 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 c~ cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5 c~ cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 c/\ c~ cIN cloop1_transform f3 f4 f0 f5 f4 c/\ c~ cIN cloop2_transform f3 f4 f0 f5 f4 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f3 f4 f0 f5 cin_dart_of_loop b0 cloop2_transform f3 f4 f0 f5
+ (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> ((u = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)))) ==> (L IN ((final_loops H) NF))))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cface_map f0 cSUC f2 f3 c==> c= chyp'y f0 f4 f5 f6 f3 c==> c= chyp'z f0 f4 f5 f6 f7 c==> c= chyp'p f0 f4 f5 f6 f8 c==> c/\ cis_marked c, f0 c, f4 c, f5 f6 c~ cIN f5 * * part cfinal_loops f0 f4 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f10 f8 c==> c< f9 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f10 f7 c==> cIN f5 f4 c==> cis_normal f0 f4 c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f10 cPOWER * part cface_map f0 cSUC f8 f3 cPOWER * part cface_map f0 c- f8 f10 f3 c==> c= f1 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cinverse * part cface_map f0 cSUC f10 cPOWER * part cface_map f0 cSUC f8 f3 cIN f5 * * part cfinal_loops f0 f4
+ |- ((\x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L'))))) ==> (L = L'))) x)
T * / c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN f3 f1 c/\ cin_dart_of_loop b0 f2 cin_dart_of_loop b0 f3 c= f2 f3 f4
+ |- (((!L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) ==> ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) L)) = ((\L. (!x. (((in_dart_of_loop x) L) ==> ((in_dart_of_loop ((loop_map L) x)) L)))) L))
T c= c==> ! ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 f0 * / ! c==> cin_dart_of_loop b1 b0 cin_dart_of_loop cloop_map b0 b1 b0 f0
+ |- ((\n. ((((POWER f) (SUC n)) x) = (((POWER f) n) (f x)))) n)
T * / c= cPOWER f0 cSUC b0 f1 cPOWER f0 b0 * f0 f1 f2
+ |- ((\n. ((m <= n) = (m < (SUC n)))) n)
T * / c= c<= f0 b0 c< f0 cSUC b0 f1
- |- (T = ((((d * (card_dart_of_loop L)) + (card_dart_of_loop L)) < (card_dart_of_loop L)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c= cT c==> c< c+ c* f0 ccard_dart_of_loop f1 ccard_dart_of_loop f1 ccard_dart_of_loop f1 c= c+ f2 cSUC f3 cpre_card_dart_of_loop f1
+ (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L))), ((NUMERAL (BIT1 _0)) < q) |- (((SUC ny) <= (SUC (pre_card_dart_of_loop L))) ==> (((SUC nz) < (SUC (pre_card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c==> c= c+ cSUC f0 cSUC f1 c* f2 ccard_dart_of_loop f3 c==> c< cNUMERAL cBIT1 c_0 f2 c==> c<= cSUC f0 cSUC cpre_card_dart_of_loop f3 c==> c< cSUC f1 cSUC cpre_card_dart_of_loop f3 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f3
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = (ny + (((complement_index H) z) m))), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= cpre_card_dart_of_loop cloop2_transform f1 f2 f3 f4 c+ f8 ccomplement_index f1 f6 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cin_dart_of_loop f9 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop cloop_map f3 f7 cloop2_transform f1 f2 f3 f4 c==> cis_normal f1 f2 c~ cin_dart_of_loop f9 cloop2_transform f1 f2 f3 f4
+ |- ((\n. (!p. (((m < n) /\ (n <= p)) ==> (m < p)))) n)
T * / ! c==> c/\ c< f0 b0 c<= b0 b1 c< f0 b1 f1
+ (is_restricted H), (u = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))), (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + (SUC p))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (u IN ((face H) y)), (L IN NF), ((is_normal H) NF) |- (((((POWER (face_map H)) (SUC p)) y) IN ((node H) u)) ==> (L IN ((final_loops H) NF)))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cinverse * part cnode_map f0 f2 cPOWER * part cface_map f0 cSUC f3 f4 c==> c= f1 cPOWER * part cface_map f0 cSUC f5 f4 c==> c= chyp'y f0 f6 f7 f8 f4 c==> c= chyp'z f0 f6 f7 f8 f9 c==> c= f10 c+ f11 cSUC f3 c==> c= chyp'p f0 f6 f7 f8 f10 c==> c/\ cis_marked c, f0 c, f6 c, f7 f8 c~ cIN f7 * * part cfinal_loops f0 f6 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f11 f10 c==> c< f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f11 f9 c==> cIN f1 * * part cface f0 f4 c==> cIN f7 f6 c==> cis_normal f0 f6 c==> cIN cPOWER * part cface_map f0 cSUC f3 f4 * * part cnode f0 f1 cIN f7 * * part cfinal_loops f0 f6
+ ((((POWER (face_map H)) (SUC p)) y) = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))), ((NUMERAL (BIT1 _0)) <= b) |- ((((b <= b) /\ (((NUMERAL _0) <= b) /\ ((((node_contour H) (((POWER (face_map H)) (SUC p)) y)) b) = (((node_contour H) (((POWER (face_map H)) (SUC p)) y)) (NUMERAL _0))))) ==> (b = (NUMERAL _0))) ==> (L IN ((final_loops H) NF)))
T c==> c= cPOWER * part cface_map f0 cSUC f1 f2 cPOWER * part cinverse * part cnode_map f0 f3 cPOWER * part cface_map f0 cSUC f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f3 c==> c==> c/\ c<= f3 f3 c/\ c<= cNUMERAL c_0 f3 c= cnode_contour f0 cPOWER * part cface_map f0 cSUC f1 f2 f3 cnode_contour f0 cPOWER * part cface_map f0 cSUC f1 f2 cNUMERAL c_0 c= f3 cNUMERAL c_0 cIN f4 * * part cfinal_loops f0 f5
+ |- ((\L. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((in_dart_of_loop x) L))) ==> (x IN (dart H))))) L)
T * / ! c==> c/\ cis_normal f0 f1 c/\ cIN b0 f1 cin_dart_of_loop b1 b0 cIN b1 * part cdart f0 f2
+ |- ((\x. (!y. ((((in_dart_of_loop x) L) /\ ((in_dart_of_loop y) L)) ==> (?k. ((k <= (pre_card_dart_of_loop L)) /\ (y = (((POWER (loop_map L)) k) x))))))) x)
T * / ! c==> c/\ cin_dart_of_loop b0 f0 cin_dart_of_loop b1 f0 c? / c/\ c<= b2 cpre_card_dart_of_loop f0 c= b1 cPOWER * part cloop_map f0 b2 b0 f1
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (((((hyp'p H) NF) L) x) = m) |- ((((((is_split_condition H) NF) L) x) ==> (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= ((((hyp'p H) NF) L) x)) ==> (L IN ((final_loops H) NF))))) = (((((is_split_condition H) NF) L) x) ==> (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= m) ==> (L IN ((final_loops H) NF))))))
T c==> c= chyp'p f0 f1 f2 f3 f4 c= c==> cis_split_condition f0 f1 f2 f3 c==> c<= cNUMERAL cBIT1 c_0 cSUC f5 c==> c<= cSUC f5 chyp'p f0 f1 f2 f3 cIN f2 * * part cfinal_loops f0 f1 c==> cis_split_condition f0 f1 f2 f3 c==> c<= cNUMERAL cBIT1 c_0 cSUC f5 c==> c<= cSUC f5 f4 cIN f2 * * part cfinal_loops f0 f1
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((is_loop H) L) /\ ((in_dart_of_loop z) L))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c/\ cis_loop f1 f0 cin_dart_of_loop f4 f0
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
+ (L IN NF), ((in_dart_of_loop u) L) |- (((in_dart_of_loop u) L) /\ (L IN NF))
T c==> cIN f0 f1 c==> cin_dart_of_loop f2 f0 c/\ cin_dart_of_loop f2 f0 cIN f0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((inv_loop_map L) z) = ((node_map H) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x)))), (L IN NF), ((is_normal H) NF) |- ((((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((index L) z) y) + ((((hyp'p H) NF) L) x))) /\ ((!i. ((i <= (((index L) z) y)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) z) y) + i)) z) = (((POWER (face_map H)) i) y))))))) ==> ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 cindex f0 f4 f3 f4 c==> c= cinv_loop_map f0 f4 cnode_map f1 f4 c==> c= chyp'y f1 f2 f0 f5 f3 c==> c= chyp'z f1 f2 f0 f5 f4 c==> c= c+ f6 cSUC f7 cpre_card_dart_of_loop f0 c==> c= cindex f0 f4 f3 f7 c==> c= cindex f0 cloop_map f0 f3 cinv_loop_map f0 f4 f6 c==> c= chyp'p f1 f2 f0 f5 f8 c==> c/\ cis_marked c, f1 c, f2 c, f0 f5 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c= cloop_map f0 f3 cinverse * part cnode_map f1 f3 c~ c= * * part cnode f1 f3 * * part cnode f1 f5 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c/\ cin_dart_of_loop f4 cloop1_transform f1 f2 f0 f5 c/\ c= cpre_card_dart_of_loop cloop1_transform f1 f2 f0 f5 c+ cindex f0 f4 f3 chyp'p f1 f2 f0 f5 c/\ ! c==> c<= b0 cindex f0 f4 f3 c= cPOWER * part cloop_map cloop1_transform f1 f2 f0 f5 b0 f4 cPOWER * part cloop_map f0 b0 f4 ! c==> c<= b0 chyp'p f1 f2 f0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f0 f5 c+ cindex f0 f4 f3 b0 f4 cPOWER * part cface_map f1 b0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 c/\ c~ cIN cloop1_transform f1 f2 f0 f5 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f5 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> ((((((index L) ((inverse (node_map H)) y)) ((node_map H) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> * / c= chyp'p f1 f2 f0 f3 b0 f6 c/\ c= c+ cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 f5 cSUC cindex f0 f5 f4 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c/\ c~ cIN cloop1_transform f1 f2 f0 f3 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f3 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3
+ |- ((\n. (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c= c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
+ ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) |- ((\k. ((in_dart_of_loop (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)) ((((loop1_transform H) NF) L) x))) k)
T c==> cin_dart_of_loop f0 cloop1_transform f1 f2 f3 f4 * / cin_dart_of_loop cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f0 cloop1_transform f1 f2 f3 f4 f5
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (u = (((POWER (loop_map L)) (((index L) z) u)) z)), (nu = (nz + (SUC q))), ((((index L) z) u) = nu) |- (((in_dart_of_loop (((POWER (loop_map L)) ((SUC q) + nz)) z)) ((((loop2_transform H) NF) L) x)) = ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))
T c==> c= f0 cPOWER * part cloop_map f1 cindex f1 f2 f0 f2 c==> c= f3 c+ f4 cSUC f5 c==> c= cindex f1 f2 f0 f3 c= cin_dart_of_loop cPOWER * part cloop_map f1 c+ cSUC f5 f4 f2 cloop2_transform f6 f7 f1 f8 cin_dart_of_loop f0 cloop2_transform f6 f7 f1 f8
+ ((NUMERAL (BIT1 _0)) < q) |- (?d. (q = ((SUC d) + (NUMERAL (BIT1 _0)))))
T c==> c< cNUMERAL cBIT1 c_0 f0 c? / c= f0 c+ cSUC b0 cNUMERAL cBIT1 c_0
- |- ((\p. (((m <= n) /\ (n <= p)) ==> (m <= p))) p)
T * / c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 f2
+ |- ((\H. (!x. (!m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j)))))))))))) H)
T * / ! ! ! c==> c/\ cis_node_nondegenerate b0 c/\ cIN b1 * part cdart b0 c/\ c<= cNUMERAL cBIT1 c_0 b3 c<= b3 ccomplement_index b0 b1 b2 c? / c? / c/\ c< b4 b2 c/\ c<= cNUMERAL cBIT1 c_0 b5 c/\ c< b5 cCARD * * part cnode b0 cPOWER * part cinverse * part cface_map b0 cSUC b4 b1 c= b3 c+ ccomplement_index b0 b1 b4 b5 f0
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) t) z)), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- (((\d. (t = (nz + (SUC d)))) d) ==> ((t <= (nz + m)) ==> (L IN ((final_loops H) NF))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 f10 f6 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f11 cloop_map f3 f7 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c<= f11 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 c==> * / c= f10 c+ f5 cSUC b0 f12 c==> c<= f10 c+ f5 f0 cIN f3 * * part cfinal_loops f1 f2
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((((((hyp'z H) NF) L) x) = z) ==> ((((((index L) ((inverse (node_map H)) y)) ((node_map H) ((((hyp'z H) NF) L) x))) + (SUC (((index L) ((((hyp'z H) NF) L) x)) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 c==> c= chyp'z f1 f2 f0 f3 f5 c/\ c= c+ cindex f0 cinverse * part cnode_map f1 f4 cnode_map f1 chyp'z f1 f2 f0 f3 cSUC cindex f0 chyp'z f1 f2 f0 f3 f4 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c/\ c~ cIN cloop1_transform f1 f2 f0 f3 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f3 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3
+ |- (((((index L) z) y) = (((index L) z) y)) = ((\nz. ((((index L) z) y) = nz)) (((index L) z) y)))
T c= c= cindex f0 f1 f2 cindex f0 f1 f2 * / c= cindex f0 f1 f2 b0 cindex f0 f1 f2
+ |- (((NUMERAL _0) < (SUC n)) = T)
T c= c< cNUMERAL c_0 cSUC f0 cT
+ |- (((!n. ((m + n) = (n + m))) ==> ((\n. ((m + n) = (n + m))) n)) = ((\n. ((m + n) = (n + m))) n))
T c= c==> ! c= c+ f0 b0 c+ b0 f0 * / c= c+ f0 b0 c+ b0 f0 f1 * / c= c+ f0 b0 c+ b0 f0 f1
+ |- ((\t. (t \/ (~ t))) (t <= nz))
T * / c\/ b0 c~ b0 c<= f0 f1
+ (is_restricted H) |- ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))
T c==> cis_restricted f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((inv_loop_map L) z) = ((node_map H) z)), (((inv_loop_map L) z) = (((POWER (loop_map L)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((((loop_map L) y) = ((inverse (node_map H)) y)) /\ (~ (((node H) y) = ((node H) x)))), ((((index L) z) y) <= (pre_card_dart_of_loop L)), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)), (L IN NF), ((is_normal H) NF) |- ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC (((index L) z) y))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 cindex f0 f4 f3 f4 c==> c= cinv_loop_map f0 f4 cnode_map f1 f4 c==> c= cinv_loop_map f0 f4 cPOWER * part cloop_map f0 cindex f0 cloop_map f0 f3 cinv_loop_map f0 f4 cloop_map f0 f3 c==> c= chyp'y f1 f2 f0 f5 f3 c==> c= chyp'z f1 f2 f0 f5 f4 c==> c= cindex f0 f4 f3 f6 c==> c= chyp'p f1 f2 f0 f5 f7 c==> c/\ cis_marked c, f1 c, f2 c, f0 f5 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c= cloop_map f0 f3 cinverse * part cnode_map f1 f3 c~ c= * * part cnode f1 f3 * * part cnode f1 f5 c==> c<= cindex f0 f4 f3 cpre_card_dart_of_loop f0 c==> c<= cindex f0 cloop_map f0 f3 cinv_loop_map f0 f4 cpre_card_dart_of_loop f0 c==> cIN f0 f2 c==> cis_normal f1 f2 c/\ c= c+ cindex f0 cloop_map f0 f3 cinv_loop_map f0 f4 cSUC cindex f0 f4 f3 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 c/\ c~ cIN cloop1_transform f1 f2 f0 f5 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f5 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f5 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f5
+ (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC w) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- ((z IN (dart H)) ==> (L IN ((final_loops H) NF)))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cface_map f0 cSUC f2 f3 c==> c= f1 ccomplement f0 f4 cSUC f5 c==> c= chyp'y f0 f6 f7 f8 f3 c==> c= chyp'z f0 f6 f7 f8 f4 c==> c= cSUC f5 c+ ccomplement_index f0 f4 f9 f10 c==> c= chyp'p f0 f6 f7 f8 f11 c==> c/\ cis_marked c, f0 c, f6 c, f7 f8 c~ cIN f7 * * part cfinal_loops f0 f6 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c< f9 f11 c==> c< f10 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f9 f4 c==> cIN f7 f6 c==> cis_normal f0 f6 c==> cIN f4 * part cdart f0 cIN f7 * * part cfinal_loops f0 f6
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = (ny + (((complement_index H) z) m))) /\ ((!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) /\ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i))))))), (L IN NF), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- ((((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = (ny + (((complement_index H) z) m))) /\ ((!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) /\ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i))))))) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c/\ cin_dart_of_loop cloop_map f3 f7 cloop2_transform f1 f2 f3 f4 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f3 f4 c+ f8 ccomplement_index f1 f6 f0 c/\ ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> cIN f3 f2 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 c/\ c/\ cin_dart_of_loop cloop_map f3 f7 cloop2_transform f1 f2 f3 f4 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f3 f4 c+ f8 ccomplement_index f1 f6 f0 c/\ ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f3 f4 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f3 f4 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f3 f4 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f3 f4 c/\ c~ cIN cloop1_transform f1 f2 f3 f4 f2 c/\ c~ cIN cloop2_transform f1 f2 f3 f4 f2 ! c==> cin_dart_of_loop b0 f3 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f3 f4 cin_dart_of_loop b0 cloop2_transform f1 f2 f3 f4
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ |- (((x IN s) /\ (x IN t)) = (x IN (s INTER t)))
T c= c/\ cIN f0 f1 cIN f0 f2 cIN f0 * * part cINTER f1 f2
+ (u = (((POWER (loop_map L)) (((index L) z) u)) z)), ((((index L) z) u) = nu) |- (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) = ((in_dart_of_loop (((POWER (loop_map L)) nu) z)) ((((loop1_transform H) NF) L) x)))
T c==> c= f0 cPOWER * part cloop_map f1 cindex f1 f2 f0 f2 c==> c= cindex f1 f2 f0 f3 c= cin_dart_of_loop f0 cloop1_transform f4 f5 f1 f6 cin_dart_of_loop cPOWER * part cloop_map f1 f3 f2 cloop1_transform f4 f5 f1 f6
+ |- (((!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) ==> ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (pre_card_dart_of_loop L))) = ((\n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n))) (pre_card_dart_of_loop L)))
T c= c==> ! cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cpre_card_dart_of_loop f0 * / cint_le cint_of_num cNUMERAL c_0 cint_of_num b0 cpre_card_dart_of_loop f0
+ |- (!n. (!x. (!y. ((y = (((POWER (node_map H)) n) x)) = (x = (((POWER (inverse (node_map H))) n) y))))))
T c= c= f0 cPOWER * part cnode_map f1 f2 f3 c= f3 cPOWER * part cinverse * part cnode_map f1 f2 f0
+ (A = T) |- (((T ==> (~ B)) = (B ==> (~ T))) = ((A ==> (~ B)) = (B ==> (~ A))))
T c==> c= f0 cT c= c= c==> cT c~ f1 c==> f1 c~ cT c= c==> f0 c~ f1 c==> f1 c~ f0
+ |- ((q = (SUC (SUC d))) ==> (((q * (card_dart_of_loop L)) < ((card_dart_of_loop L) + (card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c==> c= f0 cSUC cSUC f1 c==> c< c* f0 ccard_dart_of_loop f2 c+ ccard_dart_of_loop f2 ccard_dart_of_loop f2 c= c+ f3 cSUC f4 cpre_card_dart_of_loop f2
+ |- (((z = (((POWER (loop_map L)) (SUC (SUC ny))) y)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = ((((loop_map L) ((inv_loop_map L) z)) = ((loop_map L) (((POWER (loop_map L)) ny) ((loop_map L) y)))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c= c==> c= f0 cPOWER * part cloop_map f1 cSUC cSUC f2 f3 c= c+ f2 cSUC f4 cpre_card_dart_of_loop f1 c==> c= cloop_map f1 cinv_loop_map f1 f0 cloop_map f1 cPOWER * part cloop_map f1 f2 cloop_map f1 f3 c= c+ f2 cSUC f4 cpre_card_dart_of_loop f1
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((((in_dart_of_loop z) L) ==> (((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) ==> ((in_dart_of_loop ((loop_map L) y)) ((((loop1_transform H) NF) L) x)))) = (((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) ==> ((in_dart_of_loop ((loop_map L) y)) ((((loop1_transform H) NF) L) x))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> cin_dart_of_loop f4 f0 c==> cin_dart_of_loop f4 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop cloop_map f0 f5 cloop1_transform f1 f2 f0 f3 c==> cin_dart_of_loop f4 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop cloop_map f0 f5 cloop1_transform f1 f2 f0 f3
+ (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (z IN ((node H) y)) |- ((z IN ((node H) y)) /\ ((ny + (card_dart_of_loop L)) = (pre_card_dart_of_loop L)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= chyp'z f0 f1 f2 f3 f5 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c==> cIN f5 * * part cnode f0 f4 c/\ cIN f5 * * part cnode f0 f4 c= c+ f6 ccard_dart_of_loop f2 cpre_card_dart_of_loop f2
+ |- ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)
T * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
+ |- ((\k. ((k < (CARD ((node H) x))) ==> (((is_inj_contour H) ((node_contour H) x)) k))) k)
T * / c==> c< b0 cCARD * * part cnode f0 f1 cis_inj_contour f0 * * part cnode_contour f0 f1 b0 f2
+ |- (((!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))) ==> ((\q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))) q)) = ((\q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))) q))
T c= c==> ! c==> c/\ c<= f0 f1 c< f2 b0 c< c+ f0 f2 c+ f1 b0 * / c==> c/\ c<= f0 f1 c< f2 b0 c< c+ f0 f2 c+ f1 b0 f3 * / c==> c/\ c<= f0 f1 c< f2 b0 c< c+ f0 f2 c+ f1 b0 f3
+ |- ((\n. (!p. (((m + p) < (n + p)) = (m < n)))) n)
T * / ! c= c< c+ f0 b1 c+ b0 b1 c< f0 b0 f1
+ ((((POWER (face_map H)) (SUC p)) y) = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))), (m = (a + (SUC p))), ((NUMERAL (BIT1 _0)) <= b) |- (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) ((SUC m) - (SUC a))) y)) ==> ((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y))))) ==> (L IN ((final_loops H) NF))))
T c==> c= cPOWER * part cface_map f0 cSUC f1 f2 cPOWER * part cinverse * part cnode_map f0 f3 cPOWER * part cface_map f0 cSUC f1 f2 c==> c= f4 c+ f5 cSUC f1 c==> c<= cNUMERAL cBIT1 c_0 f3 c==> c= cPOWER * part cinverse * part cface_map f0 cSUC f5 cPOWER * part cface_map f0 cSUC f4 f2 cPOWER * part cface_map f0 c- cSUC f4 cSUC f5 f2 c==> c< f3 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f5 cPOWER * part cface_map f0 cSUC f4 f2 cIN f6 * * part cfinal_loops f0 f7
+ (~ (nz = (pre_card_dart_of_loop L))), (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L))), ((((index L) z) y) = nz), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), ((((index L) z) y) <= (pre_card_dart_of_loop L)), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)), ((NUMERAL (BIT1 _0)) < q) |- (((NUMERAL (BIT1 _0)) < q) /\ ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c~ c= f0 cpre_card_dart_of_loop f1 c==> c= c+ cSUC f2 cSUC f0 c* f3 ccard_dart_of_loop f1 c==> c= cindex f1 f4 f5 f0 c==> c= cindex f1 cloop_map f1 f5 cinv_loop_map f1 f4 f2 c==> c<= cindex f1 f4 f5 cpre_card_dart_of_loop f1 c==> c<= cindex f1 cloop_map f1 f5 cinv_loop_map f1 f4 cpre_card_dart_of_loop f1 c==> c< cNUMERAL cBIT1 c_0 f3 c/\ c< cNUMERAL cBIT1 c_0 f3 c= c+ f2 cSUC f0 cpre_card_dart_of_loop f1
+ (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- ((((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop z) ((((loop2_transform H) NF) L) x)))) ==> (~ (((((loop2_transform H) NF) L) x) IN NF)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f0 f3 c==> cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c==> cis_normal f1 f2 c==> c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop f5 cloop2_transform f1 f2 f0 f3 c~ cIN cloop2_transform f1 f2 f0 f3 f2
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ ((t1 /\ (t2 /\ t3)) = ((t1 /\ t2) /\ t3)) |- (((t1 /\ t2) /\ t3) = (t1 /\ (t2 /\ t3)))
T c==> c= c/\ f0 c/\ f1 f2 c/\ c/\ f0 f1 f2 c= c/\ c/\ f0 f1 f2 c/\ f0 c/\ f1 f2
+ |- ((~ (EMPTY = (dart_of_loop L))) /\ (((NUMERAL _0) < (card_dart_of_loop L)) /\ ((SUC (pre_card_dart_of_loop L)) = (card_dart_of_loop L))))
T c/\ c~ c= part cEMPTY * part cdart_of_loop f0 c/\ c< cNUMERAL c_0 ccard_dart_of_loop f0 c= cSUC cpre_card_dart_of_loop f0 ccard_dart_of_loop f0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((\nz. ((((index L) z) y) = nz)) nz) ==> (?nz. ((((index L) z) y) = nz))) = T)
T c= c==> * / c= cindex f0 f1 f2 b0 f3 c? / c= cindex f0 f1 f2 b0 cT
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 cF
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_int _2502773))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ |- (((!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) ==> ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) NF)) = ((\NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x))))) NF))
T c= c==> ! ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 f1 * / ! ! c==> c/\ cis_marked c, f0 c, b0 c, b1 b2 c~ cIN b1 * * part cfinal_loops f0 b0 cis_split_condition f0 b0 b1 b2 f1
+ ((is_inj_list ((node_contour H) (((POWER (face_map H)) (SUC p)) y))) b) |- (!j. (((b <= b) /\ ((j <= b) /\ ((((node_contour H) (((POWER (face_map H)) (SUC p)) y)) b) = (((node_contour H) (((POWER (face_map H)) (SUC p)) y)) j)))) ==> (b = j)))
T c==> cis_inj_list * * part cnode_contour f0 cPOWER * part cface_map f0 cSUC f1 f2 f3 ! c==> c/\ c<= f3 f3 c/\ c<= b0 f3 c= cnode_contour f0 cPOWER * part cface_map f0 cSUC f1 f2 f3 cnode_contour f0 cPOWER * part cface_map f0 cSUC f1 f2 b0 c= f3 b0
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- ((!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H))))) = T)
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 c= ! c==> cIN b0 * part cdart f0 ! cIN cPOWER * part cface_map f0 b1 b0 * part cdart f0 cT
+ (simple_hypermap H) |- ((x IN (dart H)) ==> ((((node H) x) INTER ((face H) x)) = (x INSERT EMPTY)))
T c==> csimple_hypermap f0 c==> cIN f1 * part cdart f0 c= * * part cINTER * * part cnode f0 f1 * * part cface f0 f1 * * part cINSERT f1 part cEMPTY
+ |- ((\L. (!x. (((((card1_transform H) NF) L) x) = ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + ((((hyp'p H) NF) L) x))))) L)
T * / ! c= ccard1_transform f0 f1 b0 b1 c+ cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 chyp'p f0 f1 b0 b1 f2
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (k = (ny + (SUC d))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC d) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (((SUC d) <= (((complement_index H) z) m)) /\ (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 ccomplement_index f0 f1 f2 c= cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 c+ f6 b0 cloop_map f4 f7 ccomplement f0 f1 b0 c==> c~ cIN f4 * * part cfinal_loops f0 f3 c==> cis_restricted f0 c==> c= f8 cPOWER * part cloop_map f4 f9 f1 c==> c= f8 cPOWER * part cloop_map cloop2_transform f0 f3 f4 f5 f10 cloop_map f4 f7 c==> c= chyp'y f0 f3 f4 f5 f7 c==> c= chyp'z f0 f3 f4 f5 f1 c==> c= f10 c+ f6 cSUC f11 c==> c= chyp'p f0 f3 f4 f5 f2 c==> c/\ cis_marked c, f0 c, f3 c, f4 f5 c~ cIN f4 * * part cfinal_loops f0 f3 c==> c<= cSUC f11 ccomplement_index f0 f1 f2 c==> cIN f4 f3 c==> cis_normal f0 f3 c/\ c<= cSUC f11 ccomplement_index f0 f1 f2 cIN f4 * * part cfinal_loops f0 f3
+ |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = (((index L) ((loop_map L) y)) ((inv_loop_map L) z))) = ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z))))
T c= c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC d) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF) |- ((z IN (dart H)) ==> (L IN ((final_loops H) NF)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= f3 ccomplement f1 f5 cSUC f6 c==> c= chyp'y f1 f2 f0 f7 f8 c==> c= chyp'z f1 f2 f0 f7 f5 c==> c= cSUC f6 c+ ccomplement_index f1 f5 f9 f10 c==> c= chyp'p f1 f2 f0 f7 f11 c==> c/\ cis_marked c, f1 c, f2 c, f0 f7 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c< f9 f11 c==> c< f10 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f9 f5 c==> cIN f0 f2 c==> cIN f5 * part cdart f1 cIN f0 * * part cfinal_loops f1 f2
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
+ ((((POWER f) n) (f x)) = (((POWER f) (SUC n)) x)) |- ((((POWER f) (SUC n)) x) = (((POWER f) n) (f x)))
T c==> c= cPOWER f0 f1 * f0 f2 cPOWER f0 cSUC f1 f2 c= cPOWER f0 cSUC f1 f2 cPOWER f0 f1 * f0 f2
+ |- (((!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) ==> ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)) = ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x))
T c= c==> ! ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num nz)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (card_dart_of_loop L))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (pre_card_dart_of_loop L))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (d * (card_dart_of_loop L)))) ==> ((~ ((int_lt ((int_add (int_of_num (d * (card_dart_of_loop L)))) (int_of_num (card_dart_of_loop L)))) (int_of_num (card_dart_of_loop L)))) \/ (((int_add (int_of_num ny)) ((int_add (int_of_num nz)) (int_of_num (NUMERAL (BIT1 _0))))) = (int_of_num (pre_card_dart_of_loop L)))))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num (card_dart_of_loop L))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (pre_card_dart_of_loop L))) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num (d * (card_dart_of_loop L)))) ==> ((~ ((int_lt ((int_add (int_of_num (d * (card_dart_of_loop L)))) (int_of_num (card_dart_of_loop L)))) (int_of_num (card_dart_of_loop L)))) \/ (((int_add (int_of_num ny)) ((int_add (int_of_num nz)) (int_of_num (NUMERAL (BIT1 _0))))) = (int_of_num (pre_card_dart_of_loop L))))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num ccard_dart_of_loop f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cpre_card_dart_of_loop f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num c* f2 ccard_dart_of_loop f1 c\/ c~ cint_lt cint_add cint_of_num c* f2 ccard_dart_of_loop f1 cint_of_num ccard_dart_of_loop f1 cint_of_num ccard_dart_of_loop f1 c= cint_add cint_of_num f3 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cpre_card_dart_of_loop f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num ccard_dart_of_loop f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num cpre_card_dart_of_loop f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num c* f2 ccard_dart_of_loop f1 c\/ c~ cint_lt cint_add cint_of_num c* f2 ccard_dart_of_loop f1 cint_of_num ccard_dart_of_loop f1 cint_of_num ccard_dart_of_loop f1 c= cint_add cint_of_num f3 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_of_num cpre_card_dart_of_loop f1
+ |- ((\L. (!x. ((((in_dart_of_loop x) L) /\ (L IN NF)) ==> (x IN (darts_of_family NF))))) L)
T * / ! c==> c/\ cin_dart_of_loop b1 b0 cIN b0 f0 cIN b1 * part cdarts_of_family f0 f1
+ |- ((\i. ((((((is_split_condition H) NF) L) x) /\ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x)))) ==> (!y. ((y IN ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))) ==> (~ (y IN (darts_of_family NF))))))) i)
T * / c==> c/\ cis_split_condition f0 f1 f2 f3 c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 chyp'p f0 f1 f2 f3 ! c==> cIN b1 * * part cnode f0 cPOWER * part cface_map f0 b0 chyp'y f0 f1 f2 f3 c~ cIN b1 * part cdarts_of_family f1 f4
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (!x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))))) ==> ((\NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))))) NF)) = ((\NF. (!L. (!x. (((((is_split_condition H) NF) L) x) ==> ((~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) ((((hyp'z H) NF) L) x)))) /\ ((SUC ((((hyp'p H) NF) L) x)) < (CARD ((face H) x)))))))) NF))
T c= c==> ! ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ c~ c= * * part cnode f0 chyp'y f0 b0 b1 b2 * * part cnode f0 chyp'z f0 b0 b1 b2 c< cSUC chyp'p f0 b0 b1 b2 cCARD * * part cface f0 b2 * / ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ c~ c= * * part cnode f0 chyp'y f0 b0 b1 b2 * * part cnode f0 chyp'z f0 b0 b1 b2 c< cSUC chyp'p f0 b0 b1 b2 cCARD * * part cface f0 b2 f1 * / ! ! c==> cis_split_condition f0 b0 b1 b2 c/\ c~ c= * * part cnode f0 chyp'y f0 b0 b1 b2 * * part cnode f0 chyp'z f0 b0 b1 b2 c< cSUC chyp'p f0 b0 b1 b2 cCARD * * part cface f0 b2 f1
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((\x. (((real_mul x) ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) ==> ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) L)) = ((\L. (!x. (((((is_split_condition H) NF) L) x) ==> (((in_dart_of_loop ((((hyp'y H) NF) L) x)) L) /\ ((((loop_map L) ((((hyp'y H) NF) L) x)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (~ (((node H) ((((hyp'y H) NF) L) x)) = ((node H) x)))))))) L))
T c= c==> ! ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 f2 * / ! c==> cis_split_condition f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'y f0 f1 b0 b1 b0 c/\ c= cloop_map b0 chyp'y f0 f1 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 c~ c= * * part cnode f0 chyp'y f0 f1 b0 b1 * * part cnode f0 b1 f2
+ (is_restricted H), (u = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (SUC p)) y))), (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (m = (a + (SUC p))), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- (((((POWER (face_map H)) (SUC p)) y) IN (((node H) u) INTER ((face H) u))) ==> (L IN ((final_loops H) NF)))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cinverse * part cnode_map f0 f2 cPOWER * part cface_map f0 cSUC f3 f4 c==> c= f1 cPOWER * part cface_map f0 cSUC f5 f4 c==> c= chyp'y f0 f6 f7 f8 f4 c==> c= chyp'z f0 f6 f7 f8 f9 c==> c= f10 c+ f11 cSUC f3 c==> c= chyp'p f0 f6 f7 f8 f10 c==> c/\ cis_marked c, f0 c, f6 c, f7 f8 c~ cIN f7 * * part cfinal_loops f0 f6 c==> c<= cNUMERAL cBIT1 c_0 f2 c==> c< f11 f10 c==> c< f2 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f11 f9 c==> cIN f7 f6 c==> cis_normal f0 f6 c==> cIN cPOWER * part cface_map f0 cSUC f3 f4 * * part cINTER * * part cnode f0 f1 * * part cface f0 f1 cIN f7 * * part cfinal_loops f0 f6
+ |- (((!x. (!k. ((k < (CARD ((node H) x))) ==> (((is_inj_contour H) ((node_contour H) x)) k)))) ==> ((\x. (!k. ((k < (CARD ((node H) x))) ==> (((is_inj_contour H) ((node_contour H) x)) k)))) x)) = ((\x. (!k. ((k < (CARD ((node H) x))) ==> (((is_inj_contour H) ((node_contour H) x)) k)))) x))
T c= c==> ! ! c==> c< b1 cCARD * * part cnode f0 b0 cis_inj_contour f0 * * part cnode_contour f0 b0 b1 * / ! c==> c< b1 cCARD * * part cnode f0 b0 cis_inj_contour f0 * * part cnode_contour f0 b0 b1 f1 * / ! c==> c< b1 cCARD * * part cnode f0 b0 cis_inj_contour f0 * * part cnode_contour f0 b0 b1 f1
+ |- ((!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + (SUC (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)))) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))))) = T)
T c= ! ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ c= c+ cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 cSUC cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 cpre_card_dart_of_loop b0 c/\ ! c==> cin_dart_of_loop b2 cloop1_transform f0 f1 b0 b1 c~ cin_dart_of_loop b2 cloop2_transform f0 f1 b0 b1 c/\ ! c==> cin_dart_of_loop b2 cloop2_transform f0 f1 b0 b1 c~ cin_dart_of_loop b2 cloop1_transform f0 f1 b0 b1 c/\ c~ cIN cloop1_transform f0 f1 b0 b1 f1 c/\ c~ cIN cloop2_transform f0 f1 b0 b1 f1 ! c==> cin_dart_of_loop b2 b0 c\/ cin_dart_of_loop b2 cloop1_transform f0 f1 b0 b1 cin_dart_of_loop b2 cloop2_transform f0 f1 b0 b1 cT
+ |- (((!m. (!n. ((~ (m < n)) = (n <= m)))) ==> ((\m. (!n. ((~ (m < n)) = (n <= m)))) m)) = ((\m. (!n. ((~ (m < n)) = (n <= m)))) m))
T c= c==> ! ! c= c~ c< b0 b1 c<= b1 b0 * / ! c= c~ c< b0 b1 c<= b1 b0 f0 * / ! c= c~ c< b0 b1 c<= b1 b0 f0
+ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) |- (((((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) /\ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))) ==> (?k. ((k <= (pre_card_dart_of_loop ((((loop1_transform H) NF) L) x))) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z))))) = (?k. ((k <= (pre_card_dart_of_loop ((((loop1_transform H) NF) L) x))) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)))))
T c==> cin_dart_of_loop f0 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f3 f4 c= c==> c/\ cin_dart_of_loop f5 cloop1_transform f1 f2 f3 f4 cin_dart_of_loop f0 cloop1_transform f1 f2 f3 f4 c? / c/\ c<= b0 cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c= f0 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f5 c? / c/\ c<= b0 cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c= f0 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f5
+ (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) L) |- (((SUC d) <= m) ==> (L IN ((final_loops H) NF)))
T c==> c= f0 cPOWER * part cface_map f1 cSUC f2 f3 c==> c= chyp'y f1 f4 f5 f6 f3 c==> c= chyp'p f1 f4 f5 f6 f7 c==> c/\ cis_marked c, f1 c, f4 c, f5 f6 c~ cIN f5 * * part cfinal_loops f1 f4 c==> cIN f5 f4 c==> cin_dart_of_loop f0 f5 c==> c<= cSUC f2 f7 cIN f5 * * part cfinal_loops f1 f4
+ ((A = F) ==> ((A ==> (~ B)) = (B ==> (~ A)))) |- ((A ==> (~ B)) = (B ==> (~ A)))
T c==> c==> c= f0 cF c= c==> f0 c~ f1 c==> f1 c~ f0 c= c==> f0 c~ f1 c==> f1 c~ f0
+ (~ (q = (NUMERAL _0))), (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L))) |- ((~ ((NUMERAL (BIT1 _0)) < q)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c~ c= f0 cNUMERAL c_0 c==> c= c+ cSUC f1 cSUC f2 c* f0 ccard_dart_of_loop f3 c==> c~ c< cNUMERAL cBIT1 c_0 f0 c= c+ f1 cSUC f2 cpre_card_dart_of_loop f3
+ |- (((!L'. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L'))))) ==> (L = L')))) ==> ((\L'. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L'))))) ==> (L = L')))) L')) = ((\L'. (!x. ((((is_normal H) NF) /\ ((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L'))))) ==> (L = L')))) L'))
T c= c==> ! ! c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 f2 cin_dart_of_loop b1 b0 c= f2 b0 * / ! c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 f2 cin_dart_of_loop b1 b0 c= f2 b0 f3 * / ! c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN b0 f1 c/\ cin_dart_of_loop b1 f2 cin_dart_of_loop b1 b0 c= f2 b0 f3
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((permutes p) s) /\ (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c/\ cpermutes f0 f1 ! ! ! c= c= b2 cPOWER f0 b0 b1 c= b1 cPOWER * part cinverse f0 b0 b2
+ |- (((!n. (((is_inj_list p) n) = (!i. (!j. (((i <= n) /\ ((j <= n) /\ ((p i) = (p j)))) ==> (i = j)))))) ==> ((\n. (((is_inj_list p) n) = (!i. (!j. (((i <= n) /\ ((j <= n) /\ ((p i) = (p j)))) ==> (i = j)))))) n)) = ((\n. (((is_inj_list p) n) = (!i. (!j. (((i <= n) /\ ((j <= n) /\ ((p i) = (p j)))) ==> (i = j)))))) n))
T c= c==> ! c= cis_inj_list f0 b0 ! ! c==> c/\ c<= b1 b0 c/\ c<= b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 * / c= cis_inj_list f0 b0 ! ! c==> c/\ c<= b1 b0 c/\ c<= b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 f1 * / c= cis_inj_list f0 b0 ! ! c==> c/\ c<= b1 b0 c/\ c<= b2 b0 c= * f0 b1 * f0 b2 c= b1 b2 f1
+ |- ((\t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))) t2)
T * / c= c~ c==> f0 b0 c/\ f0 c~ b0 f1
+ |- (((!m. (!n. (((m <= n) /\ (~ (m = n))) = (m < n)))) ==> ((\m. (!n. (((m <= n) /\ (~ (m = n))) = (m < n)))) m)) = ((\m. (!n. (((m <= n) /\ (~ (m = n))) = (m < n)))) m))
T c= c==> ! ! c= c/\ c<= b0 b1 c~ c= b0 b1 c< b0 b1 * / ! c= c/\ c<= b0 b1 c~ c= b0 b1 c< b0 b1 f0 * / ! c= c/\ c<= b0 b1 c~ c= b0 b1 c< b0 b1 f0
- |- ((\L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))) L)
T * / ! c= * * * * part cpath2_transform f0 f1 b0 b1 * * * part cglue * * part cpath_of_loop b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 * * part ccomplement f0 chyp'z f0 f1 b0 b1 cindex b0 cinverse * part cnode_map f0 chyp'y f0 f1 b0 b1 cnode_map f0 chyp'z f0 f1 b0 b1 f2
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (t <= nz))) = ((\t. (t \/ (~ t))) (t <= nz)))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c<= f0 f1 * / c\/ b0 c~ b0 c<= f0 f1
+ ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- (((in_dart_of_loop (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))) ((((loop2_transform H) NF) L) x)) = T)
T c==> cin_dart_of_loop cloop_map f0 f1 cloop2_transform f2 f3 f0 f4 c= cin_dart_of_loop cPOWER * part cloop_map cloop2_transform f2 f3 f0 f4 f5 cloop_map f0 f1 cloop2_transform f2 f3 f0 f4 cT
+ |- (((!m. (!n. (((SUC m) = (SUC n)) = (m = n)))) ==> ((\m. (!n. (((SUC m) = (SUC n)) = (m = n)))) m)) = ((\m. (!n. (((SUC m) = (SUC n)) = (m = n)))) m))
T c= c==> ! ! c= c= cSUC b0 cSUC b1 c= b0 b1 * / ! c= c= cSUC b0 cSUC b1 c= b0 b1 f0 * / ! c= c= cSUC b0 cSUC b1 c= b0 b1 f0
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((t <= (nz + m)) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) t) z))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f10 cloop_map f3 f7 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c/\ c<= f11 c+ f5 f0 c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 f11 f6 c==> c<= f10 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 cIN f3 * * part cfinal_loops f1 f2
+ (q = (NUMERAL _0)) |- (((((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = ((((SUC ny) + (SUC nz)) = ((NUMERAL _0) * (card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c==> c= f0 cNUMERAL c_0 c= c==> c= c+ cSUC f1 cSUC f2 c* f0 ccard_dart_of_loop f3 c= c+ f1 cSUC f2 cpre_card_dart_of_loop f3 c==> c= c+ cSUC f1 cSUC f2 c* cNUMERAL c_0 ccard_dart_of_loop f3 c= c+ f1 cSUC f2 cpre_card_dart_of_loop f3
+ (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (L IN NF), ((in_dart_of_loop u) L) |- (((((is_split_condition H) NF) L) x) ==> (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= ((((hyp'p H) NF) L) x)) ==> (L IN ((final_loops H) NF)))))
T c==> c= f0 cPOWER * part cface_map f1 cSUC f2 f3 c==> c= chyp'y f1 f4 f5 f6 f3 c==> cIN f5 f4 c==> cin_dart_of_loop f0 f5 c==> cis_split_condition f1 f4 f5 f6 c==> c<= cNUMERAL cBIT1 c_0 cSUC f2 c==> c<= cSUC f2 chyp'p f1 f4 f5 f6 cIN f5 * * part cfinal_loops f1 f4
+ (!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))), (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- (((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))) = ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))
T c==> ! c==> cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 c~ cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c==> c~ cIN f2 * * part cfinal_loops f0 f1 c==> c= chyp'y f0 f1 f2 f3 f4 c==> c= chyp'z f0 f1 f2 f3 f5 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c==> cIN f2 f1 c==> cin_dart_of_loop f5 cloop1_transform f0 f1 f2 f3 c==> cin_dart_of_loop cloop_map f2 f4 cloop2_transform f0 f1 f2 f3 c==> cis_normal f0 f1 c= c/\ c~ cIN cloop2_transform f0 f1 f2 f3 f1 ! c==> cin_dart_of_loop b0 f2 c\/ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3 c/\ c~ cIN cloop1_transform f0 f1 f2 f3 f1 c/\ c~ cIN cloop2_transform f0 f1 f2 f3 f1 ! c==> cin_dart_of_loop b0 f2 c\/ cin_dart_of_loop b0 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop b0 cloop2_transform f0 f1 f2 f3
+ |- ((\n. ((((permutes p) s) /\ (m <= n)) ==> (!x. ((((POWER (inverse p)) m) (((POWER p) n) x)) = (((POWER p) (n - m)) x))))) n)
T * / c==> c/\ cpermutes f0 f1 c<= f2 b0 ! c= cPOWER * part cinverse f0 f2 cPOWER f0 b0 b1 cPOWER f0 c- b0 f2 b1 f3
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))), ((permutes p) s) |- (((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))) = T)
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c==> cpermutes f0 f1 c= c= c= f2 cPOWER f0 f3 f4 c= f4 cPOWER * part cinverse f0 f3 f2 cT
+ |- (((!p. (((m + n) <= (m + p)) = (n <= p))) ==> ((\p. (((m + n) <= (m + p)) = (n <= p))) p)) = ((\p. (((m + n) <= (m + p)) = (n <= p))) p))
T c= c==> ! c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2 * / c= c<= c+ f0 f1 c+ f0 b0 c<= f1 b0 f2
+ ((\q. (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L)))) q) |- (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L)))
T c==> * / c= c+ cSUC f0 cSUC f1 c* b0 ccard_dart_of_loop f2 f3 c= c+ cSUC f0 cSUC f1 c* f3 ccard_dart_of_loop f2
+ |- (((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) ==> (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y)))))))))) = (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c= c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- (((\k. ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))) k) ==> (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cin_dart_of_loop f9 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 c==> * / c/\ c<= b0 c+ f8 ccomplement_index f1 f6 f0 c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 f10 cIN f3 * * part cfinal_loops f1 f2
+ |- ((\m. (!n. (!p. (((m + n) <= (m + p)) = (n <= p))))) m)
T * / ! ! c= c<= c+ b0 b1 c+ b0 b2 c<= b1 b2 f0
+ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) |- (((?k. ((k <= (pre_card_dart_of_loop ((((loop1_transform H) NF) L) x))) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)))) ==> (L IN ((final_loops H) NF))) = (L IN ((final_loops H) NF)))
T c==> cin_dart_of_loop f0 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f3 f4 c= c==> c? / c/\ c<= b0 cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c= f0 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f5 cIN f3 * * part cfinal_loops f1 f2 cIN f3 * * part cfinal_loops f1 f2
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c/\ c= cpath2_transform f1 f2 f0 f3 cNUMERAL c_0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0
+ ((\k. ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))) k) |- ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))
T c==> * / c/\ c<= b0 c+ f0 ccomplement_index f1 f2 f3 c= f4 cPOWER * part cloop_map cloop2_transform f1 f5 f6 f7 b0 cloop_map f6 f8 f9 c/\ c<= f9 c+ f0 ccomplement_index f1 f2 f3 c= f4 cPOWER * part cloop_map cloop2_transform f1 f5 f6 f7 f9 cloop_map f6 f8
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), (((((loop2_transform H) NF) L) x) IN NF), ((is_normal H) NF) |- (((in_dart_of_loop ((loop_map L) y)) L) ==> (((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) ==> ((in_dart_of_loop z) ((((loop2_transform H) NF) L) x))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cIN cloop2_transform f1 f2 f0 f3 f2 c==> cis_normal f1 f2 c==> cin_dart_of_loop cloop_map f0 f5 f0 c==> cin_dart_of_loop cloop_map f0 f5 cloop2_transform f1 f2 f0 f3 cin_dart_of_loop f4 cloop2_transform f1 f2 f0 f3
+ |- (((in_dart_of_loop (((POWER (loop_map L)) q) ((loop_map L) y))) ((((loop2_transform H) NF) L) x)) = ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x)))
T c= cin_dart_of_loop cPOWER * part cloop_map f0 f1 cloop_map f0 f2 cloop2_transform f3 f4 f0 f5 cin_dart_of_loop cPOWER * part cloop_map f0 cSUC f1 f2 cloop2_transform f3 f4 f0 f5
+ |- ((\m. (!n. (!x. ((((POWER p) m) (((POWER p) n) x)) = (((POWER p) (m + n)) x))))) m)
T * / ! ! c= cPOWER f0 b0 cPOWER f0 b1 b2 cPOWER f0 c+ b0 b1 b2 f1
+ ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m) |- (((((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)) /\ ((!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))) /\ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y))))))) ==> ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))) = ((((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((index L) z) y) + ((((hyp'p H) NF) L) x))) /\ ((!i. ((i <= (((index L) z) y)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) z) y) + i)) z) = (((POWER (face_map H)) i) y))))))) ==> ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> c= cindex f0 f1 f2 f3 c==> c= chyp'p f4 f5 f0 f6 f7 c= c==> c/\ cin_dart_of_loop f1 cloop1_transform f4 f5 f0 f6 c/\ c= cpre_card_dart_of_loop cloop1_transform f4 f5 f0 f6 c+ f3 f7 c/\ ! c==> c<= b0 f3 c= cPOWER * part cloop_map cloop1_transform f4 f5 f0 f6 b0 f1 cPOWER * part cloop_map f0 b0 f1 ! c==> c<= b0 f7 c= cPOWER * part cloop_map cloop1_transform f4 f5 f0 f6 c+ f3 b0 f1 cPOWER * part cface_map f4 b0 f2 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c==> c/\ cin_dart_of_loop f1 cloop1_transform f4 f5 f0 f6 c/\ c= cpre_card_dart_of_loop cloop1_transform f4 f5 f0 f6 c+ cindex f0 f1 f2 chyp'p f4 f5 f0 f6 c/\ ! c==> c<= b0 cindex f0 f1 f2 c= cPOWER * part cloop_map cloop1_transform f4 f5 f0 f6 b0 f1 cPOWER * part cloop_map f0 b0 f1 ! c==> c<= b0 chyp'p f4 f5 f0 f6 c= cPOWER * part cloop_map cloop1_transform f4 f5 f0 f6 c+ cindex f0 f1 f2 b0 f1 cPOWER * part cface_map f4 b0 f2 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6 c~ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 c/\ c~ cIN cloop1_transform f4 f5 f0 f6 f5 c/\ c~ cIN cloop2_transform f4 f5 f0 f6 f5 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f4 f5 f0 f6 cin_dart_of_loop b0 cloop2_transform f4 f5 f0 f6
+ |- ((\L. ((~ ((dart_of_loop L) = EMPTY)) /\ (((NUMERAL _0) < (card_dart_of_loop L)) /\ ((card_dart_of_loop L) = (SUC (pre_card_dart_of_loop L)))))) L)
T * / c/\ c~ c= * part cdart_of_loop b0 part cEMPTY c/\ c< cNUMERAL c_0 ccard_dart_of_loop b0 c= ccard_dart_of_loop b0 cSUC cpre_card_dart_of_loop b0 f0
- |- ((\m. (!n. ((m * (SUC n)) = (m + (m * n))))) m)
T * / ! c= c* b0 cSUC b1 c+ b0 c* b0 b1 f0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((SUC w) <= (((complement_index H) z) m)), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cface_map f1 cSUC f4 f5 c==> c= f3 ccomplement f1 f6 cSUC f7 c==> c= chyp'y f1 f2 f0 f8 f5 c==> c= chyp'z f1 f2 f0 f8 f6 c==> c= chyp'p f1 f2 f0 f8 f9 c==> c/\ cis_marked c, f1 c, f2 c, f0 f8 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c<= cSUC f7 ccomplement_index f1 f6 f9 c==> cIN f0 f2 c==> cis_normal f1 f2 cIN f0 * * part cfinal_loops f1 f2
+ ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- ((((ny + (SUC nz)) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))) = ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) + (SUC nz)) = (pre_card_dart_of_loop L)) /\ ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c= c/\ c= c+ f3 cSUC f4 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 c~ cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7 c~ cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 c/\ c~ cIN cloop1_transform f5 f6 f0 f7 f6 c/\ c~ cIN cloop2_transform f5 f6 f0 f7 f6 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7 c/\ c= c+ cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cSUC f4 cpre_card_dart_of_loop f0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 c~ cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7 c~ cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 c/\ c~ cIN cloop1_transform f5 f6 f0 f7 f6 c/\ c~ cIN cloop2_transform f5 f6 f0 f7 f6 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f5 f6 f0 f7 cin_dart_of_loop b0 cloop2_transform f5 f6 f0 f7
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) /\ (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c/\ c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
+ (((SUC ny) <= (card_dart_of_loop L)) /\ ((SUC nz) < (card_dart_of_loop L))) |- (((((SUC ny) + (SUC nz)) < ((card_dart_of_loop L) + (card_dart_of_loop L))) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c/\ c<= cSUC f0 ccard_dart_of_loop f1 c< cSUC f2 ccard_dart_of_loop f1 c= c==> c< c+ cSUC f0 cSUC f2 c+ ccard_dart_of_loop f1 ccard_dart_of_loop f1 c= c+ f0 cSUC f2 cpre_card_dart_of_loop f1 c= c+ f0 cSUC f2 cpre_card_dart_of_loop f1
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (!b. (((\j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) b) ==> (L IN ((final_loops H) NF))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= f3 ccomplement f1 f5 cSUC f6 c==> c= chyp'y f1 f2 f0 f7 f8 c==> c= chyp'z f1 f2 f0 f7 f5 c==> c= chyp'p f1 f2 f0 f7 f9 c==> c/\ cis_marked c, f1 c, f2 c, f0 f7 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 ! c==> * / c/\ c< f10 f9 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f10 f5 c= cSUC f6 c+ ccomplement_index f1 f5 f10 b1 b0 cIN f0 * * part cfinal_loops f1 f2
+ (((((hyp'y H) NF) L) x) = y), (u IN ((node H) (((POWER (face_map H)) (SUC s)) y))) |- (((~ (u IN (darts_of_family NF))) ==> (L IN ((final_loops H) NF))) = (((u IN ((node H) (((POWER (face_map H)) (SUC s)) ((((hyp'y H) NF) L) x)))) ==> (~ (u IN (darts_of_family NF)))) ==> (L IN ((final_loops H) NF))))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> cIN f5 * * part cnode f0 cPOWER * part cface_map f0 cSUC f6 f4 c= c==> c~ cIN f5 * part cdarts_of_family f1 cIN f2 * * part cfinal_loops f0 f1 c==> c==> cIN f5 * * part cnode f0 cPOWER * part cface_map f0 cSUC f6 chyp'y f0 f1 f2 f3 c~ cIN f5 * part cdarts_of_family f1 cIN f2 * * part cfinal_loops f0 f1
+ (~ (L IN ((final_loops H) NF))), (u = (((POWER (loop_map L)) t) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF) |- ((?d. (m = (a + (SUC d)))) ==> ((u = (((POWER (inverse (node_map H))) b) (((POWER (face_map H)) (m - a)) y))) ==> (L IN ((final_loops H) NF))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= chyp'y f1 f2 f0 f6 f7 c==> c= chyp'z f1 f2 f0 f6 f5 c==> c= chyp'p f1 f2 f0 f6 f8 c==> c/\ cis_marked c, f1 c, f2 c, f0 f6 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> c? / c= f8 c+ f9 cSUC b0 c==> c= f3 cPOWER * part cinverse * part cnode_map f1 f10 cPOWER * part cface_map f1 c- f8 f9 f7 cIN f0 * * part cfinal_loops f1 f2
+ (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) L) |- (((NUMERAL (BIT1 _0)) <= (SUC d)) ==> (((SUC d) <= m) ==> (L IN ((final_loops H) NF))))
T c==> c= f0 cPOWER * part cface_map f1 cSUC f2 f3 c==> c= chyp'y f1 f4 f5 f6 f3 c==> c= chyp'p f1 f4 f5 f6 f7 c==> c/\ cis_marked c, f1 c, f4 c, f5 f6 c~ cIN f5 * * part cfinal_loops f1 f4 c==> cIN f5 f4 c==> cin_dart_of_loop f0 f5 c==> c<= cNUMERAL cBIT1 c_0 cSUC f2 c==> c<= cSUC f2 f7 cIN f5 * * part cfinal_loops f1 f4
+ (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (z IN (dart H))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cis_normal f1 f2 cIN f4 * part cdart f1
+ (~ (L IN ((final_loops H) NF))), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i))))))) ==> ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))))))))) = ((!u. (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))) /\ ((!u. (((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x))))) /\ ((~ (((((loop1_transform H) NF) L) x) IN NF)) /\ ((~ (((((loop2_transform H) NF) L) x) IN NF)) /\ (!u. (((in_dart_of_loop u) L) ==> (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x))))))))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= c==> c/\ cin_dart_of_loop cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cloop2_transform f1 f2 f0 f3 c/\ c= cpre_card_dart_of_loop cloop2_transform f1 f2 f0 f3 ccard2_transform f1 f2 f0 f3 c/\ ! c==> c<= b0 cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cPOWER * part cloop_map f0 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ! c==> c<= b0 ccomplement_index f1 chyp'z f1 f2 f0 f3 chyp'p f1 f2 f0 f3 c= cPOWER * part cloop_map cloop2_transform f1 f2 f0 f3 c+ cindex f0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 cnode_map f1 chyp'z f1 f2 f0 f3 b0 cinverse * part cnode_map f1 chyp'y f1 f2 f0 f3 ccomplement f1 chyp'z f1 f2 f0 f3 b0 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c/\ c~ cIN cloop1_transform f1 f2 f0 f3 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f3 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c/\ ! c==> cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3 c~ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 c/\ c~ cIN cloop1_transform f1 f2 f0 f3 f2 c/\ c~ cIN cloop2_transform f1 f2 f0 f3 f2 ! c==> cin_dart_of_loop b0 f0 c\/ cin_dart_of_loop b0 cloop1_transform f1 f2 f0 f3 cin_dart_of_loop b0 cloop2_transform f1 f2 f0 f3
+ (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF), ((is_normal H) NF) |- ((((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x))) ==> ((u = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) z))) ==> (L IN ((final_loops H) NF))))
T c==> cis_restricted f0 c==> c= f1 cPOWER * part cface_map f0 cSUC f2 f3 c==> c= chyp'y f0 f4 f5 f6 f3 c==> c= chyp'z f0 f4 f5 f6 f7 c==> c= chyp'p f0 f4 f5 f6 f8 c==> c/\ cis_marked c, f0 c, f4 c, f5 f6 c~ cIN f5 * * part cfinal_loops f0 f4 c==> c<= cNUMERAL cBIT1 c_0 f9 c==> c< f10 f8 c==> c< f9 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC f10 f7 c==> cIN f5 f4 c==> cis_normal f0 f4 c==> c= chyp'z f0 f4 f5 f6 cPOWER * part cface_map f0 cSUC chyp'p f0 f4 f5 f6 chyp'y f0 f4 f5 f6 c==> c= f1 cPOWER * part cinverse * part cnode_map f0 f9 cPOWER * part cinverse * part cface_map f0 cSUC f10 f7 cIN f5 * * part cfinal_loops f0 f4
+ |- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) (((index L) ((loop_map L) y)) ((inv_loop_map L) z)))
T * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2
+ ((\d. (t = (nz + (SUC d)))) d) |- (((t = (nz + (SUC d))) ==> ((t <= (nz + m)) ==> (L IN ((final_loops H) NF)))) = ((t <= (nz + m)) ==> (L IN ((final_loops H) NF))))
T c==> * / c= f0 c+ f1 cSUC b0 f2 c= c==> c= f0 c+ f1 cSUC f2 c==> c<= f0 c+ f1 f3 cIN f4 * * part cfinal_loops f5 f6 c==> c<= f0 c+ f1 f3 cIN f4 * * part cfinal_loops f5 f6
+ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- (((?k. ((k <= (pre_card_dart_of_loop ((((loop2_transform H) NF) L) x))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))) ==> (L IN ((final_loops H) NF))) = (L IN ((final_loops H) NF)))
T c==> cin_dart_of_loop f0 cloop2_transform f1 f2 f3 f4 c==> cin_dart_of_loop cloop_map f3 f5 cloop2_transform f1 f2 f3 f4 c= c==> c? / c/\ c<= b0 cpre_card_dart_of_loop cloop2_transform f1 f2 f3 f4 c= f0 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cIN f3 * * part cfinal_loops f1 f2 cIN f3 * * part cfinal_loops f1 f2
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
+ |- ((\x. (!i. ((((((is_split_condition H) NF) L) x) /\ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= ((((hyp'p H) NF) L) x)))) ==> (!y. ((y IN ((node H) (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))) ==> (~ (y IN (darts_of_family NF)))))))) x)
T * / ! c==> c/\ cis_split_condition f0 f1 f2 b0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 chyp'p f0 f1 f2 b0 ! c==> cIN b2 * * part cnode f0 cPOWER * part cface_map f0 b1 chyp'y f0 f1 f2 b0 c~ cIN b2 * part cdarts_of_family f1 f3
+ ((is_inj_list ((path_of_loop L) z)) (pre_card_dart_of_loop L)) |- ((\i. (!j. (((i <= (pre_card_dart_of_loop L)) /\ (j < i)) ==> (~ ((((path_of_loop L) z) j) = (((path_of_loop L) z) i)))))) (k + (SUC nz)))
T c==> cis_inj_list * * part cpath_of_loop f0 f1 cpre_card_dart_of_loop f0 * / ! c==> c/\ c<= b0 cpre_card_dart_of_loop f0 c< b1 b0 c~ c= cpath_of_loop f0 f1 b1 cpath_of_loop f0 f1 b0 c+ f2 cSUC f3
+ |- (((!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) ==> ((\NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) NF)) = ((\NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L')))))))))))) NF))
T c= c==> ! c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 * / c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 f1 * / c= cis_normal f0 b0 c/\ ! c==> cIN b1 b0 c/\ cis_loop f0 b1 c? / c/\ cIN b2 * part cdart f0 cin_dart_of_loop b2 b1 c/\ ! c==> cIN b1 b0 c? / c? / c/\ cin_dart_of_loop b2 b1 c/\ cin_dart_of_loop b3 b1 c~ c= * * part cnode f0 b2 * * part cnode f0 b3 c/\ ! ! ! c==> c/\ cIN b1 b0 c/\ cIN b2 b0 c/\ cin_dart_of_loop b3 b1 cin_dart_of_loop b3 b2 c= b1 b2 ! ! ! c==> c/\ cIN b1 b0 c/\ cin_dart_of_loop b2 b1 cIN b3 * * part cnode f0 b2 c? / c/\ cIN b4 b0 cin_dart_of_loop b3 b4 f1
+ (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_int _2502786))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0
+ |- ((\x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path2_transform H) NF) L) x) (NUMERAL _0)) = ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) /\ (((in_dart_of_loop ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((((loop2_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop2_transform H) NF) L) x)) = ((((card2_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((POWER (loop_map L)) i) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))))) /\ (!i. ((i <= (((complement_index H) ((((hyp'z H) NF) L) x)) ((((hyp'p H) NF) L) x))) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) ((((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))) + i)) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) = (((complement H) ((((hyp'z H) NF) L) x)) i)))))))))) x)
T * / c==> c/\ cis_marked c, f0 c, f1 c, f2 b0 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ c= cpath2_transform f0 f1 f2 b0 cNUMERAL c_0 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 c/\ cin_dart_of_loop cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cloop2_transform f0 f1 f2 b0 c/\ c= cpre_card_dart_of_loop cloop2_transform f0 f1 f2 b0 ccard2_transform f0 f1 f2 b0 c/\ ! c==> c<= b1 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cPOWER * part cloop_map f2 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 ! c==> c<= b1 ccomplement_index f0 chyp'z f0 f1 f2 b0 chyp'p f0 f1 f2 b0 c= cPOWER * part cloop_map cloop2_transform f0 f1 f2 b0 c+ cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 b1 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 ccomplement f0 chyp'z f0 f1 f2 b0 b1 f3
+ |- (((!H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) ==> ((\H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) H)) = ((\H. (!NF. (!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> ((((is_split_condition H) NF) L) x)))))) H))
T c= c==> ! ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 * / ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cis_marked c, b0 c, b1 c, b2 b3 c~ cIN b2 * * part cfinal_loops b0 b1 cis_split_condition b0 b1 b2 b3 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((SUC d) = ((((complement_index H) z) a) + b)), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((NUMERAL (BIT1 _0)) <= b), (a < m), (b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))), (L IN NF) |- ((is_node_nondegenerate H) ==> ((z IN (dart H)) ==> (L IN ((final_loops H) NF))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= f3 ccomplement f1 f5 cSUC f6 c==> c= chyp'y f1 f2 f0 f7 f8 c==> c= chyp'z f1 f2 f0 f7 f5 c==> c= cSUC f6 c+ ccomplement_index f1 f5 f9 f10 c==> c= chyp'p f1 f2 f0 f7 f11 c==> c/\ cis_marked c, f1 c, f2 c, f0 f7 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c<= cNUMERAL cBIT1 c_0 f10 c==> c< f9 f11 c==> c< f10 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f9 f5 c==> cIN f0 f2 c==> cis_node_nondegenerate f1 c==> cIN f5 * part cdart f1 cIN f0 * * part cfinal_loops f1 f2
+ (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (!k. ((in_dart_of_loop (((POWER (loop_map L)) k) y)) L))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 ! cin_dart_of_loop cPOWER * part cloop_map f2 b0 f4 f2
+ (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (u = (((POWER (loop_map L)) (((index L) z) u)) z)), ((((index L) z) u) = nu), (nu <= nz), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) |- (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f5 cPOWER * part cloop_map f3 b0 f5 c==> c= f6 cPOWER * part cloop_map f3 cindex f3 f5 f6 f5 c==> c= cindex f3 f5 f6 f7 c==> c<= f7 f0 c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f3 f4 c\/ cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 cin_dart_of_loop f6 cloop2_transform f1 f2 f3 f4
+ ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((((hyp'z H) NF) L) x) = z)
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c= chyp'z f0 f1 f2 f3 f4
+ |- (((!H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) ==> ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((is_split_condition H) NF) L) x) = ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))))))) H))
T c= c==> ! ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0 * / ! ! ! c= cis_split_condition b0 b1 b2 b3 c/\ cis_restricted b0 c/\ cis_normal b0 b1 c/\ cIN b2 b1 c/\ c~ cIN b2 * * part cfinal_loops b0 b1 c/\ cin_dart_of_loop b3 b2 c= chead_of_atom b0 b1 b3 b3 f0
+ |- (((!H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) ==> ((\H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) H)) = ((\H. (!NF. (((is_normal H) NF) = ((!L. ((L IN NF) ==> (((is_loop H) L) /\ (?x. ((x IN (dart H)) /\ ((in_dart_of_loop x) L)))))) /\ ((!L. ((L IN NF) ==> (?y. (?z. (((in_dart_of_loop y) L) /\ (((in_dart_of_loop z) L) /\ (~ (((node H) y) = ((node H) z))))))))) /\ ((!L. (!L'. (!x. (((L IN NF) /\ ((L' IN NF) /\ (((in_dart_of_loop x) L) /\ ((in_dart_of_loop x) L')))) ==> (L = L'))))) /\ (!L. (!x. (!y. (((L IN NF) /\ (((in_dart_of_loop x) L) /\ (y IN ((node H) x)))) ==> (?L'. ((L' IN NF) /\ ((in_dart_of_loop y) L'))))))))))))) H))
T c= c==> ! ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 * / ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 f0 * / ! c= cis_normal b0 b1 c/\ ! c==> cIN b2 b1 c/\ cis_loop b0 b2 c? / c/\ cIN b3 * part cdart b0 cin_dart_of_loop b3 b2 c/\ ! c==> cIN b2 b1 c? / c? / c/\ cin_dart_of_loop b3 b2 c/\ cin_dart_of_loop b4 b2 c~ c= * * part cnode b0 b3 * * part cnode b0 b4 c/\ ! ! ! c==> c/\ cIN b2 b1 c/\ cIN b3 b1 c/\ cin_dart_of_loop b4 b2 cin_dart_of_loop b4 b3 c= b2 b3 ! ! ! c==> c/\ cIN b2 b1 c/\ cin_dart_of_loop b3 b2 cIN b4 * * part cnode b0 b3 c? / c/\ cIN b5 b1 cin_dart_of_loop b4 b5 f0
+ (~ ((NUMERAL (BIT1 _0)) < q)) |- (q <= (NUMERAL (BIT1 _0)))
T c==> c~ c< cNUMERAL cBIT1 c_0 f0 c<= f0 cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) ==> ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) p)) = ((\p. (!m. (!n. (!x. ((((POWER p) (m + n)) x) = (((POWER p) m) (((POWER p) n) x))))))) p))
T c= c==> ! ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 f0 * / ! ! ! c= cPOWER b0 c+ b1 b2 b3 cPOWER b0 b1 cPOWER b0 b2 b3 f0
+ |- ((\n. (n <= (k + n))) (SUC nz))
T * / c<= b0 c+ f0 b0 cSUC f1
+ (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c/\ c<= f9 c+ f8 ccomplement_index f1 f6 f0 c= f10 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f9 cloop_map f3 f7 c==> cIN f3 f2 c==> cin_dart_of_loop f10 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 cIN f3 * * part cfinal_loops f1 f2
+ |- ((\x. (((((hyp'z H) NF) L) x) = (((POWER (face_map H)) (SUC ((((hyp'p H) NF) L) x))) ((((hyp'y H) NF) L) x)))) x)
T * / c= chyp'z f0 f1 f2 b0 cPOWER * part cface_map f0 cSUC chyp'p f0 f1 f2 b0 chyp'y f0 f1 f2 b0 f3
+ |- ((((SUC d) <= m) ==> (L IN ((final_loops H) NF))) = (((nz + (SUC d)) <= (nz + m)) ==> (L IN ((final_loops H) NF))))
T c= c==> c<= cSUC f0 f1 cIN f2 * * part cfinal_loops f3 f4 c==> c<= c+ f5 cSUC f0 c+ f5 f1 cIN f2 * * part cfinal_loops f3 f4
+ ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- ((is_restricted H) /\ (((is_normal H) NF) /\ ((L IN NF) /\ ((~ (L IN ((final_loops H) NF))) /\ (((in_dart_of_loop x) L) /\ ((((head_of_atom H) NF) x) = x))))))
T c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cis_restricted f0 c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ c~ cIN f2 * * part cfinal_loops f0 f1 c/\ cin_dart_of_loop f3 f2 c= chead_of_atom f0 f1 f3 f3
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) |- ((\i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))) i)
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 * / c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 f6
+ |- ((\n. ((((POWER (inverse (node_map H))) n) (((POWER (face_map H)) (SUC s)) y)) IN ((node H) (((POWER (face_map H)) (SUC s)) y)))) b)
T * / cIN cPOWER * part cinverse * part cnode_map f0 b0 cPOWER * part cface_map f0 cSUC f1 f2 * * part cnode f0 cPOWER * part cface_map f0 cSUC f1 f2 f3
+ |- ((nz = (pre_card_dart_of_loop L)) \/ (~ (nz = (pre_card_dart_of_loop L))))
T c\/ c= f0 cpre_card_dart_of_loop f1 c~ c= f0 cpre_card_dart_of_loop f1
+ (u = (((POWER (loop_map L)) t) z)) |- (((u = (((POWER (loop_map L)) (k + (SUC nz))) z)) ==> (L IN ((final_loops H) NF))) = (((((POWER (loop_map L)) t) z) = (((POWER (loop_map L)) (k + (SUC nz))) z)) ==> (L IN ((final_loops H) NF))))
T c==> c= f0 cPOWER * part cloop_map f1 f2 f3 c= c==> c= f0 cPOWER * part cloop_map f1 c+ f4 cSUC f5 f3 cIN f1 * * part cfinal_loops f6 f7 c==> c= cPOWER * part cloop_map f1 f2 f3 cPOWER * part cloop_map f1 c+ f4 cSUC f5 f3 cIN f1 * * part cfinal_loops f6 f7
- |- ((\m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) m)
T * / ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 f0
- |- (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))
T c= * * * * part cpath2_transform f0 f1 f2 f3 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 * * part ccomplement f0 chyp'z f0 f1 f2 f3 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 f3 cnode_map f0 chyp'z f0 f1 f2 f3
+ (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (((NUMERAL (BIT1 _0)) <= b) /\ ((b < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + b)))), (a < m), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f3 cPOWER * part cface_map f1 cSUC f4 f5 c==> c= f3 ccomplement f1 f6 cSUC f7 c==> c= chyp'y f1 f2 f0 f8 f5 c==> c= chyp'z f1 f2 f0 f8 f6 c==> c= chyp'p f1 f2 f0 f8 f9 c==> c/\ cis_marked c, f1 c, f2 c, f0 f8 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c/\ c<= cNUMERAL cBIT1 c_0 f10 c/\ c< f10 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC f11 f6 c= cSUC f7 c+ ccomplement_index f1 f6 f11 f10 c==> c< f11 f9 c==> cIN f0 f2 c==> cis_normal f1 f2 cIN f0 * * part cfinal_loops f1 f2
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (q <= ny), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- ((q <= ny) /\ ((in_dart_of_loop (((POWER (loop_map L)) (SUC q)) y)) ((((loop2_transform H) NF) L) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> c<= f6 f0 c==> cin_dart_of_loop cloop_map f3 f5 cloop2_transform f1 f2 f3 f4 c/\ c<= f6 f0 cin_dart_of_loop cPOWER * part cloop_map f3 cSUC f6 f5 cloop2_transform f1 f2 f3 f4
+ (~ (L IN ((final_loops H) NF))), (u = (((POWER (loop_map L)) t) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (a < m), (L IN NF) |- (((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) (m - a)) y)) ==> ((u = (((POWER (inverse (node_map H))) b) (((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)))) ==> (L IN ((final_loops H) NF))))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= f3 cPOWER * part cloop_map f0 f4 f5 c==> c= chyp'y f1 f2 f0 f6 f7 c==> c= chyp'z f1 f2 f0 f6 f5 c==> c= chyp'p f1 f2 f0 f6 f8 c==> c/\ cis_marked c, f1 c, f2 c, f0 f6 c~ cIN f0 * * part cfinal_loops f1 f2 c==> c< f9 f8 c==> cIN f0 f2 c==> c= cPOWER * part cinverse * part cface_map f1 cSUC f9 cPOWER * part cface_map f1 cSUC f8 f7 cPOWER * part cface_map f1 c- f8 f9 f7 c==> c= f3 cPOWER * part cinverse * part cnode_map f1 f10 cPOWER * part cinverse * part cface_map f1 cSUC f9 cPOWER * part cface_map f1 cSUC f8 f7 cIN f0 * * part cfinal_loops f1 f2
- |- (((!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) ==> ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n)) = ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n))
T c= c==> ! c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2 * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2
+ |- ((\L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path1_transform H) NF) L) x) (NUMERAL _0)) = ((((hyp'z H) NF) L) x)) /\ (((in_dart_of_loop ((((hyp'z H) NF) L) x)) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((card1_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x))) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) ((((hyp'z H) NF) L) x)) = (((POWER (loop_map L)) i) ((((hyp'z H) NF) L) x))))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + i)) ((((hyp'z H) NF) L) x)) = (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))) L)
T * / ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ c= cpath1_transform f0 f1 b0 b1 cNUMERAL c_0 chyp'z f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'z f0 f1 b0 b1 cloop1_transform f0 f1 b0 b1 c/\ c= cpre_card_dart_of_loop cloop1_transform f0 f1 b0 b1 ccard1_transform f0 f1 b0 b1 c/\ ! c==> c<= b2 cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cloop_map b0 b2 chyp'z f0 f1 b0 b1 ! c==> c<= b2 chyp'p f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 c+ cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cface_map f0 b2 chyp'y f0 f1 b0 b1 f2
+ |- (((!n. (!p. (!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))))) ==> ((\n. (!p. (!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))))) n)) = ((\n. (!p. (!q. (((m <= p) /\ (n < q)) ==> ((m + n) < (p + q)))))) n))
T c= c==> ! ! ! c==> c/\ c<= f0 b1 c< b0 b2 c< c+ f0 b0 c+ b1 b2 * / ! ! c==> c/\ c<= f0 b1 c< b0 b2 c< c+ f0 b0 c+ b1 b2 f1 * / ! ! c==> c/\ c<= f0 b1 c< b0 b2 c< c+ f0 b0 c+ b1 b2 f1
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_int _2502772))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_int _2502772))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
+ (!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) |- ((!s. (!p. (!n. (!x. (!y. (((permutes p) s) ==> ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))) /\ (!s. (!p. (((permutes p) s) ==> (!n. (!x. (!y. ((y = (((POWER p) n) x)) = (x = (((POWER (inverse p)) n) y))))))))))
T c==> ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 c/\ ! ! ! ! ! c==> cpermutes b1 b0 c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4 ! ! c==> cpermutes b1 b0 ! ! ! c= c= b4 cPOWER b1 b2 b3 c= b3 cPOWER * part cinverse b1 b2 b4
+ (u = (((POWER (face_map H)) (SUC d)) y)), (L IN NF), ((in_dart_of_loop u) L) |- (T = ((~ ((((POWER (face_map H)) (SUC d)) y) IN (darts_of_family NF))) ==> (L IN ((final_loops H) NF))))
T c==> c= f0 cPOWER * part cface_map f1 cSUC f2 f3 c==> cIN f4 f5 c==> cin_dart_of_loop f0 f4 c= cT c==> c~ cIN cPOWER * part cface_map f1 cSUC f2 f3 * part cdarts_of_family f5 cIN f4 * * part cfinal_loops f1 f5
+ |- (((!x. ((((inv_loop_map L) ((loop_map L) x)) = x) /\ (((loop_map L) ((inv_loop_map L) x)) = x))) ==> ((\x. ((((inv_loop_map L) ((loop_map L) x)) = x) /\ (((loop_map L) ((inv_loop_map L) x)) = x))) x)) = ((\x. ((((inv_loop_map L) ((loop_map L) x)) = x) /\ (((loop_map L) ((inv_loop_map L) x)) = x))) x))
T c= c==> ! c/\ c= cinv_loop_map f0 cloop_map f0 b0 b0 c= cloop_map f0 cinv_loop_map f0 b0 b0 * / c/\ c= cinv_loop_map f0 cloop_map f0 b0 b0 c= cloop_map f0 cinv_loop_map f0 b0 b0 f1 * / c/\ c= cinv_loop_map f0 cloop_map f0 b0 b0 c= cloop_map f0 cinv_loop_map f0 b0 b0 f1
+ (a < m) |- ((((POWER (inverse (face_map H))) (SUC a)) (((POWER (face_map H)) (SUC m)) y)) = (((POWER (face_map H)) ((SUC m) - (SUC a))) y))
T c==> c< f0 f1 c= cPOWER * part cinverse * part cface_map f2 cSUC f0 cPOWER * part cface_map f2 cSUC f1 f3 cPOWER * part cface_map f2 c- cSUC f1 cSUC f0 f3
+ |- (((!n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n)))) ==> ((\n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n)))) n)) = ((\n. ((((is_inj_contour H) p) n) = ((((is_contour H) p) n) /\ ((is_inj_list p) n)))) n))
T c= c==> ! c= cis_inj_contour f0 f1 b0 c/\ cis_contour f0 f1 b0 cis_inj_list f1 b0 * / c= cis_inj_contour f0 f1 b0 c/\ cis_contour f0 f1 b0 cis_inj_list f1 b0 f2 * / c= cis_inj_contour f0 f1 b0 c/\ cis_contour f0 f1 b0 cis_inj_list f1 b0 f2
+ |- (((((is_normal H) NF) /\ ((L IN NF) /\ ((((((loop1_transform H) NF) L) x) IN NF) /\ (((in_dart_of_loop z) L) /\ ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)))))) ==> ((in_dart_of_loop ((loop_map L) y)) ((((loop1_transform H) NF) L) x))) = (((is_normal H) NF) ==> ((L IN NF) ==> ((((((loop1_transform H) NF) L) x) IN NF) ==> (((in_dart_of_loop z) L) ==> (((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)) ==> ((in_dart_of_loop ((loop_map L) y)) ((((loop1_transform H) NF) L) x))))))))
T c= c==> c/\ cis_normal f0 f1 c/\ cIN f2 f1 c/\ cIN cloop1_transform f0 f1 f2 f3 f1 c/\ cin_dart_of_loop f4 f2 cin_dart_of_loop f4 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop cloop_map f2 f5 cloop1_transform f0 f1 f2 f3 c==> cis_normal f0 f1 c==> cIN f2 f1 c==> cIN cloop1_transform f0 f1 f2 f3 f1 c==> cin_dart_of_loop f4 f2 c==> cin_dart_of_loop f4 cloop1_transform f0 f1 f2 f3 cin_dart_of_loop cloop_map f2 f5 cloop1_transform f0 f1 f2 f3
+ |- ((\m. (!k. (((is_node_nondegenerate H) /\ ((x IN (dart H)) /\ (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (((complement_index H) x) m))))) ==> (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) x)))) /\ (k = ((((complement_index H) x) i) + j)))))))))) m)
T * / ! c==> c/\ cis_node_nondegenerate f0 c/\ cIN f1 * part cdart f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 ccomplement_index f0 f1 b0 c? / c? / c/\ c< b2 b0 c/\ c<= cNUMERAL cBIT1 c_0 b3 c/\ c< b3 cCARD * * part cnode f0 cPOWER * part cinverse * part cface_map f0 cSUC b2 f1 c= b1 c+ ccomplement_index f0 f1 b2 b3 f2
+ |- (((!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) ==> (!H. (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H))))))) = (!H. (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H)))))))
T c= c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! ! c==> cIN b1 * part cdart b0 ! cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! ! c==> cIN b1 * part cdart b0 ! cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0
+ |- ((\x. (!n. ((((POWER (inverse (node_map H))) n) x) IN ((node H) x)))) (((POWER (face_map H)) (SUC s)) y))
T * / ! cIN cPOWER * part cinverse * part cnode_map f0 b1 b0 * * part cnode f0 b0 cPOWER * part cface_map f0 cSUC f1 f2
+ (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (~ (L IN ((final_loops H) NF))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), ((in_dart_of_loop u) L), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)) |- (((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)) \/ ((in_dart_of_loop u) ((((loop2_transform H) NF) L) x)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f5 cPOWER * part cloop_map f3 b0 cloop_map f3 f5 c==> ! c==> c<= b0 f6 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f7 cPOWER * part cloop_map f3 b0 f7 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> c= f5 cPOWER * part cloop_map f3 cindex f3 f7 f5 f7 c==> c= chyp'z f1 f2 f3 f4 f7 c==> c= c+ f0 cSUC f6 cpre_card_dart_of_loop f3 c==> c= cindex f3 f7 f5 f6 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cin_dart_of_loop f8 f3 c==> cin_dart_of_loop f7 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop cloop_map f3 f5 cloop2_transform f1 f2 f3 f4 c\/ cin_dart_of_loop f8 cloop1_transform f1 f2 f3 f4 cin_dart_of_loop f8 cloop2_transform f1 f2 f3 f4
+ |- (((!L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path1_transform H) NF) L) x) (NUMERAL _0)) = ((((hyp'z H) NF) L) x)) /\ (((in_dart_of_loop ((((hyp'z H) NF) L) x)) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((card1_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x))) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) ((((hyp'z H) NF) L) x)) = (((POWER (loop_map L)) i) ((((hyp'z H) NF) L) x))))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + i)) ((((hyp'z H) NF) L) x)) = (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))) ==> ((\L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path1_transform H) NF) L) x) (NUMERAL _0)) = ((((hyp'z H) NF) L) x)) /\ (((in_dart_of_loop ((((hyp'z H) NF) L) x)) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((card1_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x))) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) ((((hyp'z H) NF) L) x)) = (((POWER (loop_map L)) i) ((((hyp'z H) NF) L) x))))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + i)) ((((hyp'z H) NF) L) x)) = (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))) L)) = ((\L. (!x. (((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) ==> (((((((path1_transform H) NF) L) x) (NUMERAL _0)) = ((((hyp'z H) NF) L) x)) /\ (((in_dart_of_loop ((((hyp'z H) NF) L) x)) ((((loop1_transform H) NF) L) x)) /\ (((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = ((((card1_transform H) NF) L) x)) /\ ((!i. ((i <= (((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x))) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) ((((hyp'z H) NF) L) x)) = (((POWER (loop_map L)) i) ((((hyp'z H) NF) L) x))))) /\ (!i. ((i <= ((((hyp'p H) NF) L) x)) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) ((((index L) ((((hyp'z H) NF) L) x)) ((((hyp'y H) NF) L) x)) + i)) ((((hyp'z H) NF) L) x)) = (((POWER (face_map H)) i) ((((hyp'y H) NF) L) x)))))))))))) L))
T c= c==> ! ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ c= cpath1_transform f0 f1 b0 b1 cNUMERAL c_0 chyp'z f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'z f0 f1 b0 b1 cloop1_transform f0 f1 b0 b1 c/\ c= cpre_card_dart_of_loop cloop1_transform f0 f1 b0 b1 ccard1_transform f0 f1 b0 b1 c/\ ! c==> c<= b2 cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cloop_map b0 b2 chyp'z f0 f1 b0 b1 ! c==> c<= b2 chyp'p f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 c+ cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cface_map f0 b2 chyp'y f0 f1 b0 b1 * / ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ c= cpath1_transform f0 f1 b0 b1 cNUMERAL c_0 chyp'z f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'z f0 f1 b0 b1 cloop1_transform f0 f1 b0 b1 c/\ c= cpre_card_dart_of_loop cloop1_transform f0 f1 b0 b1 ccard1_transform f0 f1 b0 b1 c/\ ! c==> c<= b2 cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cloop_map b0 b2 chyp'z f0 f1 b0 b1 ! c==> c<= b2 chyp'p f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 c+ cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cface_map f0 b2 chyp'y f0 f1 b0 b1 f2 * / ! c==> c/\ cis_marked c, f0 c, f1 c, b0 b1 c~ cIN b0 * * part cfinal_loops f0 f1 c/\ c= cpath1_transform f0 f1 b0 b1 cNUMERAL c_0 chyp'z f0 f1 b0 b1 c/\ cin_dart_of_loop chyp'z f0 f1 b0 b1 cloop1_transform f0 f1 b0 b1 c/\ c= cpre_card_dart_of_loop cloop1_transform f0 f1 b0 b1 ccard1_transform f0 f1 b0 b1 c/\ ! c==> c<= b2 cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cloop_map b0 b2 chyp'z f0 f1 b0 b1 ! c==> c<= b2 chyp'p f0 f1 b0 b1 c= cPOWER * part cloop_map cloop1_transform f0 f1 b0 b1 c+ cindex b0 chyp'z f0 f1 b0 b1 chyp'y f0 f1 b0 b1 b2 chyp'z f0 f1 b0 b1 cPOWER * part cface_map f0 b2 chyp'y f0 f1 b0 b1 f2
+ (!H. (!x. (!n. ((x IN (dart H)) ==> ((((POWER (face_map H)) n) x) IN (dart H)))))) |- (!x. ((x IN (dart H)) ==> (!n. ((((POWER (face_map H)) n) x) IN (dart H)))))
T c==> ! ! ! c==> cIN b1 * part cdart b0 cIN cPOWER * part cface_map b0 b2 b1 * part cdart b0 ! c==> cIN b0 * part cdart f0 ! cIN cPOWER * part cface_map f0 b1 b0 * part cdart f0
- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) |- (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) /\ (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c/\ * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
+ |- ((\x. ((((inv_loop_map L) ((loop_map L) x)) = x) /\ (((loop_map L) ((inv_loop_map L) x)) = x))) x)
T * / c/\ c= cinv_loop_map f0 cloop_map f0 b0 b0 c= cloop_map f0 cinv_loop_map f0 b0 b0 f1
+ (is_restricted H) |- (((is_node_nondegenerate H) ==> ((z IN (dart H)) ==> (((NUMERAL (BIT1 _0)) <= (SUC w)) ==> (((SUC w) <= (((complement_index H) z) m)) ==> (L IN ((final_loops H) NF)))))) = ((z IN (dart H)) ==> (((NUMERAL (BIT1 _0)) <= (SUC w)) ==> (((SUC w) <= (((complement_index H) z) m)) ==> (L IN ((final_loops H) NF))))))
T c==> cis_restricted f0 c= c==> cis_node_nondegenerate f0 c==> cIN f1 * part cdart f0 c==> c<= cNUMERAL cBIT1 c_0 cSUC f2 c==> c<= cSUC f2 ccomplement_index f0 f1 f3 cIN f4 * * part cfinal_loops f0 f5 c==> cIN f1 * part cdart f0 c==> c<= cNUMERAL cBIT1 c_0 cSUC f2 c==> c<= cSUC f2 ccomplement_index f0 f1 f3 cIN f4 * * part cfinal_loops f0 f5
+ ((NUMERAL (BIT1 _0)) <= b) |- ((b = (NUMERAL _0)) ==> (L IN ((final_loops H) NF)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c==> c= f0 cNUMERAL c_0 cIN f1 * * part cfinal_loops f2 f3
+ (~ (L IN ((final_loops H) NF))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)), ((is_normal H) NF) |- ((((in_dart_of_loop ((loop_map L) y)) ((((loop1_transform H) NF) L) x)) ==> (~ ((in_dart_of_loop ((loop_map L) y)) ((((loop2_transform H) NF) L) x)))) ==> (~ (((((loop1_transform H) NF) L) x) IN NF)))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'y f1 f2 f0 f3 f4 c==> c= chyp'z f1 f2 f0 f3 f5 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c==> cIN f0 f2 c==> cin_dart_of_loop f5 cloop1_transform f1 f2 f0 f3 c==> cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c==> cis_normal f1 f2 c==> c==> cin_dart_of_loop cloop_map f0 f4 cloop1_transform f1 f2 f0 f3 c~ cin_dart_of_loop cloop_map f0 f4 cloop2_transform f1 f2 f0 f3 c~ cIN cloop1_transform f1 f2 f0 f3 f2
+ |- (((in_dart_of_loop x) L) ==> (!k. ((in_dart_of_loop (((POWER (loop_map L)) k) x)) L)))
T c==> cin_dart_of_loop f0 f1 ! cin_dart_of_loop cPOWER * part cloop_map f1 b0 f0 f1
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((\m. ((m * (NUMERAL _0)) = (NUMERAL _0))) m)
T * / c= c* b0 cNUMERAL c_0 cNUMERAL c_0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((\z. (((((hyp'z H) NF) L) x) = z)) z) /\ (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x)
T * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3
- (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?k. ((k <= (nz + m)) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f5 f0 c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f10 cloop_map f3 f7 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c<= f10 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 cIN f3 * * part cfinal_loops f1 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((~ ((dart_of_loop L) = EMPTY)) ==> (((dart_of_loop L) = EMPTY) = F)) = (((dart_of_loop L) = EMPTY) = F))
T c= c==> c~ c= * part cdart_of_loop f0 part cEMPTY c= c= * part cdart_of_loop f0 part cEMPTY cF c= c= * part cdart_of_loop f0 part cEMPTY cF
- (((node H) z) = ((node H) y)) |- (((node H) y) = ((node H) z))
T c==> c= * * part cnode f0 f1 * * part cnode f0 f2 c= * * part cnode f0 f2 * * part cnode f0 f1
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop ((loop_map L) y)) L) = T)
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c= cin_dart_of_loop cloop_map f2 f4 f2 cT
- |- (!m. (((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> (?m. (((((hyp'p H) NF) L) x) = m))))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))) ==> ((\n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))) n)) = ((\n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))) n))
T c= c==> ! ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1 * / ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1 f1 * / ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1 f1
- ((NUMERAL (BIT1 _0)) <= b) |- (((~ ((NUMERAL _0) = b)) ==> (((NUMERAL _0) = b) = F)) = (((NUMERAL _0) = b) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
- ((((index L) z) y) = nz) |- ((\nz. ((((index L) z) y) = nz)) nz)
T c==> c= cindex f0 f1 f2 f3 * / c= cindex f0 f1 f2 b0 f3
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) |- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny)
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3
- |- (((((d * (card_dart_of_loop L)) + (card_dart_of_loop L)) < (card_dart_of_loop L)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = T)
T c= c==> c< c+ c* f0 ccard_dart_of_loop f1 ccard_dart_of_loop f1 ccard_dart_of_loop f1 c= c+ f2 cSUC f3 cpre_card_dart_of_loop f1 cT
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((((hyp'z H) NF) L) x) = z) ==> (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((?k. t) = t)
T c= c? / f0 f0
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((\y. (((((hyp'y H) NF) L) x) = y)) y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((hyp'p H) NF) L) x) = m) = ((\m. (((((hyp'p H) NF) L) x) = m)) m))
T c= c= chyp'p f0 f1 f2 f3 f4 * / c= chyp'p f0 f1 f2 f3 b0 f4
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (!nz. (((\nz. ((((index L) z) y) = nz)) nz) ==> (?nz. ((((index L) z) y) = nz))))
T c==> * / c= cindex f0 f1 f2 b0 f3 c? / c= cindex f0 f1 f2 b0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (!y. (((\y. (((((hyp'y H) NF) L) x) = y)) y) ==> (?y. (((((hyp'y H) NF) L) x) = y))))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- (((((hyp'z H) NF) L) x) = z) |- ((\z. (((((hyp'z H) NF) L) x) = z)) z)
T c==> c= chyp'z f0 f1 f2 f3 f4 * / c= chyp'z f0 f1 f2 f3 b0 f4
- (((((hyp'y H) NF) L) x) = y) |- ((\y. (((((hyp'y H) NF) L) x) = y)) y)
T c==> c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- ((\m. (((((hyp'p H) NF) L) x) = m)) m) |- (((((((hyp'p H) NF) L) x) = m) ==> (?m. (((((hyp'p H) NF) L) x) = m))) = (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c= c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((EMPTY = (dart_of_loop L)) = F)
T c= c= part cEMPTY * part cdart_of_loop f0 cF
- (?q. (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L)))), (~ (nz = (pre_card_dart_of_loop L))), ((((index L) z) y) = nz), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), ((((index L) z) y) <= (pre_card_dart_of_loop L)), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((ny + (SUC nz)) = (pre_card_dart_of_loop L))
T c==> c? / c= c+ cSUC f0 cSUC f1 c* b0 ccard_dart_of_loop f2 c==> c~ c= f1 cpre_card_dart_of_loop f2 c==> c= cindex f2 f3 f4 f1 c==> c= cindex f2 cloop_map f2 f4 cinv_loop_map f2 f3 f0 c==> c<= cindex f2 f3 f4 cpre_card_dart_of_loop f2 c==> c<= cindex f2 cloop_map f2 f4 cinv_loop_map f2 f3 cpre_card_dart_of_loop f2 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2
- (((NUMERAL (BIT1 _0)) <= n) = ((NUMERAL _0) < n)) |- (((NUMERAL _0) < n) = ((NUMERAL (BIT1 _0)) <= n))
T c==> c= c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0 c= c< cNUMERAL c_0 f0 c<= cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((((hyp'z H) NF) L) x) = z) = ((\z. (((((hyp'z H) NF) L) x) = z)) z))
T c= c= chyp'z f0 f1 f2 f3 f4 * / c= chyp'z f0 f1 f2 f3 b0 f4
- ((NUMERAL (BIT1 _0)) <= b) |- (((NUMERAL _0) = b) = F)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
- |- ((m * (NUMERAL (BIT1 _0))) = m)
T c= c* f0 cNUMERAL cBIT1 c_0 f0
- (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 c==> c~ cIN f5 * * part cfinal_loops f2 f6 c==> cis_restricted f2 c==> c= f7 cPOWER * part cface_map f2 cSUC f8 f9 c==> c= f7 ccomplement f2 f3 cSUC f4 c==> c= chyp'y f2 f6 f5 f10 f9 c==> c= chyp'z f2 f6 f5 f10 f3 c==> c= chyp'p f2 f6 f5 f10 f1 c==> c/\ cis_marked c, f2 c, f6 c, f5 f10 c~ cIN f5 * * part cfinal_loops f2 f6 c==> cIN f5 f6 c==> cis_normal f2 f6 cIN f5 * * part cfinal_loops f2 f6
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((inv_loop_map L) ((loop_map L) x)) = x)
T c= cinv_loop_map f0 cloop_map f0 f1 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> ((\m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) m)) = ((\m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) m))
T c= c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 * / ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 f0 * / ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0
- |- (T = ((((SUC ny) + (SUC nz)) = (NUMERAL _0)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))))
T c= cT c==> c= c+ cSUC f0 cSUC f1 cNUMERAL c_0 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2
- |- ((((\m. (((((hyp'p H) NF) L) x) = m)) m) ==> (?m. (((((hyp'p H) NF) L) x) = m))) = T)
T c= c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0 cT
- |- (((!m. (!n. ((m * (SUC n)) = (m + (m * n))))) ==> ((\m. (!n. ((m * (SUC n)) = (m + (m * n))))) m)) = ((\m. (!n. ((m * (SUC n)) = (m + (m * n))))) m))
T c= c==> ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1 * / ! c= c* b0 cSUC b1 c+ b0 c* b0 b1 f0 * / ! c= c* b0 cSUC b1 c+ b0 c* b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) ==> ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H)) = ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H))
T c= c==> ! ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0 * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0
- (b = (NUMERAL _0)) |- ((NUMERAL _0) = b)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
- ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) |- ((((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))) = (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c= c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))))))
T c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((~ (EMPTY = (dart_of_loop L))) ==> ((EMPTY = (dart_of_loop L)) = F)) = ((EMPTY = (dart_of_loop L)) = F))
T c= c==> c~ c= part cEMPTY * part cdart_of_loop f0 c= c= part cEMPTY * part cdart_of_loop f0 cF c= c= part cEMPTY * part cdart_of_loop f0 cF
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC w) = ((((complement_index H) z) a) + j)))))) /\ (L IN ((final_loops H) NF)))
T c==> c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 c==> c~ cIN f5 * * part cfinal_loops f2 f6 c==> cis_restricted f2 c==> c= f7 cPOWER * part cface_map f2 cSUC f8 f9 c==> c= f7 ccomplement f2 f3 cSUC f4 c==> c= chyp'y f2 f6 f5 f10 f9 c==> c= chyp'z f2 f6 f5 f10 f3 c==> c= chyp'p f2 f6 f5 f10 f1 c==> c/\ cis_marked c, f2 c, f6 c, f5 f10 c~ cIN f5 * * part cfinal_loops f2 f6 c==> cIN f5 f6 c==> cis_normal f2 f6 c/\ c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 cIN f5 * * part cfinal_loops f2 f6
- ((\z. (((((hyp'z H) NF) L) x) = z)) z) |- (((((((hyp'z H) NF) L) x) = z) ==> (?z. (((((hyp'z H) NF) L) x) = z))) = (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c= c==> c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- |- ((\H. (!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x))))))))) H)
T * / ! ! ! c= * * * * part cpath2_transform b0 b1 b2 b3 * * * part cglue * * part cpath_of_loop b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 * * part ccomplement b0 chyp'z b0 b1 b2 b3 cindex b2 cinverse * part cnode_map b0 chyp'y b0 b1 b2 b3 cnode_map b0 chyp'z b0 b1 b2 b3 f0
- |- (((!NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) ==> ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)) = ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF))
T c= c==> ! ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1 * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
- |- ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))
T c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), (k <= ny), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((((k <= ny) /\ (ny <= (pre_card_dart_of_loop L))) ==> (k <= (pre_card_dart_of_loop L))) = (k <= (pre_card_dart_of_loop L)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c==> c<= f4 f3 c==> c<= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cpre_card_dart_of_loop f0 c= c==> c/\ c<= f4 f3 c<= f3 cpre_card_dart_of_loop f0 c<= f4 cpre_card_dart_of_loop f0 c<= f4 cpre_card_dart_of_loop f0
- (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f1 f5 c==> cis_restricted f1 c==> c= f6 cPOWER * part cloop_map f4 f7 f2 c==> c= f6 ccomplement f1 f2 cSUC f3 c==> c= chyp'y f1 f5 f4 f8 f9 c==> c= chyp'z f1 f5 f4 f8 f2 c==> c= chyp'p f1 f5 f4 f8 f0 c==> c/\ cis_marked c, f1 c, f5 c, f4 f8 c~ cIN f4 * * part cfinal_loops f1 f5 c==> cIN f4 f5 c==> cis_normal f1 f5 cIN f4 * * part cfinal_loops f1 f5
- |- ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((!p. (((m <= n) /\ (n <= p)) ==> (m <= p))) ==> ((\p. (((m <= n) /\ (n <= p)) ==> (m <= p))) p)) = ((\p. (((m <= n) /\ (n <= p)) ==> (m <= p))) p))
T c= c==> ! c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 * / c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 f2 * / c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0 f2
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))) = T)
T c= c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 cT
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0
- (((((hyp'p H) NF) L) x) = m) |- ((((((hyp'p H) NF) L) x) = m) /\ (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c/\ c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?k. ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- ((?k. ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))) /\ (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f8 ccomplement_index f1 f6 f0 c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cin_dart_of_loop f9 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 c/\ c? / c/\ c<= b0 c+ f8 ccomplement_index f1 f6 f0 c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cIN f3 * * part cfinal_loops f1 f2
- (~ (((node H) y) = ((node H) z))) |- (((~ (((node H) z) = ((node H) y))) ==> ((((node H) z) = ((node H) y)) = F)) = ((((node H) z) = ((node H) y)) = F))
T c==> c~ c= * * part cnode f0 f1 * * part cnode f0 f2 c= c==> c~ c= * * part cnode f0 f2 * * part cnode f0 f1 c= c= * * part cnode f0 f2 * * part cnode f0 f1 cF c= c= * * part cnode f0 f2 * * part cnode f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), (k <= ny), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((k <= ny) /\ (ny <= (pre_card_dart_of_loop L)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c==> c<= f4 f3 c==> c<= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cpre_card_dart_of_loop f0 c/\ c<= f4 f3 c<= f3 cpre_card_dart_of_loop f0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (((((hyp'y H) NF) L) x) = y) |- ((((((hyp'y H) NF) L) x) = y) /\ (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c= chyp'y f0 f1 f2 f3 f4 c/\ c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))) n)
T * / c= cglue f0 f1 b0 cNUMERAL c_0 * f0 cNUMERAL c_0 f2
- |- ((?y. (((((hyp'y H) NF) L) x) = y)) ==> (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((hyp'z H) NF) L) x) = z) |- ((((((hyp'z H) NF) L) x) = z) /\ (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c= chyp'z f0 f1 f2 f3 f4 c/\ c= chyp'z f0 f1 f2 f3 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- (((!p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) ==> ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p)) = ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p))
T c= c==> ! ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0 * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0
- |- (~ (EMPTY = (dart_of_loop L)))
T c~ c= part cEMPTY * part cdart_of_loop f0
- ((\nz. ((((index L) z) y) = nz)) nz) |- (((\nz. ((((index L) z) y) = nz)) nz) /\ (?nz. ((((index L) z) y) = nz)))
T c==> * / c= cindex f0 f1 f2 b0 f3 c/\ * / c= cindex f0 f1 f2 b0 f3 c? / c= cindex f0 f1 f2 b0
- |- (((m <= n) /\ (n <= p)) ==> (m <= p))
T c==> c/\ c<= f0 f1 c<= f1 f2 c<= f0 f2
- ((((index L) z) y) = nz) |- (((((index L) z) y) = nz) /\ (?nz. ((((index L) z) y) = nz)))
T c==> c= cindex f0 f1 f2 f3 c/\ c= cindex f0 f1 f2 f3 c? / c= cindex f0 f1 f2 b0
- |- (((!x'. (((\z. (((((hyp'z H) NF) L) x) = z)) x') ==> (?z. (((((hyp'z H) NF) L) x) = z)))) ==> ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z)))) = ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z))))
T c= c==> ! c==> * / c= chyp'z f0 f1 f2 f3 b1 b0 c? / c= chyp'z f0 f1 f2 f3 b1 c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0 c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- |- (((((index L) z) y) = nz) = ((\nz. ((((index L) z) y) = nz)) nz))
T c= c= cindex f0 f1 f2 f3 * / c= cindex f0 f1 f2 b0 f3
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\n. ((m * (SUC n)) = (m + (m * n)))) n)
T * / c= c* f0 cSUC b0 c+ f0 c* f0 b0 f1
- |- ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))
T c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))))
T c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((\nz. ((((index L) z) y) = nz)) x) ==> (?nz. ((((index L) z) y) = nz)))) ==> ((?nz. ((((index L) z) y) = nz)) ==> (?nz. ((((index L) z) y) = nz)))) = ((?nz. ((((index L) z) y) = nz)) ==> (?nz. ((((index L) z) y) = nz))))
T c= c==> ! c==> * / c= cindex f0 f1 f2 b1 b0 c? / c= cindex f0 f1 f2 b1 c==> c? / c= cindex f0 f1 f2 b0 c? / c= cindex f0 f1 f2 b0 c==> c? / c= cindex f0 f1 f2 b0 c? / c= cindex f0 f1 f2 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((node H) y) = ((node H) z))) |- ((((node H) z) = ((node H) y)) = F)
T c==> c~ c= * * part cnode f0 f1 * * part cnode f0 f2 c= c= * * part cnode f0 f2 * * part cnode f0 f1 cF
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), (k <= ny), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- (k <= (pre_card_dart_of_loop L))
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c==> c<= f4 f3 c==> c<= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cpre_card_dart_of_loop f0 c<= f4 cpre_card_dart_of_loop f0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\m. ((m * (NUMERAL (BIT1 _0))) = m)) m)
T * / c= c* b0 cNUMERAL cBIT1 c_0 b0 f0
- |- (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))
T c= cglue f0 f1 f2 cNUMERAL c_0 * f0 cNUMERAL c_0
- ((NUMERAL _0) = b) |- (b = (NUMERAL _0))
T c==> c= cNUMERAL c_0 f0 c= f0 cNUMERAL c_0
- |- (((((index L) z) y) = nz) ==> (?nz. ((((index L) z) y) = nz)))
T c==> c= cindex f0 f1 f2 f3 c? / c= cindex f0 f1 f2 b0
- |- (((((SUC ny) + (SUC nz)) = (NUMERAL _0)) ==> ((ny + (SUC nz)) = (pre_card_dart_of_loop L))) = T)
T c= c==> c= c+ cSUC f0 cSUC f1 cNUMERAL c_0 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2 cT
- |- (((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) ==> ((\m. ((m * (NUMERAL _0)) = (NUMERAL _0))) m)) = ((\m. ((m * (NUMERAL _0)) = (NUMERAL _0))) m))
T c= c==> ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 * / c= c* b0 cNUMERAL c_0 cNUMERAL c_0 f0 * / c= c* b0 cNUMERAL c_0 cNUMERAL c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!x. (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) x) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))) ==> ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)))) = ((?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))))
T c= c==> ! c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b1 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b1 c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c==> c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q)
T * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (~ ((dart_of_loop L) = EMPTY))
T c~ c= * part cdart_of_loop f0 part cEMPTY
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502786))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 c==> c~ cIN f5 * * part cfinal_loops f2 f6 c==> cis_restricted f2 c==> c= f7 cPOWER * part cloop_map f5 f8 f3 c==> c= f7 ccomplement f2 f3 cSUC f4 c==> c= chyp'y f2 f6 f5 f9 f10 c==> c= chyp'z f2 f6 f5 f9 f3 c==> c= chyp'p f2 f6 f5 f9 f1 c==> c/\ cis_marked c, f2 c, f6 c, f5 f9 c~ cIN f5 * * part cfinal_loops f2 f6 c==> cIN f5 f6 c==> cis_normal f2 f6 cIN f5 * * part cfinal_loops f2 f6
- (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?k. ((k <= (nz + m)) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (k <= (ny + (((complement_index H) z) m))), (L IN NF), ((is_normal H) NF) |- ((?k. ((k <= (nz + m)) /\ (u = (((POWER (loop_map ((((loop1_transform H) NF) L) x))) k) z)))) /\ (L IN ((final_loops H) NF)))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f5 f0 c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 f10 cloop_map f3 f7 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> c<= f10 c+ f8 ccomplement_index f1 f6 f0 c==> cIN f3 f2 c==> cis_normal f1 f2 c/\ c? / c/\ c<= b0 c+ f5 f0 c= f9 cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cIN f3 * * part cfinal_loops f1 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((((hyp'p H) NF) L) x) = m) ==> (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> c= chyp'p f0 f1 f2 f3 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))
T c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
- |- ((((\z. (((((hyp'z H) NF) L) x) = z)) z) ==> (?z. (((((hyp'z H) NF) L) x) = z))) = T)
T c= c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?q. (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L)))), (~ (nz = (pre_card_dart_of_loop L))), ((((index L) z) y) = nz), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), ((((index L) z) y) <= (pre_card_dart_of_loop L)), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((?q. (((SUC ny) + (SUC nz)) = (q * (card_dart_of_loop L)))) /\ ((ny + (SUC nz)) = (pre_card_dart_of_loop L)))
T c==> c? / c= c+ cSUC f0 cSUC f1 c* b0 ccard_dart_of_loop f2 c==> c~ c= f1 cpre_card_dart_of_loop f2 c==> c= cindex f2 f3 f4 f1 c==> c= cindex f2 cloop_map f2 f4 cinv_loop_map f2 f3 f0 c==> c<= cindex f2 f3 f4 cpre_card_dart_of_loop f2 c==> c<= cindex f2 cloop_map f2 f4 cinv_loop_map f2 f3 cpre_card_dart_of_loop f2 c/\ c? / c= c+ cSUC f0 cSUC f1 c* b0 ccard_dart_of_loop f2 c= c+ f0 cSUC f1 cpre_card_dart_of_loop f2
- |- (((dart_of_loop L) = EMPTY) = F)
T c= c= * part cdart_of_loop f0 part cEMPTY cF
- |- ((\NF. (!L. (!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))))) NF)
T * / ! ! c= * * * * part cpath2_transform f0 b0 b1 b2 * * * part cglue * * part cpath_of_loop b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 * * part ccomplement f0 chyp'z f0 b0 b1 b2 cindex b1 cinverse * part cnode_map f0 chyp'y f0 b0 b1 b2 cnode_map f0 chyp'z f0 b0 b1 b2 f1
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502782))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502783))) ((real_add (real_of_int _2502785)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f3 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (((in_dart_of_loop z) L) = T)
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= cin_dart_of_loop f4 f0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny) = ((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny))
T c= c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((node_map H) z) = ((inv_loop_map L) z)) |- (((inv_loop_map L) z) = ((node_map H) z))
T c==> c= cnode_map f0 f1 cinv_loop_map f2 f1 c= cinv_loop_map f2 f1 cnode_map f0 f1
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))) n)
T * / ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1 f1
- (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC w) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f1 f5 c==> cis_restricted f1 c==> c= f6 cPOWER * part cface_map f1 cSUC f7 f8 c==> c= f6 ccomplement f1 f2 cSUC f3 c==> c= chyp'y f1 f5 f4 f9 f8 c==> c= chyp'z f1 f5 f4 f9 f2 c==> c= chyp'p f1 f5 f4 f9 f0 c==> c/\ cis_marked c, f1 c, f5 c, f4 f9 c~ cIN f4 * * part cfinal_loops f1 f5 c==> cIN f4 f5 c==> cis_normal f1 f5 cIN f4 * * part cfinal_loops f1 f5
- ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny), (k <= ny), ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) <= (pre_card_dart_of_loop L)) |- ((k <= (pre_card_dart_of_loop L)) = T)
T c==> c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 f3 c==> c<= f4 f3 c==> c<= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 cpre_card_dart_of_loop f0 c= c<= f4 cpre_card_dart_of_loop f0 cT
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0
- (((((hyp'y H) NF) L) x) = y), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (T = ((in_dart_of_loop ((loop_map L) y)) L))
T c==> c= chyp'y f0 f1 f2 f3 f4 c==> c/\ cis_marked c, f0 c, f1 c, f2 f3 c~ cIN f2 * * part cfinal_loops f0 f1 c= cT cin_dart_of_loop cloop_map f2 f4 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?j. ((a < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC a)) z)))) /\ ((SUC d) = ((((complement_index H) z) a) + j)))))) /\ (L IN ((final_loops H) NF)))
T c==> c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 c==> c~ cIN f5 * * part cfinal_loops f2 f6 c==> cis_restricted f2 c==> c= f7 cPOWER * part cloop_map f5 f8 f3 c==> c= f7 ccomplement f2 f3 cSUC f4 c==> c= chyp'y f2 f6 f5 f9 f10 c==> c= chyp'z f2 f6 f5 f9 f3 c==> c= chyp'p f2 f6 f5 f9 f1 c==> c/\ cis_marked c, f2 c, f6 c, f5 f9 c~ cIN f5 * * part cfinal_loops f2 f6 c==> cIN f5 f6 c==> cis_normal f2 f6 c/\ c? / c/\ c< f0 f1 c/\ c<= cNUMERAL cBIT1 c_0 b0 c/\ c< b0 cCARD * * part cnode f2 cPOWER * part cinverse * part cface_map f2 cSUC f0 f3 c= cSUC f4 c+ ccomplement_index f2 f3 f0 b0 cIN f5 * * part cfinal_loops f2 f6
- (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (loop_map L)) t) z)), (u = (((complement H) z) (SUC d))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC d) = ((((complement_index H) z) i) + j))))))) /\ (L IN ((final_loops H) NF)))
T c==> c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f1 f5 c==> cis_restricted f1 c==> c= f6 cPOWER * part cloop_map f4 f7 f2 c==> c= f6 ccomplement f1 f2 cSUC f3 c==> c= chyp'y f1 f5 f4 f8 f9 c==> c= chyp'z f1 f5 f4 f8 f2 c==> c= chyp'p f1 f5 f4 f8 f0 c==> c/\ cis_marked c, f1 c, f5 c, f4 f8 c~ cIN f4 * * part cfinal_loops f1 f5 c==> cIN f4 f5 c==> cis_normal f1 f5 c/\ c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 cIN f4 * * part cfinal_loops f1 f5
- |- (((!n. ((m * (SUC n)) = (m + (m * n)))) ==> ((\n. ((m * (SUC n)) = (m + (m * n)))) n)) = ((\n. ((m * (SUC n)) = (m + (m * n)))) n))
T c= c==> ! c= c* f0 cSUC b0 c+ f0 c* f0 b0 * / c= c* f0 cSUC b0 c+ f0 c* f0 b0 f1 * / c= c* f0 cSUC b0 c+ f0 c* f0 b0 f1
- ((NUMERAL (BIT1 _0)) <= b) |- (~ ((NUMERAL _0) = b))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c~ c= cNUMERAL c_0 f0
- ((\nz. ((((index L) z) y) = nz)) nz) |- ((((((index L) z) y) = nz) ==> (?nz. ((((index L) z) y) = nz))) = (?nz. ((((index L) z) y) = nz)))
T c==> * / c= cindex f0 f1 f2 b0 f3 c= c==> c= cindex f0 f1 f2 f3 c? / c= cindex f0 f1 f2 b0 c? / c= cindex f0 f1 f2 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0)))))) p)
T * / ! ! c= cglue b0 b1 b2 cNUMERAL c_0 * b0 cNUMERAL c_0 f0
- |- ((((((hyp'y H) NF) L) x) = y) = ((\y. (((((hyp'y H) NF) L) x) = y)) y))
T c= c= chyp'y f0 f1 f2 f3 f4 * / c= chyp'y f0 f1 f2 f3 b0 f4
- (~ (L IN ((final_loops H) NF))), (((((hyp'z H) NF) L) x) = z), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))) |- (T = ((in_dart_of_loop z) L))
T c==> c~ cIN f0 * * part cfinal_loops f1 f2 c==> c= chyp'z f1 f2 f0 f3 f4 c==> c/\ cis_marked c, f1 c, f2 c, f0 f3 c~ cIN f0 * * part cfinal_loops f1 f2 c= cT cin_dart_of_loop f4 f0
- |- (!ny. (((\ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny)) ny) ==> (?ny. ((((index L) ((loop_map L) y)) ((inv_loop_map L) z)) = ny))))
T c==> * / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0 f3 c? / c= cindex f0 cloop_map f0 f1 cinv_loop_map f0 f2 b0
- |- (((!x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) ==> ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x)) = ((\x. (((((path2_transform H) NF) L) x) = (((glue ((path_of_loop L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x)))) ((complement H) ((((hyp'z H) NF) L) x))) (((index L) ((inverse (node_map H)) ((((hyp'y H) NF) L) x))) ((node_map H) ((((hyp'z H) NF) L) x)))))) x))
T c= c==> ! c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3 * / c= * * * * part cpath2_transform f0 f1 f2 b0 * * * part cglue * * part cpath_of_loop f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 * * part ccomplement f0 chyp'z f0 f1 f2 b0 cindex f2 cinverse * part cnode_map f0 chyp'y f0 f1 f2 b0 cnode_map f0 chyp'z f0 f1 f2 b0 f3
- (?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC w) = ((((complement_index H) z) i) + j))))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (u = (((POWER (face_map H)) (SUC d)) y)), (u = (((complement H) z) (SUC w))), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((is_normal H) NF) |- ((?i. (?j. ((i < m) /\ (((NUMERAL (BIT1 _0)) <= j) /\ ((j < (CARD ((node H) (((POWER (inverse (face_map H))) (SUC i)) z)))) /\ ((SUC w) = ((((complement_index H) z) i) + j))))))) /\ (L IN ((final_loops H) NF)))
T c==> c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 c==> c~ cIN f4 * * part cfinal_loops f1 f5 c==> cis_restricted f1 c==> c= f6 cPOWER * part cface_map f1 cSUC f7 f8 c==> c= f6 ccomplement f1 f2 cSUC f3 c==> c= chyp'y f1 f5 f4 f9 f8 c==> c= chyp'z f1 f5 f4 f9 f2 c==> c= chyp'p f1 f5 f4 f9 f0 c==> c/\ cis_marked c, f1 c, f5 c, f4 f9 c~ cIN f4 * * part cfinal_loops f1 f5 c==> cIN f4 f5 c==> cis_normal f1 f5 c/\ c? / c? / c/\ c< b0 f0 c/\ c<= cNUMERAL cBIT1 c_0 b1 c/\ c< b1 cCARD * * part cnode f1 cPOWER * part cinverse * part cface_map f1 cSUC b0 f2 c= cSUC f3 c+ ccomplement_index f1 f2 b0 b1 cIN f4 * * part cfinal_loops f1 f5
- ((\y. (((((hyp'y H) NF) L) x) = y)) y) |- (((((((hyp'y H) NF) L) x) = y) ==> (?y. (((((hyp'y H) NF) L) x) = y))) = (?y. (((((hyp'y H) NF) L) x) = y)))
T c==> * / c= chyp'y f0 f1 f2 f3 b0 f4 c= c==> c= chyp'y f0 f1 f2 f3 f4 c? / c= chyp'y f0 f1 f2 f3 b0 c? / c= chyp'y f0 f1 f2 f3 b0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- ((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0
- ((\m. (((((hyp'p H) NF) L) x) = m)) m) |- (((\m. (((((hyp'p H) NF) L) x) = m)) m) /\ (?m. (((((hyp'p H) NF) L) x) = m)))
T c==> * / c= chyp'p f0 f1 f2 f3 b0 f4 c/\ * / c= chyp'p f0 f1 f2 f3 b0 f4 c? / c= chyp'p f0 f1 f2 f3 b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502772))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_num cNUMERAL c_0
- |- (((!q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) ==> ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q)) = ((\q. (!n. (((((glue p) q) n) (NUMERAL _0)) = (p (NUMERAL _0))))) q))
T c= c==> ! ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1 * / ! c= cglue f0 b0 b1 cNUMERAL c_0 * f0 cNUMERAL c_0 f1
- |- (!z. (((\z. (((((hyp'z H) NF) L) x) = z)) z) ==> (?z. (((((hyp'z H) NF) L) x) = z))))
T c==> * / c= chyp'z f0 f1 f2 f3 b0 f4 c? / c= chyp'z f0 f1 f2 f3 b0
- |- (((!x. (((\m. (((((hyp'p H) NF) L) x) = m)) x) ==> (?m. (((((hyp'p H) NF) L) x) = m)))) ==> ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m)))) = ((?m. (((((hyp'p H) NF) L) x) = m)) ==> (?m. (((((hyp'p H) NF) L) x) = m))))
T c= c==> ! c==> * / c= chyp'p f0 f1 f2 f3 b1 b0 c? / c= chyp'p f0 f1 f2 f3 b1 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0 c==> c? / c= chyp'p f0 f1 f2 f3 b0 c? / c= chyp'p f0 f1 f2 f3 b0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502774))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((?z. (((((hyp'z H) NF) L) x) = z)) ==> (?z. (((((hyp'z H) NF) L) x) = z)))
T c==> c? / c= chyp'z f0 f1 f2 f3 b0 c? / c= chyp'z f0 f1 f2 f3 b0
- (!i. ((i <= m) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) (nz + i)) z) = (((POWER (face_map H)) i) y)))), (!i. ((i <= ny) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) i) ((loop_map L) y)) = (((POWER (loop_map L)) i) ((loop_map L) y))))), (!i. ((i <= nz) ==> ((((POWER (loop_map ((((loop1_transform H) NF) L) x))) i) z) = (((POWER (loop_map L)) i) z)))), (!i. ((i <= (((complement_index H) z) m)) ==> ((((POWER (loop_map ((((loop2_transform H) NF) L) x))) (ny + i)) ((loop_map L) y)) = (((complement H) z) i)))), (?k. ((k <= (ny + (((complement_index H) z) m))) /\ (u = (((POWER (loop_map ((((loop2_transform H) NF) L) x))) k) ((loop_map L) y))))), (~ (L IN ((final_loops H) NF))), (is_restricted H), (y = (((POWER (loop_map L)) (((index L) z) y)) z)), (((((hyp'y H) NF) L) x) = y), (((((hyp'z H) NF) L) x) = z), ((pre_card_dart_of_loop ((((loop1_transform H) NF) L) x)) = (nz + m)), ((ny + (SUC nz)) = (pre_card_dart_of_loop L)), ((((index L) z) y) = nz), (((((hyp'p H) NF) L) x) = m), ((is_marked (H , (NF , (L , x)))) /\ (~ (L IN ((final_loops H) NF)))), (L IN NF), ((in_dart_of_loop u) ((((loop1_transform H) NF) L) x)), ((in_dart_of_loop z) ((((loop1_transform H) NF) L) x)), ((is_normal H) NF) |- (L IN ((final_loops H) NF))
T c==> ! c==> c<= b0 f0 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 c+ f5 b0 f6 cPOWER * part cface_map f1 b0 f7 c==> ! c==> c<= b0 f8 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 cPOWER * part cloop_map f3 b0 cloop_map f3 f7 c==> ! c==> c<= b0 f5 c= cPOWER * part cloop_map cloop1_transform f1 f2 f3 f4 b0 f6 cPOWER * part cloop_map f3 b0 f6 c==> ! c==> c<= b0 ccomplement_index f1 f6 f0 c= cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 c+ f8 b0 cloop_map f3 f7 ccomplement f1 f6 b0 c==> c? / c/\ c<= b0 c+ f8 ccomplement_index f1 f6 f0 c= f9 cPOWER * part cloop_map cloop2_transform f1 f2 f3 f4 b0 cloop_map f3 f7 c==> c~ cIN f3 * * part cfinal_loops f1 f2 c==> cis_restricted f1 c==> c= f7 cPOWER * part cloop_map f3 cindex f3 f6 f7 f6 c==> c= chyp'y f1 f2 f3 f4 f7 c==> c= chyp'z f1 f2 f3 f4 f6 c==> c= cpre_card_dart_of_loop cloop1_transform f1 f2 f3 f4 c+ f5 f0 c==> c= c+ f8 cSUC f5 cpre_card_dart_of_loop f3 c==> c= cindex f3 f6 f7 f5 c==> c= chyp'p f1 f2 f3 f4 f0 c==> c/\ cis_marked c, f1 c, f2 c, f3 f4 c~ cIN f3 * * part cfinal_loops f1 f2 c==> cIN f3 f2 c==> cin_dart_of_loop f9 cloop1_transform f1 f2 f3 f4 c==> cin_dart_of_loop f6 cloop1_transform f1 f2 f3 f4 c==> cis_normal f1 f2 cIN f3 * * part cfinal_loops f1 f2
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?nz. ((((index L) z) y) = nz)) ==> (?nz. ((((index L) z) y) = nz)))
T c==> c? / c= cindex f0 f1 f2 b0 c? / c= cindex f0 f1 f2 b0
- (((real_ge (real_of_int _2502772)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502774)) (real_of_num (NUMERAL _0))) /\ ((((real_add (real_of_int _2502772)) ((real_add (real_of_int _2502773)) (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) = (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502772))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502773))) ((real_add (real_of_int _2502774)) (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0))))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502773)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_int _2502773))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_of_int f0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_add creal_of_int f2 creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((NUMERAL _0) < (card_dart_of_loop L)) = T)
T c= c< cNUMERAL c_0 ccard_dart_of_loop f0 cT
- (~ (((node H) y) = ((node H) z))) |- (~ (((node H) z) = ((node H) y)))
T c==> c~ c= * * part cnode f0 f1 * * part cnode f0 f2 c~ c= * * part cnode f0 f2 * * part cnode f0 f1
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (((real_ge (real_of_int _2502782)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502783)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502784)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502785)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502786))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _2502782)) ((real_add (real_of_int _2502783)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _2502785))))) (real_of_num (NUMERAL _0))))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge (real_of_int _2502786)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f4 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_of_int f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f4 creal_of_num cNUMERAL c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!m. ((m * (NUMERAL (BIT1 _0))) = m)) ==> ((\m. ((m * (NUMERAL (BIT1 _0))) = m)) m)) = ((\m. ((m * (NUMERAL (BIT1 _0))) = m)) m))
T c= c==> ! c= c* b0 cNUMERAL cBIT1 c_0 b0 * / c= c* b0 cNUMERAL cBIT1 c_0 b0 f0 * / c= c* b0 cNUMERAL cBIT1 c_0 b0 f0
