N TRACE_MUL_SYM
C |- (!A. (!B. ((trace ((matrix_mul A) B)) = (trace ((matrix_mul B) A)))))
T c= ctrace cmatrix_mul f0 f1 ctrace cmatrix_mul f1 f0
D TRUTH
A |- T
T cT
D REAL_MUL_SYM
A |- (!x. (!y. (((real_mul x) y) = ((real_mul y) x))))
T c= creal_mul f0 f1 creal_mul f1 f0
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D SUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) f) = ((sum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 f1 csum f0 f2
D SUM_SWAP_NUMSEG
A |- (!a. (!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))))))
T c= csum * * part c.. f0 f1 / csum * * part c.. f2 f3 * f4 b0 csum * * part c.. f2 f3 / csum * * part c.. f0 f1 / * * f4 b1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D matrix_mul
A |- (!A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))))
T c= cmatrix_mul f0 f1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b2 c$ c$ f1 b2 b1
D trace
A |- (!A. ((trace A) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((A $ i) $ i)))))
T c= ctrace f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ f0 b0 b0
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = ((real_mul ((B $ i) $ x)) ((A $ x) $ j))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4
- |- (((!g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4
- |- (!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0
+ |- (((!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))) ==> ((\c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))) c)) = ((\c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))) c))
T c= c==> ! ! ! c= csum * * part c.. f0 f1 / csum * * part c.. b0 b1 * b2 b3 csum * * part c.. b0 b1 / csum * * part c.. f0 f1 / * * b2 b4 b3 * / ! ! c= csum * * part c.. f0 f1 / csum * * part c.. b0 b1 * b2 b3 csum * * part c.. b0 b1 / csum * * part c.. f0 f1 / * * b2 b4 b3 f2 * / ! ! c= csum * * part c.. f0 f1 / csum * * part c.. b0 b1 * b2 b3 csum * * part c.. b0 b1 / csum * * part c.. f0 f1 / * * b2 b4 b3 f2
- (x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0
- |- (((!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = ((real_mul ((B $ x) $ x')) ((A $ x') $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x'. ((real_mul ((B $ x) $ x')) ((A $ x') $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x'. ((real_mul ((B $ x) $ x')) ((A $ x') $ x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))) $ i) = ((\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b1 c$ c$ f2 b1 b0 f0 * / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b1 c$ c$ f2 b1 b0 f0
- |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 * f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- (((!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) ==> ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B)) = ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B))
T c= c==> ! c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1 * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
+ |- ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((\c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))) c)
T * / ! ! c= csum * * part c.. f0 f1 / csum * * part c.. b0 b1 * b2 b3 csum * * part c.. b0 b1 / csum * * part c.. f0 f1 / * * b2 b4 b3 f2
- (x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) = T)
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV cT
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- (((NUMERAL (BIT1 _0)) <= k) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
- |- (((!g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4
- (x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) |- ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) /\ (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = ((real_mul ((B $ x) $ x')) ((A $ x') $ x))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c/\ cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2
+ |- ((\b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))))) b)
T * / ! ! ! c= csum * * part c.. f0 b0 / csum * * part c.. b1 b2 * b3 b4 csum * * part c.. b1 b2 / csum * * part c.. f0 b0 / * * b3 b5 b4 f1
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2 cT
- |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3
+ |- ((!B. ((trace ((matrix_mul A) B)) = (trace ((matrix_mul B) A)))) = T)
T c= ! c= ctrace cmatrix_mul f0 b0 ctrace cmatrix_mul b0 f0 cT
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambda g) $ i) = (g i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
- |- (!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f1 f2 f0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 cT
+ |- (((!A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) ==> ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A)) = ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A))
T c= c==> ! ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0 * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0
+ |- ((\y. (((real_mul x) y) = ((real_mul y) x))) y)
T * / c= creal_mul f0 b0 creal_mul b0 f0 f1
- (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b0 b0 * f2 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f2
+ |- ((\B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j)))))))) B)
T * / c= cmatrix_mul f0 b0 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b3 c$ c$ b0 b3 b2 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- |- ((!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = (g x')))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
+ |- (((!y. (((real_mul x) y) = ((real_mul y) x))) ==> ((\y. (((real_mul x) y) = ((real_mul y) x))) y)) = ((\y. (((real_mul x) y) = ((real_mul y) x))) y))
T c= c==> ! c= creal_mul f0 b0 creal_mul b0 f0 * / c= creal_mul f0 b0 creal_mul b0 f0 f1 * / c= creal_mul f0 b0 creal_mul b0 f0 f1
+ |- ((\x. (!y. (((real_mul x) y) = ((real_mul y) x)))) x)
T * / ! c= creal_mul b0 b1 creal_mul b1 b0 f0
- |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 * f4 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f4
+ |- (((!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))) ==> ((\d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))) d)) = ((\d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))) d))
T c= c==> ! ! c= csum * * part c.. f0 f1 / csum * * part c.. f2 b0 * b1 b2 csum * * part c.. f2 b0 / csum * * part c.. f0 f1 / * * b1 b3 b2 * / ! c= csum * * part c.. f0 f1 / csum * * part c.. f2 b0 * b1 b2 csum * * part c.. f2 b0 / csum * * part c.. f0 f1 / * * b1 b3 b2 f3 * / ! c= csum * * part c.. f0 f1 / csum * * part c.. f2 b0 * b1 b2 csum * * part c.. f2 b0 / csum * * part c.. f0 f1 / * * b1 b3 b2 f3
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f1 f2 f0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0
- |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
+ |- (((!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))) ==> ((\f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))) f)) = ((\f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))) f))
T c= c==> ! c= csum * * part c.. f0 f1 / csum * * part c.. f2 f3 * b0 b1 csum * * part c.. f2 f3 / csum * * part c.. f0 f1 / * * b0 b2 b1 * / c= csum * * part c.. f0 f1 / csum * * part c.. f2 f3 * b0 b1 csum * * part c.. f2 f3 / csum * * part c.. f0 f1 / * * b0 b2 b1 f4 * / c= csum * * part c.. f0 f1 / csum * * part c.. f2 f3 * b0 b1 csum * * part c.. f2 f3 / csum * * part c.. f0 f1 / * * b0 b2 b1 f4
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 b0 b1 c$ c$ f0 b1 b0
+ |- (((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i))))))) = T) = ((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul ((A $ j) $ i)) ((B $ i) $ j))))))) = T))
T c= c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 cT c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 cT
- |- ((\g. ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 * f3 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f3
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1
- |- (((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 cT
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((((matrix_mul B) A) $ i) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f1 f2 f0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0
- |- (!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = ((real_mul ((B $ x) $ x')) ((A $ x') $ x)))))
T c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f4
- |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
+ |- (((!A. ((trace A) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((A $ i) $ i))))) ==> ((\A. ((trace A) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((A $ i) $ i))))) A)) = ((\A. ((trace A) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((A $ i) $ i))))) A))
T c= c==> ! c= ctrace b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ b0 b1 b1 * / c= ctrace b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ b0 b1 b1 f0 * / c= ctrace b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ b0 b1 b1 f0
- |- ((\g. ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = (g k)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f4
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- (((lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))))) $ i) = ((\i. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))))) i))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 b0 b2 c$ c$ f2 b2 b1 f0 * / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 b0 b2 c$ c$ f2 b2 b1 f0
+ |- ((\A. ((trace A) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((A $ i) $ i))))) A)
T * / c= ctrace b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ b0 b1 b1 f0
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) /\ (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2
- |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ i) $ k)) ((A $ k) $ j)) = ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3
+ |- ((\A. (!B. (((matrix_mul A) B) = (lambdai. (lambdaj. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ j))))))))) A)
T * / ! c= cmatrix_mul b0 b1 clambda / clambda / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ b0 b2 b4 c$ c$ b1 b4 b3 f0
+ |- ((\a. (!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))))) a)
T * / ! ! ! ! c= csum * * part c.. b0 b1 / csum * * part c.. b2 b3 * b4 b5 csum * * part c.. b2 b3 / csum * * part c.. b0 b1 / * * b4 b6 b5 f0
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))) j))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / * / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 b0
- |- ((!k. ((((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) ==> (((real_mul ((B $ x) $ k)) ((A $ k) $ x)) = ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f1
- |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b1 b2 c$ c$ f1 b2 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
- (((NUMERAL (BIT1 _0)) <= k) /\ (k <= (dimindex UNIV))) |- ((k <= (dimindex UNIV)) = T)
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c<= f0 cdimindex part cUNIV cT
- |- (!g. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((sum s) (\i. (f i))) = ((sum s) g))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= csum f0 / * f1 b0 csum f0 f2
- |- (((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = ((real_mul ((B $ x) $ x')) ((A $ x') $ x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 creal_mul c$ c$ f1 f2 f0 c$ c$ f3 f0 f2 cT
- |- (((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = ((real_mul ((B $ i) $ x)) ((A $ x) $ j))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((B $ i) $ x)) ((A $ x) $ j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\x. ((real_mul ((B $ i) $ x)) ((A $ x) $ j))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3
+ |- (T = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))) j)))))))
T c= cT c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / * / creal_mul c$ c$ f1 b1 b2 c$ c$ f0 b2 b1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 f0 b0 c$ c$ f2 b0 f0 cT
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
- |- ((!x. ((x IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ i) $ x)) ((A $ x) $ j)) = (g x)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ j)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 * f4 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b0 c$ c$ f2 b0 f3 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV f4
- |- (((!g. ((!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = (g x')))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = (g x')))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!x'. ((x' IN ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) ==> (((real_mul ((B $ x) $ x')) ((A $ x') $ x)) = (g x')))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ x) $ k)) ((A $ k) $ x)))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV c= creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 f1 b1 c$ c$ f2 b1 f1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f3
+ |- (((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) ==> ((\x. (!y. (((real_mul x) y) = ((real_mul y) x)))) x)) = ((\x. (!y. (((real_mul x) y) = ((real_mul y) x)))) x))
T c= c==> ! ! c= creal_mul b0 b1 creal_mul b1 b0 * / ! c= creal_mul b0 b1 creal_mul b1 b0 f0 * / ! c= creal_mul b0 b1 creal_mul b1 b0 f0
+ |- (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))) j))))))
T c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / * / creal_mul c$ c$ f1 b1 b2 c$ c$ f0 b2 b1 b0
+ |- ((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((real_mul ((A $ j) $ i)) ((B $ i) $ j))))))) = T)
T c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 cT
+ |- (((!a. (!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))))) ==> ((\a. (!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))))) a)) = ((\a. (!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))))))) a))
T c= c==> ! ! ! ! ! c= csum * * part c.. b0 b1 / csum * * part c.. b2 b3 * b4 b5 csum * * part c.. b2 b3 / csum * * part c.. b0 b1 / * * b4 b6 b5 * / ! ! ! ! c= csum * * part c.. b0 b1 / csum * * part c.. b2 b3 * b4 b5 csum * * part c.. b2 b3 / csum * * part c.. b0 b1 / * * b4 b6 b5 f0 * / ! ! ! ! c= csum * * part c.. b0 b1 / csum * * part c.. b2 b3 * b4 b5 csum * * part c.. b2 b3 / csum * * part c.. b0 b1 / * * b4 b6 b5 f0
+ |- (((!g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) ==> ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g)) = ((\g. ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = (g i)))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b1 c<= b1 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b1 b1 * b0 b1 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b1 b1 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV b0 f2
+ |- ((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\j. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))) j)))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))))
T c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / * / creal_mul c$ c$ f1 b1 b2 c$ c$ f0 b2 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 b0 b1 c$ c$ f0 b1 b0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((matrix_mul B) A) $ i) $ i) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))) ==> (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i)))))))) = (((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((((matrix_mul B) A) $ i) $ i))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / c$ c$ cmatrix_mul f0 f1 b0 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0
+ |- ((\d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))) d)
T * / ! c= csum * * part c.. f0 f1 / csum * * part c.. f2 b0 * b1 b2 csum * * part c.. f2 b0 / csum * * part c.. f0 f1 / * * b1 b3 b2 f3
+ |- (((!b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))))) ==> ((\b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))))) b)) = ((\b. (!c. (!d. (!f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j)))))))))) b))
T c= c==> ! ! ! ! c= csum * * part c.. f0 b0 / csum * * part c.. b1 b2 * b3 b4 csum * * part c.. b1 b2 / csum * * part c.. f0 b0 / * * b3 b5 b4 * / ! ! ! c= csum * * part c.. f0 b0 / csum * * part c.. b1 b2 * b3 b4 csum * * part c.. b1 b2 / csum * * part c.. f0 b0 / * * b3 b5 b4 f1 * / ! ! ! c= csum * * part c.. f0 b0 / csum * * part c.. b1 b2 * b3 b4 csum * * part c.. b1 b2 / csum * * part c.. f0 b0 / * * b3 b5 b4 f1
+ |- ((\f. (((sum (a .. b)) (\i. ((sum (c .. d)) (f i)))) = ((sum (c .. d)) (\j. ((sum (a .. b)) (\i. ((f i) j))))))) f)
T * / c= csum * * part c.. f0 f1 / csum * * part c.. f2 f3 * b0 b1 csum * * part c.. f2 f3 / csum * * part c.. f0 f1 / * * b0 b2 b1 f4
+ |- ((((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((A $ i) $ k)) ((B $ k) $ i)))))) = ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\i. ((sum ((NUMERAL (BIT1 _0)) .. (dimindex UNIV))) (\k. ((real_mul ((B $ i) $ k)) ((A $ k) $ i))))))) = ((trace ((matrix_mul A) B)) = (trace ((matrix_mul B) A))))
T c= c= csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f0 b0 b1 c$ c$ f1 b1 b0 csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / csum * * part c.. cNUMERAL cBIT1 c_0 cdimindex part cUNIV / creal_mul c$ c$ f1 b0 b1 c$ c$ f0 b1 b0 c= ctrace cmatrix_mul f0 f1 ctrace cmatrix_mul f1 f0
+ |- (((trace ((matrix_mul A) B)) = (trace ((matrix_mul B) A))) = T)
T c= c= ctrace cmatrix_mul f0 f1 ctrace cmatrix_mul f1 f0 cT
