N Aq13.lm_lt_rtrans_suc
C |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_IMP
A |- (!t1. (!t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))))
T c= c~ c==> f0 f1 c/\ f0 c~ f1
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D LAST
A |- ((LAST ((CONS h) t)) = (((COND (t = NIL)) h) (LAST t)))
T c= cLAST cCONS f0 f1 cCOND c= f1 cNIL f0 cLAST f1
D APPEND_NIL
A |- (!l. (((APPEND l) NIL) = l))
T c= cAPPEND f0 cNIL f0
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_EQ
A |- (!x. (!y. ((~ (x = y)) = (((int_lt x) y) \/ ((int_lt y) x)))))
T c= c~ c= f0 f1 c\/ cint_lt f0 f1 cint_lt f1 f0
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_NOT_LT
A |- (!x. (!y. ((~ ((int_lt x) y)) = ((int_le y) x))))
T c= c~ cint_lt f0 f1 cint_le f1 f0
D INT_OF_NUM_EQ
A |- (!m. (!n. (((int_of_num m) = (int_of_num n)) = (m = n))))
T c= c= cint_of_num f0 cint_of_num f1 c= f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_OF_NUM_LT
A |- (!m. (!n. (((int_lt (int_of_num m)) (int_of_num n)) = (m < n))))
T c= cint_lt cint_of_num f0 cint_of_num f1 c< f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Hypermap.COM_POWER
A |- (!n. (!f. (((POWER f) (SUC n)) = (f o ((POWER f) n)))))
T c= * * part cPOWER f0 cSUC f1 * * part co f0 * * part cPOWER f0 f1
D Tame_list.POWER_TO_ITER
A |- (!n. (((POWER f) n) = ((ITER n) f)))
T c= * * part cPOWER f0 f1 * * part cITER f1 f0
D Nkezbfc_local.lemma
A |- (!A. (A \/ (~ A)))
T c\/ f0 c~ f0
D Seq.eq_ext
A |- (!f. (!g. ((!x. ((f x) = (g x))) = (f = g))))
T c= ! c= * f0 b0 * f1 b0 c= f0 f1
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.final_list
A |- (!L. (!r. (((final_list L) r) = ((all (\d. (((f_list L) d) = ((next_el r) d)))) r))))
T c= cfinal_list f0 f1 call / c= cf_list f0 b0 cnext_el f1 b0 f1
D Tame_defs2.split_normal_list
A |- (!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
D Tame_defs2.l_m
A |- (!L. (!r. (!x. ((((l'm L) r) x) = (min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m)))))))))
T c= cl'm f0 f1 f2 cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el f1 f2 cf_list f0 cITER cSUC b1 * part cnext_el f1 f2 b1
D Tame_defs2.transform_list
A |- (!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.APPEND_cat
A |- (APPEND = cat)
T c= part cAPPEND part ccat
D Tame_list.min_num_in
A |- (!X. ((~ (X = EMPTY)) ==> ((min_num X) IN X)))
T c==> c~ c= f0 part cEMPTY cIN cmin_num f0 f0
D Tame_list.REVERSE_rev
A |- (REVERSE = rev)
T c= part cREVERSE part crev
D Tame_list.indexf_n
A |- (!x. (!y. (!s. ((((MEM x) s) /\ (((MEM y) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf x) y) s)) x) = y)))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 f2 f1 f0 f2
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.cat_eq_nil
A |- (!s. (!t. ((((cat s) t) = NIL) = ((s = NIL) /\ (t = NIL)))))
T c= c= ccat f0 f1 cNIL c/\ c= f0 cNIL c= f1 cNIL
D Tame_list.next_el_cat_last1
A |- (!s. (!t. (((uniq ((cat s) t)) /\ ((~ (t = NIL)) /\ (~ (s = NIL)))) ==> (((next_el ((cat s) t)) (LAST s)) = (HD t)))))
T c==> c/\ cuniq ccat f0 f1 c/\ c~ c= f1 cNIL c~ c= f0 cNIL c= cnext_el ccat f0 f1 cLAST f0 cHD f1
D Tame_list.last_cat
A |- (!b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b)))))
T c==> c~ c= f0 cNIL c= cLAST ccat f1 f0 cLAST f0
D Tame_list.betwn_nil
A |- (!f. (!a. (!b. (((uniq f) /\ ((~ (a = b)) /\ (((MEM a) f) /\ ((MEM b) f)))) ==> (((((betwn f) a) b) = NIL) = (b = ((next_el f) a)))))))
T c==> c/\ cuniq f0 c/\ c~ c= f1 f2 c/\ cMEM f1 f0 cMEM f2 f0 c= c= cbetwn f0 f1 f2 cNIL c= f2 cnext_el f0 f1
D Dangeyj.HD_BETWN2
A |- (!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1))))))
T c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ c~ c= f0 f2 c/\ cuniq f1 c~ c= cbetwn f1 f0 f2 cNIL c= cHD cbetwn f1 f0 f2 cnext_el f1 f0
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Ohcgkfu.sing_not_nil
A |- (~ (((CONS x) NIL) = NIL))
T c~ c= cCONS f0 cNIL cNIL
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Ncvibwu.next_el_last_hd
A |- (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))
T c==> cuniq cAPPEND cCONS f0 cNIL cAPPEND f1 cCONS f2 cNIL c= cnext_el cAPPEND cCONS f0 cNIL cAPPEND f1 cCONS f2 cNIL f2 f0
D Ncvibwu.l_y_rep_power_le
A |- ((((f_list L) x) = ((next_el r) x)) ==> (!j. ((j <= (((l'm L) r) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el r)) (SUC j)) x)))))
T c==> c= cf_list f0 f1 cnext_el f2 f1 ! c==> c<= b0 cl'm f0 f2 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el f2 cSUC b0 f1
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.mem_ztrans_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.z_not_eq_ytrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D Hojodcm.mem_ytrans_list_of_darts_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq1.uniq_snd_split_norm
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 f3 cl'y f0 f2 f3 cprev_el f2 cl'z f0 f1 f2 f3
D Aq1.next_mark_mem_r_trans_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2
D Aq7.indexf_ytrans_eq_l_m1_v0
A |- (!L. (!N. (!r. (!x. (!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c= cnext_el f1 f3 f4 c= cindexf f4 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 cl'm f0 f1 f3
D Aq10.AQ10
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 f3 c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3
D Aq12.power_next_s_list_eq_rtrans
A |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c= cnext_el f6 f3 f8 ! c==> c<= b0 cl'm f0 f1 f3 c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 f8 cPOWER * part cnext_el f1 b0 f8
D Aq13.next_mark_in_rtrans_suc
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
D Aq13.lm_le_rtrans_suc
A |- (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ ((f = g) = (!x. ((f x) = (g x)))) |- ((!x. ((f x) = (g x))) = (f = g))
T c==> c= c= f0 f1 ! c= * f0 b0 * f1 b0 c= ! c= * f0 b0 * f1 b0 c= f0 f1
+ |- ((((((f_list L) x) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x))))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c= c==> c==> c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 ! c==> c<= b0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 cSUC b0 f1 c< cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 c< cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))) = (~ (((int_le (int_of_num (NUMERAL _0))) _10352368) ==> ((int_le _10352368) _10352368))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 cint_le f0 f0
- (~ (A a)), ((A a) /\ (!a. (~ (A a)))) |- ((~ (A a)) /\ (A a))
T c==> c~ * f0 f1 c==> c/\ * f0 f1 ! c~ * f0 b0 c/\ c~ * f0 f1 * f0 f1
+ (~ ((final_list L) r)), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z) |- ((~ (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))
T c==> c~ cfinal_list f0 f1 c==> c= cprev_el f1 f2 f3 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f3 f5 f6 f7 c==> c= cl'y f0 f1 f8 f4 c==> c= cl'z f0 f9 f1 f8 f2 c==> c~ c= cf_list f0 f7 cnext_el crtrans f0 f9 f1 f8 cNUMERAL cBIT1 c_0 f7 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f3 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f4 f4 f3 f6 cf_list f0 f7
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ ((A a) /\ (!a. (~ (A a)))) |- ((\a. (~ (A a))) _10352366)
T c==> c/\ * f0 f1 ! c~ * f0 b0 * / c~ * f0 b0 f2
- |- ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))
T c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((((marked_list L) N) r) x) |- (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cmarked_list f0 f1 f2 f3 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cPOWER * part cnext_el f2 f9 f7 f5 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 f7 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 f7 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f9 f7 f5 c< f9 f9
+ (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cPOWER * part cnext_el crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 cl'm f2 crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 cPOWER * part cnext_el f3 cl'm f2 crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten f8 c==> cuniq f3 c==> c= cPOWER * part cnext_el f3 f9 f6 f1 c==> c= cl'm f2 cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f5 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f6 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f6 f1 c< f9 f9
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ ((uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) ==> (((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) ==> (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c/\ cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 f9 f5 c==> c= cindexf f9 f5 cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 cf_list f0 f5
+ |- ((m = n) = ((int_of_num m) = (int_of_num n)))
T c= c= f0 f1 c= cint_of_num f0 cint_of_num f1
+ (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L))) ==> ((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 clist_of_darts f0 c==> c~ c= cnext_el f4 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f6 f7 f5 c< f6 f6 c==> c~ c= cnext_el f4 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f6 f7 f5 c< f6 f6
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) /\ (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f5 f0 c==> c= cprev_el f3 f0 f5 c==> c= cl'y f2 f3 f6 f1 c==> c= cl'z f2 f7 f3 f6 f0 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f7 f3 f6 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
+ |- (!a. (((\a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) a) ==> F))
T c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF
+ (~ ((final_list L) r)), (good_list L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) |- (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) = T)
T c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 cT
- (~ F), ((!x. (~ (A x))) /\ (A a)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c~ * f0 b0 * f0 f1 c/\ c~ cF cF
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
+ (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))), (((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) \/ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c\/ c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), ((MEM y) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c/\ cMEM f0 f7 c< cindexf f8 f1 f7 cindexf f8 f0 f7 c==> cMEM f1 f7 c==> cmarked_list f2 f6 f3 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f8 f1 c< f9 f9
- |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) |- (((~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = (((~ ((GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> ((min_num (GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) IN (GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c= c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY cIN cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> c<= b0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 f5 cPOWER * part cnext_el f1 b0 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> c<= b0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC b0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC b0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((HD (((betwn f) y) z)) = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cHD cbetwn f2 f3 f4 cnext_el f2 f3 c==> c= cl'y f0 f1 f5 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f5 c==> c~ c= cHD cbetwn f2 f3 f4 cf_list f0 f3 c==> c= cPOWER * part cf_list f0 f7 f8 f3 c< f7 f7
+ |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ |- (((!s. ((((MEM w) s) /\ (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) s)) w) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> ((\s. ((((MEM w) s) /\ (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) s)) w) = (((((ytrans L) N) r) x) (NUMERAL _0))))) r)) = ((\s. ((((MEM w) s) /\ (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) s)) w) = (((((ytrans L) N) r) x) (NUMERAL _0))))) r))
T c= c==> ! c==> c/\ cMEM f0 b0 c/\ cMEM cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 * / c==> c/\ cMEM f0 b0 c/\ cMEM cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f3 * / c==> c/\ cMEM f0 b0 c/\ cMEM cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 b0 f0 cytrans f1 f2 f3 f4 cNUMERAL c_0 f3
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (!b. (((((l'm L) r) x) <= b) ==> (((((l'm L) r) x) < b) \/ ((((l'm L) r) x) = b))))
T c==> c<= cl'm f0 f1 f2 f3 c\/ c< cl'm f0 f1 f2 f3 c= cl'm f0 f1 f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w) = y) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 f1 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f6 f1 c< f9 f9
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 cf_list b0 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 cf_list b0 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 cf_list b0 b3 f0
+ (((next_el r) z1) = z) |- (((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))) = ((~ (((next_el ((APPEND ((APPEND ((CONS ((next_el r) z1)) NIL)) ((APPEND (((betwn r) ((next_el r) z1)) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) ((next_el r) z1)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c= cnext_el f0 f1 f2 c= c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f0 f2 f3 cCONS f3 cNIL cbetwn cfind_face f4 f3 f3 f2 f3 cf_list f4 f3 c==> c= cPOWER * part cf_list f4 f5 f6 f3 c< f5 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f0 cnext_el f0 f1 f3 cCONS f3 cNIL cbetwn cfind_face f4 f3 f3 cnext_el f0 f1 f3 cf_list f4 f3 c==> c= cPOWER * part cf_list f4 f5 f6 f3 c< f5 f5
+ |- (((!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> (!j. ((j <= (((l'm L) r) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el r)) (SUC j)) x))))))) ==> ((\r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> (!j. ((j <= (((l'm L) r) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el r)) (SUC j)) x))))))) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) = ((\r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> (!j. ((j <= (((l'm L) r) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el r)) (SUC j)) x))))))) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c= c==> ! ! c==> c= cf_list f0 b1 cnext_el b0 b1 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cf_list f0 cSUC b2 b1 cPOWER * part cnext_el b0 cSUC b2 b1 * / ! c==> c= cf_list f0 b1 cnext_el b0 b1 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cf_list f0 cSUC b2 b1 cPOWER * part cnext_el b0 cSUC b2 b1 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 * / ! c==> c= cf_list f0 b1 cnext_el b0 b1 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cf_list f0 cSUC b2 b1 cPOWER * part cnext_el b0 cSUC b2 b1 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (~ ((final_list L) r)) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\a. ((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat a) ((CONS y) NIL))) = (LAST ((CONS y) NIL))))) (((betwn r) z) y))
T * / c==> c~ c= cCONS f0 cNIL cNIL c= cLAST ccat b0 cCONS f0 cNIL cLAST cCONS f0 cNIL cbetwn f1 f2 f0
- |- ((\w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))) w)
T * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 f3 c= cnext_el f2 b4 b0 ! c==> c<= b5 cl'm b1 b3 b4 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b5 b0 cPOWER * part cnext_el b3 b5 b0 f4
+ |- ((!z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) = T)
T c= ! ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) /\ ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((!z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) ==> ((\z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) z)) = ((\z. (!a. ((uniq ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND a) ((CONS y) NIL)))) y) = z)))) z))
T c= c==> ! ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 * / ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 f1 * / ! c==> cuniq cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL c= cnext_el cAPPEND cCONS b0 cNIL cAPPEND b1 cCONS f0 cNIL f0 b0 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))))
T c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c/\ cMEM f1 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = (((((marked_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f1 f2 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- (((~ (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d))) ==> ((((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)) = F)) = ((((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)) = F))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c= c==> c~ c= cf_list f0 f5 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 c= c= cf_list f0 f5 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cF c= c= cf_list f0 f5 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cF
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- (((!r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) ==> ((\r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) y)) = ((\r1. (!r2. ((((MEM r1) f) /\ (((MEM r2) f) /\ ((~ (r1 = r2)) /\ ((uniq f) /\ (~ ((((betwn f) r1) r2) = NIL)))))) ==> ((HD (((betwn f) r1) r2)) = ((next_el f) r1))))) y))
T c= c==> ! ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1 * / ! c==> c/\ cMEM b0 f0 c/\ cMEM b1 f0 c/\ c~ c= b0 b1 c/\ cuniq f0 c~ c= cbetwn f0 b0 b1 cNIL c= cHD cbetwn f0 b0 b1 cnext_el f0 b0 f1
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
+ (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) a) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cPOWER * part cnext_el f3 f8 f6 f1 c==> c= cPOWER * part cnext_el crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 cl'm f2 crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 cPOWER * part cnext_el f3 cl'm f2 crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f9 f3 f5 f0 c==> c= cl'm f2 cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f5 f8 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f9 f3 f5 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f6 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 f6 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 f6 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f6 f1 c< f8 f8
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- (~ (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c~ c= cf_list f0 f5 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5
- |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9
+ |- (((!t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) ==> ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z))) = ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z)))
T c= c==> ! c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0 * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- (((!r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) ==> ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) f)) = ((\r. (!r1. (!r2. ((((MEM r1) r) /\ (((MEM r2) r) /\ ((~ (r1 = r2)) /\ ((uniq r) /\ (~ ((((betwn r) r1) r2) = NIL)))))) ==> ((HD (((betwn r) r1) r2)) = ((next_el r) r1)))))) f))
T c= c==> ! ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0 * / ! ! c==> c/\ cMEM b1 b0 c/\ cMEM b2 b0 c/\ c~ c= b1 b2 c/\ cuniq b0 c~ c= cbetwn b0 b1 b2 cNIL c= cHD cbetwn b0 b1 b2 cnext_el b0 b1 f0
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) /\ ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
- ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) /\ (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))
T c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 c/\ c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ |- (((!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x)))) ==> ((\w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x)))) w)) = ((\w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x)))) w))
T c= c==> ! c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c= cnext_el f1 f3 b0 c= cindexf b0 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 cl'm f0 f1 f3 * / c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c= cnext_el f1 f3 b0 c= cindexf b0 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 cl'm f0 f1 f3 f4 * / c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c= cnext_el f1 f3 b0 c= cindexf b0 cytrans f0 f2 f1 f3 cNUMERAL c_0 f1 cl'm f0 f1 f3 f4
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ |- ((((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM d) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (uniq (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((indexf w) d) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) w) = d))
T c==> c/\ cMEM f0 crtrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 c/\ cMEM f5 crtrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cuniq crtrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 c= cPOWER * part cnext_el crtrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 cindexf f0 f5 crtrans f1 f2 f3 f4 cNUMERAL cBIT1 c_0 f0 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f9 f7 f5 c< f9 f9
+ |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- ((((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)) = F)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c= c= cf_list f0 f5 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cF
+ |- ((!r. (!x. ((((f_list L) x) = ((next_el r) x)) ==> (!j. ((j <= (((l'm L) r) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el r)) (SUC j)) x))))))) = T)
T c= ! ! c==> c= cf_list f0 b1 cnext_el b0 b1 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cf_list f0 cSUC b2 b1 cPOWER * part cnext_el b0 cSUC b2 b1 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) /\ ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
- |- ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all)))
T c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ ((((betwn f) y) z) = NIL)) |- ((NIL = (((betwn f) y) z)) = F)
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c= cNIL cbetwn f0 f1 f2 cF
- |- (((!y. (!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))))) ==> ((\y. (!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))))) y)) = ((\y. (!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))))) y))
T c= c==> ! ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cfind_face b5 b8 b3 c/\ c= cprev_el b7 b1 b2 c= cnext_el b3 b8 b4 ! c==> c<= b9 cl'm b5 b7 b8 c= cPOWER * part cnext_el crtrans b5 b6 b7 b8 cNUMERAL cBIT1 c_0 b9 b4 cPOWER * part cnext_el b7 b9 b4 * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cfind_face b5 b8 b3 c/\ c= cprev_el b7 b1 b2 c= cnext_el b3 b8 b4 ! c==> c<= b9 cl'm b5 b7 b8 c= cPOWER * part cnext_el crtrans b5 b6 b7 b8 cNUMERAL cBIT1 c_0 b9 b4 cPOWER * part cnext_el b7 b9 b4 f0 * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cfind_face b5 b8 b3 c/\ c= cprev_el b7 b1 b2 c= cnext_el b3 b8 b4 ! c==> c<= b9 cl'm b5 b7 b8 c= cPOWER * part cnext_el crtrans b5 b6 b7 b8 cNUMERAL cBIT1 c_0 b9 b4 cPOWER * part cnext_el b7 b9 b4 f0
+ |- ((m < n) = ((int_lt (int_of_num m)) (int_of_num n)))
T c= c< f0 f1 cint_lt cint_of_num f0 cint_of_num f1
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = ((good_list L) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cgood_list f0 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d)) |- (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d))
T c==> c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c= cf_list f0 f4 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((~ (x = y)) = (((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y) \/ ((int_le ((int_add y) (int_of_num (NUMERAL (BIT1 _0))))) x)))
T c= c~ c= f0 f1 c\/ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1 cint_le cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS ((next_el r) z1)) NIL)) ((APPEND (((betwn r) ((next_el r) z1)) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) ((next_el r) z1)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> c==> cuniq f3 c= cnext_el f3 cprev_el f3 cztrans f2 f8 f3 f5 cNUMERAL c_0 cztrans f2 f8 f3 f5 cNUMERAL c_0 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS cnext_el f3 f7 cNIL cAPPEND cbetwn f3 cnext_el f3 f7 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 cnext_el f3 f7 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f6 f1 c< f9 f9
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ ((HD (((betwn f) y) z)) = ((next_el f) y)) |- (((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))) = ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c= cHD cbetwn f0 f1 f2 cnext_el f0 f1 c= c==> c~ c= cnext_el f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f4 f5 f1 c< f4 f4 c==> c~ c= cHD cbetwn f0 f1 f2 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f4 f5 f1 c< f4 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((uniq r) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c/\ cuniq f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 c==> c= cPOWER * part cf_list f1 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 c< cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- ((x' = d) /\ (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cprev_el f3 f8 f9 c==> c= cl'y f0 f3 f4 f10 c==> c= cl'z f0 f2 f3 f4 f8 c==> c= cfind_face f0 f4 f6 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c/\ c= f1 f5 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f7 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f7
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
+ |- (((((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) (SUC a)) = ((\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d)) o ((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) a))) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c= * * part cPOWER / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 cSUC f4 * * part co / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 * * part cPOWER / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 f4 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f5 cf_list f0 f6 c==> c= cPOWER * part cf_list f0 f4 f5 f6 c< f4 f4 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f5 cf_list f0 f6 c==> c= cPOWER * part cf_list f0 f4 f5 f6 c< f4 f4
- |- (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ ((A a) /\ (!a. (~ (A a)))) |- (((A a) ==> F) = F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c= c==> * f0 f1 cF cF
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ |- ((\f. (!a. (!b. (((uniq f) /\ ((~ (a = b)) /\ (((MEM a) f) /\ ((MEM b) f)))) ==> (((((betwn f) a) b) = NIL) = (b = ((next_el f) a))))))) f)
T * / ! ! c==> c/\ cuniq b0 c/\ c~ c= b1 b2 c/\ cMEM b1 b0 cMEM b2 b0 c= c= cbetwn b0 b1 b2 cNIL c= b2 cnext_el b0 b1 f0
+ |- (((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) (SUC a)) = ((\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d)) o ((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) a)))
T c= * * part cPOWER / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 cSUC f4 * * part co / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 * * part cPOWER / cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 b0 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- ((\t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t)))) (((betwn f) y) z))
T * / c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 c/\ c~ c= b0 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL b0 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD b0 cbetwn f3 f2 f0
+ ((A a) /\ (!a. (~ (A a)))) |- (~ (A _10352366))
T c==> c/\ * f0 f1 ! c~ * f0 b0 c~ * f0 f2
+ |- (((!x. ((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) x)) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) x)))) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))) = ((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) (SUC a)) = ((\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) o ((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a))) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))))
T c= c==> ! c= cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b1 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b1 f4 b0 c==> c~ c= cf_list f0 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cf_list f0 f5 c==> c= * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cSUC f4 * * part co / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 c==> c~ c= cf_list f0 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cf_list f0 f5
+ |- (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a))
T c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cnext_el f2 f3 c==> c= cl'y f0 f1 f4 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f5 f1 f4 c==> c~ c= cnext_el cAPPEND cCONS cnext_el f2 f3 cNIL cAPPEND cbetwn f1 cnext_el f2 f3 f3 cCONS f3 cNIL f3 cf_list f0 f3 c==> c= cPOWER * part cf_list f0 f6 f7 f3 c< f6 f6
+ (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))) r)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 b0 f2
+ (((find_face L) y) = f) |- ((\x. (((POWER (next_el ((find_face L) y))) (NUMERAL _0)) ((next_el ((find_face L) y)) x))) = (\x. ((next_el f) x)))
T c==> c= cfind_face f0 f1 f2 c= / cPOWER * part cnext_el cfind_face f0 f1 cNUMERAL c_0 cnext_el cfind_face f0 f1 b0 / cnext_el f2 b0
+ |- ((\t2. ((~ (t1 ==> t2)) = (t1 /\ (~ t2)))) t2)
T * / c= c~ c==> f0 b0 c/\ f0 c~ b0 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC m)) x))))) m)))) = EMPTY))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f2 f1 f3 c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC b1 f3 b1 part cEMPTY
+ |- ((~ (((cat (((betwn r) z) y)) ((CONS y) NIL)) = NIL)) ==> ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))))
T c==> c~ c= ccat cbetwn f0 f1 f2 cCONS f2 cNIL cNIL c= cLAST ccat cCONS f1 cNIL ccat cbetwn f0 f1 f2 cCONS f2 cNIL cLAST ccat cbetwn f0 f1 f2 cCONS f2 cNIL
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c/\ c= cl'y f0 f1 f2 f3 c/\ c= cfind_face f0 f2 f6 c/\ c= cprev_el f1 f5 f7 c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f4 f1 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- |- ((!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))) = T)
T c= ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 f3 c= cnext_el f2 b4 b0 ! c==> c<= b5 cl'm b1 b3 b4 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b5 b0 cPOWER * part cnext_el b3 b5 b0 cT
- |- (!a. (((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a))))
T c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cnext_el crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 b0 cf_list f0 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cnext_el crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 b0 cf_list f0 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 cmarked_list f0 f1 f2 b0 c= cnext_el crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 b0 cf_list f0 b0 f3
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
- (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)) |- (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d))
T c==> c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1
+ ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) |- ((((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))) = (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))
T c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c= c==> c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f0 cf_list f2 cPOWER * part cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f0 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f0 cf_list f2 cPOWER * part cnext_el cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f0
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
+ |- ((((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))))) ==> F) ==> (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))))) = (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368)))))
T c= c==> c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((~ (!x'. (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))) = (?x'. (~ (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))))
T c= c~ ! c==> cMEM b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 c? / c~ c==> cMEM b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) /\ ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c/\ cMEM f1 f7 c/\ cMEM f0 f7 c< cindexf f8 f1 f7 cindexf f8 f0 f7 c==> cmarked_list f2 f6 f3 f5 c/\ c/\ cMEM f1 f7 c/\ cMEM f0 f7 c< cindexf f8 f1 f7 cindexf f8 f0 f7 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f8 f1 c< f9 f9
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f9 f7 f5 c< f9 f9
- ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) |- ((((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a))) = (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))
T c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c= c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) |- (((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))) = ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> c= cPOWER * part cnext_el f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 f5 c= c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f4 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 f5 c< cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f4 cf_list f1 cPOWER * part cnext_el f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 c==> c= cPOWER * part cf_list f1 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 cPOWER * part cnext_el f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 c< cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2
- ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) |- (((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) /\ (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))
T c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c/\ * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((((int_le (int_of_num (NUMERAL _0))) (int_of_num a)) ==> (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> ((~ ((int_le (int_of_num a)) (int_of_num b))) \/ (((int_lt (int_of_num a)) (int_of_num b)) \/ ((int_of_num a) = (int_of_num b)))))) = (((int_le (int_of_num (NUMERAL _0))) (int_of_num b)) ==> ((~ ((int_le (int_of_num a)) (int_of_num b))) \/ (((int_lt (int_of_num a)) (int_of_num b)) \/ ((int_of_num a) = (int_of_num b))))))
T c= c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f0 cint_of_num f1 c\/ cint_lt cint_of_num f0 cint_of_num f1 c= cint_of_num f0 cint_of_num f1 c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f1 c\/ c~ cint_le cint_of_num f0 cint_of_num f1 c\/ cint_lt cint_of_num f0 cint_of_num f1 c= cint_of_num f0 cint_of_num f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cl'm f0 f2 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cfind_face b3 b6 b1 c/\ c= cprev_el b5 f0 b0 c= cnext_el b1 b6 b2 ! c==> c<= b7 cl'm b3 b5 b6 c= cPOWER * part cnext_el crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b7 b2 cPOWER * part cnext_el b5 b7 b2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (MAP = map)
T c= part cMAP part cmap
- |- (LENGTH = sizel)
T c= part cLENGTH part csizel
+ |- (((!b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ==> ((\b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = ((\b. (!a. ((~ (b = NIL)) ==> ((LAST ((cat a) b)) = (LAST b))))) ((cat (((betwn r) z) y)) ((CONS y) NIL))))
T c= c==> ! ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 * / ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 ccat cbetwn f0 f1 f2 cCONS f2 cNIL * / ! c==> c~ c= b0 cNIL c= cLAST ccat b1 b0 cLAST b0 ccat cbetwn f0 f1 f2 cCONS f2 cNIL
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')))), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> c/\ cMEM f9 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 f9 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f9 c==> cMEM f9 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f8 f1 f3 c? / c~ c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 f4
+ |- ((\t. ((\x. (t x)) = t)) t)
T * / c= / * b0 b1 b0 f0
+ |- ((\L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))) L)
T * / ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c= cnext_el f2 b3 f4 ! c==> c<= b4 cl'm b0 b2 b3 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b4 f4 cPOWER * part cnext_el b2 b4 f4 f5
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f5 f0 c==> c= cprev_el f3 f0 f5 c==> c= cl'y f2 f3 f6 f1 c==> c= cl'z f2 f7 f3 f6 f0 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f7 f3 f6 c==> c==> c/\ cgood_list f2 c/\ cgood_list_nodes f2 c/\ cmarked_list f2 f7 f3 f6 c~ cfinal_list f2 f3 cuniq cSND csplit_normal_list f2 f3 cfind_face f2 cl'y f2 f3 f6 cl'y f2 f3 f6 cprev_el f3 cl'z f2 f7 f3 f6 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cPOWER * part cnext_el crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 cl'm f2 crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 cPOWER * part cnext_el f3 cl'm f2 crtrans f2 f8 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f2 f8 c==> call * part cloop_list f2 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten f8 c==> cuniq f3 c==> c= cPOWER * part cnext_el f3 f9 f6 f1 c==> c= cl'm f2 cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f5 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f6 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f8 f3 f9 f6 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f6 f1 c< f9 f9
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c==> c<= cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (good_list L), (good_list_nodes L) |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) = (\x. (!f. (!w. ((((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))) ==> ((MEM w) r))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 / ! ! c==> c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f5 f6 f7 c==> c= cprev_el f4 f2 f8 c==> c= cPOWER * part cnext_el crtrans f1 f0 f4 f6 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f4 f6 cNUMERAL cBIT1 c_0 f6 f7 cPOWER * part cnext_el f4 cl'm f1 crtrans f1 f0 f4 f6 cNUMERAL cBIT1 c_0 f6 f7 c==> c= cl'y f1 f4 f6 f3 c==> c= cl'z f1 f0 f4 f6 f2 c==> c= cfind_face f1 f6 f5 c==> cmarked_list f1 f0 f4 f6 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f4 c==> c= cPOWER * part cnext_el f4 f9 f7 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 f6 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 f7 cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 f9 f7 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f6 cNUMERAL cBIT1 c_0 c, f0 f4 f9 f7 cf_list f1 f3 c==> c= cPOWER * part cf_list f1 f9 f7 f3 c< f9 f9
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((?a. (P a)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
- (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))) |- (((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x))) = T)
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC b0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b0 f3 c= c==> c<= f4 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC f4 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC f4 f3 cT
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f9 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f9
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((NIL = ((CONS x) NIL)) = F)
T c= c= cNIL cCONS f0 cNIL cF
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f7 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((((betwn f) y) z) = NIL) \/ (~ ((((betwn f) y) z) = NIL))), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> c\/ c= cbetwn f7 f1 f0 cNIL c~ c= cbetwn f7 f1 f0 cNIL c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d))) a) w))) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c= cPOWER / cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 b0 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER / cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 b0 f9 f7 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f9 f7 f5 c< f9 f9
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 f5 c==> c= cnext_el f6 f4 f7 c==> c= cprev_el f3 f8 f9 c==> c= cl'y f0 f3 f4 f10 c==> c= cl'z f0 f2 f3 f4 f8 c==> c= cfind_face f0 f4 f6 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f7 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f7
- |- (T = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= cT c==> c~ ! c\/ b0 c~ b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (z = y)) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c~ c= f4 f5 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- |- (!a. (((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a))))
T c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
+ |- (((!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))) ==> ((\r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))) r)) = ((\r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))) r))
T c= c==> ! ! c==> c/\ c~ cfinal_list f0 b0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cfind_face f0 b1 f4 c/\ c= cprev_el b0 f2 f5 c= cnext_el f4 b1 f6 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 b2 f6 cPOWER * part cnext_el b0 b2 f6 * / ! c==> c/\ c~ cfinal_list f0 b0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cfind_face f0 b1 f4 c/\ c= cprev_el b0 f2 f5 c= cnext_el f4 b1 f6 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 b2 f6 cPOWER * part cnext_el b0 b2 f6 f7 * / ! c==> c/\ c~ cfinal_list f0 b0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cfind_face f0 b1 f4 c/\ c= cprev_el b0 f2 f5 c= cnext_el f4 b1 f6 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 b2 f6 cPOWER * part cnext_el b0 b2 f6 f7
+ |- ((\t. ((((cat s) t) = NIL) = ((s = NIL) /\ (t = NIL)))) t)
T * / c= c= ccat f0 b0 cNIL c/\ c= f0 cNIL c= b0 cNIL f1
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> cMEM f1 f8 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- (!t. (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) /\ ((~ (t = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) t)) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD t))))
T c==> c/\ cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL f3 c/\ c~ c= f3 cNIL c~ c= ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL f3 cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cHD f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((((betwn f) y) z) = NIL) \/ (~ ((((betwn f) y) z) = NIL))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c==> c\/ c= cbetwn f7 f1 f0 cNIL c~ c= cbetwn f7 f1 f0 cNIL c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 c==> c~ cfinal_list f0 f2 c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f5 f3 f4 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f4 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cl'm f0 f2 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) |- (((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) = ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= c< cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2
- (EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) |- ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)
T c==> c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c==> cuniq clist_of_darts f3 cuniq cfind_face f3 f5 c==> c~ c= cHD cbetwn f2 f1 f0 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (((!x. (~ (A x))) /\ (A a)) ==> F), (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a))) |- F
T c==> c==> c/\ ! c~ * f0 b0 * f0 f1 cF c==> c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 cF
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f2 f1 f3 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 f5
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z) |- (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 f10 f5 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 cf_list f0 f5
- |- ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)
T * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))))), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((\y. (!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))))) y)
T * / ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b5 b7 c/\ cgood_list b5 c/\ cgood_list_nodes b5 c/\ cmarked_list b5 b6 b7 b8 c/\ c= cl'z b5 b6 b7 b8 b1 c/\ c= cl'y b5 b7 b8 b0 c/\ c= cfind_face b5 b8 b3 c/\ c= cprev_el b7 b1 b2 c= cnext_el b3 b8 b4 ! c==> c<= b9 cl'm b5 b7 b8 c= cPOWER * part cnext_el crtrans b5 b6 b7 b8 cNUMERAL cBIT1 c_0 b9 b4 cPOWER * part cnext_el b7 b9 b4 f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))
T c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x), ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> * / c= cnext_el f7 f3 b0 f8 c/\ * / c= cnext_el f7 f3 b0 f8 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) = T)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2 cT
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c= cnext_el f4 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = T)
T c= ! c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c/\ c= cl'z f0 f2 f1 b0 f3 c/\ c= cl'y f0 f1 b0 f4 c/\ c= cfind_face f0 b0 f5 c/\ c= cprev_el f1 f3 f6 c~ cfinal_list f0 crtrans f0 f2 f1 b0 cNUMERAL cBIT1 c_0 c< cl'm f0 f1 b0 cl'm f0 crtrans f0 f2 f1 b0 cNUMERAL cBIT1 c_0 b0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> cuniq f2 c==> c= cPOWER * part cnext_el f2 f9 f7 f5 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f9 f7 f5 c< f9 f9
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((next_el f) y)) ==> ((~ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f5 f1 f2 c==> c= cnext_el cAPPEND cCONS cnext_el f4 f3 cNIL cAPPEND cbetwn f1 cnext_el f4 f3 f3 cCONS f3 cNIL f3 cnext_el f4 f3 c==> c~ c= cnext_el cAPPEND cCONS cnext_el f4 f3 cNIL cAPPEND cbetwn f1 cnext_el f4 f3 f3 cCONS f3 cNIL f3 cf_list f0 f3 c==> c= cPOWER * part cf_list f0 f6 f7 f3 c< f6 f6
+ |- ((\x'. ((((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')) ==> (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')) ==> ((((POWER (f_list L)) (SUC j)) x') = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x')))))) x)
T * / c==> c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 ! c==> c<= b1 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 c= cPOWER * part cf_list f0 cSUC b1 b0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b1 b0 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) /\ (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 f10 f5 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> c= cindexf f10 f5 cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 c/\ c= cindexf f10 f5 cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 cf_list f0 f5
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((((marked_list L) N) r) x) |- (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) /\ (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cmarked_list f0 f7 f1 f3 c/\ cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> cMEM f3 f1 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cPOWER * part cnext_el f1 f9 f4 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f4 f8 c< f9 f9
+ |- ((!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))) = T)
T c= ! ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cfind_face f0 b2 f3 c/\ c= cprev_el b1 f1 f4 c~ cfinal_list f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 c< cl'm f0 b1 b2 cl'm f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 b2 cT
- |- ((!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 b1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cfind_face b3 b6 b0 c/\ c= cprev_el b5 b1 b2 c~ cfinal_list b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 c<= cl'm b3 b5 b6 cl'm b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b6 cT
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- ((?d. (x' = d)) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f5 f4 f6 c==> c= cprev_el f3 f7 f8 c==> c= cl'y f0 f3 f4 f9 c==> c= cl'z f0 f2 f3 f4 f7 c==> c= cfind_face f0 f4 f5 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c==> c? / c= f1 b0 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f6 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f6
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c/\ cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> cmarked_list f2 f6 f3 f5 c==> c/\ cMEM f1 f7 c/\ cMEM f0 f7 c< cindexf f8 f1 f7 cindexf f8 f0 f7 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f8 f1 c< f9 f9
- (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) |- (((~ (((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))) ==> ((((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = F)) = ((((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = F))
T c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= c==> c~ c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cF c= c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cF
- |- ((!A'. (A' \/ (~ A))) = ((!A. A) \/ (~ A)))
T c= ! c\/ b0 c~ f0 c\/ ! b0 c~ f0
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))) |- ((((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')) = F)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c= c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cF
+ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) |- ((~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))) = (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))
T c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 c==> c= cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c= c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cf_list f0 f5 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 f4
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq cflatten f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f1 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ |- ((\a. (!b. ((a <= b) ==> ((a < b) \/ (a = b))))) (((l'm L) r) x))
T * / ! c==> c<= b0 b1 c\/ c< b0 b1 c= b0 b1 cl'm f0 f1 f2
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\r. (!x. ((min_num (GSPEC (\GEN%PVAR%8605. (?m. (((SETSPEC GEN%PVAR%8605) (~ ((((ITER (SUC (SUC m))) (next_el r)) x) = ((f_list L) (((ITER (SUC m)) (next_el r)) x))))) m))))) = (((l'm L) r) x)))) r)
T * / ! c= cmin_num * part cGSPEC / c? / cSETSPEC b2 c~ c= cITER cSUC cSUC b3 * part cnext_el b0 b1 cf_list f0 cITER cSUC b3 * part cnext_el b0 b1 b3 cl'm f0 b0 b1 f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) |- ((((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))) = (((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))))
T c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 f6 c= c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c==> c~ c= cf_list f0 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cf_list f0 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 c==> c~ c= cf_list f0 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cf_list f0 f6
- ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) /\ (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))
T c==> c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 c/\ c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c~ c= cHD cbetwn f2 f1 f0 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) ==> ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) f)) = ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))) f))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f4
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f7 f1 f3 c/\ c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> cMEM f3 f1 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cPOWER * part cnext_el f1 f9 f4 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f4 f8 c< f9 f9
- |- (((!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))) ==> ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))) z1)) = ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))) z1))
T c= c==> ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 b0 c~ cfinal_list b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 c<= cl'm b1 b3 b4 cl'm b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b4 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 b0 c~ cfinal_list b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 c<= cl'm b1 b3 b4 cl'm b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b4 f3 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 b0 c~ cfinal_list b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 c<= cl'm b1 b3 b4 cl'm b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b4 f3
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- (((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f3 f2 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f3 c==> c= cfind_face f0 f5 f7 c==> cmarked_list f0 f6 f1 f4 c= c==> cuniq ccat ccat cCONS f3 cNIL ccat cbetwn f1 f3 f5 cCONS f5 cNIL cbetwn f7 f5 f3 c==> c~ c= cnext_el ccat ccat cCONS f3 cNIL ccat cbetwn f1 f3 f5 cCONS f5 cNIL cbetwn f7 f5 f3 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f8 f9 f5 c< f8 f8 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f4 c~ cfinal_list f0 f1 cuniq cSND csplit_normal_list f0 f1 cfind_face f0 cl'y f0 f1 f4 cl'y f0 f1 f4 cprev_el f1 cl'z f0 f6 f1 f4 c==> c~ c= cnext_el ccat ccat cCONS f3 cNIL ccat cbetwn f1 f3 f5 cCONS f5 cNIL cbetwn f7 f5 f3 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f8 f9 f5 c< f8 f8
+ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) |- ((((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c= c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f4 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z) |- (((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) ==> (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 f10 f5 c==> c= cindexf f10 f5 cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 cf_list f0 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ ((((POWER (next_el r)) a) w) = y), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) |- ((((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w) = y) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c= cPOWER * part cnext_el f0 f1 f2 f3 c==> c= cl'm f4 cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 f5 f1 c= c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 f1 f2 f3 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 f1 f2 cf_list f4 f3 c==> c= cPOWER * part cf_list f4 f1 f2 f3 c< f1 f1 c==> c= cPOWER * part cnext_el crtrans f4 f6 f0 f5 cNUMERAL cBIT1 c_0 cl'm f4 crtrans f4 f6 f0 f5 cNUMERAL cBIT1 c_0 f5 f2 cPOWER * part cnext_el f0 cl'm f4 crtrans f4 f6 f0 f5 cNUMERAL cBIT1 c_0 f5 f2 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f4 f5 cNUMERAL cBIT1 c_0 c, f6 f0 f1 f2 cf_list f4 f3 c==> c= cPOWER * part cf_list f4 f1 f2 f3 c< f1 f1
- ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F), (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) |- (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) /\ ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((!f'. t) = t)
T c= ! f0 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL)))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c==> c~ c= cCONS f0 cNIL cNIL c= cLAST ccat cbetwn f1 f2 f0 cCONS f0 cNIL cLAST cCONS f0 cNIL c==> c~ c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f1 f2 f0 cCONS f0 cNIL cbetwn f3 f0 f2 f0 cf_list f4 f0 c==> c= cPOWER * part cf_list f4 f5 f6 f0 c< f5 f5 c==> c~ c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f1 f2 f0 cCONS f0 cNIL cbetwn f3 f0 f2 f0 cf_list f4 f0 c==> c= cPOWER * part cf_list f4 f5 f6 f0 c< f5 f5
- (~ (A a)), ((!x. (~ (A x))) /\ (A a)) |- ((~ (A a)) /\ (A a))
T c==> c~ * f0 f1 c==> c/\ ! c~ * f0 b0 * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- (((((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f1 cCONS f1 cNIL cbetwn cfind_face f0 f1 f1 f3 f1 cf_list f0 f1 c==> c= cPOWER * part cf_list f0 f5 f6 f1 c< f5 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f3 cNIL cAPPEND cbetwn f4 f3 f1 cCONS f1 cNIL cbetwn cfind_face f0 f1 f1 f3 f1 cf_list f0 f1 c==> c= cPOWER * part cf_list f0 f5 f6 f1 c< f5 f5
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ ((((marked_list L) N) r) x))) ==> (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 cmarked_list b0 b1 b2 b3 c= cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 cf_list b0 b3 f0
+ (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))) = ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) /\ ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352370)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352370)) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352371)) (real_of_int _10352370)) /\ (((real_le ((real_add (real_of_int _10352370)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)) \/ ((real_le ((real_add (real_of_int _10352371)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))))))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352370)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352370)) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352371)) (real_of_int _10352370)) /\ (((real_le ((real_add (real_of_int _10352370)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)) \/ ((real_le ((real_add (real_of_int _10352371)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))))))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 c/\ creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 c/\ creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
- |- (!d. (((\d. (x' = d)) d) ==> (?d. (x' = d))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
- |- ((((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))) = T)
T c= c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0 cT
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
+ |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ |- (((!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))) ==> ((\N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))) N)) = ((\N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))) N))
T c= c==> ! ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cfind_face f0 b2 f3 c/\ c= cprev_el b1 f1 f4 c~ cfinal_list f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 c<= cl'm f0 b1 b2 cl'm f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 b2 * / ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cfind_face f0 b2 f3 c/\ c= cprev_el b1 f1 f4 c~ cfinal_list f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 c<= cl'm f0 b1 b2 cl'm f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 b2 f5 * / ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c= cl'z f0 b0 b1 b2 f1 c/\ c= cl'y f0 b1 b2 f2 c/\ c= cfind_face f0 b2 f3 c/\ c= cprev_el b1 f1 f4 c~ cfinal_list f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 c<= cl'm f0 b1 b2 cl'm f0 crtrans f0 b0 b1 b2 cNUMERAL cBIT1 c_0 b2 f5
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ |- ((\d. (x' = d)) x')
T * / c= f0 b0 f0
+ |- (((~ (!x. (~ (A x)))) = (?a. (A a))) = ((~ (!x. ((x IN A) = (x IN EMPTY)))) = (?a. (a IN A))))
T c= c= c~ ! c~ * f0 b0 c? / * f0 b0 c= c~ ! c= cIN b0 f0 cIN b0 part cEMPTY c? / cIN b0 f0
+ |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) (list_of_darts L)))))) N)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 clist_of_darts f0 f1
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ (uniq ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))), (z = ((next_el f) y)) |- (((((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((next_el f) y)) ==> ((~ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = (((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = z)) ==> ((~ (((next_el ((APPEND ((CONS ((next_el f) y)) NIL)) ((APPEND (((betwn r) ((next_el f) y)) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> cuniq cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL c==> c= f3 cnext_el f0 f1 c= c==> c= cnext_el cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL f1 cnext_el f0 f1 c==> c~ c= cnext_el cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5 c==> c==> cuniq cAPPEND cCONS f3 cNIL cAPPEND cbetwn f2 f3 f1 cCONS f1 cNIL c= cnext_el cAPPEND cCONS f3 cNIL cAPPEND cbetwn f2 f3 f1 cCONS f1 cNIL f1 f3 c==> c~ c= cnext_el cAPPEND cCONS cnext_el f0 f1 cNIL cAPPEND cbetwn f2 cnext_el f0 f1 f1 cCONS f1 cNIL f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5
+ |- (((!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) ==> ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) x)) = ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))))) x))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 crtrans f0 f1 f2 b0 cNUMERAL cBIT1 c_0 f3
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) |- ((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) (SUC a)) = ((\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) o ((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a))) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))
T c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 f6 c==> c= * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cSUC f4 * * part co / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 c==> c~ c= cf_list f0 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cf_list f0 f6
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 f6 c= cnext_el f6 f3 f7 cMEM f7 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- (((~ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d))) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d)) = F)) = ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d)) = F))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c= c==> c~ c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5 c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5 cF c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5 cF
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
- ((\w. (((next_el f) x) = w)) w) |- (((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w))) = (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c= c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ |- ((\f. (((POWER f) (SUC a)) = (f o ((POWER f) a)))) (\d. ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) d)))
T * / c= * * part cPOWER b0 cSUC f0 * * part co b0 * * part cPOWER b0 f0 / cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f4 b0
+ |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
- (~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) |- (((~ (((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d))) ==> ((((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d)) = F)) = ((((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d)) = F))
T c==> c~ c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 c= c==> c~ c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1 c= c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1 cF c= c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1 cF
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((uniq f) ==> ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> cuniq f2 c==> c~ c= cHD cbetwn f2 f1 f0 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352370)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352370)) (real_of_int _10352371)) /\ (((real_le (real_of_int _10352371)) (real_of_int _10352370)) /\ (((real_le ((real_add (real_of_int _10352370)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)) \/ ((real_le ((real_add (real_of_int _10352371)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))))))))) |- ((((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) \/ (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))))
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ creal_le creal_of_int f0 creal_of_int f1 c/\ creal_le creal_of_int f1 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) \/ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c\/ c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\b. (((((l'm L) r) x) <= b) ==> (((((l'm L) r) x) < b) \/ ((((l'm L) r) x) = b)))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T * / c==> c<= cl'm f0 f1 f2 b0 c\/ c< cl'm f0 f1 f2 b0 c= cl'm f0 f1 f2 b0 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d)) |- (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))
T c==> c= cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cf_list f0 f4 c= cf_list f0 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4
- (~ ((((betwn f) y) z) = NIL)) |- (((~ (NIL = (((betwn f) y) z))) ==> ((NIL = (((betwn f) y) z)) = F)) = ((NIL = (((betwn f) y) z)) = F))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c= c==> c~ c= cNIL cbetwn f0 f1 f2 c= c= cNIL cbetwn f0 f1 f2 cF c= c= cNIL cbetwn f0 f1 f2 cF
+ |- (!x'. ((((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')) ==> (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')) ==> ((((POWER (f_list L)) (SUC j)) x') = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x'))))))
T c==> c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 ! c==> c<= b0 cl'm f0 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 cSUC b0 f1
+ |- ((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = T)
T c= c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cT
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f3 f4 c~ cfinal_list f0 f3 cuniq cSND csplit_normal_list f0 f3 cfind_face f0 cl'y f0 f3 f4 cl'y f0 f3 f4 cprev_el f3 cl'z f0 f2 f3 f4 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f9 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f9
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f9 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f9 f7 f5 c< f9 f9
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- (((~ (((CONS x) NIL) = NIL)) ==> ((((CONS x) NIL) = NIL) = F)) = ((((CONS x) NIL) = NIL) = F))
T c= c==> c~ c= cCONS f0 cNIL cNIL c= c= cCONS f0 cNIL cNIL cF c= c= cCONS f0 cNIL cNIL cF
+ (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a))) |- ((((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a))) /\ F)
T c==> c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 c/\ c\/ c/\ * f0 f1 ! c~ * f0 b0 c/\ ! c~ * f0 b0 * f0 f1 cF
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) |- (((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) /\ (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> * / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f10 c/\ * / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f10 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9
+ |- ((\r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))) r)
T * / ! c==> c/\ c~ cfinal_list f0 b0 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c= cl'z f0 f1 b0 b1 f2 c/\ c= cl'y f0 b0 b1 f3 c/\ c= cfind_face f0 b1 f4 c/\ c= cprev_el b0 f2 f5 c= cnext_el f4 b1 f6 ! c==> c<= b2 cl'm f0 b0 b1 c= cPOWER * part cnext_el crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 b2 f6 cPOWER * part cnext_el b0 b2 f6 f7
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
+ |- ((\L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))) L)
T * / ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 c<= cl'm b0 b2 b3 cl'm b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 f4
- |- ((?x'. t) = t)
T c= c? / f0 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- |- ((\z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))) z1)
T * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cfind_face b3 b6 b1 c/\ c= cprev_el b5 f0 b0 c= cnext_el b1 b6 b2 ! c==> c<= b7 cl'm b3 b5 b6 c= cPOWER * part cnext_el crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b7 b2 cPOWER * part cnext_el b5 b7 b2 f2
+ |- (((!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))) ==> ((\L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))) L)) = ((\L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))) L))
T c= c==> ! ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 c<= cl'm b0 b2 b3 cl'm b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 * / ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 c<= cl'm b0 b2 b3 cl'm b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 f4 * / ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 c<= cl'm b0 b2 b3 cl'm b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 f4
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) |- (((((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) \/ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = ((((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) \/ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) ==> ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= c==> c\/ c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c\/ c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) |- (((GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY) = F)
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c= c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY cF
+ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) |- ((((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) ==> (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))) = (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))
T c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 c==> c= cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c= c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 f4 f5 c==> c= cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cf_list f0 f5 c==> c= cindexf f4 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cf_list f0 f5
+ |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
- |- ((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) = ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c= c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f7 f1 f3 c==> c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> cMEM f3 f1 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cPOWER * part cnext_el f1 f9 f4 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f4 f8 c< f9 f9
- ((A a) /\ (!a. (~ (A a)))) |- ((~ (A a)) ==> (A a))
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> c~ * f0 f1 * f0 f1
- |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ |- ((((\a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) a) ==> F) = T)
T c= c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF cT
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> c/\ c= cprev_el f1 f5 f7 c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f4 f1 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x))))))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cuniq cSND csplit_normal_list f0 f2 cfind_face f0 cl'y f0 f2 b0 cl'y f0 f2 b0 cprev_el f2 cl'z f0 f1 f2 b0 f3
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
- |- (((!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))))) ==> ((\z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))))) z)) = ((\z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))))) z))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cfind_face b4 b7 b2 c/\ c= cprev_el b6 b0 b1 c= cnext_el b2 b7 b3 ! c==> c<= b8 cl'm b4 b6 b7 c= cPOWER * part cnext_el crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b8 b3 cPOWER * part cnext_el b6 b8 b3 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cfind_face b4 b7 b2 c/\ c= cprev_el b6 b0 b1 c= cnext_el b2 b7 b3 ! c==> c<= b8 cl'm b4 b6 b7 c= cPOWER * part cnext_el crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b8 b3 cPOWER * part cnext_el b6 b8 b3 f1 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cfind_face b4 b7 b2 c/\ c= cprev_el b6 b0 b1 c= cnext_el b2 b7 b3 ! c==> c<= b8 cl'm b4 b6 b7 c= cPOWER * part cnext_el crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b8 b3 cPOWER * part cnext_el b6 b8 b3 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))) ==> ((\z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))) z1)) = ((\z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))))) z1))
T c= c==> ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cfind_face b3 b6 b1 c/\ c= cprev_el b5 f0 b0 c= cnext_el b1 b6 b2 ! c==> c<= b7 cl'm b3 b5 b6 c= cPOWER * part cnext_el crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b7 b2 cPOWER * part cnext_el b5 b7 b2 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cfind_face b3 b6 b1 c/\ c= cprev_el b5 f0 b0 c= cnext_el b1 b6 b2 ! c==> c<= b7 cl'm b3 b5 b6 c= cPOWER * part cnext_el crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b7 b2 cPOWER * part cnext_el b5 b7 b2 f2 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 f0 c/\ c= cl'y b3 b5 b6 f1 c/\ c= cfind_face b3 b6 b1 c/\ c= cprev_el b5 f0 b0 c= cnext_el b1 b6 b2 ! c==> c<= b7 cl'm b3 b5 b6 c= cPOWER * part cnext_el crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b7 b2 cPOWER * part cnext_el b5 b7 b2 f2
+ |- ((!b. ((~ ((int_le (int_of_num a)) (int_of_num b))) \/ (((int_lt (int_of_num a)) (int_of_num b)) \/ ((int_of_num a) = (int_of_num b))))) = T)
T c= ! c\/ c~ cint_le cint_of_num f0 cint_of_num b0 c\/ cint_lt cint_of_num f0 cint_of_num b0 c= cint_of_num f0 cint_of_num b0 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f3 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> cMEM f3 f1 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> c= cbetwn f7 f1 f0 cNIL c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- (((!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) ==> ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f)) = ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f))
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4
+ (~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))))) |- ((~ (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))))) /\ F)
T c==> c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c/\ c~ c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 cF
+ |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) = ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))
T c= c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1
- |- ((?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))
T c==> c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f1 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f2 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7 c==> c= cPOWER * part cf_list f0 f8 f5 f7 c< f8 f8 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f6 cNIL cAPPEND cbetwn f2 f6 f7 cCONS f7 cNIL cbetwn cfind_face f0 f7 f7 f6 f7 cf_list f0 f7 c==> c= cPOWER * part cf_list f0 f8 f5 f7 c< f8 f8
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f6 c/\ c= cl'y f0 f1 f3 f8 c/\ c= cfind_face f0 f3 f4 c/\ c= cprev_el f1 f6 f7 c= cnext_el f4 f3 f5 ! c==> c<= b0 cl'm f0 f1 f3 c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 f5 cPOWER * part cnext_el f1 b0 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cl'z f0 f6 f1 f3 f7 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f6 f1 f3 c= c==> c/\ cMEM f5 f2 c/\ cMEM f7 f2 c< cindexf f4 f5 f2 cindexf f4 f7 f2 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f1 f7 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f7 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f8 f4 f5 c< f8 f8 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f6 f1 f3 c/\ c~ cfinal_list f0 f1 c/\ c= f2 cfind_face f0 f3 c= f4 cnext_el f2 f3 c/\ cMEM cytrans f0 f6 f1 f3 cNUMERAL c_0 f2 c/\ cMEM cztrans f0 f6 f1 f3 cNUMERAL c_0 f2 c< cindexf f4 cytrans f0 f6 f1 f3 cNUMERAL c_0 f2 cindexf f4 cztrans f0 f6 f1 f3 cNUMERAL c_0 f2 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f7 cNIL cAPPEND cbetwn f1 f7 f5 cCONS f5 cNIL cbetwn cfind_face f0 f5 f5 f7 f5 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 f8 f4 f5 c< f8 f8
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cuniq cSND csplit_normal_list b0 b2 cfind_face b0 cl'y b0 b2 b3 cl'y b0 b2 b3 cprev_el b2 cl'z b0 b1 b2 b3 f0
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- (((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))) /\ ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c= cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c/\ c= cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c==> c= cnext_el f7 f4 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 cPOWER * part cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c< cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4
+ |- ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (SUC m))) x) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC m)) x))))) m)))) = EMPTY)) = (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)))
T c= c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC cSUC b1 f3 cf_list f0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b1 f3 b1 part cEMPTY c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f3 f2 c==> c~ c= f6 f8 c==> cMEM f5 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((good_list L) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> cgood_list f0 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f7 f1 f3 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cPOWER * part cnext_el f1 f9 f4 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f4 f8 c< f9 f9
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c< cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- ((((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))) = T)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c= c==> * / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f10 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9 cT
+ |- (~ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _10352368)) /\ ((real_le ((real_add (real_of_int _10352368)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352368))))
T c~ c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cnext_el f4 f5 f0 c==> c= cprev_el f4 f0 f5 c==> c= cl'y f3 f4 f6 f1 c==> c= cl'z f3 f7 f4 f6 f0 c==> c= cfind_face f3 f6 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f7 f4 f6 c==> c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f7 f4 f6 c~ cfinal_list f3 f4 cuniq cSND csplit_normal_list f3 f4 cfind_face f3 cl'y f3 f4 f6 cl'y f3 f4 f6 cprev_el f4 cl'z f3 f7 f4 f6 c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f8 f9 f1 c< f8 f8
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((f_list L) x) = w), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))) = ((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))) ==> ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cf_list f0 f2 f3 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> cmarked_list f0 f4 f1 f2 c= c==> c= cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c= cnext_el f1 f2 f3 c= cindexf f3 cytrans f0 f4 f1 f2 cNUMERAL c_0 f1 cl'm f0 f1 f2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f3 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 f3 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ ((\w. (((next_el f) x) = w)) w) |- (((next_el f) x) = w)
T c==> * / c= cnext_el f0 f1 b0 f2 c= cnext_el f0 f1 f2
- (~ ((((betwn f) y) z) = NIL)) |- (~ (NIL = (((betwn f) y) z)))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c~ c= cNIL cbetwn f0 f1 f2
- |- (((!x'. (((\w. (((next_el f) x) = w)) x') ==> (?w. (((next_el f) x) = w)))) ==> ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))) = ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w))))
T c= c==> ! c==> * / c= cnext_el f0 f1 b1 b0 c? / c= cnext_el f0 f1 b1 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0 c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
+ |- (((?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))) = ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c= c==> c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f4 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 cnext_el cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f4 cf_list f0 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1
+ |- (!a. ((~ (((CONS y) NIL) = NIL)) ==> ((LAST ((cat a) ((CONS y) NIL))) = (LAST ((CONS y) NIL)))))
T c==> c~ c= cCONS f0 cNIL cNIL c= cLAST ccat f1 cCONS f0 cNIL cLAST cCONS f0 cNIL
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z) |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> c= f1 f5 c==> c= cprev_el f3 f6 f7 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 f10 f5 c==> c= cl'y f0 f3 f4 f8 c==> c= cl'z f0 f2 f3 f4 f6 c==> c= cindexf f10 f5 cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f9 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f8 f8 f7 f10 cf_list f0 f5
- |- ((!A. (A \/ (~ A))) = ((T \/ (~ T)) /\ (F \/ (~ F))))
T c= ! c\/ b0 c~ b0 c/\ c\/ cT c~ cT c\/ cF c~ cF
- ((!x. (~ (A x))) /\ (A a)) |- ((~ F) ==> F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 c==> c~ cF cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1
+ |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (uniq (SND (((((split_normal_list L) r) ((find_face L) (((l'y L) r) x))) (((l'y L) r) x)) ((prev_el r) ((((l'z L) N) r) x)))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cuniq cSND csplit_normal_list f0 b0 cfind_face f0 cl'y f0 b0 b1 cl'y f0 b0 b1 cprev_el b0 cl'z f0 f1 b0 b1 f2
+ |- (((!x. (~ (A x))) /\ (A a)) ==> F)
T c==> c/\ ! c~ * f0 b0 * f0 f1 cF
+ ((MEM y) (list_of_darts L)) |- (((MEM y) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- (((!N. (!r. (!x. (!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))))))) ==> ((\N. (!r. (!x. (!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))))))) N)) = ((\N. (!r. (!x. (!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))))))) N))
T c= c==> ! ! ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c= cnext_el b1 b2 b3 c= cindexf b3 cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 cl'm f0 b1 b2 * / ! ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c= cnext_el b1 b2 b3 c= cindexf b3 cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 cl'm f0 b1 b2 f1 * / ! ! ! c==> c/\ c~ cfinal_list f0 b1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c= cnext_el b1 b2 b3 c= cindexf b3 cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 cl'm f0 b1 b2 f1
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) |- ((((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))) = (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))))
T c==> c= cPOWER * part cnext_el f0 cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f4 f5 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f6 c= c==> c= cPOWER * part cnext_el f0 f6 f4 f5 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f6 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f4 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 f4 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f6 f4 f5 c< f6 f6 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f2 f6 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f4 cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f2 cNUMERAL cBIT1 c_0 c, f3 f0 f6 f4 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 f6 f4 f5 c< f6 f6
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z) |- ((uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) /\ (((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d) ==> (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c/\ cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f10 f7 c==> c= cindexf f10 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f10 cf_list f0 f7
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) |- (((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d))
T c==> c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))) = (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cfind_face f0 f3 f4 c= cnext_el f4 f3 f5 cMEM f5 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c? / c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f5 c? / c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f5
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((((MEM w) r) /\ (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r) /\ (uniq r))) ==> ((((POWER (next_el r)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r)) w) = (((((ytrans L) N) r) x) (NUMERAL _0))))
T c==> c/\ cMEM f0 f1 c/\ cMEM cytrans f2 f3 f1 f4 cNUMERAL c_0 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 cytrans f2 f3 f1 f4 cNUMERAL c_0 f1 f0 cytrans f2 f3 f1 f4 cNUMERAL c_0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- (((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c= c==> c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c/\ c= cl'y f0 f1 f3 f5 c/\ c= cfind_face f0 f3 f6 c/\ c= cprev_el f1 f4 f7 c= cnext_el f6 f3 f8 ! c==> c<= b0 cl'm f0 f1 f3 c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 b0 f8 cPOWER * part cnext_el f1 b0 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f8 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f8 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f8 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f8 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\n. (((ITER n) f) = ((POWER f) n))) n)
T * / c= * * part cITER b0 f0 * * part cPOWER f0 b0 f1
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM w) r) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f7 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) a) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) /\ (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cprev_el f3 f0 f7 c==> c= cPOWER * part cnext_el f3 f8 f6 f1 c==> c= cPOWER * part cnext_el crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 cl'm f2 crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 cPOWER * part cnext_el f3 cl'm f2 crtrans f2 f9 f3 f5 cNUMERAL cBIT1 c_0 f5 f6 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f9 f3 f5 f0 c==> c= cl'm f2 cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f5 f8 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f9 f3 f5 c/\ c= cl'm f2 cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f5 f8 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f6 cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 f6 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f2 f5 cNUMERAL cBIT1 c_0 c, f9 f3 f8 f6 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f6 f1 c< f8 f8
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))))))))))))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> cMEM f3 f2 c==> c~ c= f6 f8 c==> cMEM f5 f2 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cPOWER * part cnext_el f2 f9 f5 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 f5 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f9 f5 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f5 f8 c< f9 f9
+ ((A a) /\ (!a. (~ (A a)))) |- ((A _10352366) ==> F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> * f0 f2 cF
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((~ (z = y)) /\ (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c/\ c~ c= f4 f5 c==> cMEM f7 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- ((((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = (((~ (((cat (((betwn r) z) y)) ((CONS y) NIL)) = NIL)) ==> ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c= c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cLAST ccat cbetwn f1 f0 f2 cCONS f2 cNIL c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cf_list f4 f2 c==> c= cPOWER * part cf_list f4 f5 f6 f2 c< f5 f5 c==> c==> c~ c= ccat cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cLAST ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cLAST ccat cbetwn f1 f0 f2 cCONS f2 cNIL c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f1 f0 f2 cCONS f2 cNIL cbetwn f3 f2 f0 f2 cf_list f4 f2 c==> c= cPOWER * part cf_list f4 f5 f6 f2 c< f5 f5
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f10 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9
+ ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) |- ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)
T c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4
+ (uniq (list_of_darts L)), (((find_face L) y) = f), ((MEM y) (list_of_darts L)) |- (((((f_list L) y) = ((next_el f) y)) ==> ((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> ((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 clist_of_darts f0 c= c==> c= cf_list f0 f1 cnext_el f2 f1 c==> c~ c= cnext_el f2 f1 cf_list f0 f1 c==> c= cPOWER * part cf_list f0 f3 f4 f1 c< f3 f3 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c==> c~ c= cnext_el f2 f1 cf_list f0 f1 c==> c= cPOWER * part cf_list f0 f3 f4 f1 c< f3 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- (!d. (((\d. (x' = d)) d) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f5 f4 f6 c==> c= cprev_el f3 f7 f8 c==> c= cl'y f0 f3 f4 f9 c==> c= cl'z f0 f2 f3 f4 f7 c==> c= cfind_face f0 f4 f5 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 ! c==> * / c= f1 b1 b0 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f6 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b1 f6
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- (((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) (SUC a)) = ((\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) o ((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a))) ==> ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d))))) = ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))
T c= c==> c= * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cSUC f4 * * part co / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 * * part cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 c==> c~ c= cf_list f0 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cf_list f0 f5 c==> c~ c= cf_list f0 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 cf_list f0 f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) = (\x. (((((marked_list L) N) r) x) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0 / c==> cmarked_list f0 f2 f1 b0 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))) f)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c= cfind_face f0 f3 b0 c= cnext_el b0 f3 b1 cMEM b1 f2 f4
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f3 f2 c==> c~ c= f6 f8 c==> cMEM f5 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((((f_list L) y) = ((next_el f) y)) ==> ((~ (((next_el f) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c= cf_list f0 f1 cnext_el f2 f1 c==> c~ c= cnext_el f2 f1 cf_list f0 f1 c==> c= cPOWER * part cf_list f0 f3 f4 f1 c< f3 f3
+ |- (((int_le (int_of_num (NUMERAL _0))) _10352370) ==> (((int_le (int_of_num (NUMERAL _0))) _10352371) ==> ((~ ((int_le _10352370) _10352371)) \/ (((int_lt _10352370) _10352371) \/ (_10352370 = _10352371)))))
T c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c~ cint_le f0 f1 c\/ cint_lt f0 f1 c= f0 f1
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) |- (((?a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) ==> F) = F)
T c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 c= c==> c? / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x')))) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c==> c/\ cMEM f9 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 f9 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f9 c? / c~ c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 f4
+ |- ((\x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))) x)
T * / c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c/\ c= cl'z f0 f2 f1 b0 f3 c/\ c= cl'y f0 f1 b0 f4 c/\ c= cfind_face f0 b0 f5 c/\ c= cprev_el f1 f3 f6 c= cnext_el f5 b0 f7 ! c==> c<= b1 cl'm f0 f1 b0 c= cPOWER * part cnext_el crtrans f0 f2 f1 b0 cNUMERAL cBIT1 c_0 b1 f7 cPOWER * part cnext_el f1 b1 f7 f8
+ (~ (z = y)), (~ ((((betwn f) y) z) = NIL)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), (good_list L), (good_list_nodes L), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))), ((((l'y L) r) x) = y), (((find_face L) x) = f), (((find_face L) y) = f), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ c= cbetwn f2 f1 f0 cNIL c==> c~ cfinal_list f3 f4 c==> cuniq clist_of_darts f3 c==> cuniq ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL c==> c= cLAST ccat cbetwn f4 f0 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c==> c= cl'y f3 f4 f5 f1 c==> c= cfind_face f3 f5 f2 c==> c= cfind_face f3 f1 f2 c==> cMEM f1 f2 c==> cMEM f0 f2 c==> cmarked_list f3 f6 f4 f5 c==> c~ c= cnext_el ccat ccat cCONS f0 cNIL ccat cbetwn f4 f0 f1 cCONS f1 cNIL cbetwn f2 f1 f0 f1 cf_list f3 f1 c==> c= cPOWER * part cf_list f3 f7 f8 f1 c< f7 f7
+ (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) /\ F)
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
+ |- ((\r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w)))))) ==> ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))) r)
T * / ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cfind_face f0 b1 b2 c= cnext_el b2 b1 b3 cMEM b3 crtrans f0 f1 b0 b1 cNUMERAL cBIT1 c_0 f2
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> cMEM f3 f2 c==> c~ c= f6 f8 c==> cMEM f5 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) (list_of_darts L)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c/\ cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- ((((CONS x) NIL) = NIL) = F)
T c= c= cCONS f0 cNIL cNIL cF
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (z = ((next_el f) y)), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((marked_list L) N) r) x) |- ((z = ((next_el f) y)) /\ ((uniq ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) ==> ((~ (((next_el ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= f2 cnext_el f3 f4 c==> c= cl'y f0 f1 f5 f4 c==> c= cfind_face f0 f4 f3 c==> cmarked_list f0 f6 f1 f5 c/\ c= f2 cnext_el f3 f4 c==> cuniq cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL c==> c~ c= cnext_el cAPPEND cCONS f2 cNIL cAPPEND cbetwn f1 f2 f4 cCONS f4 cNIL f4 cf_list f0 f4 c==> c= cPOWER * part cf_list f0 f7 f8 f4 c< f7 f7
+ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w) = d), ((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) w))) |- (((((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) (((POWER (\d. ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) a) w))) /\ ((~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) ==> (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) d)))))
T c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 f5 f6 c==> c= cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 f5 c/\ c= cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cPOWER / cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f4 f5 c==> c~ c= cf_list f0 f6 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f6 c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f4 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f5 cf_list f0 f6
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC (((l'm L) r) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) r) x))) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC cl'm f0 f1 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f3 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ |- ((\x. (!w. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))))) x)
T * / ! c==> c/\ c~ cfinal_list f0 f1 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c= cnext_el f1 b0 b1 c= cindexf b1 cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 cl'm f0 f1 b0 f3
+ |- (((((uniq (list_of_darts L)) /\ ((MEM x) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) x) = (((POWER (next_el ((find_face L) x))) (SUC (NUMERAL _0))) x))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) = (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 cPOWER * part cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 c< cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 cPOWER * part cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 c< cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- (((!s. ((((MEM w) s) /\ (((MEM d) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) d) s)) w) = d))) ==> ((\s. ((((MEM w) s) /\ (((MEM d) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) d) s)) w) = d))) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) = ((\s. ((((MEM w) s) /\ (((MEM d) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) d) s)) w) = d))) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c= c==> ! c==> c/\ cMEM f0 b0 c/\ cMEM f1 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 f1 b0 f0 f1 * / c==> c/\ cMEM f0 b0 c/\ cMEM f1 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 f1 b0 f0 f1 crtrans f2 f3 f4 f5 cNUMERAL cBIT1 c_0 * / c==> c/\ cMEM f0 b0 c/\ cMEM f1 b0 cuniq b0 c= cPOWER * part cnext_el b0 cindexf f0 f1 b0 f0 f1 crtrans f2 f3 f4 f5 cNUMERAL cBIT1 c_0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> cMEM f3 f1 c==> c~ c= f5 f7 c==> cMEM f4 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ |- (!s. ((((MEM w) s) /\ (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) s) /\ (uniq s))) ==> ((((POWER (next_el s)) (((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) s)) w) = (((((ytrans L) N) r) x) (NUMERAL _0)))))
T c==> c/\ cMEM f0 f1 c/\ cMEM cytrans f2 f3 f4 f5 cNUMERAL c_0 f1 cuniq f1 c= cPOWER * part cnext_el f1 cindexf f0 cytrans f2 f3 f4 f5 cNUMERAL c_0 f1 f0 cytrans f2 f3 f4 f5 cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((~ ((((betwn f) y) z) = NIL)) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))), (((((betwn f) y) z) = NIL) \/ (~ ((((betwn f) y) z) = NIL))), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f3 f4 f0 c==> c= cprev_el f3 f0 f4 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f6 f3 f5 f0 c==> c= cfind_face f2 f5 f7 c==> c= cfind_face f2 f1 f7 c==> c==> c~ c= cbetwn f7 f1 f0 cNIL c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8 c==> c\/ c= cbetwn f7 f1 f0 cNIL c~ c= cbetwn f7 f1 f0 cNIL c==> cMEM f1 f7 c==> cMEM f0 f7 c==> cmarked_list f2 f6 f3 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cbetwn f7 f1 f0 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f8 f9 f1 c< f8 f8
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (((\x'. (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))) x') ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cmarked_list f0 f8 f1 f3 c==> * / c/\ cMEM b0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 b0 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 f9 c? / c~ c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f4 cf_list f0 cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 b0 f4
+ ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (!a. (((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 ! c==> * / c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 b1 b0 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c< cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) |- (((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) = F)
T c==> c~ cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c= cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a), (((find_face L) x) = f), ((MEM w) r), ((MEM x) r), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((((marked_list L) N) r) x) |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = y) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f1 cITER cSUC b1 * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f1 f2 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f6 f3 f7 c==> c= cprev_el f2 f4 f8 c==> c= cPOWER * part cnext_el f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c==> c= cPOWER * part cnext_el crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f1 f2 f3 f5 c==> c= cl'z f1 f0 f2 f3 f4 c==> c= cindexf f7 cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 cl'm f1 crtrans f1 f0 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c= cfind_face f1 f3 f6 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f5 f2 c==> cMEM cztrans f1 f0 f2 f3 cNUMERAL c_0 f2 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cmarked_list f1 f0 f2 f3 c/\ c= cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f9 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f7 cf_list f1 f5 c==> c= cPOWER * part cf_list f1 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 f7 f5 c< cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3 cl'm f1 cSND cPOWER * * part ctransform_list f1 f3 cNUMERAL cBIT1 c_0 c, f0 f2 f3
+ |- ((?a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) ==> F)
T c==> c? / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 cF
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))) |- (((~ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x') = ((f_list L) x'))) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x') = ((f_list L) x')) = F)) = ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x') = ((f_list L) x')) = F))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c= c==> c~ c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 cF c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 cF
- |- (((!x. (((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) x) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))) ==> ((?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))) = ((?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a))))
T c= c==> ! c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b1 b0 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b1 c==> c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c==> c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
+ |- (((((uniq f) /\ ((~ (y = z)) /\ (((MEM y) f) /\ ((MEM z) f)))) ==> (((((betwn f) y) z) = NIL) = (z = ((next_el f) y)))) ==> ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))) = ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) ==> ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c= c==> c==> c/\ cuniq f0 c/\ c~ c= f1 f2 c/\ cMEM f1 f0 cMEM f2 f0 c= c= cbetwn f0 f1 f2 cNIL c= f2 cnext_el f0 f1 c==> cuniq cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f3 f2 f1 cCONS f1 cNIL cNIL c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f3 f2 f1 cCONS f1 cNIL cNIL f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5 c==> cuniq cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f3 f2 f1 cCONS f1 cNIL cNIL c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f2 cNIL cAPPEND cbetwn f3 f2 f1 cCONS f1 cNIL cNIL f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5
+ |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x) r), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ ((~ (z = y)) ==> (((MEM w) r) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> (((((POWER (next_el r)) a) w) = y) ==> (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w))) ==> ((~ (((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) (((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) a) w)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cMEM f3 f1 c==> cmarked_list f0 f7 f1 f3 c/\ cMEM f3 f1 c==> c~ c= f5 f8 c==> cMEM f4 f1 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f0 f7 c==> call * part cloop_list f0 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cuniq f1 c==> c= cPOWER * part cnext_el f1 f9 f4 f8 c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f9 c==> c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 c==> c~ c= cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f9 f4 cf_list f0 f8 c==> c= cPOWER * part cf_list f0 f9 f4 f8 c< f9 f9
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((~ ((GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> ((min_num (GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) IN (GSPEC (\GEN%PVAR%8689. (?m. (((SETSPEC GEN%PVAR%8689) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cl'm f0 f2 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY cIN cmin_num * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ (~ (z = y)) |- (((~ (y = z)) ==> ((y = z) = F)) = ((y = z) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) |- (((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))) = T)
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 c= c==> c<= f5 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 f4 cPOWER * part cnext_el f2 f5 f4 cT
+ (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- ((((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))) = (((((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (((MEM d) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (uniq (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((indexf w) d) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) w) = d)) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 c==> c= f4 f5 c==> c= cprev_el f1 f6 f3 c==> c= cl'y f0 f1 f7 f2 c==> c= cl'z f0 f8 f1 f7 f6 c==> cMEM f9 crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 c==> cMEM f4 crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 c= c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 cindexf f9 f5 cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f9 f5 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f1 cfind_face f0 f2 f2 f3 b0 f9 c==> c==> c/\ cMEM f9 crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 c/\ cMEM f5 crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 cuniq crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 c= cPOWER * part cnext_el crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 cindexf f9 f5 crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 f9 f5 c? / c~ c= cPOWER * part cnext_el crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 f9 cf_list f0 cPOWER * part cnext_el crtrans f0 f8 f1 f7 cNUMERAL cBIT1 c_0 b0 f9
+ (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) z1) = z), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el r) z1) = z) /\ ((~ (((next_el ((APPEND ((APPEND ((CONS ((next_el r) z1)) NIL)) ((APPEND (((betwn r) ((next_el r) z1)) y)) ((CONS y) NIL)))) (((betwn ((find_face L) y)) y) ((next_el r) z1)))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq clist_of_darts f2 c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cnext_el f4 f5 f6 c==> c= cnext_el f3 f7 f0 c==> c= cprev_el f3 f0 f7 c==> c= cl'y f2 f3 f5 f1 c==> c= cl'z f2 f8 f3 f5 f0 c==> c= cfind_face f2 f5 f4 c==> cmarked_list f2 f8 f3 f5 c/\ c= cnext_el f3 f7 f0 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS cnext_el f3 f7 cNIL cAPPEND cbetwn f3 cnext_el f3 f7 f1 cCONS f1 cNIL cbetwn cfind_face f2 f1 f1 cnext_el f3 f7 f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f9 f6 f1 c< f9 f9
- |- ((!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))) = T)
T c= ! ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c~ cfinal_list b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 c<= cl'm b0 b2 b3 cl'm b0 crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b3 cT
- |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
+ |- (((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) = ((all (\d. (((f_list L) d) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d)))) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))))
T c= cfinal_list f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 call / c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0
- (~ (!A. (A \/ (~ A)))) |- F
T c==> c~ ! c\/ b0 c~ b0 cF
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))), ((((marked_list L) N) r) x) |- ((((\d. (x' = d)) d) ==> (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))) = T)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f5 f4 f6 c==> c= cprev_el f3 f7 f8 c==> c= cl'y f0 f3 f4 f9 c==> c= cl'z f0 f2 f3 f4 f7 c==> c= cfind_face f0 f4 f5 c==> cMEM f1 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f2 f3 f4 c= c==> * / c= f1 b0 f10 c? / c~ c= cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f6 cf_list f0 cPOWER * part cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 b0 f6 cT
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
+ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (~ ((final_list L) r)), (uniq (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))), (x' = d), (((prev_el r) z) = z1), ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) w) = d), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM w) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) |- (((!x. (((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) x) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))) ==> ((?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w))))))) = ((?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) ==> (?a. (~ ((((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) w)) = ((f_list L) (((POWER (next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) a) w)))))))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c~ cfinal_list f0 f3 c==> cuniq cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 c==> c= f1 f7 c==> c= cprev_el f3 f8 f6 c==> c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 f7 c==> c= cl'y f0 f3 f4 f5 c==> c= cl'z f0 f2 f3 f4 f8 c==> cMEM f9 crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 c= c==> ! c==> * / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b1 b0 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b1 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b1 f9 c==> c? / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9 c==> c? / c= cindexf f9 f7 cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 c? / c~ c= cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 f9 cf_list f0 cPOWER * part cnext_el cSND csplit_normal_list f0 f3 cfind_face f0 f5 f5 f6 b0 f9
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((\w. (((next_el f) x) = w)) w) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = T)
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c= c==> * / c= cnext_el f7 f3 b0 f8 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cT
- |- ((x' = d) = ((\d. (x' = d)) d))
T c= c= f0 f1 * / c= f0 b0 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((?w. (((next_el f) x) = w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 f3 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c? / c= cnext_el f7 f3 b0 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ (z = y)) |- ((z = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))), ((((marked_list L) N) r) x) |- ((((l'm L) r) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c/\ c= cfind_face f0 f2 f6 c/\ c= cprev_el f1 f5 f7 c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> cmarked_list f0 f4 f1 f2 c< cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ |- ((((((MEM y) f) /\ (((MEM z) f) /\ ((~ (y = z)) /\ ((uniq f) /\ (~ ((((betwn f) y) z) = NIL)))))) ==> ((HD (((betwn f) y) z)) = ((next_el f) y))) ==> ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((~ ((HD (((betwn f) y) z)) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c= c==> c==> c/\ cMEM f0 f1 c/\ cMEM f2 f1 c/\ c~ c= f0 f2 c/\ cuniq f1 c~ c= cbetwn f1 f0 f2 cNIL c= cHD cbetwn f1 f0 f2 cnext_el f1 f0 c==> c~ c= cHD cbetwn f1 f0 f2 cf_list f3 f0 c==> c= cPOWER * part cf_list f3 f4 f5 f0 c< f4 f4 c==> c~ c= cHD cbetwn f1 f0 f2 cf_list f3 f0 c==> c= cPOWER * part cf_list f3 f4 f5 f0 c< f4 f4
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) /\ ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))) ==> ((\z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))) z)) = ((\z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))) z))
T c= c==> ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 b0 c/\ c= cl'y b2 b4 b5 f0 c/\ c= cfind_face b2 b5 f1 c/\ c= cprev_el b4 b0 b1 c~ cfinal_list b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 c<= cl'm b2 b4 b5 cl'm b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b5 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 b0 c/\ c= cl'y b2 b4 b5 f0 c/\ c= cfind_face b2 b5 f1 c/\ c= cprev_el b4 b0 b1 c~ cfinal_list b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 c<= cl'm b2 b4 b5 cl'm b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b5 f2 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 b0 c/\ c= cl'y b2 b4 b5 f0 c/\ c= cfind_face b2 b5 f1 c/\ c= cprev_el b4 b0 b1 c~ cfinal_list b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 c<= cl'm b2 b4 b5 cl'm b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b5 f2
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
- |- (((!x. (((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) x) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))) ==> ((?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))) = ((?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a))))
T c= c==> ! c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b1 b0 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b1 c==> c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 c==> c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
+ ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) |- ((((((POWER (f_list L)) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) x)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) = ((((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC (((l'm L) r) x))) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC (((l'm L) r) x))) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= c==> c= cPOWER * part cf_list f0 cSUC cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 f2 cPOWER * part cnext_el crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cSUC cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 f2 c< cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 c= cPOWER * part cf_list f0 cSUC cl'm f0 f1 f2 f2 cPOWER * part cnext_el crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 cSUC cl'm f0 f1 f2 f2 c< cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f3 f1 f2 cNUMERAL cBIT1 c_0 f2
+ (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r)))))))) |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w))))) ==> ((MEM w) r))))) x)
T c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cfind_face b0 b3 b4 c= cnext_el b4 b3 b5 cMEM b5 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c= cfind_face f0 b0 b1 c= cnext_el b1 b0 b2 cMEM b2 f2 f3
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ ((\a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) a) |- (((\a. (((A a) /\ (!a. (~ (A a)))) \/ ((!x. (~ (A x))) /\ (A a)))) a) /\ F)
T c==> * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 c/\ * / c\/ c/\ * f0 b0 ! c~ * f0 b1 c/\ ! c~ * f0 b1 * f0 b0 f1 cF
+ (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM y) r) ==> (((MEM x) r) ==> ((~ (z = y)) ==> (((MEM w) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f8 f2 c==> cMEM f3 f2 c==> c~ c= f6 f8 c==> cMEM f5 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((\z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))) z)
T * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 b0 c/\ c= cl'y b2 b4 b5 f0 c/\ c= cfind_face b2 b5 f1 c/\ c= cprev_el b4 b0 b1 c~ cfinal_list b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 c<= cl'm b2 b4 b5 cl'm b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b5 f2
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((((next_el f) x) = w) ==> (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((f_list L) x) = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))))
T c==> c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 ! c==> c<= b0 cl'm f0 crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 f1 c= cPOWER * part cf_list f0 cSUC b0 f1 cPOWER * part cnext_el crtrans f0 f2 f3 f1 cNUMERAL cBIT1 c_0 cSUC b0 f1
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cs_flag_list f0 f2 f1 f3 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM f3 f1 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cmarked_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c/\ c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
+ |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))) = ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) (((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1)))))
T c= c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5
+ (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cnext_el f4 f3 f5 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (((next_el r) x) = w))))) ==> ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) r) x))) ==> ((~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cl'm f0 f2 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c==> c/\ c~ cfinal_list f0 f2 c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c= cnext_el f2 f3 f5 c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 f2 f3 c==> c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
+ (~ ((((betwn f) y) z) = NIL)), (uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))), ((LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) = (LAST ((cat (((betwn r) z) y)) ((CONS y) NIL)))), ((LAST ((cat (((betwn r) z) y)) ((CONS y) NIL))) = (LAST ((CONS y) NIL))) |- (((((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = (HD (((betwn f) y) z))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))) = ((((uniq ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) /\ ((~ ((((betwn f) y) z) = NIL)) /\ (~ (((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))) = NIL)))) ==> (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) (LAST ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL))))) = (HD (((betwn f) y) z)))) ==> ((~ (((next_el ((cat ((cat ((CONS z) NIL)) ((cat (((betwn r) z) y)) ((CONS y) NIL)))) (((betwn f) y) z))) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))))
T c==> c~ c= cbetwn f0 f1 f2 cNIL c==> cuniq ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 c==> c= cLAST ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cLAST ccat cbetwn f3 f2 f1 cCONS f1 cNIL c==> c= cLAST ccat cbetwn f3 f2 f1 cCONS f1 cNIL cLAST cCONS f1 cNIL c= c==> c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 f1 cHD cbetwn f0 f1 f2 c==> c~ c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5 c==> c==> c/\ cuniq ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 c/\ c~ c= cbetwn f0 f1 f2 cNIL c~ c= ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cNIL c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 cLAST ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cHD cbetwn f0 f1 f2 c==> c~ c= cnext_el ccat ccat cCONS f2 cNIL ccat cbetwn f3 f2 f1 cCONS f1 cNIL cbetwn f0 f1 f2 f1 cf_list f4 f1 c==> c= cPOWER * part cf_list f4 f5 f6 f1 c< f5 f5
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!A. ((P A) \/ Q)) = ((!A. (P A)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- |- ((!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))) = T)
T c= ! ! ! ! c==> c/\ c~ cfinal_list b0 b2 c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c= cl'z b0 b1 b2 b3 f0 c/\ c= cl'y b0 b2 b3 f1 c/\ c= cfind_face b0 b3 f2 c/\ c= cprev_el b2 f0 f3 c= cnext_el f2 b3 f4 ! c==> c<= b4 cl'm b0 b2 b3 c= cPOWER * part cnext_el crtrans b0 b1 b2 b3 cNUMERAL cBIT1 c_0 b4 f4 cPOWER * part cnext_el b2 b4 f4 cT
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) = ((~ (!A. (A \/ (~ A)))) ==> F))
T c= c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cl'm f0 f2 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c< cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1
- (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))) |- ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC b0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b0 f3 c==> c<= f4 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC f4 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC f4 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) /\ (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) |- ((EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) = F)
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 cF
- |- (((!y. (((\x. (f x)) y) = (f y))) ==> ((\y. (((\x. (f x)) y) = (f y))) y)) = ((\y. (((\x. (f x)) y) = (f y))) y))
T c= c==> ! c= * / * f0 b1 b0 * f0 b0 * / c= * / * f0 b1 b0 * f0 b0 f1 * / c= * / * f0 b1 b0 * f0 b0 f1
- (((next_el f) x) = w) |- ((\w'. (((good_list _10352386) /\ ((good_list_nodes _10352386) /\ (((((marked_list _10352386) N) r) x) /\ ((((find_face _10352386) x) = f) /\ (((next_el f) x) = w'))))) ==> ((MEM w') r))) = (\w'. (((good_list _10352386) /\ ((good_list_nodes _10352386) /\ (((((marked_list _10352386) N) r) x) /\ ((((find_face _10352386) x) = f) /\ (w = w'))))) ==> ((MEM w') r))))
T c==> c= cnext_el f0 f1 f2 c= / c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f4 f5 f1 c/\ c= cfind_face f3 f1 f0 c= cnext_el f0 f1 b0 cMEM b0 f5 / c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f4 f5 f1 c/\ c= cfind_face f3 f1 f0 c= f2 b0 cMEM b0 f5
- |- (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
- ((!x. (~ (A x))) /\ (A a)) |- ((~ (A a)) ==> (A a))
T c==> c/\ ! c~ * f0 b0 * f0 f1 c==> c~ * f0 f1 * f0 f1
- (NIL = ((CONS x) NIL)) |- (((CONS x) NIL) = NIL)
T c==> c= cNIL cCONS f0 cNIL c= cCONS f0 cNIL cNIL
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c==> c= cnext_el f7 f4 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 cPOWER * part cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c< cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4
- |- ((\z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))) z1)
T * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 b0 c~ cfinal_list b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 c<= cl'm b1 b3 b4 cl'm b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b4 f3
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> cMEM f3 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (~ (NIL = ((CONS x) NIL)))
T c~ c= cNIL cCONS f0 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) /\ (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- |- (((!s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) ==> ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)) = ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c? / cMEM b1 b0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) |- ((((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = F)
T c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cF
- |- ((?d. (x' = d)) ==> (?d. (x' = d)))
T c==> c? / c= f0 b0 c? / c= f0 b0
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c/\ c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((~ (NIL = ((CONS x) NIL))) ==> ((NIL = ((CONS x) NIL)) = F)) = ((NIL = ((CONS x) NIL)) = F))
T c= c==> c~ c= cNIL cCONS f0 cNIL c= c= cNIL cCONS f0 cNIL cF c= c= cNIL cCONS f0 cNIL cF
- |- ((\A. ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) A)
T * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0
- (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) |- ((((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d)) = F)
T c==> c~ c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 c= c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cF
- |- ((!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cfind_face b2 b5 b0 c/\ c= cprev_el b4 f0 f2 c= cnext_el b0 b5 b1 ! c==> c<= b6 cl'm b2 b4 b5 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b6 b1 cPOWER * part cnext_el b4 b6 b1 cT
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) |- ((((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d)) = F)
T c==> c~ c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 c= c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1 cF
- (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) /\ ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a))))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cl'y f2 f3 f5 f1 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f6 f3 f5 c/\ cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f7 f8 f1 c< f7 f7
- (~ (!A. (A \/ (~ A)))) |- ((~ (!A. (A \/ (~ A)))) /\ F)
T c==> c~ ! c\/ b0 c~ b0 c/\ c~ ! c\/ b0 c~ b0 cF
- |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) f)) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) f))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 f0 * / ! c= * / * b0 b2 b1 * b0 b1 f0
- |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) f)
T * / ! c= * / * b0 b2 b1 * b0 b1 f0
- |- (((MEM x) ((CONS y) NIL)) = (x = y))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
- |- ((((next_el f) x) = w) = ((\w. (((next_el f) x) = w)) w))
T c= c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cf_list f0 f3 f4 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- ((\d. (x' = d)) d) |- (((x' = d) ==> (?d. (x' = d))) = (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cfind_face f0 f2 f6 c==> cmarked_list f0 f4 f1 f2 c/\ c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
- ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) |- (((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) /\ (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))
T c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c/\ * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
- ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) |- (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) /\ ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))) |- ((\j. ((j <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (f_list L)) (SUC j)) x) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (SUC j)) x)))) j)
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC b0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b0 f3 * / c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cf_list f0 cSUC b0 f3 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cSUC b0 f3 f4
- (((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) |- ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))
T c==> c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- |- (((!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) ==> ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0)) = ((\x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s)))) x0))
T c= c==> ! c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1 * / c==> c~ c= cNIL f0 c= cLAST f0 clast b0 f0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c==> c= cnext_el f7 f4 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 cPOWER * part cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c< cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((!y. (!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))) ==> ((\y. (!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))) y)) = ((\y. (!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))) y))
T c= c==> ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b2 c/\ c= cl'y b4 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 c/\ c= cprev_el b6 b2 b3 c~ cfinal_list b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 c<= cl'm b4 b6 b7 cl'm b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b7 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b2 c/\ c= cl'y b4 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 c/\ c= cprev_el b6 b2 b3 c~ cfinal_list b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 c<= cl'm b4 b6 b7 cl'm b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b7 f0 * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b2 c/\ c= cl'y b4 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 c/\ c= cprev_el b6 b2 b3 c~ cfinal_list b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 c<= cl'm b4 b6 b7 cl'm b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b7 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- |- ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)
T * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) |- (((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))) = F)
T c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cF
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((?w. (((next_el f) x) = w)) ==> (?w. (((next_el f) x) = w)))
T c==> c? / c= cnext_el f0 f1 b0 c? / c= cnext_el f0 f1 b0
- (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) |- ((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) /\ (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)))
T c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) /\ ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) ==> ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)) = ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x))
T c= c==> ! ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (x' = d) |- ((x' = d) /\ (?d. (x' = d)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- ((\d. (x' = d)) d) |- (((\d. (x' = d)) d) /\ (?d. (x' = d)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY) |- (EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))))
T c==> c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) ==> ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)) = ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s))
T c= c==> ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0 * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- (NIL = (((betwn f) y) z)) |- ((((betwn f) y) z) = NIL)
T c==> c= cNIL cbetwn f0 f1 f2 c= cbetwn f0 f1 f2 cNIL
- ((~ (!A. (A \/ (~ A)))) ==> F), (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (F = (~ T))
T c= cF c~ cT
- ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) |- ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a)
T c==> c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6
- |- ((((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a))) = T)
T c= c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 cT
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
- (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) |- (((~ (EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))))) ==> ((EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) = F)) = ((EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))) = F))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c= c==> c~ c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 cF c= c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 cF
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) /\ (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cfind_face f0 f3 f7 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- ((!A. (P \/ (Q A))) = (P \/ (!A. (Q A))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- ((\w. (((next_el f) x) = w)) w) |- (((\w. (((next_el f) x) = w)) w) /\ (?w. (((next_el f) x) = w)))
T c==> * / c= cnext_el f0 f1 b0 f2 c/\ * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- |- (((!x. (((\d. (x' = d)) x) ==> (?d. (x' = d)))) ==> ((?d. (x' = d)) ==> (?d. (x' = d)))) = ((?d. (x' = d)) ==> (?d. (x' = d))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- (((CONS x) NIL) = NIL) |- (NIL = ((CONS x) NIL))
T c==> c= cCONS f0 cNIL cNIL c= cNIL cCONS f0 cNIL
- (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((\w'. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f) /\ (((next_el f) x) = w'))))) ==> ((MEM w') r))) = (\w'. ((w = w') ==> ((MEM w') r))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cfind_face f0 f2 f1 c==> cmarked_list f0 f4 f5 f2 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f5 f2 c/\ c= cfind_face f0 f2 f1 c= cnext_el f1 f2 b0 cMEM b0 f5 / c==> c= f3 b0 cMEM b0 f5
- |- ((\y. (!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))) y)
T * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b2 c/\ c= cl'y b4 b6 b7 b0 c/\ c= cfind_face b4 b7 b1 c/\ c= cprev_el b6 b2 b3 c~ cfinal_list b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 c<= cl'm b4 b6 b7 cl'm b4 crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b7 f0
- ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) |- (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) = T)
T c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c= cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- (((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))) = T)
T c= c==> c~ c= cNIL f0 c= cLAST f0 clast f1 f0 cT
- (~ (z = y)), (~ ((final_list L) r)), (uniq f), (uniq (list_of_darts L)), (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((find_face L) y) = f), ((((betwn f) y) z) = NIL), ((MEM y) f), ((MEM z) f), ((((marked_list L) N) r) x) |- ((~ (((next_el ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) y) = ((f_list L) y))) ==> (((((POWER (f_list L)) a) w) = y) ==> (a < a)))
T c==> c~ c= f0 f1 c==> c~ cfinal_list f2 f3 c==> cuniq f4 c==> cuniq clist_of_darts f2 c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL c==> cgood_list f2 c==> cgood_list_nodes f2 c==> c= cl'y f2 f3 f5 f1 c==> c= cfind_face f2 f1 f4 c==> c= cbetwn f4 f1 f0 cNIL c==> cMEM f1 f4 c==> cMEM f0 f4 c==> cmarked_list f2 f6 f3 f5 c==> c~ c= cnext_el cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f3 f0 f1 cCONS f1 cNIL cNIL f1 cf_list f2 f1 c==> c= cPOWER * part cf_list f2 f7 f8 f1 c< f7 f7
- |- ((!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 b0 c/\ c= cl'y b2 b4 b5 f0 c/\ c= cfind_face b2 b5 f1 c/\ c= cprev_el b4 b0 b1 c~ cfinal_list b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 c<= cl'm b2 b4 b5 cl'm b2 crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b5 cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f8 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- |- (((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F))) = (((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)))
T c= c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- ((LENGTH = sizel) /\ ((FILTER = filter) /\ ((REVERSE = rev) /\ ((!s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) /\ ((APPEND = cat) /\ (ALL = all))))))
T c/\ c= part cLENGTH part csizel c/\ c= part cFILTER part cfilter c/\ c= part cREVERSE part crev c/\ ! ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 c/\ c= part cAPPEND part ccat c= part cALL part call
- (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ (?w. (((next_el f) x) = w)))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c? / c= cnext_el f0 f1 b0
- |- (((!A. ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) ==> ((\A. ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) A)) = ((\A. ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) A))
T c= c==> ! c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0 * / c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF f0
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- (!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) |- ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 c==> c<= f5 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 f4 cPOWER * part cnext_el f2 f5 f4
- |- ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)
T * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- ((A a) /\ (!a. (~ (A a)))) |- ((~ F) ==> F)
T c==> c/\ * f0 f1 ! c~ * f0 b0 c==> c~ cF cF
- |- ((x' = d) ==> (?d. (x' = d)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((!A. ((~ (!x. (~ (A x)))) = (?a. (A a)))) = (!A. ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)))
T c= ! c= c~ ! c~ * b0 b1 c? / * b0 b1 ! c==> c~ c= c~ ! c~ * b0 b1 c? / * b0 b1 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x') = ((f_list L) x')) = F)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1 cF
- ((~ (!A. (A \/ (~ A)))) ==> F) |- (((~ (!A. (A \/ (~ A)))) ==> F) /\ ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c/\ c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((!z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))))) = T)
T c= ! ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cfind_face b4 b7 b2 c/\ c= cprev_el b6 b0 b1 c= cnext_el b2 b7 b3 ! c==> c<= b8 cl'm b4 b6 b7 c= cPOWER * part cnext_el crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b8 b3 cPOWER * part cnext_el b6 b8 b3 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cprev_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f2 c==> c= cfind_face f0 f4 f7 c==> cmarked_list f0 f6 f1 f4 c/\ c= cprev_el f1 f2 f3 c==> c~ cfinal_list f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cl'm f0 f1 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 c==> c= cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c==> c= cnext_el f7 f4 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 cPOWER * part cnext_el crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cf_list f0 f4 c< cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4 cl'm f0 crtrans f0 f6 f1 f4 cNUMERAL cBIT1 c_0 f4
- |- (!w. (((\w. (((next_el f) x) = w)) w) ==> (?w. (((next_el f) x) = w))))
T c==> * / c= cnext_el f0 f1 b0 f2 c? / c= cnext_el f0 f1 b0
- ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))) |- (((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))
T c==> c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)
T * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) = ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a))
T c= c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))) |- (~ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x') = ((f_list L) x')))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c~ c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 cf_list f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))) ==> ((\w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))) w)) = ((\w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))))))))) w))
T c= c==> ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 f3 c= cnext_el f2 b4 b0 ! c==> c<= b5 cl'm b1 b3 b4 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b5 b0 cPOWER * part cnext_el b3 b5 b0 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 f3 c= cnext_el f2 b4 b0 ! c==> c<= b5 cl'm b1 b3 b4 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b5 b0 cPOWER * part cnext_el b3 b5 b0 f4 * / ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 f3 c= cnext_el f2 b4 b0 ! c==> c<= b5 cl'm b1 b3 b4 c= cPOWER * part cnext_el crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b5 b0 cPOWER * part cnext_el b3 b5 b0 f4
- |- (((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) ==> (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))) = (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)))
T c= c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\y. (((\x. (f x)) y) = (f y))) y)
T * / c= * / * f0 b1 b0 * f0 b0 f1
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- (!n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) |- ((\n. ((n <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w)))) n)
T c==> ! c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 * / c==> c<= b0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f4 cPOWER * part cnext_el f2 b0 f4 f5
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ (z = y)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM w) r), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM w) r) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ c= f4 f5 c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f6 f3 f7 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f4 f8 c==> c= cf_list f0 f3 f7 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f7 c==> c= cl'y f0 f2 f3 f5 c==> c= cl'z f0 f1 f2 f3 f4 c==> c= cindexf f7 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f7 f2 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f5 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f7 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f7 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f7 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) |- ((uniq ((APPEND ((APPEND ((CONS z) NIL)) ((APPEND (((betwn r) z) y)) ((CONS y) NIL)))) NIL)) = T)
T c==> cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cNIL c= cuniq cAPPEND cAPPEND cCONS f0 cNIL cAPPEND cbetwn f1 f0 f2 cCONS f2 cNIL cNIL cT
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F), (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) |- ((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) /\ ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c/\ c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- ((\z. (!z1. (!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))))) z)
T * / ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b4 b6 c/\ cgood_list b4 c/\ cgood_list_nodes b4 c/\ cmarked_list b4 b5 b6 b7 c/\ c= cl'z b4 b5 b6 b7 b0 c/\ c= cl'y b4 b6 b7 f0 c/\ c= cfind_face b4 b7 b2 c/\ c= cprev_el b6 b0 b1 c= cnext_el b2 b7 b3 ! c==> c<= b8 cl'm b4 b6 b7 c= cPOWER * part cnext_el crtrans b4 b5 b6 b7 cNUMERAL cBIT1 c_0 b8 b3 cPOWER * part cnext_el b6 b8 b3 f1
- (((next_el f) x) = w) |- ((\w. (((next_el f) x) = w)) w)
T c==> c= cnext_el f0 f1 f2 * / c= cnext_el f0 f1 b0 f2
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (~ (((f_list L) d) = ((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d))) |- (T = (~ (((next_el (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) d) = ((f_list L) d))))
T c==> c~ c= cf_list f0 f1 cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 c= cT c~ c= cnext_el cSND csplit_normal_list f0 f2 cfind_face f0 f3 f3 f4 f1 cf_list f0 f1
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d)) = F)
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c= c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) x) = w) /\ (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cf_list f0 f3 f4 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c/\ c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (?x'. (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w)))))
T c==> c? / c/\ cMEM b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f1 f2 f3 c? / c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f5
- (x' = d) |- ((\d. (x' = d)) d)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((((betwn f) y) z) = NIL) |- (NIL = (((betwn f) y) z))
T c==> c= cbetwn f0 f1 f2 cNIL c= cNIL cbetwn f0 f1 f2
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c= c~ c= f0 cNIL c? / cMEM b0 f0
- |- ((APPEND = cat) /\ (ALL = all))
T c/\ c= part cAPPEND part ccat c= part cALL part call
- |- (FILTER = filter)
T c= part cFILTER part cfilter
- |- (((!f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))) ==> ((\f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))) f)) = ((\f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))) f))
T c= c==> ! ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cfind_face b2 b5 b0 c/\ c= cprev_el b4 f0 f2 c= cnext_el b0 b5 b1 ! c==> c<= b6 cl'm b2 b4 b5 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b6 b1 cPOWER * part cnext_el b4 b6 b1 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cfind_face b2 b5 b0 c/\ c= cprev_el b4 f0 f2 c= cnext_el b0 b5 b1 ! c==> c<= b6 cl'm b2 b4 b5 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b6 b1 cPOWER * part cnext_el b4 b6 b1 f3 * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cfind_face b2 b5 b0 c/\ c= cprev_el b4 f0 f2 c= cnext_el b0 b5 b1 ! c==> c<= b6 cl'm b2 b4 b5 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b6 b1 cPOWER * part cnext_el b4 b6 b1 f3
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?x'. (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))), (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((?x'. (((MEM x') (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) /\ (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))))) /\ (?a. (~ ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) w)) = ((f_list L) (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) a) w))))))
T c==> c? / c/\ cMEM b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 c==> c~ cfinal_list f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cfind_face f0 f3 f4 c==> cmarked_list f0 f1 f2 f3 c/\ c? / c/\ cMEM b0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 c~ c= cf_list f0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 c? / c~ c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f5 cf_list f0 cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 b0 f5
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- |- ((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) ==> (((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)))
T c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)))
T c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\f2. (f f2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) ==> ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)) = ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L))
T c= c==> ! c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) |- (~ (EMPTY = (GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m))))))
T c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c~ c= part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0
- ((\a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) a) |- ((((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a))) = (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))
T c==> * / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 f6 c= c==> c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
- |- (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))) = T)
T c= ! ! ! ! ! c==> c/\ c~ cfinal_list b1 b3 c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c= cl'z b1 b2 b3 b4 f0 c/\ c= cl'y b1 b3 b4 f1 c/\ c= cfind_face b1 b4 f2 c/\ c= cprev_el b3 f0 b0 c~ cfinal_list b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 c<= cl'm b1 b3 b4 cl'm b1 crtrans b1 b2 b3 b4 cNUMERAL cBIT1 c_0 b4 cT
- (~ F), ((A a) /\ (!a. (~ (A a)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ * f0 f1 ! c~ * f0 b0 c/\ c~ cF cF
- |- (((~ (!x. (~ (A x)))) = (?a. (A a))) = T)
T c= c= c~ ! c~ * f0 b0 c? / * f0 b0 cT
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'z f0 f2 f1 f3 f4 c==> cmarked_list f0 f2 f1 f3 c/\ c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (good_list L), (good_list_nodes L), (((find_face L) x) = f), ((((marked_list L) N) r) x) |- ((\f'. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((find_face L) x) = f') /\ (((next_el f') x) = w))))) ==> ((MEM w) r)))) = (\f'. (!w. (((f = f') /\ (((next_el f') x) = w)) ==> ((MEM w) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cfind_face f0 f1 f2 c==> cmarked_list f0 f3 f4 f1 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f3 f4 f1 c/\ c= cfind_face f0 f1 b0 c= cnext_el b0 f1 b1 cMEM b1 f4 / ! c==> c/\ c= f2 b0 c= cnext_el b0 f1 b1 cMEM b1 f4
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cfind_face f0 f2 f6 c==> c= cprev_el f1 f5 f7 c==> c~ cfinal_list f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cl'm f0 f1 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 c==> c= cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c==> c= cnext_el f6 f2 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 cPOWER * part cnext_el crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cf_list f0 f2 c< cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2 cl'm f0 crtrans f0 f4 f1 f2 cNUMERAL cBIT1 c_0 f2
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)
T * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (~ ((((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))) |- (~ (((f_list L) (((ITER (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)) = (((ITER (SUC (SUC (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x)))
T c==> c~ c= cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c~ c= cf_list f0 cITER cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cITER cSUC cSUC cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3
- |- ((\f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))) f)
T * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 b1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cfind_face b3 b6 b0 c/\ c= cprev_el b5 b1 b2 c~ cfinal_list b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 c<= cl'm b3 b5 b6 cl'm b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b6 f1
- |- (((!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) ==> ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)) = ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x))
T c= c==> ! ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) |- ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a)
T c==> c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4
- |- ((((\d. (x' = d)) d) ==> (?d. (x' = d))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- |- ((((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a) ==> (?a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a))) = T)
T c= c==> * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4 c? / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 cT
- |- (((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a) = ((\a. ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) = a)) a))
T c= c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 f4 * / c= cl'm f0 cSND cPOWER * * part ctransform_list f0 f1 cNUMERAL cBIT1 c_0 c, f2 f3 f1 b0 f4
- |- ((\f. (!w. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (((next_el f) x) = w))))))))) ==> (!n. ((n <= (((l'm L) r) x)) ==> ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) n) w) = (((POWER (next_el r)) n) w))))))))))) f)
T * / ! ! ! ! ! c==> c/\ c~ cfinal_list b2 b4 c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c= cl'z b2 b3 b4 b5 f0 c/\ c= cl'y b2 b4 b5 f1 c/\ c= cfind_face b2 b5 b0 c/\ c= cprev_el b4 f0 f2 c= cnext_el b0 b5 b1 ! c==> c<= b6 cl'm b2 b4 b5 c= cPOWER * part cnext_el crtrans b2 b3 b4 b5 cNUMERAL cBIT1 c_0 b6 b1 cPOWER * part cnext_el b4 b6 b1 f3
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((~ (!A. (A \/ (~ A)))) ==> F) = (!A. (A \/ (~ A))))
T c= c==> c~ ! c\/ b0 c~ b0 cF ! c\/ b0 c~ b0
- ((~ (!A. (A \/ (~ A)))) ==> F) |- ((((~ (!A. (A \/ (~ A)))) ==> F) ==> ((~ (!A. (A \/ (~ A)))) ==> F)) ==> ((~ (!A. (A \/ (~ A)))) ==> F))
T c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c==> c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF c==> c~ ! c\/ b0 c~ b0 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))
T c==> c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 f6 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))) ==> ((\f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))) f)) = ((\f. (!z. (!z1. (!L. (!N. (!r. (!x. (((~ ((final_list L) r)) /\ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((((((l'z L) N) r) x) = z) /\ (((((l'y L) r) x) = y) /\ ((((find_face L) x) = f) /\ ((((prev_el r) z) = z1) /\ (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))))))))))) ==> ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)))))))))) f))
T c= c==> ! ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 b1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cfind_face b3 b6 b0 c/\ c= cprev_el b5 b1 b2 c~ cfinal_list b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 c<= cl'm b3 b5 b6 cl'm b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b6 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 b1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cfind_face b3 b6 b0 c/\ c= cprev_el b5 b1 b2 c~ cfinal_list b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 c<= cl'm b3 b5 b6 cl'm b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b6 f1 * / ! ! ! ! ! ! c==> c/\ c~ cfinal_list b3 b5 c/\ cgood_list b3 c/\ cgood_list_nodes b3 c/\ cmarked_list b3 b4 b5 b6 c/\ c= cl'z b3 b4 b5 b6 b1 c/\ c= cl'y b3 b5 b6 f0 c/\ c= cfind_face b3 b6 b0 c/\ c= cprev_el b5 b1 b2 c~ cfinal_list b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 c<= cl'm b3 b5 b6 cl'm b3 crtrans b3 b4 b5 b6 cNUMERAL cBIT1 c_0 b6 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f3 c==> cmarked_list f0 f7 f1 f3 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3
- |- (~ (~ T))
T c~ c~ cT
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f7 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c==> c= cnext_el f7 f3 f8 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ ((final_list L) r)), (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((((((l'z L) N) r) x) = z) ==> (((((l'y L) r) x) = y) ==> ((((find_face L) x) = f) ==> ((((prev_el r) z) = z1) ==> ((~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) ==> (((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> ((((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)) ==> ((((next_el f) x) = w) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'z f0 f2 f1 f3 f4 c==> c= cl'y f0 f1 f3 f5 c==> c= cfind_face f0 f3 f6 c==> c= cprev_el f1 f4 f7 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cnext_el f6 f3 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f3 c==> cmarked_list f0 f8 f1 f3 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) |- ((((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F)) ==> ((~ ((~ (!x. (~ (A x)))) = (?a. (A a)))) ==> F))
T c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c==> c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF c==> c~ c= c~ ! c~ * f0 b0 c? / * f0 b0 cF
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) ((real_add (real_of_int _10352371)) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- ((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_add creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)) ==> (?a. ((((indexf w) d) (SND (((((split_normal_list L) r) ((find_face L) y)) y) z1))) = a)))
T c==> c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0 c? / c= cindexf f0 f1 cSND csplit_normal_list f2 f3 cfind_face f2 f4 f4 f5 b0
- |- (((!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) ==> ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)) = ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x))
T c= c==> ! ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (~ (((f_list L) x') = ((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x'))), (x' = d) |- (~ (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) d) = ((f_list L) d)))
T c==> c~ c= cf_list f0 f1 cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f1 c==> c= f1 f5 c~ c= cnext_el crtrans f0 f2 f3 f4 cNUMERAL cBIT1 c_0 f5 cf_list f0 f5
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (((real_ge (real_of_int _10352370)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _10352371)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352370))) (real_of_int _10352371))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _10352370)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _10352370)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _10352371))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c~ cfinal_list f0 f2 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c= cprev_el f2 f6 f7 c==> c= cf_list f0 f3 f5 c==> c= cPOWER * part cnext_el crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 cPOWER * part cnext_el f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 f5 c==> c= cl'y f0 f2 f3 f8 c==> c= cl'z f0 f1 f2 f3 f6 c==> c= cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cl'm f0 crtrans f0 f1 f2 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f2 c==> cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c==> cMEM f2 f1 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f1 c==> cs_flag_list f0 f1 f2 f3 c==> cmarked_list f0 f1 f2 f3 c/\ cMEM f3 f2 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f5 cf_list f0 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 cPOWER * part cnext_el f2 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 f5 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f1 f2 f3
- (~ ((final_list L) r)), (~ ((final_list L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((l'm L) r) x) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), (((find_face L) x) = f), ((((l'm L) r) x) <= (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)), ((((marked_list L) N) r) x) |- ((((next_el f) x) = w) /\ (((((POWER (f_list L)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x)) = (((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ((f_list L) x))) ==> ((((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x) < (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x))))
T c==> c~ cfinal_list f0 f1 c==> c~ cfinal_list f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f4 f3 f5 c==> c= cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f2 f1 f3 f6 c==> c= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> c= cfind_face f0 f3 f4 c==> c<= cl'm f0 f1 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cmarked_list f0 f2 f1 f3 c/\ c= cnext_el f4 f3 f5 c==> c= cPOWER * part cf_list f0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 cPOWER * part cnext_el crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 f3 c< cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3 cl'm f0 crtrans f0 f2 f1 f3 cNUMERAL cBIT1 c_0 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> (((MEM x) (list_of_darts L)) ==> ((((f_list L) x) = w) ==> (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) ==> ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f3 f7 c==> c= cl'z f0 f8 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f3 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f3 c==> cs_flag_list f0 f8 f1 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f3 clist_of_darts f0 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f8 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f8 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f8 f1 f3 cNUMERAL c_0 f1 c==> cMEM f7 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f8 f1 f3
- |- ((\s. (!x0. ((~ (NIL = s)) ==> ((LAST s) = ((last x0) s))))) s)
T * / ! c==> c~ c= cNIL b0 c= cLAST b0 clast b1 b0 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el f) x) = w), (((next_el r) x) = ((f_list L) x)), (((prev_el r) z) = z1), (((f_list L) x) = w), ((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((POWER (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w) = (((POWER (next_el r)) (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) w)) /\ ((~ ((GSPEC (\GEN%PVAR%8690. (?m. (((SETSPEC GEN%PVAR%8690) (~ ((((ITER (SUC (SUC m))) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x) = ((f_list L) (((ITER (SUC m)) (next_el (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0))))) x))))) m)))) = EMPTY)) ==> (((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) r) = (((l'm L) (((((rtrans L) N) r) x) (NUMERAL (BIT1 _0)))) x)) ==> (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r) ==> (((MEM y) r) ==> ((~ ((((POWER (next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r))))) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) ((next_el (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) w)) = ((f_list L) (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)))) ==> (((((POWER (f_list L)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w) = (((POWER (next_el r)) (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)) w)) ==> ((((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x) < (((l'm L) (SND (((POWER ((transform_list L) x)) (NUMERAL (BIT1 _0))) (N , r)))) x)))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f2 f3 f4 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cprev_el f1 f5 f6 c==> c= cf_list f0 f3 f4 c==> c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c= cl'y f0 f1 f3 f8 c==> c= cl'z f0 f7 f1 f3 f5 c==> c= cfind_face f0 f3 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f3 c==> cmarked_list f0 f7 f1 f3 c/\ c= cPOWER * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 cPOWER * part cnext_el f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 f4 c==> c~ c= * part cGSPEC / c? / cSETSPEC b0 c~ c= cITER cSUC cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 cf_list f0 cITER cSUC b1 * part cnext_el crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 b1 part cEMPTY c==> c= cindexf f4 cytrans f0 f7 f1 f3 cNUMERAL c_0 f1 cl'm f0 crtrans f0 f7 f1 f3 cNUMERAL cBIT1 c_0 f3 c==> cMEM cztrans f0 f7 f1 f3 cNUMERAL c_0 f1 c==> cMEM f8 f1 c==> c~ c= cPOWER * part cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cnext_el cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f4 cf_list f0 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c==> c= cPOWER * part cf_list f0 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 cPOWER * part cnext_el f1 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 f4 c< cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3 cl'm f0 cSND cPOWER * * part ctransform_list f0 f3 cNUMERAL cBIT1 c_0 c, f7 f1 f3
