N Planarity.CARD_GT1_IMP_AZIM_FAN_EQ_DIHV
C |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D AZIM_DIVH
A |- (!v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY)))))) ==> (((((azim v) w) v1) v2) = (((COND ((real_lt ((((azim v) w) v1) v2)) pi)) ((((dihV v) w) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2)))))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c= cazim f0 f1 f2 f3 cCOND creal_lt cazim f0 f1 f2 f3 cpi cdihV f0 f1 f2 f3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV f0 f1 f2 f3
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Fan.sigma_fan_in_set_of_edge
A |- (!x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN f3 * * * part cset_of_edge f4 f1 f2 cIN csigma_fan f0 f1 f2 f4 f3 * * * part cset_of_edge f4 f1 f2
D Planarity.fan80
A |- (!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))))
T c= cfan80 c, f0 c, f1 f2 ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 creal_lt cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 cpi
D Planarity.IN_D1_FAN_IMP_EDGE_FAN
A |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cIN f3 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2
D Planarity.CARD_GT1_IMP_AZIM_FAN_EQ_AZIM
A |- (!x. (!V. (!E. (!y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT ((pr3 y) INSERT EMPTY)) IN E) = ((pr3 y) IN (((set_of_edge v) V) E))) /\ (((v INSERT ((pr3 y) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = (pr3 y))) /\ ((~ (v = (pr3 y))) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) (pr2 y))
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY f2 cIN cpr3 f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 cpr3 f3 c/\ c~ c= b0 cpr3 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT cpr3 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY cpr2 f3
- ((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY cT
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- (((!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) ==> ((\V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) V)) = ((\V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E))))))) V))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 f1 * / ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 f1
+ |- (((!y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))) ==> ((\y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))) y)) = ((\y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))) y))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cazim f0 cpr2 b0 cpr3 b0 csigma_fan f0 f1 f2 cpr2 b0 cpr3 b0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cazim f0 cpr2 b0 cpr3 b0 csigma_fan f0 f1 f2 cpr2 b0 cpr3 b0 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cazim f0 cpr2 b0 cpr3 b0 csigma_fan f0 f1 f2 cpr2 b0 cpr3 b0 f3
+ |- ((\v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY)))))) ==> (((((azim v) w) v1) v2) = (((COND ((real_lt ((((azim v) w) v1) v2)) pi)) ((((dihV v) w) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2))))))))) x)
T * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 cCOND creal_lt cazim b0 b1 b2 b3 cpi cdihV b0 b1 b2 b3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV b0 b1 b2 b3 f0
+ (y IN (d_fan (x , (V , E)))) |- ((y IN (d_fan (x , (V , E)))) = T)
T c==> cIN f0 * part cd_fan c, f1 c, f2 f3 c= cIN f0 * part cd_fan c, f1 c, f2 f3 cT
- (~ ((pr2 y) = (pr3 y))) |- (((~ ((pr3 y) = (pr2 y))) ==> (((pr3 y) = (pr2 y)) = F)) = (((pr3 y) = (pr2 y)) = F))
T c==> c~ c= cpr2 f0 cpr3 f0 c= c==> c~ c= cpr3 f0 cpr2 f0 c= c= cpr3 f0 cpr2 f0 cF c= c= cpr3 f0 cpr2 f0 cF
+ (~ (x = (pr2 y))), (FINITE (((set_of_edge (pr2 y)) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E), ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> c~ c= f0 cpr2 f1 c==> cFINITE * * * part cset_of_edge cpr2 f1 f2 f3 c==> cFAN c, f0 c, f2 f3 c==> cfan80 c, f0 c, f2 f3 c==> c/\ c~ c= f0 cpr3 f1 c/\ c~ c= cpr2 f1 cpr3 f1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT cpr3 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c/\ c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c/\ cIN cpr2 f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c==> cIN * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY f3 c==> cIN cpr3 f1 * * * part cset_of_edge cpr2 f1 f2 f3 c= cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cdihV f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1
+ |- ((\E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))) E)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 b0 cIN b2 * * * part cset_of_edge b1 f1 b0 cIN csigma_fan f0 f1 b0 b1 b2 * * * part cset_of_edge b1 f1 b0 f2
+ ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) = T)
T c==> cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 c= cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 cT
- (~ ((pr2 y) = (pr3 y))) |- (((pr2 y) = (pr3 y)) = F)
T c==> c~ c= cpr2 f0 cpr3 f0 c= c= cpr2 f0 cpr3 f0 cF
+ |- (((!v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY)))))) ==> (((((azim v) w) v1) v2) = (((COND ((real_lt ((((azim v) w) v1) v2)) pi)) ((((dihV v) w) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2))))))))) ==> ((\v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY)))))) ==> (((((azim v) w) v1) v2) = (((COND ((real_lt ((((azim v) w) v1) v2)) pi)) ((((dihV v) w) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2))))))))) x)) = ((\v. (!w. (!v1. (!v2. (((~ (collinear (v INSERT (w INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (v INSERT (w INSERT (v2 INSERT EMPTY)))))) ==> (((((azim v) w) v1) v2) = (((COND ((real_lt ((((azim v) w) v1) v2)) pi)) ((((dihV v) w) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV v) w) v1) v2))))))))) x))
T c= c==> ! ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 cCOND creal_lt cazim b0 b1 b2 b3 cpi cdihV b0 b1 b2 b3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV b0 b1 b2 b3 * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 cCOND creal_lt cazim b0 b1 b2 b3 cpi cdihV b0 b1 b2 b3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c= cazim b0 b1 b2 b3 cCOND creal_lt cazim b0 b1 b2 b3 cpi cdihV b0 b1 b2 b3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV b0 b1 b2 b3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E)) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 cIN f3 * part cd_fan c, f2 c, f0 f1 cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f1 c= cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ (FINITE (((set_of_edge (pr2 y)) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = (pr2 y))) /\ ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E), ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> cFINITE * * * part cset_of_edge cpr2 f0 f1 f2 c==> cFAN c, f3 c, f1 f2 c==> cfan80 c, f3 c, f1 f2 c==> c/\ cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c/\ c~ c= f3 cpr2 f0 c/\ c~ c= f3 cpr3 f0 c/\ c~ c= cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c/\ c~ cIN cpr3 f0 * part caff * * part cINSERT f3 * * part cINSERT cpr2 f0 part cEMPTY c/\ cIN cpr2 f0 f1 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c~ cIN cpr3 f0 * part caff * * part cINSERT f3 * * part cINSERT cpr2 f0 part cEMPTY c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f2 c==> cIN cpr3 f0 * * * part cset_of_edge cpr2 f0 f1 f2 c= cazim f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0 cdihV f3 cpr2 f0 cpr3 f0 csigma_fan f3 f1 f2 cpr2 f0 cpr3 f0
- ((pr3 y) = (pr2 y)) |- ((pr2 y) = (pr3 y))
T c==> c= cpr3 f0 cpr2 f0 c= cpr2 f0 cpr3 f0
+ (FAN (x , (V , E))), ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- ((((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E)) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = ((((FAN (x , (V , E))) /\ ((pr3 y) IN (((set_of_edge (pr2 y)) V) E))) ==> ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 c= c==> cIN csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 c= cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c==> c==> c/\ cFAN c, f0 c, f1 f2 cIN cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 cIN csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 c= cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ |- (((!x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) ==> ((\x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E))) ==> ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 f0 * / ! ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 f0
+ |- (((!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) ==> ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V)) = ((\V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi)))))))) V))
T c= c==> ! ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1 * / ! c= cfan80 c, f0 c, b0 b1 ! ! c==> cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 creal_lt cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cpi f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
- (~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y)) = F)
T c==> c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c= c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0 cF
+ |- (((!x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) ==> ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x)) = ((\x. (!V. (!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))))) x))
T c= c==> ! ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0 * / ! ! c= cfan80 c, b0 c, b1 b2 ! ! c==> cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 creal_lt cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cpi f0
- ((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ ((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) |- (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))))) /\ ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c/\ c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c/\ cfan80 c, f0 c, f1 f2 cIN f3 * part cd_fan c, f0 c, f1 f2 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- ((\v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) (pr2 y))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi * / ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi cpr2 f3
+ (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) |- ((((((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((real_lt ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) pi))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f0 b0 b1 cpi c= c==> c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3 creal_lt cazim f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3 cpi c= cazim f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3 cdihV f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3 c= cazim f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3 cdihV f1 cpr2 f3 cpr3 f3 csigma_fan f1 f2 f0 cpr2 f3 cpr3 f3
+ |- (((FAN (x , (V , E))) /\ ((pr3 y) IN (((set_of_edge (pr2 y)) V) E))) ==> ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E)))
T c==> c/\ cFAN c, f0 c, f1 f2 cIN cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 cIN csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2
+ (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (fan80 (x , (V , E))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> cfan80 c, f1 c, f2 f3 c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f3 c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0
+ (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) |- ((!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f3 c==> ! ! c==> cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f3 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 b0 b1 csigma_fan f1 f2 f3 b0 b1 creal_lt cazim f1 b0 b1 csigma_fan f1 f2 f3 b0 b1 cpi c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0
- (~ (x = (pr3 y))) |- (~ ((pr3 y) = x))
T c==> c~ c= f0 cpr3 f1 c~ c= cpr3 f1 f0
+ (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))) |- ((((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((real_lt ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) pi)) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 creal_lt cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpi c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) |- ((((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = (((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))))))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))
T c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY f3 c= c==> c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c==> c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((fan80 (x , (V , E))) /\ (y IN (d_fan (x , (V , E))))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c/\ cfan80 c, f2 c, f0 f1 cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ (~ (x = (pr2 y))), (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (FINITE (((set_of_edge (pr2 y)) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E), ((pr2 y) IN V), ((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> c~ c= f0 cpr2 f1 c==> c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c==> cFINITE * * * part cset_of_edge cpr2 f1 f2 f3 c==> cFAN c, f0 c, f2 f3 c==> cfan80 c, f0 c, f2 f3 c==> c/\ cIN cpr2 f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c==> cIN * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY f3 c==> cIN cpr2 f1 f2 c==> cIN cpr3 f1 * * * part cset_of_edge cpr2 f1 f2 f3 c= cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cdihV f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1
+ (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (fan80 (x , (V , E))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) |- (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> cfan80 c, f1 c, f2 f3 c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT cpr3 f0 part cEMPTY f3 c= cazim f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cdihV f1 cpr2 f0 cpr3 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0
+ |- (((!E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) ==> ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E)) = ((\E. ((fan80 (x , (V , E))) = (!v. (!u. (((v INSERT (u INSERT EMPTY)) IN E) ==> (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_lt ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) pi))))))) E))
T c= c==> ! c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2 * / c= cfan80 c, f0 c, f1 b0 ! ! c==> cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ creal_lt creal_of_num cNUMERAL c_0 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 creal_lt cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 cpi f2
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((\y. (((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))) y)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 b0 cpr3 b0 cazim f0 cpr2 b0 cpr3 b0 csigma_fan f0 f1 f2 cpr2 b0 cpr3 b0 f3
+ (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) |- (((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))) = F)
T c==> c~ cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= cIN cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY cF
+ (~ (x = (pr2 y))), (FINITE (((set_of_edge (pr2 y)) V) E)), (FAN (x , (V , E))), ((pr2 y) IN V), ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E)) |- ((((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) /\ ((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge (pr2 y)) V) E)) /\ (((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) = ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E))) /\ ((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (pr2 y))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))))))))) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))))
T c==> c~ c= f0 cpr2 f1 c==> cFINITE * * * part cset_of_edge cpr2 f1 f2 f3 c==> cFAN c, f0 c, f2 f3 c==> cIN cpr2 f1 f2 c==> cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * * * part cset_of_edge cpr2 f1 f2 f3 c= c==> c/\ cIN * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY f3 c==> cIN * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ c~ c= f0 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c/\ c~ c= cpr2 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ c~ cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c~ cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c= cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cdihV f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c==> c==> cFAN c, f0 c, f2 f3 c/\ cFINITE * * * part cset_of_edge cpr2 f1 f2 f3 c/\ c= cIN * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY f3 cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * * * part cset_of_edge cpr2 f1 f2 f3 c==> cIN * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ c~ c= f0 cpr2 f1 c/\ c~ c= f0 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c/\ c~ c= cpr2 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c/\ c~ cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c/\ cIN cpr2 f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c~ cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c= cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cdihV f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1
- (~ ((pr2 y) = (pr3 y))) |- (((pr3 y) = (pr2 y)) = F)
T c==> c~ c= cpr2 f0 cpr3 f0 c= c= cpr3 f0 cpr2 f0 cF
+ |- (((!y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) ==> ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y)) = ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))), (y IN (d_fan (x , (V , E)))) |- ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
+ |- (((((FAN (x , (V , E))) /\ ((y IN (d_fan (x , (V , E)))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))) = ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 * part cd_fan c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= cazim_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
- (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) |- ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x)
T c==> c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0
+ (~ (x = (pr2 y))), (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))), (FINITE (((set_of_edge (pr2 y)) V) E)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E), ((pr2 y) IN V) |- (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (((set_of_edge (pr2 y)) V) E)) ==> (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> c~ c= f0 cpr2 f1 c==> c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c==> cFINITE * * * part cset_of_edge cpr2 f1 f2 f3 c==> cFAN c, f0 c, f2 f3 c==> cfan80 c, f0 c, f2 f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c~ cIN cpr3 f1 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY c==> cIN * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY f3 c==> cIN cpr2 f1 f2 c==> cIN csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 * * * part cset_of_edge cpr2 f1 f2 f3 c= cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cdihV f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1
+ |- (!v1. (!v2. (((~ (collinear (x INSERT ((pr2 y) INSERT (v1 INSERT EMPTY))))) /\ (~ (collinear (x INSERT ((pr2 y) INSERT (v2 INSERT EMPTY)))))) ==> (((((azim x) (pr2 y)) v1) v2) = (((COND ((real_lt ((((azim x) (pr2 y)) v1) v2)) pi)) ((((dihV x) (pr2 y)) v1) v2)) ((real_sub ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) pi)) ((((dihV x) (pr2 y)) v1) v2)))))))
T c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT f3 part cEMPTY c= cazim f0 cpr2 f1 f2 f3 cCOND creal_lt cazim f0 cpr2 f1 f2 f3 cpi cdihV f0 cpr2 f1 f2 f3 creal_sub creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cpi cdihV f0 cpr2 f1 f2 f3
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (FAN (x , (V , E))), (fan80 (x , (V , E))), ((FINITE (((set_of_edge (pr2 y)) V) E)) /\ (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = (pr2 y))) /\ ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))))))), (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge (pr2 y)) V) E)) /\ (((pr3 y) IN (((set_of_edge (pr2 y)) V) E)) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) /\ ((~ (x = (pr2 y))) /\ ((~ (x = (pr3 y))) /\ ((~ ((pr2 y) = (pr3 y))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) /\ ((~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ (((pr2 y) IN V) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) = (~ ((pr3 y) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))))))))))))))) /\ (((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> cFAN c, f0 c, f1 f2 c==> cfan80 c, f0 c, f1 f2 c==> c/\ cFINITE * * * part cset_of_edge cpr2 f3 f1 f2 c/\ cIN cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ c= f0 cpr2 f3 c/\ c~ c= f0 cpr3 f3 c/\ c~ c= cpr2 f3 cpr3 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY * * part cINSERT cpr3 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY c/\ cIN cpr2 f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY c==> cIN * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY f2 c/\ c/\ cFINITE * * * part cset_of_edge cpr2 f3 f1 f2 c/\ cIN cpr3 f3 * * * part cset_of_edge cpr2 f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ c= f0 cpr2 f3 c/\ c~ c= f0 cpr3 f3 c/\ c~ c= cpr2 f3 cpr3 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY * * part cINSERT cpr3 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f3 part cEMPTY * * part cINSERT cpr2 f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c/\ c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY c/\ cIN cpr2 f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f3 * * part cINSERT cpr3 f3 part cEMPTY c~ cIN cpr3 f3 * part caff * * part cINSERT f0 * * part cINSERT cpr2 f3 part cEMPTY c= cazim f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 cdihV f0 cpr2 f3 cpr3 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), (y IN (d_fan (x , (V , E)))) |- (((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) ==> ((((((azim_fan x) V) E) (pr2 y)) (pr3 y)) = ((((dihV x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> cIN f3 * part cd_fan c, f2 c, f0 f1 c==> c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cazim f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3 c= cazim_fan f2 f0 f1 cpr2 f3 cpr3 f3 cdihV f2 cpr2 f3 cpr3 f3 csigma_fan f2 f0 f1 cpr2 f3 cpr3 f3
- ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y)) |- ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))
T c==> c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 cpr2 f3 c= cpr2 f3 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
- (~ (x = (pr2 y))) |- (((pr2 y) = x) = F)
T c==> c~ c= f0 cpr2 f1 c= c= cpr2 f1 f0 cF
+ |- ((\y. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (y IN (d_fan (x , (V , E)))))) ==> (((pr2 y) INSERT ((pr3 y) INSERT EMPTY)) IN E))) y)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 cIN b0 * part cd_fan c, f0 c, f1 f2 cIN * * part cINSERT cpr2 b0 * * part cINSERT cpr3 b0 part cEMPTY f2 f3
- (~ (collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))))) |- ((collinear (x INSERT ((pr2 y) INSERT ((pr3 y) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY cF
- (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
- (~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- ((x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = F)
T c==> c~ c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 cF
- ((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY cT
- (~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y))) ==> (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y)) = F)) = (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y)) = F))
T c==> c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c= c==> c~ c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0 c= c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0 cF c= c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0 cF
- (~ (x = (pr3 y))) |- ((x = (pr3 y)) = F)
T c==> c~ c= f0 cpr3 f1 c= c= f0 cpr3 f1 cF
- (~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x)) ==> (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x) = F)) = (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x) = F))
T c==> c~ c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= c==> c~ c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0 c= c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0 cF c= c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0 cF
- (x = (pr3 y)) |- ((pr3 y) = x)
T c==> c= f0 cpr3 f1 c= cpr3 f1 f0
- (~ (x = (pr2 y))) |- (((~ ((pr2 y) = x)) ==> (((pr2 y) = x) = F)) = (((pr2 y) = x) = F))
T c==> c~ c= f0 cpr2 f1 c= c==> c~ c= cpr2 f1 f0 c= c= cpr2 f1 f0 cF c= c= cpr2 f1 f0 cF
- |- ((x = x) = T)
T c= c= f0 f0 cT
- ((pr3 y) = x) |- (x = (pr3 y))
T c==> c= cpr3 f0 f1 c= f1 cpr3 f0
- (~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x) = F)
T c==> c~ c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c= c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0 cF
- (x = (pr2 y)) |- ((pr2 y) = x)
T c==> c= f0 cpr2 f1 c= cpr2 f1 f0
- (~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x))
T c==> c~ c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 c~ c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0
- (~ (x = (pr2 y))) |- (~ ((pr2 y) = x))
T c==> c~ c= f0 cpr2 f1 c~ c= cpr2 f1 f0
- (~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) |- ((collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT cpr2 f1 * * part cINSERT csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 part cEMPTY cF
- ((pr2 y) = x) |- (x = (pr2 y))
T c==> c= cpr2 f0 f1 c= f1 cpr2 f0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- ((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((real_lt (real_of_num (NUMERAL _0))) ((((azim x) (pr2 y)) (pr3 y)) (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 c= creal_lt creal_of_num cNUMERAL c_0 cazim f0 cpr2 f1 cpr3 f1 csigma_fan f0 f2 f3 cpr2 f1 cpr3 f1 cT
- ((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((pr3 y) INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT cpr2 f1 * * part cINSERT cpr3 f1 part cEMPTY cT
- (~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) = F)
T c==> c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c= c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cF
- ((pr2 y) = (pr3 y)) |- ((pr3 y) = (pr2 y))
T c==> c= cpr2 f0 cpr3 f0 c= cpr3 f0 cpr2 f0
- (~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) |- (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y)))
T c==> c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c~ c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0
- ((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))))))) |- (((((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) /\ ((~ (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ ((~ ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))) /\ (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY)) /\ (((DISJOINT (x INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))) /\ ((~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY))))) /\ ((~ (collinear (x INSERT ((pr2 y) INSERT ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) INSERT EMPTY))))) = (~ ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) IN (aff (x INSERT ((pr2 y) INSERT EMPTY)))))))))))))) = T)
T c==> c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c==> cIN * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ c= f1 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ c~ c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY * * part cINSERT cpr2 f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f1 part cEMPTY * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c/\ c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY c= c~ ccollinear * * part cINSERT f1 * * part cINSERT cpr2 f0 * * part cINSERT csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 part cEMPTY c~ cIN csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 * part caff * * part cINSERT f1 * * part cINSERT cpr2 f0 part cEMPTY cT
- (~ ((pr2 y) = (pr3 y))) |- (~ ((pr3 y) = (pr2 y)))
T c==> c~ c= cpr2 f0 cpr3 f0 c~ c= cpr3 f0 cpr2 f0
- ((pr2 y) = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y))) |- ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = (pr2 y))
T c==> c= cpr2 f0 csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 c= csigma_fan f1 f2 f3 cpr2 f0 cpr3 f0 cpr2 f0
- ((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((pr2 y) INSERT EMPTY))) ((pr3 y) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT cpr3 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT cpr2 f1 part cEMPTY * * part cINSERT cpr3 f1 part cEMPTY cT
- (~ (x = (pr3 y))) |- (((~ ((pr3 y) = x)) ==> (((pr3 y) = x) = F)) = (((pr3 y) = x) = F))
T c==> c~ c= f0 cpr3 f1 c= c==> c~ c= cpr3 f1 f0 c= c= cpr3 f1 f0 cF c= c= cpr3 f1 f0 cF
- ((((((sigma_fan x) V) E) (pr2 y)) (pr3 y)) = x) |- (x = (((((sigma_fan x) V) E) (pr2 y)) (pr3 y)))
T c==> c= csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3 f0 c= f0 csigma_fan f0 f1 f2 cpr2 f3 cpr3 f3
- ((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) |- (((DISJOINT (x INSERT ((pr3 y) INSERT EMPTY))) ((pr2 y) INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT cpr3 f1 part cEMPTY * * part cINSERT cpr2 f1 part cEMPTY cT
- (~ (x = (pr3 y))) |- (((pr3 y) = x) = F)
T c==> c~ c= f0 cpr3 f1 c= c= cpr3 f1 f0 cF
