N PATHSTART_SHIFTPATH
C |- (!a. (!g. (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a)))))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D VECTOR_ADD_RID
A |- (!x. (((vector_add x) (vec (NUMERAL _0))) = x))
T c= cvector_add f0 cvec cNUMERAL c_0 f0
D pathstart
A |- (!g. ((pathstart g) = (g (vec (NUMERAL _0)))))
T c= cpathstart f0 * f0 cvec cNUMERAL c_0
D shiftpath
A |- (!f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))))
T c= * * part cshiftpath f0 f1 / cCOND creal_le cdrop cvector_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 b0 * f1 cvector_add f0 cvector_sub b0 cvec cNUMERAL cBIT1 c_0
- ((real_lt (real_of_num (NUMERAL _0))) c) |- (!g. (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 ! c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0
- ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) /\ ((g ((vector_add a) x)) = (g ((vector_add a) x))))
T c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 * f2 cvector_add f0 f1
+ |- ((\e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e')
T * / c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 f3 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4
- |- (((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((g ((vector_add a) x)) = t')) ==> (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) t') e'))))) = ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((g ((vector_add a) x)) = t')) ==> (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) t') e')))))
T c= c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 f3 c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f4 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c==> c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 f3 c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f4 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f3 f4
+ |- ((~ T) ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))))
T c==> c~ cT c= * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
+ ((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) /\ (((pathstart ((shiftpath a) g)) = (g a)) = T))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 cT
+ |- ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)
T * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- (~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) |- ((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) /\ ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))
T c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\t'. (!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 b0 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b1 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 b0 b1 f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!p'. (!q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 b1 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> b0 b1 * / ! c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 b1 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> b0 b1 f2 * / ! c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 b1 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> b0 b1 f2
+ |- ((!g. t) = t)
T c= ! f0 f0
- |- (((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((g ((vector_add a) x)) = (g ((vector_add a) x))))
T c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 * f2 cvector_add f0 f1
- (~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = F)
T c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ T |- (T /\ ((g ((vector_add a) (vec (NUMERAL _0)))) = (g a)))
T c==> cT c/\ cT c= * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 f1
+ |- (T = (!a. (!g. (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))))))
T c= cT ! ! c==> creal_le cdrop b0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath b0 b1 * b1 b0
- |- (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) e')))
T c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 f3
+ |- (((!f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) ==> ((\f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) f)) = ((\f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) f))
T c= c==> ! ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 * / ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 f0 * / ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 f0
+ |- ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> T))
T c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ (~ T) |- ((~ T) /\ ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))))
T c==> c~ cT c/\ c~ cT c= * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
- T |- (T = T)
T c==> cT c= cT cT
+ |- (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((pathstart ((shiftpath a) g)) = (g a)) = T))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 cT
+ |- (((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((pathstart ((shiftpath a) g)) = (g a)) = T)) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> T))) = ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> T)))
T c= c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 cT c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
- |- (((!g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))) ==> ((\g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))) g)) = ((\g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))) g))
T c= c==> ! c==> clinear / c% f0 b1 c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0 * / c==> clinear / c% f0 b1 c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0 f2 * / c==> clinear / c% f0 b1 c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0 f2
+ ((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 cT
- |- ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))
T c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 f4 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f5 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 f4 f5
- |- (!c. (((real_lt (real_of_num (NUMERAL _0))) c) ==> (!t. (!g. (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 ! ! c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) c) ==> (!t. (!g. (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))) = T)
T c= c==> creal_lt creal_of_num cNUMERAL c_0 f0 ! ! c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1 cT
+ |- (((!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) ==> ((\a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) a)) = ((\a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) a))
T c= c==> ! c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 * / c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 f1 * / c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 f1
+ |- (((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> q')))) = ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> q'))))
T c= c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 f2 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 f2 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2
- |- ((\g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))) g)
T * / c==> clinear / c% f0 b1 c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0 f2
+ |- ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> q')))
T c==> c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= c= cpathstart * * part cshiftpath f0 f1 * f1 f0 f2 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f1 * f1 f0 c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- (((!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) ==> ((\e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 f3 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 * / c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 f3 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4 * / c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 f3 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 f3 b0 f4
+ |- (((!x. (((vector_add x) (vec (NUMERAL _0))) = x)) ==> ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x)) = ((\x. (((vector_add x) (vec (NUMERAL _0))) = x)) x))
T c= c==> ! c= cvector_add b0 cvec cNUMERAL c_0 b0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0 * / c= cvector_add b0 cvec cNUMERAL c_0 b0 f0
- |- ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))
T c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
+ |- ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f1 cvector_add f0 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- ((real_lt (real_of_num (NUMERAL _0))) c) |- (((real_lt (real_of_num (NUMERAL _0))) c) /\ (!t. (!g. (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt creal_of_num cNUMERAL c_0 f0 ! ! c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))
T c==> clinear / c% f0 b0 c= * * part cshiftpath f1 * * part co / c% f0 b0 f2 * * part co / c% f0 b0 * * part cshiftpath f1 f2
- ((real_lt (real_of_num (NUMERAL _0))) c) |- ((!g. (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= ! c= * * part cshiftpath f1 * * part co / c% f0 b1 b0 * * part co / c% f0 b1 * * part cshiftpath f1 b0 cT
+ |- (((T ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = (g a))) ==> (((~ T) ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (g a)) e')))) = (((~ T) ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (g a)) e'))))
T c= c==> c==> cT c= * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 f1 c==> c==> c~ cT c= * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2 c==> c==> c~ cT c= * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 f2 c= cCOND creal_le cdrop cvector_add f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 f2
+ |- ((\a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))) a)
T * / c= * * part cshiftpath b0 f0 / cCOND creal_le cdrop cvector_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add b0 b1 * f0 cvector_add b0 cvector_sub b1 cvec cNUMERAL cBIT1 c_0 f1
+ |- ((\q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q'))))) q')
T * / c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= cpathstart * * part cshiftpath f0 f2 * f2 f0 b0 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f2 * f2 f0 c==> f1 b0 f3
+ |- ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))
T c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= * f2 cvector_add f0 cvec cNUMERAL c_0 f3 c==> c==> c~ f1 c= * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 f4 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvec cNUMERAL c_0 * f2 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND f1 f3 f4
- ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = T)
T c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 cT
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- |- (((!g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f2 cvector_add f0 f1 b1 c==> c==> c~ b0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f2 cvector_add f0 f1 b1 c==> c==> c~ b0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3 * / ! ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f2 cvector_add f0 f1 b1 c==> c==> c~ b0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
- |- ((((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))) = ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
- ((real_lt (real_of_num (NUMERAL _0))) c) |- (((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))) = (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= c==> clinear / c% f0 b0 c= * * part cshiftpath f1 * * part co / c% f0 b0 f2 * * part co / c% f0 b0 * * part cshiftpath f1 f2 c= * * part cshiftpath f1 * * part co / c% f0 b0 f2 * * part co / c% f0 b0 * * part cshiftpath f1 f2
+ |- ((((~ T) ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))))) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (g a)) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))))) = ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (g a)) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))))))
T c= c==> c==> c~ cT c= * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add f1 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f0 f1 * f0 cvector_add f1 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
- |- ((\t. (!g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))) t)
T * / ! c==> clinear / c% f0 b2 c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1 f1
+ |- (T ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = (g a)))
T c==> cT c= * f0 cvector_add f1 cvec cNUMERAL c_0 * f0 f1
+ |- (((!q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q'))))) ==> ((\q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q'))))) q')) = ((\q'. ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= cpathstart * * part cshiftpath f0 f2 * f2 f0 b0 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f2 * f2 f0 c==> f1 b0 * / c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= cpathstart * * part cshiftpath f0 f2 * f2 f0 b0 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f2 * f2 f0 c==> f1 b0 f3 * / c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= cpathstart * * part cshiftpath f0 f2 * f2 f0 b0 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f2 * f2 f0 c==> f1 b0 f3
- ((real_lt (real_of_num (NUMERAL _0))) c) |- ((((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= c= * * part cshiftpath f1 * * part co / c% f0 b0 f2 * * part co / c% f0 b0 * * part cshiftpath f1 f2 cT
- |- ((\e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e')
T * / c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 f4 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f5
+ |- ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) = p') ==> ((p' ==> (((pathstart ((shiftpath a) g)) = (g a)) = q')) ==> ((((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((pathstart ((shiftpath a) g)) = (g a))) = (p' ==> q'))))
T c==> c= creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= cpathstart * * part cshiftpath f0 f2 * f2 f0 f3 c= c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cpathstart * * part cshiftpath f0 f2 * f2 f0 c==> f1 f3
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- |- ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((g ((vector_add a) x)) = t')) ==> (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) t') e'))))
T c==> c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 f3 c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f4 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f3 f4
- |- ((\f. (!t. (!g. ((linear f) ==> (((shiftpath t) (f o g)) = (f o ((shiftpath t) g))))))) (\x. ((% c) x)))
T * / ! ! c==> clinear b0 c= * * part cshiftpath b1 * * part co b0 b2 * * part co b0 * * part cshiftpath b1 b2 / c% f0 b0
+ ((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) (g a)) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT * f1 f0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0
+ |- (((!g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f1 cvector_add f0 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 * / ! ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f1 cvector_add f0 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2 * / ! ! c==> c= creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f1 cvector_add f0 cvec cNUMERAL c_0 b1 c==> c==> c~ b0 c= * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f2
- |- (((!t. (!g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))) ==> ((\t. (!g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))) t)) = ((\t. (!g. ((linear (\x. ((% c) x))) ==> (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))))) t))
T c= c==> ! ! c==> clinear / c% f0 b2 c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1 * / ! c==> clinear / c% f0 b2 c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1 f1 * / ! c==> clinear / c% f0 b2 c= * * part cshiftpath b0 * * part co / c% f0 b2 b1 * * part co / c% f0 b2 * * part cshiftpath b0 b1 f1
- |- ((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))
T c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0
+ |- ((\f. (!a. (((shiftpath a) f) = (\x. (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (f ((vector_add a) x))) (f ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))))))) f)
T * / ! c= * * part cshiftpath b1 b0 / cCOND creal_le cdrop cvector_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * b0 cvector_add b1 b2 * b0 cvector_add b1 cvector_sub b2 cvec cNUMERAL cBIT1 c_0 f0
+ ((real_le (drop a)) (real_of_num (NUMERAL (BIT1 _0)))) |- ((T ==> ((g ((vector_add a) (vec (NUMERAL _0)))) = t')) ==> (((~ T) ==> ((g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) (vec (NUMERAL _0))))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) (vec (NUMERAL _0))))) (g ((vector_add a) ((vector_sub (vec (NUMERAL _0))) (vec (NUMERAL (BIT1 _0))))))) = (((COND T) t') e'))))
T c==> creal_le cdrop f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> cT c= * f1 cvector_add f0 cvec cNUMERAL c_0 f2 c==> c==> c~ cT c= * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add f0 cvec cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * f1 cvector_add f0 cvec cNUMERAL c_0 * f1 cvector_add f0 cvector_sub cvec cNUMERAL c_0 cvec cNUMERAL cBIT1 c_0 cCOND cT f2 f3
- |- (((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((g ((vector_add a) x)) = (g ((vector_add a) x)))) ==> (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) e')))) = (((~ ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) e'))))
T c= c==> c==> creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 f1 * f2 cvector_add f0 f1 c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 f3 c==> c==> c~ creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 f3 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 f3
- |- ((\t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 b0 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b1 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f4
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((real_lt (real_of_num (NUMERAL _0))) c) |- (((shiftpath t) ((\x. ((% c) x)) o g)) = ((\x. ((% c) x)) o ((shiftpath t) g)))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c= * * part cshiftpath f1 * * part co / c% f0 b0 f2 * * part co / c% f0 b0 * * part cshiftpath f1 f2
- |- (((!f. (!t. (!g. ((linear f) ==> (((shiftpath t) (f o g)) = (f o ((shiftpath t) g))))))) ==> ((\f. (!t. (!g. ((linear f) ==> (((shiftpath t) (f o g)) = (f o ((shiftpath t) g))))))) (\x. ((% c) x)))) = ((\f. (!t. (!g. ((linear f) ==> (((shiftpath t) (f o g)) = (f o ((shiftpath t) g))))))) (\x. ((% c) x))))
T c= c==> ! ! ! c==> clinear b0 c= * * part cshiftpath b1 * * part co b0 b2 * * part co b0 * * part cshiftpath b1 b2 * / ! ! c==> clinear b0 c= * * part cshiftpath b1 * * part co b0 b2 * * part co b0 * * part cshiftpath b1 b2 / c% f0 b0 * / ! ! c==> clinear b0 c= * * part cshiftpath b1 * * part co b0 b2 * * part co b0 * * part cshiftpath b1 b2 / c% f0 b0
- |- ((\g'. (!t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= * f2 cvector_add f0 f1 b1 c==> c==> c~ b0 c= * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b2 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f2 cvector_add f0 f1 * f2 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND b0 b1 b2 f3
- |- (((!t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 b0 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b1 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 * / ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 b0 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b1 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f4 * / ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 b0 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b1 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 b0 b1 f4
- |- (((!e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) ==> ((\e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0)))) = g') ==> ((g' ==> ((g ((vector_add a) x)) = t')) ==> (((~ g') ==> ((g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0)))))) = e')) ==> ((((COND ((real_le (drop ((vector_add a) x))) (real_of_num (NUMERAL (BIT1 _0))))) (g ((vector_add a) x))) (g ((vector_add a) ((vector_sub x) (vec (NUMERAL (BIT1 _0))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 f4 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 * / c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 f4 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f5 * / c==> c= creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c==> c==> f2 c= * f3 cvector_add f0 f1 f4 c==> c==> c~ f2 c= * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 b0 c= cCOND creal_le cdrop cvector_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 * f3 cvector_add f0 f1 * f3 cvector_add f0 cvector_sub f1 cvec cNUMERAL cBIT1 c_0 cCOND f2 f4 b0 f5
