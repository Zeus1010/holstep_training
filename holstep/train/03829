N Tskajxy.CONVEX_HULL_SCALE
C |- (!w0. (!w1. (!w2. (!w3. (!w. (!t. (((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) ==> (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))))))))
T c==> c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 f5 cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_LE_MUL
A |- (!x. (!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_EQ_ADD_LCANCEL
A |- (!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))))
T c= c= creal_add f0 f1 creal_add f0 f2 c= f1 f2
D Real_ext.REAL_SV_LMUL_0
A |- (!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0))))
T c= creal_mul creal_of_num cNUMERAL c_0 f0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_MUL_RINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul x) (real_inv x)) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul f0 creal_inv f0 creal_of_num cNUMERAL cBIT1 c_0
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D Planarity.AFF_GE_1_3
A |- (!x. (!v. (!u. (!w. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y))))))))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 cvector_add c% b4 f2 c% b5 f3 b1
D Planarity.notcoplanar_disjoints
A |- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY)))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
D Marchal_cells_2_new.CONVEX_HULL_4
A |- (((hull convex) (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (GSPEC (\GEN%PVAR%6226. (?u. (?v. (?w. (?z. (((SETSPEC GEN%PVAR%6226) (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ((vector_add ((% u) a)) ((vector_add ((% v) b)) ((vector_add ((% w) c)) ((% z) d))))))))))))
T c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / c? / c? / c? / cSETSPEC b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f0 cvector_add c% b2 f1 cvector_add c% b3 f2 c% b4 f3
D Tskajxy.CONVEX_HULL_4_AFF_GE
A |- (!w0. (!w1. (!w2. (!w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- ((?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))) /\ (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> creal_le creal_of_num cNUMERAL c_0 f6 c/\ c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f6 cvector_sub f1 f2 cvector_add c% b0 f2 cvector_add c% b1 f3 cvector_add c% b2 f4 c% b3 f5
+ |- ((\w0. (!w. (!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F))))))))) w0)
T * / ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN b1 * * part chull part cconvex * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b2 c==> cIN cvector_add b0 c% b2 cvector_sub b1 b0 * * part caff_ge * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b6 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 * * part cINSERT b6 * * part cINSERT b4 part cEMPTY * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY * * part cINSERT b4 * * part cINSERT b6 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b5 * * part cINSERT b6 part cEMPTY cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b6 * * part cINSERT b4 part cEMPTY cF f3
+ |- (((?u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))))
T c= c==> c? / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f5 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f5 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4
- ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) |- ((!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 cT c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 * f2 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ |- ((((\u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) u) ==> F) = T)
T c= c==> * / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 cF cT
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
- |- ((!w'. ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w' INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w' INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w' INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w' INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w' INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w' INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w' INSERT (v INSERT EMPTY)))))))))))) = ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ (!w. (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY)))))))))))))
T c= ! c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
+ ((real_le (real_of_num (NUMERAL _0))) t) |- ((((\z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) z) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f1 creal_add f2 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f1 f5 cvector_add c% f2 f6 cvector_add c% f3 f7 c% b0 f8 f9 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub f4 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8 cT
+ ((\z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) z') |- ((((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) ==> F) = F)
T c==> * / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f5 c= c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF cF
+ |- ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)
T * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))), (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) |- ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) /\ F)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY cF
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (_7152890 INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152890 INSERT (_7152888 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8
+ (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) |- ((\x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) x)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 * / ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 f0
+ ((\u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))) u) |- (((?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> * / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 f5 c= c==> c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f5 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f5 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f5 f1 cvector_add c% b0 f2 cvector_add c% b1 f3 c% b2 f4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f6 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f6 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) |- ((coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) /\ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!w. (!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))))))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN b0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b1 c==> cIN cvector_add f0 c% b1 cvector_sub b0 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 * * part cINSERT b5 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b5 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b2 part cEMPTY * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cDISJOINT * * part cINSERT b2 part cEMPTY * * part cINSERT b5 * * part cINSERT b3 part cEMPTY cT
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((\y. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))) y)
T * / c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * f1 cT * f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f2
+ (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) |- (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 cT * b1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0
+ ((real_le (real_of_num (NUMERAL _0))) t) |- (((!x. (((\z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) x) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))) ==> ((?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))) = ((?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> ! c==> * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f1 creal_add f2 creal_add f3 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f1 f5 cvector_add c% f2 f6 cvector_add c% f3 f7 c% b1 f8 b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub f4 f5 cvector_add c% b1 f5 cvector_add c% b2 f6 cvector_add c% b3 f7 c% b4 f8 c==> c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f1 creal_add f2 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f1 f5 cvector_add c% f2 f6 cvector_add c% f3 f7 c% b0 f8 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub f4 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8 c==> c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f1 creal_add f2 creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f1 f5 cvector_add c% f2 f6 cvector_add c% f3 f7 c% b0 f8 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub f4 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8
+ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add ((real_mul t) ((real_mul u) z'))) ((real_add ((real_mul t) ((real_mul v) z'))) ((real_add ((real_mul t) ((real_mul w') z'))) ((real_add ((real_mul t) ((real_mul z) z'))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) z'))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul f4 creal_mul f0 f5 creal_add creal_mul f4 creal_mul f1 f5 creal_add creal_mul f4 creal_mul f2 f5 creal_add creal_mul f4 creal_mul f3 f5 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 f5 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c==> creal_le creal_of_num cNUMERAL c_0 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f7 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((!w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) ==> ((\w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) w3)) = ((\w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) w3))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY f3
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
- |- (~ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))
T c~ c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0
+ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))), (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 f5 c/\ creal_le creal_of_num cNUMERAL c_0 f7 c= creal_add f1 creal_add f3 creal_add f5 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f9 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f9 cvector_sub f0 f2 cvector_add c% b0 f2 cvector_add c% b1 f4 cvector_add c% b2 f6 c% b3 f8
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) |- (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3
+ ((\z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) z) |- ((((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3)))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 f8 c= c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f8 c= creal_add f0 creal_add f1 creal_add f2 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% f8 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f9 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f9 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7
+ ((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z) |- (((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z) /\ F)
T c==> * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f4 c/\ * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f4 cF
+ ((real_le (real_of_num (NUMERAL _0))) t) |- (((!x. (((\w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) x) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))) ==> ((?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))) = ((?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> ! c==> * / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f1 creal_add f2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 cvector_add c% f2 f5 cvector_add c% b1 f6 c% b2 f7 b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub f3 f4 cvector_add c% b1 f4 cvector_add c% b2 f5 cvector_add c% b3 f6 c% b4 f7 c==> c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f1 creal_add f2 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 cvector_add c% f2 f5 cvector_add c% b0 f6 c% b1 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7 c==> c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f1 creal_add f2 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 cvector_add c% f2 f5 cvector_add c% b0 f6 c% b1 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7
+ ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3)))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 c==> creal_le creal_of_num cNUMERAL c_0 f9 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f9 cvector_sub f4 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8
+ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))), ((real_le (real_of_num (NUMERAL _0))) t), (w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) |- F
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> cIN f5 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN cvector_add f0 c% f4 cvector_sub f5 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cF
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((\z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))) z)
T * / c==> c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 f4
+ (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) |- (((!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))) ==> ((\y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))) y)) = ((\y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))) y))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 c= c==> ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 cT * b1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 * / ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 cT * b1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1 * / ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 cT * b1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1
- (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) z)) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) T)) ==> ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f3 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 cT * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) T))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 cT
- ((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) |- (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y))))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f1 cvector_add c% b4 f2 c% b5 f3 b1
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) z)) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) T))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f3 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 cT
+ ((\z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) z') |- ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> * / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 f5 c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((\z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) x) ==> F)) ==> ((?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F)) = ((?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> F))
T c= c==> ! c==> * / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
+ ((real_le (real_of_num (NUMERAL _0))) t) |- (((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3)))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 f4 c= creal_add f1 creal_add f2 creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f1 f6 cvector_add c% f2 f7 cvector_add c% f3 f8 c% f4 f9 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f6 c% f0 cvector_sub f5 f6 cvector_add c% b0 f6 cvector_add c% b1 f7 cvector_add c% b2 f8 c% b3 f9
- ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) |- (T = ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cT cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\w0. (!w1. (!w2. (!w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))))))))) w0)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part chull part cconvex * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b0 part cEMPTY f0
+ ((real_le (real_of_num (NUMERAL _0))) t) |- (!z. (((\z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) z) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 ! c==> * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f1 creal_add f2 creal_add f3 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f1 f5 cvector_add c% f2 f6 cvector_add c% f3 f7 c% b1 f8 b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub f4 f5 cvector_add c% b1 f5 cvector_add c% b2 f6 cvector_add c% b3 f7 c% b4 f8
+ |- ((((\w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) w') ==> F) = T)
T c= c==> * / c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 f2 cF cT
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))), (~ F), (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) |- ((~ F) /\ F)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c==> c~ cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cF cF
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (!w. (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT EMPTY)))) (w INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT (w INSERT EMPTY)))) (_7152888 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (w INSERT (_7152888 INSERT EMPTY)))) (_7152889 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT EMPTY))) (_7152888 INSERT (w INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (w INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (w INSERT (_7152888 INSERT EMPTY))))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY ! c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))))))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ b0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f4 creal_add creal_mul f0 f1 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f4 f6 cvector_add c% f1 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f4 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f2 f8 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ b0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f4 creal_add creal_mul f0 f1 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f4 f6 cvector_add c% f1 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f4 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f2 f8
- (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c==> creal_le creal_of_num cNUMERAL c_0 f8 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f8 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ |- (!t. (((\t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) t) ==> F))
T c==> * / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 f3 cF
+ ((real_le (real_of_num (NUMERAL _0))) t), ((\v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))) v) |- (((\v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))) v) /\ (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c==> * / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f1 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f1 f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f6 f7 c/\ * / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f1 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f1 f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f6 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f0 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN cvector_add f0 c% f4 cvector_sub f5 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY
- (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))), ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) |- (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) /\ (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 cT c/\ c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 cT * f2 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
+ |- (((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F) = F)
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY cF cF
+ |- (((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w'))) = ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w'))))
T c= * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f4 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f1 f6 cvector_add c% f4 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f4 f7 c% creal_mul f0 f2 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f4 * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f4 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f1 f6 cvector_add c% f4 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f4 f7 c% creal_mul f0 f2 f8 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f4
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (!v. (!u. (!w. (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY))))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY ! ! ! c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT b2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b0 part cEMPTY
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- ((?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) /\ (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c==> creal_le creal_of_num cNUMERAL c_0 f8 c/\ c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f0 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% b0 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f8 cvector_sub f3 f4 cvector_add c% b0 f4 cvector_add c% b1 f5 cvector_add c% b2 f6 c% b3 f7
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) ((real_mul u) z')))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) ((real_mul v) z')))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) ((real_mul w') z')))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t) ((real_mul z) z')))) ((real_mul t) z'))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_mul f0 f5 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_mul f1 f5 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_mul f2 f5 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_mul f3 f5 creal_mul f4 f5 creal_of_num cNUMERAL c_0
+ |- (((!u. (!v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> ((\u. (!v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))) u)) = ((\u. (!v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))))) u))
T c= c==> ! ! ! ! ! c==> c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 * / ! ! ! ! c==> c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 f0 * / ! ! ! ! c==> c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (?z'. (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) = (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c? / c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((!w3. (!w2. (!w1. (!w0. (!w. (!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))))))))))))))) = (!w3. (!w2. (!w1. (!w0. (!w. (!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F)))))))))))))
T c= ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN b4 * * part chull part cconvex * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b5 c==> cIN cvector_add b3 c% b5 cvector_sub b4 b3 * * part caff_ge * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY * * part cINSERT b7 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b9 * * part cINSERT b7 part cEMPTY * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY * * part cINSERT b7 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b9 * * part cINSERT b7 part cEMPTY ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> cIN b4 * * part chull part cconvex * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b5 c==> cIN cvector_add b3 c% b5 cvector_sub b4 b3 * * part caff_ge * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY * * part cINSERT b7 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b9 * * part cINSERT b7 part cEMPTY * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b7 * * part cINSERT b8 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 * * part cINSERT b8 part cEMPTY * * part cINSERT b7 * * part cINSERT b9 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b8 * * part cINSERT b9 part cEMPTY cDISJOINT * * part cINSERT b6 part cEMPTY * * part cINSERT b9 * * part cINSERT b7 part cEMPTY cF
- |- ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT EMPTY))) (_7152888 INSERT (_7152890 INSERT EMPTY))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- ((\t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F))))))) t)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b0 c==> cIN cvector_add f0 c% b0 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b2 part cEMPTY cF f5
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- (?t4. (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% t4) w3))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c? / c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% b0 f8
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((\t4. (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% t4) w3)))))))))) ((real_mul t) z))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 * / c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% b0 f8 creal_mul f4 f3
- |- (((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) = F)
T c= c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (!x. (!v. (!u. (!w. ((coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY))))) \/ (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY)))))))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY ! ! ! ! c\/ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add (w0 $ i)) ((lambdai. ((real_mul t) ((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul u) (w0 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul v) (w1 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul w') (w2 $ i))) $ i)) ((lambdai. ((real_mul z) (w3 $ i))) $ i))) $ i))) $ i))) $ i)) (w0 $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_mul t) v)) (w1 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_mul t) w')) (w2 $ i))) $ i)) ((lambdai. ((real_mul ((real_mul t) z)) (w3 $ i))) $ i))) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) $ i) = (((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f1 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f4 c$ f5 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f7 b1 b1 c$ clambda / creal_mul f8 c$ f9 b1 b1 b1 b1 b1 c$ f1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_mul f2 f4 c$ f5 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul creal_mul f2 f6 c$ f7 b1 b1 c$ clambda / creal_mul creal_mul f2 f8 c$ f9 b1 b1 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add f1 c% f2 cvector_sub cvector_add c% f3 f1 cvector_add c% f4 f5 cvector_add c% f6 f7 c% f8 f9 f1 f0 c$ cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_mul f2 f4 f5 cvector_add c% creal_mul f2 f6 f7 c% creal_mul f2 f8 f9 f0
+ ((real_le (real_of_num (NUMERAL _0))) t) |- (!w'. (((\w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) w') ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 ! c==> * / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f1 creal_add f2 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f3 cvector_add c% f1 f4 cvector_add c% f2 f5 cvector_add c% b1 f6 c% b2 f7 b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b1 creal_add b2 creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub f3 f4 cvector_add c% b1 f4 cvector_add c% b2 f5 cvector_add c% b3 f6 c% b4 f7
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))), (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f5 c/\ creal_le creal_of_num cNUMERAL c_0 f7 c= creal_add f1 creal_add f3 creal_add f5 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f9 c==> creal_le creal_of_num cNUMERAL c_0 f3 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f9 cvector_sub f0 f2 cvector_add c% b0 f2 cvector_add c% b1 f4 cvector_add c% b2 f6 c% b3 f8
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) |- ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) /\ ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN cvector_add f0 c% f4 cvector_sub f5 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cIN cvector_add f0 c% f4 cvector_sub f5 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F)))))) ==> ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY cF
+ ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) |- (((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))
T c==> c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 f5 cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 f5 cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))))), (w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 f5 cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (((real_add (w0 $ i)) ((real_mul t) ((real_sub ((real_add ((real_mul u) (w0 $ i))) ((real_add ((real_mul v) (w1 $ i))) ((real_add ((real_mul w') (w2 $ i))) ((real_mul z) (w3 $ i)))))) (w0 $ i)))) = ((real_add ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) ((real_add ((real_mul ((real_mul t) v)) (w1 $ i))) ((real_add ((real_mul ((real_mul t) w')) (w2 $ i))) ((real_mul ((real_mul t) z)) (w3 $ i))))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add c$ f0 f1 creal_mul f2 creal_sub creal_add creal_mul f3 c$ f0 f1 creal_add creal_mul f4 c$ f5 f1 creal_add creal_mul f6 c$ f7 f1 creal_mul f8 c$ f9 f1 c$ f0 f1 creal_add creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_mul f2 f4 c$ f5 f1 creal_add creal_mul creal_mul f2 f6 c$ f7 f1 creal_mul creal_mul f2 f8 c$ f9 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT EMPTY)))) (_7152890 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY)))) (_7152888 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152890 INSERT (_7152888 INSERT EMPTY)))) (_7152889 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT EMPTY))) (_7152888 INSERT (_7152890 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (_7152890 INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152890 INSERT (_7152888 INSERT EMPTY)))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?z. t) = t)
T c= c? / f0 f0
+ |- (((!x. (((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) x) ==> F)) ==> ((?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F)) = ((?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) ==> F))
T c= c==> ! c==> * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- ((!t. (((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((real_le (real_of_num (NUMERAL _0))) t) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))) ==> (((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))) = T)
T c= ! c==> c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le creal_of_num cNUMERAL c_0 b0 cIN cvector_add f0 c% b0 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cIN cvector_add f0 c% b0 cvector_sub f4 f0 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (!u. (((\u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) u) ==> F))
T c==> * / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ |- (((!x. (((\v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) x) ==> F)) ==> ((?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F)) = ((?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c? / c? / c/\ c= creal_add f0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c? / c? / c/\ c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 b4 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c? / c? / c/\ c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 b4 creal_of_num cNUMERAL cBIT1 c_0 cF
+ (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> cIN cvector_add f0 c% f5 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY cF
+ |- (((~ q) = (?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> q)
T c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ |- ((((~ (((real_add (w0 $ i)) ((real_mul t) ((real_sub ((real_add ((real_mul u) (w0 $ i))) ((real_add ((real_mul v) (w1 $ i))) ((real_add ((real_mul w') (w2 $ i))) ((real_mul z) (w3 $ i)))))) (w0 $ i)))) = ((real_add ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) ((real_add ((real_mul ((real_mul t) v)) (w1 $ i))) ((real_add ((real_mul ((real_mul t) w')) (w2 $ i))) ((real_mul ((real_mul t) z)) (w3 $ i))))))) ==> F) ==> (((real_add (w0 $ i)) ((real_mul t) ((real_sub ((real_add ((real_mul u) (w0 $ i))) ((real_add ((real_mul v) (w1 $ i))) ((real_add ((real_mul w') (w2 $ i))) ((real_mul z) (w3 $ i)))))) (w0 $ i)))) = ((real_add ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) ((real_add ((real_mul ((real_mul t) v)) (w1 $ i))) ((real_add ((real_mul ((real_mul t) w')) (w2 $ i))) ((real_mul ((real_mul t) z)) (w3 $ i))))))) = (((real_add (w0 $ i)) ((real_mul t) ((real_sub ((real_add ((real_mul u) (w0 $ i))) ((real_add ((real_mul v) (w1 $ i))) ((real_add ((real_mul w') (w2 $ i))) ((real_mul z) (w3 $ i)))))) (w0 $ i)))) = ((real_add ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) ((real_add ((real_mul ((real_mul t) v)) (w1 $ i))) ((real_add ((real_mul ((real_mul t) w')) (w2 $ i))) ((real_mul ((real_mul t) z)) (w3 $ i)))))))
T c= c==> c==> c~ c= creal_add c$ f0 f1 creal_mul f2 creal_sub creal_add creal_mul f3 c$ f0 f1 creal_add creal_mul f4 c$ f5 f1 creal_add creal_mul f6 c$ f7 f1 creal_mul f8 c$ f9 f1 c$ f0 f1 creal_add creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_mul f2 f4 c$ f5 f1 creal_add creal_mul creal_mul f2 f6 c$ f7 f1 creal_mul creal_mul f2 f8 c$ f9 f1 cF c= creal_add c$ f0 f1 creal_mul f2 creal_sub creal_add creal_mul f3 c$ f0 f1 creal_add creal_mul f4 c$ f5 f1 creal_add creal_mul f6 c$ f7 f1 creal_mul f8 c$ f9 f1 c$ f0 f1 creal_add creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_mul f2 f4 c$ f5 f1 creal_add creal_mul creal_mul f2 f6 c$ f7 f1 creal_mul creal_mul f2 f8 c$ f9 f1 c= creal_add c$ f0 f1 creal_mul f2 creal_sub creal_add creal_mul f3 c$ f0 f1 creal_add creal_mul f4 c$ f5 f1 creal_add creal_mul f6 c$ f7 f1 creal_mul f8 c$ f9 f1 c$ f0 f1 creal_add creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f0 f1 creal_add creal_mul creal_mul f2 f4 c$ f5 f1 creal_add creal_mul creal_mul f2 f6 c$ f7 f1 creal_mul creal_mul f2 f8 c$ f9 f1
+ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))), (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0))))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c= f0 cvector_add c% f1 f2 cvector_add c% f3 f4 cvector_add c% f5 f6 c% f7 f8 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f7 c= creal_add f1 creal_add f3 creal_add f5 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f9 c==> creal_le creal_of_num cNUMERAL c_0 f3 c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> creal_le creal_of_num cNUMERAL c_0 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f9 cvector_sub f0 f2 cvector_add c% b0 f2 cvector_add c% b1 f4 cvector_add c% b2 f6 c% b3 f8
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ |- ((\t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0))))))) t)
T * / ! c==> c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 f3
- (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))), ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) |- ((!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) /\ (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 cT c/\ ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 * f2 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
+ |- (!z. (((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F))
T c==> * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f4 cF
- (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))) /\ F)
T c==> c? / c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)
T * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
+ |- ((\w1. (!w2. (!w3. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))))) w1)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 part cEMPTY f1
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2
+ |- (((!x. (((\t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) x) ==> F)) ==> ((?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F)) = ((?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> F))
T c= c==> ! c==> * / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 f2 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 b3 creal_of_num cNUMERAL cBIT1 c_0 b0 cF c==> c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
- (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ F)
T c==> c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b1 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b0 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b0 f1 creal_add creal_mul b0 f2 creal_mul b0 b1 creal_of_num cNUMERAL cBIT1 c_0 b2 creal_of_num cNUMERAL cBIT1 c_0 cF
+ |- (!b. (!c. ((b = c) ==> (!P. ((P c) ==> (P b))))))
T c==> c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (T /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ cT c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8
+ (~ (P b)), (P c), (b = c) |- ((~ (P b)) /\ F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ * f0 f1 cF
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((real_le (real_of_num (NUMERAL _0))) t) |- ((((\v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))) v) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> * / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f1 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f1 f3 cvector_add c% b0 f4 cvector_add c% b1 f5 c% b2 f6 f7 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f0 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6 cT
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((?t4. (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% t4) w3)))))))))) = ((\t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))) ((real_mul t) w')))
T c= c? / c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub cvector_add c% f3 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% f7 f8 f4 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f4 cvector_add c% creal_mul f0 f1 f5 cvector_add c% creal_mul f0 f2 f6 c% b0 f8 * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f4 c% f0 cvector_sub cvector_add c% f3 f4 cvector_add c% f1 f5 cvector_add c% f2 f6 c% f7 f8 f4 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f4 cvector_add c% creal_mul f0 f1 f5 cvector_add c% b0 f6 c% b1 f8 creal_mul f0 f2
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
+ |- ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))
T c==> c==> f0 c= f1 f2 ! c==> c/\ f0 * b0 f2 * b0 f1
+ (b = c) |- ((b = c) /\ (!P. ((P c) ==> (P b))))
T c==> c= f0 f1 c/\ c= f0 f1 ! c==> * b0 f1 * b0 f0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((\t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))) ((real_mul t) w'))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% b0 f7 c% b1 f8 creal_mul f4 f2
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (_7152890 INSERT EMPTY))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3)))))), (((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 f3 c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f9 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f9 cvector_sub f4 f5 cvector_add c% b0 f5 cvector_add c% b1 f6 cvector_add c% b2 f7 c% b3 f8
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) ==> F) ==> (((~ q) = (?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> q)) = (((~ q) = (?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))))) ==> q))
T c= c==> c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 cF c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c~ f0 c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- ((((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z) ==> F) = T)
T c= c==> * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f4 cF cT
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add (w0 $ i)) ((lambdai. ((real_mul t) ((lambdai. ((real_sub ((lambdai. ((real_add ((lambdai. ((real_mul u) (w0 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul v) (w1 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul w') (w2 $ i))) $ i)) ((lambdai. ((real_mul z) (w3 $ i))) $ i))) $ i))) $ i))) $ i)) (w0 $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) (w0 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_mul t) v)) (w1 $ i))) $ i)) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_mul t) w')) (w2 $ i))) $ i)) ((lambdai. ((real_mul ((real_mul t) z)) (w3 $ i))) $ i))) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ f1 b0 c$ clambda / creal_mul f2 c$ clambda / creal_sub c$ clambda / creal_add c$ clambda / creal_mul f3 c$ f1 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f4 c$ f5 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul f6 c$ f7 b1 b1 c$ clambda / creal_mul f8 c$ f9 b1 b1 b1 b1 b1 c$ f1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f2 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 c$ f1 b1 b0 c$ clambda / creal_add c$ clambda / creal_mul creal_mul f2 f4 c$ f5 b1 b1 c$ clambda / creal_add c$ clambda / creal_mul creal_mul f2 f6 c$ f7 b1 b1 c$ clambda / creal_mul creal_mul f2 f8 c$ f9 b1 b1 b1 b0 f0
+ |- ((!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> (~ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY)))))))))))))))))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f4 * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b0 c==> cIN cvector_add f0 c% b0 cvector_sub f4 f0 * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b4 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cDISJOINT * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b2 part cEMPTY cT
+ (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) |- (!x. (!y. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * f0 cT * f0 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1
+ |- ((!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))) = T)
T c= ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * b0 cT * b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 cT
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
+ ((real_le (real_of_num (NUMERAL _0))) t) |- ((((\u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))) u) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = T)
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c= c==> * / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% b0 f2 cvector_add c% b1 f3 cvector_add c% b2 f4 c% b3 f5 f6 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f0 cvector_sub f1 f2 cvector_add c% b0 f2 cvector_add c% b1 f3 cvector_add c% b2 f4 c% b3 f5 cT
+ |- ((!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))))) = T)
T c= ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * b1 cT * b1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 cT
+ ((\w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) w') |- (((?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w') /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))))) ==> (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) = (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> * / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 f7 c= c==> c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 f7 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c= creal_add f0 creal_add f1 creal_add f7 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% f7 f5 c% b0 f6 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f8 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f8 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6
- |- ((!w'. ((coplanar (x INSERT (v INSERT (u INSERT (w' INSERT EMPTY))))) \/ (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY)))))))))))) = ((!w. (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) \/ (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))
T c= ! c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c\/ ! ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) |- (((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z')) = ((real_add (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_add creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) ==> ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y)) = ((\y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z)))) y))
T c= c==> ! ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1 * / ! c= c= creal_add f0 b0 creal_add f0 b1 c= b0 b1 f1
+ (P c), (b = c) |- ((~ (P b)) ==> F)
T c==> * f0 f1 c==> c= f2 f1 c==> c~ * f0 f2 cF
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY)))) \/ (coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (P b)), (b = c) |- (~ (P c))
T c==> c~ * f0 f1 c==> c= f1 f2 c~ * f0 f2
- (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) |- ((?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) /\ F)
T c==> c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) ==> ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x)) = ((\x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t)))) x))
T c= c==> ! c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2 * / c= cIN b0 * * part cINTER f0 f1 c/\ cIN b0 f0 cIN b0 f1 f2
- |- (T = (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) = (((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY)))) \/ (coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))))))
T c= cT c= c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))) y))))) = (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c= cIN cvector_add f0 c% f1 cvector_sub f2 f0 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b2 creal_add b3 creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 cvector_add c% b3 f3 cvector_add c% b4 f4 c% b5 f5 b1 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f0 c% f1 cvector_sub f2 f0 cvector_add c% b0 f0 cvector_add c% b1 f3 cvector_add c% b2 f4 c% b3 f5
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) T)) ==> ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w'))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c= c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f2 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 cT * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2
+ |- ((\w2. (!w1. (!w0. (!w. (!t. ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) ==> (((real_le (real_of_num (NUMERAL _0))) t) ==> ((((vector_add w0) ((% t) ((vector_sub w) w0))) IN ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY))) ==> ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) ==> F))))))))))) w2)
T * / ! ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> cIN b3 * * part chull part cconvex * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> creal_le creal_of_num cNUMERAL c_0 b4 c==> cIN cvector_add b2 c% b4 cvector_sub b3 b2 * * part caff_ge * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY c==> c~ cDISJOINT * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY * * part cINSERT b6 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 * * part cINSERT b8 * * part cINSERT b6 part cEMPTY * * part cINSERT b7 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 part cEMPTY * * part cINSERT b6 * * part cINSERT b7 * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 * * part cINSERT b7 part cEMPTY * * part cINSERT b6 * * part cINSERT b8 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 part cEMPTY * * part cINSERT b6 * * part cINSERT b7 part cEMPTY c/\ cDISJOINT * * part cINSERT b5 part cEMPTY * * part cINSERT b7 * * part cINSERT b8 part cEMPTY cDISJOINT * * part cINSERT b5 part cEMPTY * * part cINSERT b8 * * part cINSERT b6 part cEMPTY cF f1
+ |- ((!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))) = ((!b. (!c. ((T ==> (b = c)) ==> (!P. ((T /\ (P c)) ==> (P b)))))) /\ (!b. (!c. ((F ==> (b = c)) ==> (!P. ((F /\ (P c)) ==> (P b))))))))
T c= ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ ! ! c==> c==> cT c= b0 b1 ! c==> c/\ cT * b2 b1 * b2 b0 ! ! c==> c==> cF c= b0 b1 ! c==> c/\ cF * b2 b1 * b2 b0
+ ((\z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) z) |- (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> * / c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 b0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 b0 creal_of_num cNUMERAL cBIT1 c_0 b1 creal_of_num cNUMERAL cBIT1 c_0 f4 c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f3 f1 creal_add creal_mul f3 f2 creal_mul f3 f4 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ |- (((!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))) ==> ((\w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))) w')) = ((\w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))))))) w'))
T c= c==> ! ! ! c==> c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 * / ! ! c==> c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 f2 * / ! ! c==> c= creal_add f0 creal_add f1 creal_add b0 b2 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b1 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b1 f1 creal_add creal_mul b1 b0 creal_mul b1 b2 creal_of_num cNUMERAL cBIT1 c_0 f2
+ |- (((\x. ((\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v))) = ((\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v))))
T c= * / * / c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f4 creal_add creal_mul f0 f1 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f4 f6 cvector_add c% f1 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f4 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f2 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f4 * / c/\ b0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f4 creal_add creal_mul f0 f1 creal_mul f0 f2 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f3 f5 cvector_add c% f4 f6 cvector_add c% f1 f7 c% f2 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f3 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f4 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f2 f8 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f4
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))
T c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 * f2 cT * f2 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
- |- ((!w. ((P w) \/ Q)) = ((!w. (P w)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- (((~ (P b)) ==> F) = (P b))
T c= c==> c~ * f0 f1 cF * f0 f1
+ |- (((!v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((\v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) v)) = ((\v. (!w'. (!t. (!z. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0))))))))) v))
T c= c==> ! ! ! ! c==> c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 * / ! ! ! c==> c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 f1 * / ! ! ! c==> c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 f1
+ (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((\u. (!w. (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152888 INSERT (u INSERT EMPTY)))) (w INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (u INSERT (w INSERT EMPTY)))) (_7152888 INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (w INSERT (_7152888 INSERT EMPTY)))) (u INSERT EMPTY))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (u INSERT EMPTY))) (_7152888 INSERT (w INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (u INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (u INSERT (w INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (w INSERT (_7152888 INSERT EMPTY))))))))))))) _7152889)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * / ! c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f1 part cEMPTY f2
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ ((\x. ((\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) T))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 * / * / c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8 b0 cT
+ |- (((!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) ==> ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t)) = ((\t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))) t))
T c= c==> ! ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1 * / ! c= cIN b1 * * part cINTER f0 b0 c/\ cIN b1 f0 cIN b1 b0 f1
+ |- ((!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) ==> (!P. (!x. (!y. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))))
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b1 creal_le creal_of_num cNUMERAL c_0 b2 * b0 cT * b0 creal_le creal_of_num cNUMERAL c_0 creal_mul b1 b2
+ |- (((!x. (!v. (!u. (!w. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y)))))))))) ==> ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y)))))))))) x)) = ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y)))))))))) x))
T c= c==> ! ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b7 c/\ creal_le creal_of_num cNUMERAL c_0 b8 c/\ creal_le creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 * / ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b7 c/\ creal_le creal_of_num cNUMERAL c_0 b8 c/\ creal_le creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0 * / ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b7 c/\ creal_le creal_of_num cNUMERAL c_0 b8 c/\ creal_le creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8
- (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) |- ((?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c/\ c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 b4 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c/\ c= creal_add f0 creal_add b0 creal_add b1 b3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b2 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b2 b0 creal_add creal_mul b2 b1 creal_mul b2 b3 creal_of_num cNUMERAL cBIT1 c_0 b4 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((\x. (!v. (!u. (!w. (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) = (GSPEC (\GEN%PVAR%5614. (?y. (((SETSPEC GEN%PVAR%5614) (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((vector_add ((% t2) v)) ((vector_add ((% t3) u)) ((% t4) w)))))))))))))) y)))))))))) x)
T * / ! ! ! c==> cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * part cGSPEC / c? / cSETSPEC b4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b7 c/\ creal_le creal_of_num cNUMERAL c_0 b8 c/\ creal_le creal_of_num cNUMERAL c_0 b9 c/\ c= creal_add b6 creal_add b7 creal_add b8 b9 creal_of_num cNUMERAL cBIT1 c_0 c= b5 cvector_add c% b6 b0 cvector_add c% b7 b1 cvector_add c% b8 b2 c% b9 b3 b5 f0
+ (((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_le (real_of_num (NUMERAL _0))) t), ((real_le (real_of_num (NUMERAL _0))) v), ((real_le (real_of_num (NUMERAL _0))) w'), ((real_le (real_of_num (NUMERAL _0))) z) |- ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (T /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))))
T c==> c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_le creal_of_num cNUMERAL c_0 f1 c==> creal_le creal_of_num cNUMERAL c_0 f2 c==> creal_le creal_of_num cNUMERAL c_0 f3 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f4 creal_le creal_of_num cNUMERAL c_0 f1 c/\ cT c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f4 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f4 cvector_sub cvector_add c% f0 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f4 f1 f6 cvector_add c% creal_mul f4 f2 f7 c% creal_mul f4 f3 f8
- |- (((((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) = F) ==> (~ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))) = (~ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> c= c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c~ c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c~ c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) ==> ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y)) = ((\y. ((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) ==> ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y)))) y))
T c= c==> ! c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1 * / c==> c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!x. (!y. (!P. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))))) |- ((!y. (((((real_le (real_of_num (NUMERAL _0))) x) /\ ((real_le (real_of_num (NUMERAL _0))) y)) /\ (P T)) ==> (P ((real_le (real_of_num (NUMERAL _0))) ((real_mul x) y))))) = T)
T c==> ! ! ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 creal_le creal_of_num cNUMERAL c_0 b1 * b2 cT * b2 creal_le creal_of_num cNUMERAL c_0 creal_mul b0 b1 c= ! c==> c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 b0 * f1 cT * f1 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 b0 cT
- ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) |- (((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (?u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- ((?u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))) /\ (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> c? / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> creal_le creal_of_num cNUMERAL c_0 f5 c/\ c? / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f5 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- |- ((!x. (!y. (!z. ((((real_add x) y) = ((real_add x) z)) = (y = z))))) /\ (!w. (!x. (!y. (!z. ((((real_add ((real_mul w) y)) ((real_mul x) z)) = ((real_add ((real_mul w) z)) ((real_mul x) y))) = ((w = x) \/ (y = z))))))))
T c/\ ! ! ! c= c= creal_add b0 b1 creal_add b0 b2 c= b1 b2 ! ! ! ! c= c= creal_add creal_mul b0 b2 creal_mul b1 b3 creal_add creal_mul b0 b3 creal_mul b1 b2 c\/ c= b0 b1 c= b2 b3
- |- ((x = x) = T)
T c= c= f0 f0 cT
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY)))) (_7152888 INSERT EMPTY)))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT EMPTY)))) (_7152890 INSERT EMPTY)))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152889 INSERT EMPTY))) (_7152888 INSERT (_7152890 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT EMPTY)))) /\ (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (_7152890 INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152890 INSERT (_7152888 INSERT EMPTY)))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152890 INSERT (_7152888 INSERT EMPTY))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))) = ((\x. ((\v. (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) v))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f2 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f2 f7 c% creal_mul f0 f3 f8 * / * / c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f2 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f2 f7 c% creal_mul f0 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f1
- |- ((p ==> (~ p)) = (~ p))
T c= c==> f0 c~ f0 c~ f0
- (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3))))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c= creal_add f0 creal_add b0 creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 cvector_add c% b0 f3 cvector_add c% b1 f4 c% b2 f5 c==> creal_le creal_of_num cNUMERAL c_0 f6 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f2 c% f6 cvector_sub f1 f2 cvector_add c% b0 f2 cvector_add c% b1 f3 cvector_add c% b2 f4 c% b3 f5
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))), (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) |- ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) /\ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) |- ((?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) /\ F)
T c==> c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 b0 creal_of_num cNUMERAL cBIT1 c_0 cF
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))), (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))), (~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) |- ((~ F) ==> F)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))), (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((~ ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) ==> ((DISJOINT (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- (((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152889 INSERT (_7152890 INSERT EMPTY)))) /\ ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152890 INSERT (_7152888 INSERT EMPTY)))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c/\ c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- |- (((~ ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) = F)) = (((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))) = F))
T c= c==> c~ c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 c= c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF c= c/\ c= creal_add f0 creal_add f1 creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_sub f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f4 f1 creal_add creal_mul f4 f2 creal_mul f4 f3 creal_of_num cNUMERAL cBIT1 c_0 f5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((!w. (P \/ (Q w))) = (P \/ (!w. (Q w))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- ((?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))) /\ (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3))))))))))))))
T c==> c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c==> creal_le creal_of_num cNUMERAL c_0 f7 c/\ c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 c/\ creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c= creal_add f0 creal_add f1 creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f2 cvector_add c% f0 f3 cvector_add c% f1 f4 cvector_add c% b0 f5 c% b1 f6 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f3 c% f7 cvector_sub f2 f3 cvector_add c% b0 f3 cvector_add c% b1 f4 cvector_add c% b2 f5 c% b3 f6
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((w IN ((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) = T)
T c==> cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= cIN f0 * * part chull part cconvex * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
- |- (((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) w')) /\ ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f2 creal_add creal_mul f0 f1 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f2 f6 cvector_add c% f1 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f2 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f3 f8 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f2 c/\ b1 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f2 creal_add creal_mul f0 f1 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f2 f6 cvector_add c% f1 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f2 f6 cvector_add c% creal_mul f0 f1 f7 c% creal_mul f0 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) |- ((?u. (?v. (?w'. (?t. (?z. (?z'. ((((real_add u) ((real_add v) ((real_add w') z))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((real_mul ((real_sub ((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z))))) (real_of_num (NUMERAL (BIT1 _0))))) z') = (real_of_num (NUMERAL (BIT1 _0))))))))))) /\ F)
T c==> c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 c/\ c? / c? / c? / c? / c? / c? / c/\ c= creal_add b0 creal_add b1 creal_add b2 b4 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_sub creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul b3 creal_sub b0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul b3 b1 creal_add creal_mul b3 b2 creal_mul b3 b4 creal_of_num cNUMERAL cBIT1 c_0 b5 creal_of_num cNUMERAL cBIT1 c_0 cF
- |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- ((~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) /\ (((hull convex) (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY))))) = (((aff_ge (w0 INSERT EMPTY)) (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) INTER ((aff_ge (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))) (w0 INSERT EMPTY)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part chull part cconvex * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT (_7152890 INSERT (_7152888 INSERT EMPTY)))) (_7152889 INSERT EMPTY)))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- |- (((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w')) /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3))))))))) = ((\x. ((\v. ((((real_le (real_of_num (NUMERAL _0))) t) /\ ((real_le (real_of_num (NUMERAL _0))) v)) /\ (v /\ (((real_le (real_of_num (NUMERAL _0))) ((real_mul t) z)) /\ ((((real_add ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) ((real_add ((real_mul t) v)) ((real_add ((real_mul t) w')) ((real_mul t) z)))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w') w2)) ((% z) w3))))) w0))) = ((vector_add ((% ((real_add (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul t) ((real_sub u) (real_of_num (NUMERAL (BIT1 _0))))))) w0)) ((vector_add ((% ((real_mul t) v)) w1)) ((vector_add ((% ((real_mul t) w')) w2)) ((% ((real_mul t) z)) w3)))))))))) x)) ((real_le (real_of_num (NUMERAL _0))) ((real_mul t) w'))))
T c= c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f2 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f2 f7 c% creal_mul f0 f3 f8 * / * / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f0 creal_le creal_of_num cNUMERAL c_0 f1 c/\ b1 c/\ creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f3 c/\ c= creal_add creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 f1 creal_add creal_mul f0 f2 creal_mul f0 f3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f5 c% f0 cvector_sub cvector_add c% f4 f5 cvector_add c% f1 f6 cvector_add c% f2 f7 c% f3 f8 f5 cvector_add c% creal_add creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_sub f4 creal_of_num cNUMERAL cBIT1 c_0 f5 cvector_add c% creal_mul f0 f1 f6 cvector_add c% creal_mul f0 f2 f7 c% creal_mul f0 f3 f8 b0 creal_le creal_of_num cNUMERAL c_0 creal_mul f0 f2
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= c= creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))) |- (T = (~ (coplanar (w0 INSERT (w1 INSERT (w2 INSERT (w3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cT c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!x. (!v. (!u. (!w. ((~ (coplanar (x INSERT (v INSERT (u INSERT (w INSERT EMPTY)))))) ==> (((DISJOINT (x INSERT (v INSERT (u INSERT EMPTY)))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT (w INSERT EMPTY)))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT (v INSERT EMPTY)))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT (w INSERT EMPTY)))) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT (w INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))))))))))))))) |- ((coplanar (_7152887 INSERT (_7152888 INSERT (_7152889 INSERT (_7152890 INSERT EMPTY))))) \/ ((DISJOINT (_7152887 INSERT EMPTY)) (_7152888 INSERT (_7152889 INSERT EMPTY))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b1 part cEMPTY c\/ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
- (?u. (?v. (?w. (?z. ((((real_le (real_of_num (NUMERAL _0))) u) /\ (((real_le (real_of_num (NUMERAL _0))) v) /\ (((real_le (real_of_num (NUMERAL _0))) w) /\ (((real_le (real_of_num (NUMERAL _0))) z) /\ (((real_add u) ((real_add v) ((real_add w) z))) = (real_of_num (NUMERAL (BIT1 _0)))))))) /\ (w = ((vector_add ((% u) w0)) ((vector_add ((% v) w1)) ((vector_add ((% w) w2)) ((% z) w3)))))))))), ((real_le (real_of_num (NUMERAL _0))) t) |- (?t1. (?t2. (?t3. (?t4. (((real_le (real_of_num (NUMERAL _0))) t2) /\ (((real_le (real_of_num (NUMERAL _0))) t3) /\ (((real_le (real_of_num (NUMERAL _0))) t4) /\ ((((real_add t1) ((real_add t2) ((real_add t3) t4))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (((vector_add w0) ((% t) ((vector_sub w) w0))) = ((vector_add ((% t1) w0)) ((vector_add ((% t2) w1)) ((vector_add ((% t3) w2)) ((% t4) w3)))))))))))))
T c==> c? / c? / c? / c? / c/\ c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4 c==> creal_le creal_of_num cNUMERAL c_0 f5 c? / c? / c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b0 creal_add b1 creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= cvector_add f1 c% f5 cvector_sub f0 f1 cvector_add c% b0 f1 cvector_add c% b1 f2 cvector_add c% b2 f3 c% b3 f4
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
