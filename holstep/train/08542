N Local_lemmas1.AFF_SUB_PLANE
C |- (((plane P) /\ (S SUBSET P)) ==> ((aff S) SUBSET P))
T c==> c/\ cplane f0 cSUBSET f1 f0 cSUBSET * part caff f1 f0
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D HULL_MINIMAL
A |- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t)))))
T c==> c/\ cSUBSET f0 f1 * f2 f1 cSUBSET * * part chull f2 f0 f1
D AFFINE_AFFINE_HULL
A |- (!s. (affine ((hull affine) s)))
T caffine * * part chull part caffine f0
D Sphere.aff
A |- (aff = (hull affine))
T c= part caff * part chull part caffine
D Sphere.plane
A |- (!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))))))
T c= cplane f0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) |- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) /\ F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c/\ c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 cF
+ ((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) w) |- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))
T c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 f4 c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2
+ |- ((!S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> (~ (!s. (affine ((hull affine) s))))))) = T)
T c= ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET b0 f0 cSUBSET * * part chull part caffine b0 f0 c==> ! ! ! c==> c/\ cSUBSET b2 b3 * b1 b3 cSUBSET * * part chull b1 b2 b3 c~ ! caffine * * part chull part caffine b1 cT
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (((~ ((I ((I SUBSET) _6522130)) _6522131)) \/ ((~ ((I _6522129) _6522131)) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) _6522131))) = ((~ ((I ((I SUBSET) _6522130)) _6522131)) \/ ((~ ((I _6522129) _6522131)) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) _6522131))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c= c\/ c~ cI * * part cI part cSUBSET f5 f6 c\/ c~ cI f7 f6 cI * * part cI part cSUBSET * * part cI * * part cI part chull f7 f5 f6 c\/ c~ cI * * part cI part cSUBSET f5 f6 c\/ c~ cI f7 f6 cI * * part cI part cSUBSET * * part cI * * part cI part chull f7 f5 f6
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), ((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) v) |- (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) v) /\ F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 f3 c/\ * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 f3 cF
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))) |- (((!x. (((\w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) x) ==> F)) ==> ((?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) ==> F)) = ((?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) ==> F))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c= c==> ! c==> * / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 b0 cF c==> c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 cF c==> c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 cF
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (~ ((I ((I SUBSET) ((I ((I hull) affine)) S))) P))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c~ cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f4 f3
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ F) ==> F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c==> c~ cF cF
- |- ((?w. (P w)) = ((P T) \/ (P F)))
T c= c? / * f0 b0 c\/ * f0 cT * f0 cF
+ |- ((\P. (!S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))) P)
T * / ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET b1 b0 cSUBSET * * part chull part caffine b1 b0 c==> ! ! ! c==> c/\ cSUBSET b3 b4 * b2 b4 cSUBSET * * part chull b2 b3 b4 c==> ! caffine * * part chull part caffine b2 cF f0
+ |- (((?w. (P w)) /\ Q) = (?w. ((P w) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) |- ((\t. (((~ ((I ((I SUBSET) _6522130)) t)) \/ (~ ((I _6522129) t))) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) t))) _6522131)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 * / c\/ c\/ c~ cI * * part cI part cSUBSET f0 b0 c~ cI f1 b0 cI * * part cI part cSUBSET * * part cI * * part cI part chull f1 f0 b0 f2
+ ((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))))) u) |- (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))))
T c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 c~ cSUBSET * * part chull part caffine f1 f0 f2 c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f1 f0 c~ cSUBSET * * part chull part caffine f1 f0
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) /\ ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c/\ c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- (((?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P))) /\ (~ (((hull affine) S) SUBSET P))) = (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))))
T c= c/\ c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2
- |- ((!t. t) = t)
T c= ! f0 f0
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))), (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) /\ ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c/\ c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- (((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) ==> (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))) = (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))))
T c= c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) |- (((!t. (((~ ((I ((I SUBSET) _6522130)) t)) \/ (~ ((I _6522129) t))) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) t))) ==> ((\t. (((~ ((I ((I SUBSET) _6522130)) t)) \/ (~ ((I _6522129) t))) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) t))) _6522131)) = ((\t. (((~ ((I ((I SUBSET) _6522130)) t)) \/ (~ ((I _6522129) t))) \/ ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) t))) _6522131))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c= c==> ! c\/ c\/ c~ cI * * part cI part cSUBSET f0 b0 c~ cI f1 b0 cI * * part cI part cSUBSET * * part cI * * part cI part chull f1 f0 b0 * / c\/ c\/ c~ cI * * part cI part cSUBSET f0 b0 c~ cI f1 b0 cI * * part cI part cSUBSET * * part cI * * part cI part chull f1 f0 b0 f2 * / c\/ c\/ c~ cI * * part cI part cSUBSET f0 b0 c~ cI f1 b0 cI * * part cI part cSUBSET * * part cI * * part cI part chull f1 f0 b0 f2
+ (!s. (affine ((hull affine) s))) |- ((I affine) ((I ((I hull) affine)) _6522132))
T c==> ! caffine * * part chull part caffine b0 cI part caffine * * part cI * * part cI part chull part caffine f0
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (((?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) /\ (S SUBSET P)) = (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P))))
T c= c/\ c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?w. t) = t)
T c= c? / f0 f0
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))) ==> F)
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c==> cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cF
- |- ((!t'. (((~ (s SUBSET t')) \/ (~ (P t'))) \/ (((hull P) s) SUBSET t))) = ((!t. ((~ (s SUBSET t)) \/ (~ (P t)))) \/ (((hull P) s) SUBSET t)))
T c= ! c\/ c\/ c~ cSUBSET f0 b0 c~ * f1 b0 cSUBSET * * part chull f1 f0 f2 c\/ ! c\/ c~ cSUBSET f0 b0 c~ * f1 b0 cSUBSET * * part chull f1 f0 f2
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) |- ((((I ((I SUBSET) _6522130)) _6522131) /\ ((I _6522129) _6522131)) ==> ((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) _6522131))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> c/\ cI * * part cI part cSUBSET f0 f1 cI f2 f1 cI * * part cI part cSUBSET * * part cI * * part cI part chull f2 f0 f1
+ |- (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) = (?u. ((?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))) /\ (S SUBSET P))))
T c= c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 c? / c/\ c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) |- (?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))))
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 c~ cSUBSET * * part chull part caffine f1 f0
+ ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (((~ ((I collinear) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))) /\ (P = ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) /\ ((I ((I SUBSET) S)) P))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c/\ c/\ c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c= f3 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI part cSUBSET f4 f3
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) |- (((?u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))))) ==> F) = F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c= c==> c? / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 c~ cSUBSET * * part chull part caffine f1 f0 cF cF
+ |- (((?v. (?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)))) /\ (~ (((hull affine) S) SUBSET P))) = (?v. ((?w. (((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P))) /\ (~ (((hull affine) S) SUBSET P)))))
T c= c/\ c? / c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 c? / c/\ c? / c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1
+ (~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) |- ((!s. (affine ((hull affine) s))) ==> F)
T c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! caffine * * part chull part caffine b0 cF
+ |- ((!P. (!S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> (~ (!s. (affine ((hull affine) s)))))))) = (!P. (!S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))))
T c= ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET b1 b0 cSUBSET * * part chull part caffine b1 b0 c==> ! ! ! c==> c/\ cSUBSET b3 b4 * b2 b4 cSUBSET * * part chull b2 b3 b4 c~ ! caffine * * part chull part caffine b2 ! ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cSUBSET b1 b0 cSUBSET * * part chull part caffine b1 b0 c==> ! ! ! c==> c/\ cSUBSET b3 b4 * b2 b4 cSUBSET * * part chull b2 b3 b4 c==> ! caffine * * part chull part caffine b2 cF
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))) |- (((\u. (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))))) u) ==> F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> * / c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 c~ cSUBSET * * part chull part caffine f1 f0 f2 cF
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), (~ F), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ F) /\ F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c~ cF c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c/\ c~ cF cF
+ |- (((!S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) ==> ((\S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) S)) = ((\S. ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) S))
T c= c==> ! c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET b0 f0 cSUBSET * * part chull part caffine b0 f0 c==> ! ! ! c==> c/\ cSUBSET b2 b3 * b1 b3 cSUBSET * * part chull b1 b2 b3 c==> ! caffine * * part chull part caffine b1 cF * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET b0 f0 cSUBSET * * part chull part caffine b0 f0 c==> ! ! ! c==> c/\ cSUBSET b2 b3 * b1 b3 cSUBSET * * part chull b1 b2 b3 c==> ! caffine * * part chull part caffine b1 cF f1 * / c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cSUBSET b0 f0 cSUBSET * * part chull part caffine b0 f0 c==> ! ! ! c==> c/\ cSUBSET b2 b3 * b1 b3 cSUBSET * * part chull b1 b2 b3 c==> ! caffine * * part chull part caffine b1 cF f1
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (F = F)
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c= cF cF
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!t. ((P t) \/ Q)) = ((!t. (P t)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))) |- ((((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) v) ==> F) = T)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c= c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 f3 cF cT
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))) |- (!v. (((\v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) v) ==> F))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 ! c==> * / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 b0 cF
- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) /\ (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))))
T c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c/\ c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
+ (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) |- (((I ((I SUBSET) ((I ((I hull) _6522129)) _6522130))) _6522131) \/ ((~ ((I ((I SUBSET) _6522130)) _6522131)) \/ (~ ((I _6522129) _6522131))))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c\/ cI * * part cI part cSUBSET * * part cI * * part cI part chull f0 f1 f2 c\/ c~ cI * * part cI part cSUBSET f1 f2 c~ cI f0 f2
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (~ ((I collinear) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- (((!x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) ==> ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x)) = ((\x. ((plane x) = (?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (x = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))))) x))
T c= c==> ! c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / c= cplane b0 c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= b0 * * part chull part caffine * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ ((I ((I SUBSET) S)) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) ==> ((I ((I SUBSET) S)) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c==> c~ cI * * part cI part cSUBSET f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI part cSUBSET f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))), (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) /\ ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c/\ c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ ((I collinear) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))) = (~ ((I collinear) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c= c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c~ cI part ccollinear * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) |- ((?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P)))) /\ F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 c/\ c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET f3 f2 c~ cSUBSET * * part chull part caffine f3 f2 cF
- ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- (((I affine) ((I ((I hull) affine)) _6522132)) = ((I affine) ((I ((I hull) affine)) _6522132)))
T c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c= cI part caffine * * part cI * * part cI part chull part caffine f5 cI part caffine * * part cI * * part cI part chull part caffine f5
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) ==> ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET f4 f3 c~ cSUBSET * * part chull part caffine f4 f3 c==> c~ cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f4 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), (?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) |- ((?v. (?w. ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))))) /\ F)
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 c/\ c? / c? / c/\ c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= f1 * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET f2 f1 c~ cSUBSET * * part chull part caffine f2 f1 cF
- (!s. (affine ((hull affine) s))) |- ((~ ((I affine) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) ==> ((I affine) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> ! caffine * * part chull part caffine b0 c==> c~ cI part caffine * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI part caffine * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w' INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))) = ((?w. (~ (collinear (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ c? / c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c= f2 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- ((!t. (P \/ (Q t))) = (P \/ (!t. (Q t))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!t'. (((~ (s SUBSET t)) \/ (~ (P t))) \/ (((hull P) s) SUBSET t'))) = (((~ (s SUBSET t)) \/ (~ (P t))) \/ (!t. (((hull P) s) SUBSET t))))
T c= ! c\/ c\/ c~ cSUBSET f0 f1 c~ * f2 f1 cSUBSET * * part chull f2 f0 b0 c\/ c\/ c~ cSUBSET f0 f1 c~ * f2 f1 ! cSUBSET * * part chull f2 f0 b0
- (!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))), (!s. (affine ((hull affine) s))), (~ ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) /\ ((I ((I SUBSET) ((I ((I hull) affine)) S))) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 c==> c~ cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET f0 f4 c~ cSUBSET * * part chull part caffine f0 f4 c/\ c~ cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY cI * * part cI part cSUBSET * * part cI * * part cI part chull part caffine f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY
- (~ ((I ((I SUBSET) S)) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))), ((((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY)))))) /\ (S SUBSET P)) /\ (~ (((hull affine) S) SUBSET P))) |- ((~ ((I ((I SUBSET) S)) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) /\ ((I ((I SUBSET) S)) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> c~ cI * * part cI part cSUBSET f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY c==> c/\ c/\ c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= f4 * * part chull part caffine * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET f0 f4 c~ cSUBSET * * part chull part caffine f0 f4 c/\ c~ cI * * part cI part cSUBSET f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY cI * * part cI part cSUBSET f0 * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 * * part cI * * part cI part cINSERT f3 part cEMPTY
- |- ((!t. (P t)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- ((?w. (P /\ (Q w))) = (P /\ (?w. (Q w))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((?w'. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w' INSERT EMPTY))))))) = ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (?w. (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))
T c= c? / c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c= f3 * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY
- (!s. (affine ((hull affine) s))), (~ ((I affine) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) |- ((~ ((I affine) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY)))))) /\ ((I affine) ((I ((I hull) affine)) ((I ((I INSERT) u)) ((I ((I INSERT) v)) ((I ((I INSERT) w)) EMPTY))))))
T c==> ! caffine * * part chull part caffine b0 c==> c~ cI part caffine * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY c/\ c~ cI part caffine * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY cI part caffine * * part cI * * part cI part chull part caffine * * part cI * * part cI part cINSERT f0 * * part cI * * part cI part cINSERT f1 * * part cI * * part cI part cINSERT f2 part cEMPTY
- |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) ==> (((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))))
T c==> c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- ((((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))) ==> ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F)))) = ((~ (((?u. (?v. (?w. ((~ (collinear (u INSERT (v INSERT (w INSERT EMPTY))))) /\ (P = ((hull affine) (u INSERT (v INSERT (w INSERT EMPTY))))))))) /\ (S SUBSET P)) ==> (((hull affine) S) SUBSET P))) ==> ((!P. (!s. (!t. (((s SUBSET t) /\ (P t)) ==> (((hull P) s) SUBSET t))))) ==> ((!s. (affine ((hull affine) s))) ==> F))))
T c= c==> c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF c==> c~ c==> c/\ c? / c? / c? / c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= f0 * * part chull part caffine * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET f1 f0 cSUBSET * * part chull part caffine f1 f0 c==> ! ! ! c==> c/\ cSUBSET b1 b2 * b0 b2 cSUBSET * * part chull b0 b1 b2 c==> ! caffine * * part chull part caffine b0 cF
- |- ((?w. ((P w) /\ Q)) = ((?w. (P w)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
