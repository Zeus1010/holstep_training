N Planarity.lemma_proof0_fan
C |- (!x. (!V. (!E. (!u. (!w. (!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f5 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D REAL_MUL_LINV
A |- (!x. ((~ (x = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv x)) x) = (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c~ c= f0 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv f0 f0 creal_of_num cNUMERAL cBIT1 c_0
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D REAL_NEG_MINUS1
A |- (!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x)))
T c= creal_neg f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0
D Real_ext.REAL_PROP_POS_MUL2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 f1
D Real_ext.REAL_PROP_POS_INV
A |- (!x. (((real_lt (real_of_num (NUMERAL _0))) x) ==> ((real_lt (real_of_num (NUMERAL _0))) (real_inv x))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_inv f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D Misc_defs_and_lemmas.IN_ELIM_THM'
A |- ((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_mul
A |- (!c. (!x. (((% c) x) = (lambdai. ((real_mul c) (x $ i))))))
T c= c% f0 f1 clambda / creal_mul f0 c$ f1 b0
D vec
A |- (!n. ((vec n) = (lambdai. (real_of_num n))))
T c= cvec f0 clambda / creal_of_num f0
D AFFINE_HULL_2
A |- (!a. (!b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))))
T c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f0 c% b2 f1
D AFF_GE_MONO_RIGHT
A |- (!s. (!t. (!t'. (((t SUBSET t') /\ ((DISJOINT s) t')) ==> (((aff_ge s) t) SUBSET ((aff_ge s) t'))))))
T c==> c/\ cSUBSET f0 f1 cDISJOINT f2 f1 cSUBSET * * part caff_ge f2 f0 * * part caff_ge f2 f1
D Sphere.aff
A |- (aff = (hull affine))
T c= part caff * part chull part caffine
D Fan.fan7
A |- (!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))
T c= cfan7 c, f0 c, f1 f2 ! ! c==> c/\ cIN b0 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1
D Fan.FAN
A |- (!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E))))))))))))
T c= cFAN c, f0 c, f1 f2 c/\ cSUBSET * part cUNIONS f2 f1 c/\ cgraph f2 c/\ cfan1 c, f0 c, f1 f2 c/\ cfan2 c, f0 c, f1 f2 c/\ cfan6 c, f0 c, f1 f2 cfan7 c, f0 c, f1 f2
D Fan.th3
A |- (!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Topology.AFF_GE_1_1
A |- (!x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y))))))))
T c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1
D Planarity.aff_ge1_1_subset_aff_ge
A |- (!x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.properties1_inside_fan
A |- (!x. (!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))))
T c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.properties_inside_collinear_fan
A |- (!x. (!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f3 part cEMPTY
- |- ((\x. (!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))))) x)
T * / ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 cF f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0
+ (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((B = B) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c==> c= f1 f1 cF
- |- ((!v1. (!va. (!w. (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))))) = T)
T c= ! ! ! c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 c= b3 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c= b3 f0 cT
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 cF
+ |- ((((~ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ==> F) ==> (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) = (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))
T c= c==> c==> c~ c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cF c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f1 c% f4 f2 f3 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c/\ c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0
+ |- ((!i. ((P i) ==> (Q i))) ==> ((!i. (P i)) ==> (!i. (Q i))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))), (((x = C) \/ (x = B)) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c==> c\/ c= f0 f3 c= f0 f2 cF cF
+ |- (((% A) ((% B) C)) = ((% ((real_mul A) B)) C))
T c= c% f0 c% f1 f2 c% creal_mul f0 f1 f2
+ |- ((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))))
T c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (C = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f2
- ((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) |- (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))
T c==> c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) = T)
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cT
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889236)) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889236)) = ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889236) \/ (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889236)))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
+ ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) t1) |- (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))
T c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 f3 c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f3 f1 c% b0 f2
- (graph E) |- ((graph E) = T)
T c==> cgraph f0 c= cgraph f0 cT
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((\e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2))))) (v1 INSERT (w1 INSERT EMPTY)))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * / c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (((!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY)))) ==> ((\s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY)))) s)) = ((\s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY)))) s))
T c= c==> ! ! c= cDISJOINT b0 b1 c= * * part cINTER b0 b1 part cEMPTY * / ! c= cDISJOINT b0 b1 c= * * part cINTER b0 b1 part cEMPTY f0 * / ! c= cDISJOINT b0 b1 c= * * part cINTER b0 b1 part cEMPTY f0
- (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (x = C))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f0 f3
- |- ((~ ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))) ==> ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))
T c==> c~ c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)), ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) t1') |- (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) t1') /\ (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 f8 c/\ * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 f8 c= f5 f0
+ |- ((((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY))) ==> (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))) = (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c= c==> c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY
+ (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (A = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> c/\ cfan1 c, f0 c, f7 f8 c/\ cfan2 c, f0 c, f7 f8 c/\ cfan6 c, f0 c, f7 f8 ! ! c==> c/\ cIN b0 * * part cUNION f8 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f7 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f8 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f7 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f8 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f8 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!t1'. (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) t1') ==> (x' = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY ! c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b1 f0 c% b2 f2 b0 c= f5 f0
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f5 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))
T c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (x = u) |- ((~ (x = w)) = (~ (u = w)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
- |- ((!w. (!w1. (!v1. (!u. ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w)))))))) = (!w. (!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))))))
T c= ! ! ! ! c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF
- |- ((~ (_2889218 = _2889220)) \/ ((~ (_2889219 = _2889221)) \/ (((vector_add _2889218) _2889219) = ((vector_add _2889220) _2889221))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
- |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ |- ((\x. (!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))))) x)
T * / ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b1 c% f0 b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) = (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))))
T c= c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1
+ |- ((\x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul x) y))))) t2)
T * / ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt creal_of_num cNUMERAL c_0 creal_mul b0 b1 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (_2889224 = _2889227), (_2889226 = _2889229) |- ((_2889224 = _2889227) /\ ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
+ (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (C = C))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f1
+ |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (w1 = w1)) ==> (w1 = w1))
T c==> c~ c= f0 f0 c= f0 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
- |- ((~ (_2889200 = _2889201)) \/ ((BIT1 _2889200) = (BIT1 _2889201)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- (((!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) ==> ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t)) = ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1
+ |- ((\v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))))) u)
T * / ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- (!t. (!t'. (((t SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) t) SUBSET ((aff_ge (x INSERT EMPTY)) t')))))
T c==> c/\ cSUBSET f0 f1 cDISJOINT * * part cINSERT f2 part cEMPTY f1 cSUBSET * * part caff_ge * * part cINSERT f2 part cEMPTY f0 * * part caff_ge * * part cINSERT f2 part cEMPTY f1
- |- ((~ (_2889210 = _2889212)) \/ ((~ (_2889211 = _2889213)) \/ (((real_sub _2889210) _2889211) = ((real_sub _2889212) _2889213))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ (~ (x = va)) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) va)))))))) y))))) ==> (!x'. (((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))) = (((~ (x = va)) ==> (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) va)))))))) y)))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))))
T c==> c~ c= f0 f1 c= c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 ! c==> c/\ cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY c==> c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) |- F
T c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
+ ((\x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) x') |- (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 f2 c\/ c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c/\ c/\ c= f2 f0 c= f2 f1 c~ c= f0 f1
+ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) /\ F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f6 c/\ c= creal_add f7 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f7 f1 c% f6 f5 c==> creal_le creal_of_num cNUMERAL c_0 f6 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= f0 f1
- |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) = ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c= c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ (~ ((u = v1) \/ (u = w1))), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) |- ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) /\ (x = w))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c/\ c\/ c= f3 f0 c= f3 f4 c\/ c= f3 f1 c= f3 f2 c/\ c/\ c\/ c= f3 f0 c= f3 f4 c\/ c= f3 f1 c= f3 f2 c= f3 f4
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ |- ((((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))) ==> (((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i)))))
T c==> c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_mul f4 c$ f6 f2 creal_add creal_mul f7 c$ f1 f2 creal_mul f8 c$ f6 f2 c= creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_add creal_mul creal_sub f7 f0 c$ f1 f2 creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 f2
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (B = C))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f3
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_mul A) ((lambdai. ((real_mul B) (C $ i))) $ i))) $ i) = ((lambdai. ((real_mul ((real_mul A) B)) (C $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul f1 c$ clambda / creal_mul f2 c$ f3 b1 b0 f0 c$ clambda / creal_mul creal_mul f1 f2 c$ f3 b0 f0
+ (FAN (x , (V , E))), (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))))), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f5 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- (((_2889238 = u) /\ (_2889238 = u)) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c==> c/\ c= f2 f1 c= f2 f1 cF
+ |- ((((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) ==> F)
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 cF
- |- ((!x. (!va. (!w1. (!v1. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))))))) = T)
T c= ! ! ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 cT
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) $ i)) ((lambdai. ((real_mul a) (w $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1') (x $ i))) $ i)) ((lambdai. ((real_mul t2') (w $ i))) $ i))) $ i)) ==> (((lambdai. ((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub t1') t1)) (x $ i))) $ i)) ((lambdai. ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i))) $ i))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 b1 b1 c$ clambda / creal_mul f4 c$ f6 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f7 c$ f2 b1 b0 c$ clambda / creal_mul f8 c$ f6 b1 b0 f0 c= c$ clambda / creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub f7 f1 c$ f2 b1 b0 c$ clambda / creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0
- ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) |- (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) /\ ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c/\ c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) |- ((((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c= c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- (((% (real_of_num (NUMERAL (BIT1 _0)))) a) = a)
T c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f8 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (!x. ((x IN ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) ==> (x IN (w INSERT EMPTY))))) = ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY))))
T c= c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f3 part cEMPTY c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B)
T * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) ==> (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f6 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f6 f1 c% b0 f5 c= f0 f1
+ (x = v1), (x = w) |- ((~ (w = w)) = (~ (v1 = v1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f2 f2 c~ c= f1 f1
+ |- (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT EMPTY))) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))
T c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub t1') t1)) (x $ i))) $ i)) ((lambdai. ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i))) $ i))) $ i)) ==> (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) $ i)) ((lambdai. ((real_mul a) (w $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1') (x $ i))) $ i)) ((lambdai. ((real_mul t2') (w $ i))) $ i))) $ i)))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_mul creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub f4 f5 c$ f6 b1 b0 c$ clambda / creal_mul creal_sub f7 creal_mul f1 f2 c$ f8 b1 b0 f0 c= c$ clambda / creal_add c$ clambda / creal_mul f5 c$ f6 b1 b0 c$ clambda / creal_mul f1 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c$ f3 b1 b1 c$ clambda / creal_mul f2 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f4 c$ f6 b1 b0 c$ clambda / creal_mul f7 c$ f8 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0
+ |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w))) = ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w))))
T c= c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (((!x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (x' = x))) ==> ((\x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (x' = x))) _2889223)) = ((\x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (x' = x))) _2889223))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c= c==> ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 * / c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 f5 * / c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 f5
+ |- ((!V. (!E. (!u. (!w. (!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ c~ cIN b2 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b6 creal_lt b6 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b6 b2 c% b6 b3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889236) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889236))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6
+ |- ((~ (((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) = ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_add ((real_sub ((real_add t1') t2')) ((real_add t1) t2))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))) ==> F)
T c==> c~ c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f4 creal_mul f0 f1 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_sub creal_add f2 f4 creal_add f3 f0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- (~ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) /\ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))
T c==> c~ c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c~ c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) |- ((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) /\ (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)))
T c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c/\ c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)) = T)
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c= c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c= f5 f0 cT
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL c_0 c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f5 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f6 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f1 cvector_add c% creal_sub f6 f5 f0 c% creal_sub f7 creal_mul f3 f4 f2 c= cvector_add c% f5 f0 c% f3 f8 f0
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f2 f7 c==> c/\ c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f4 f1 c% f5 f7 c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= f0 f1
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0
+ |- ((\v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y))))))) va)
T * / c==> c~ c= f0 b0 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / cSETSPEC b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b4 c/\ c= creal_add b3 b4 creal_of_num cNUMERAL cBIT1 c_0 c= b2 cvector_add c% b3 f0 c% b4 b0 b2 f1
- |- (((!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))) ==> ((\t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))) t1')) = ((\t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))) t1'))
T c= c==> ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 cF * / ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 cF f6 * / ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 cF f6
- |- ((\t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))) t2')
T * / ! ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 cF f3
+ |- ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) va)
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
- ((real_lt (real_of_num (NUMERAL _0))) (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) |- (((real_lt (real_of_num (NUMERAL _0))) (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cT
- (_2889210 = _2889212), (_2889211 = _2889213) |- ((_2889211 = _2889213) /\ (((real_sub _2889210) _2889211) = ((real_sub _2889212) _2889213)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ (~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) |- (?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u)))))
T c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- ((u IN (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) w)))))))) = (?u. (?v. (((\p. (\t. (p /\ (u = t)))) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) x)) ((% v) w))))))
T c= cIN f0 * part cGSPEC / c? / c? / cSETSPEC b0 c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b1 f1 c% b2 f2 c? / c? / * * / / c/\ b2 c= f0 b3 c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b0 f1 c% b1 f2
+ |- (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222)) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222))) = ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222) \/ ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222)))))
T c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 cF
+ ((u INSERT (w INSERT EMPTY)) IN E) |- (((u INSERT (w INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) = T)
T c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) |- ((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) = T)
T c==> cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c= cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cT
- (~ F), (~ (x = w)), (x = w), (x = w1) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c= f0 f1 c==> c= f0 f2 c/\ c~ cF cF
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ (((lambdai. ((real_mul A) ((lambdai. ((real_mul B) (C $ i))) $ i))) $ i) = ((lambdai. ((real_mul ((real_mul A) B)) (C $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_mul f1 c$ clambda / creal_mul f2 c$ f3 b1 b0 f0 c$ clambda / creal_mul creal_mul f1 f2 c$ f3 b0 f0
+ (~ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))), ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) ==> F), ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> F) |- F
T c==> c~ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 cF cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt t2) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (t2 = (real_of_num (NUMERAL _0))), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= creal_add f1 f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f1 f5 c% creal_sub f6 creal_mul f0 f2 f7 c= cvector_add c% f1 f5 c% f0 f8 f5
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) |- (((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))) = (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c= c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY
+ |- (((_2889215 = _2889217) /\ (_2889214 = _2889216)) ==> (((% _2889214) _2889215) = ((% _2889216) _2889217)))
T c==> c/\ c= f0 f1 c= f2 f3 c= c% f2 f0 c% f3 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))) = ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0 c==> c= cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 cvector_add c% f6 f1 c% f7 f5 c= c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5
+ |- (((!x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) ==> ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x)) = ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x))
T c= c==> ! ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0 * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ (x = w)), (x = w), (x = w1) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c= f0 f1 c==> c= f0 f2 c==> c~ cF cF
- |- (((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) ==> (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))) = (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))
T c= c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add t2) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))), (((x = B) \/ (x = C)) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- (((x' = x) ==> F) = F)
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c= c==> c= f5 f0 cF cF
- (~ F), ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c/\ c~ cF cF
+ |- (((!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))) ==> ((\t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))) t)) = ((\t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))) t))
T c= c==> ! c= cDISJOINT f0 b0 c= * * part cINTER f0 b0 part cEMPTY * / c= cDISJOINT f0 b0 c= * * part cINTER f0 b0 part cEMPTY f1 * / c= cDISJOINT f0 b0 c= * * part cINTER f0 b0 part cEMPTY f1
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) = (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2
+ |- ((y = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) y) = (real_of_num (NUMERAL _0)))))
T c==> c= f0 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 f0 creal_of_num cNUMERAL c_0
+ |- (((~ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) ==> F) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))
T c= c==> c~ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 cF c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2
- |- ((\v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))) v1)
T * / ! c==> c~ c==> c~ c\/ c= b1 b0 c= b1 f0 ! c==> c/\ c\/ c= b2 b1 c= b2 f1 c\/ c= b2 b0 c= b2 f0 c= b2 f1 cF f2
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f7 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cIN f3 * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f7 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f7 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f7 part cEMPTY
- |- (((!w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))))) ==> ((\w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))))) w)) = ((\w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))))) w))
T c= c==> ! ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 cF * / ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 cF f0 * / ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 cF f0
+ |- ((!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c~ cIN f4 * * part cINSERT f3 * * part cINSERT b0 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b1 creal_lt b1 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 f4 c% b1 f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)), ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))) t2') |- (((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))) t2') /\ (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f8 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f8 f0 c% b0 f2 f9 c/\ * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f8 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f8 f0 c% b0 f2 f9 c= f5 f0
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((~ (x = va)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (x = va)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> c/\ c~ c= f0 f8 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f8 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f8 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f8 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f8 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f8 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ c~ c= f0 f8 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f8 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f8 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f8 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f8 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- (!e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2)))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 ! c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
+ |- ((?v. ((((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% v) w))))) = ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% u) x)) ((% v) w)))))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))))
T c= c? / c/\ c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 f5 c% b0 f6 * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f4 cvector_add c% b0 f5 c% b1 f6 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3
+ |- ((~ ((((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i)))) ==> (((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))))) ==> F)
T c==> c~ c==> c= creal_mul creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c$ f2 f3 creal_add creal_mul creal_sub f4 f5 c$ f6 f3 creal_mul creal_sub f7 creal_mul f0 f1 c$ f8 f3 c= creal_add creal_mul f5 c$ f6 f3 creal_mul f0 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c$ f2 f3 creal_mul f1 c$ f8 f3 creal_add creal_mul f4 c$ f6 f3 creal_mul f7 c$ f8 f3 cF
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) /\ F)
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 cF
- |- ((!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))))))))) = T)
T c= ! ! ! ! ! ! c==> c= c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 c= c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 cT
+ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- F
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 cF
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F), (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- (((?x'. ((x' = x) /\ (x' = u))) /\ (~ (x = u))) = (?x'. (((x' = x) /\ (x' = u)) /\ (~ (x = u)))))
T c= c/\ c? / c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 c? / c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1
+ (~ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) /\ F)
T c==> c~ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ ((u = v1) \/ (u = w1))), (x = v1) |- ((x = u) ==> F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f1 c==> c= f3 f0 cF
+ |- ((((% _2889214) _2889215) = ((% _2889216) _2889217)) \/ ((~ (_2889215 = _2889217)) \/ (~ (_2889214 = _2889216))))
T c\/ c= c% f0 f1 c% f2 f3 c\/ c~ c= f1 f3 c~ c= f0 f2
- |- ((?x''. ((x' = x) /\ (x'' = u))) = ((x' = x) /\ (?x'. (x' = u))))
T c= c? / c/\ c= f0 f1 c= b0 f2 c/\ c= f0 f1 c? / c= b0 f2
+ |- ((~ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ==> F)
T c==> c~ c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- |- ((\u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) u)
T * / c==> c~ c==> c~ c\/ c= b0 f0 c= b0 f1 ! c==> c/\ c\/ c= b1 b0 c= b1 f2 c\/ c= b1 f0 c= b1 f1 c= b1 f2 cF f3
- |- ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C)
T * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
+ ((((x' = x) /\ (x' = u)) /\ (~ (x = u))) ==> F), (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u)))) |- F
T c==> c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 cF c==> c\/ c/\ ! c\/ c~ c= b0 f1 c~ c= b0 f2 c= f1 f2 c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 cF
+ (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((A = A) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c= f1 f1 cF
- |- ((\v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))) v1)
T * / ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 c= b3 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c= b3 f0 cF f2
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- (x' = x)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c= f0 f1
+ |- ((!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) = (!x. ((x IN (A INSERT (B INSERT (C INSERT EMPTY)))) = (x IN (A INSERT (C INSERT (B INSERT EMPTY)))))))
T c= ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?x'. (P x')) /\ Q) = (?x'. ((P x') /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (((x = C) \/ (x = B)) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c\/ c= f0 f3 c= f0 f2 cF
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((\e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) (u INSERT (w INSERT EMPTY)))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * / ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((!w. (!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))))) = T)
T c= ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 c/\ c~ cIN f3 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b3 creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 f3 c% b3 b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ (x = v1), (x = w) |- (w = v1)
T c==> c= f0 f1 c==> c= f0 f2 c= f2 f1
+ |- ((((~ (x = va)) ==> (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) va)))))))) y)))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((!x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) ==> ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)) = ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x))
T c= c==> ! ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0 * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ cIN f3 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f3 c% f7 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))))) = T)
T c= ! ! ! c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 cT
- |- (((!x. (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) x) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))) ==> ((?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))) = ((?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va))))
T c= c==> ! c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b1 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b1 c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- (_2889218 = _2889220) |- ((_2889219 = _2889221) ==> (((vector_add _2889218) _2889219) = ((vector_add _2889220) _2889221)))
T c==> c= f0 f1 c==> c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ (x = C)) /\ (~ (x = B)))
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f2
+ |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
- (x = u), (x = w1) |- ((~ (u = v1)) = (~ (w1 = v1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f1 f3 c~ c= f2 f3
- (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((FINITE (((set_of_edge v1) V) E)) /\ ((w1 IN (((set_of_edge v1) V) E)) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge v1) V) E)) /\ ((w1 IN (((set_of_edge v1) V) E)) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))) /\ ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f2 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f3 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c/\ c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f2 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f3 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- |- (((!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))) ==> ((\x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))) x)) = ((\x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))) x))
T c= c==> ! ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 cF * / ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 cF f4 * / ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 cF f4
+ |- ((\s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY)))) s)
T * / ! c= cDISJOINT b0 b1 c= * * part cINTER b0 b1 part cEMPTY f0
+ (~ (x = w)), (~ ((u = v1) \/ (u = w1))), (x = v1), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) |- ((x = v1) /\ F)
T c==> c~ c= f0 f1 c==> c~ c\/ c= f2 f3 c= f2 f4 c==> c= f0 f3 c==> c/\ c\/ c= f0 f2 c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c= f0 f3 cF
- (~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) |- ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) /\ F)
T c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f1 c% f4 f2 f3 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))))) ==> ((\a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))))) a)) = ((\a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))))) a))
T c= c==> ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 c= c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 cF * / ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 c= c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 cF f1 * / ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 c= c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 cF f1
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) = T)
T c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY c= cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cT
+ (t2 = (real_of_num (NUMERAL _0))) |- (((((real_add t1) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% ((real_mul (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul (real_of_num (NUMERAL _0))) a))) w))) ==> (((vector_add ((% t1) x)) ((% (real_of_num (NUMERAL _0))) va)) = x))) = ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))))
T c==> c= f0 creal_of_num cNUMERAL c_0 c= c==> c= creal_add f1 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f1 f5 c% creal_sub f6 creal_mul creal_of_num cNUMERAL c_0 f2 f7 c= cvector_add c% f1 f5 c% creal_of_num cNUMERAL c_0 f8 f5 c==> c= creal_add f1 f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f1 f5 c% creal_sub f6 creal_mul f0 f2 f7 c= cvector_add c% f1 f5 c% f0 f8 f5
+ |- ((((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i)))) ==> (((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))))
T c==> c= creal_mul creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c$ f2 f3 creal_add creal_mul creal_sub f4 f5 c$ f6 f3 creal_mul creal_sub f7 creal_mul f0 f1 c$ f8 f3 c= creal_add creal_mul f5 c$ f6 f3 creal_mul f0 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c$ f2 f3 creal_mul f1 c$ f8 f3 creal_add creal_mul f4 c$ f6 f3 creal_mul f7 c$ f8 f3
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0 cT
+ (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> c==> cFAN c, f3 c, f4 f5 c/\ cFINITE * * * part cset_of_edge f0 f4 f5 c/\ c= cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 cIN f7 * * * part cset_of_edge f0 f4 f5 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f7 c/\ c~ c= f0 f7 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f7 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c/\ c~ cIN f7 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c~ cIN f7 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) t2) |- (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))
T c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 f3 f4 c/\ creal_le creal_of_num cNUMERAL c_0 f4 c/\ c= creal_add f0 f4 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% f4 f3
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) ==> ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)) = ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x))
T c= c==> ! c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2 * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
+ |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2') w)))), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> c/\ c= creal_add f8 f9 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f8 f0 c% f9 f2 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= f5 f0
- ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) |- ((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v1) V) E)) /\ ((((v1 INSERT (w1 INSERT EMPTY)) IN E) = (w1 IN (((set_of_edge v1) V) E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x') = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2
+ (t2 = (real_of_num (NUMERAL _0))), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) |- ((t2 = (real_of_num (NUMERAL _0))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c= f0 creal_of_num cNUMERAL c_0 c==> c= creal_add f1 f0 creal_of_num cNUMERAL cBIT1 c_0 c/\ c= f0 creal_of_num cNUMERAL c_0 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f1 f5 c% creal_sub f6 creal_mul f0 f2 f7 c= cvector_add c% f1 f5 c% f0 f8 f5
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) |- (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) = (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))))
T c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- (((((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) ==> F) = F)
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c==> c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) ==> ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) = ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= c==> ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_neg creal_of_num cNUMERAL cBIT1 c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul a) t2)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) = (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x''))) = (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0
+ (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((x = A) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c= f0 f1 cF
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))))
T c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 b0 c$ cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 b0 c$ cvector_add c% f3 f5 c% f6 f7 b0
+ |- ((x' IN (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y))))) = (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f1 c% b3 f2 b1 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2
+ |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222)) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222))) = ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222) \/ ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222))))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f2 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((B = B) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c= f1 f1 cF
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- (~ (x = x))
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c~ c= f1 f1
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) ==> (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))) = (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))
T c= c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
+ |- ((?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) ==> F)
T c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
+ |- ((~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))) ==> (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))))
T c==> c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ |- ((\x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))) x)
T * / c= cfan7 c, b0 c, f0 f1 ! ! c==> c/\ cIN b1 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY cIN b2 * * part cUNION f1 * part cGSPEC / c? / cSETSPEC b3 cIN b4 f0 * * part cINSERT b4 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b0 part cEMPTY b1 * * part caff_ge * * part cINSERT b0 part cEMPTY b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINTER b1 b2 f2
- |- ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)
T * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
+ (~ (((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) = ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_add ((real_sub ((real_add t1') t2')) ((real_add t1) t2))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f4 creal_mul f0 f1 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_sub creal_add f2 f4 creal_add f3 f0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY))) ==> (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- (((~ (_2889238 = x)) \/ (~ (_2889238 = u))) = ((~ (_2889238 = u)) \/ (~ (_2889238 = u))))
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c= c\/ c~ c= f2 f0 c~ c= f2 f1 c\/ c~ c= f2 f1 c~ c= f2 f1
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
+ |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((u = u) = ((u = u) /\ (u = u)))
T c= c= f0 f0 c/\ c= f0 f0 c= f0 f0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) /\ ((((lambdai. ((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub t1') t1)) (x $ i))) $ i)) ((lambdai. ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i))) $ i))) $ i)) ==> (((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) $ i)) ((lambdai. ((real_mul a) (w $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1') (x $ i))) $ i)) ((lambdai. ((real_mul t2') (w $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c/\ c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_mul creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c$ f3 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub f4 f5 c$ f6 b1 b0 c$ clambda / creal_mul creal_sub f7 creal_mul f1 f2 c$ f8 b1 b0 f0 c= c$ clambda / creal_add c$ clambda / creal_mul f5 c$ f6 b1 b0 c$ clambda / creal_mul f1 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 c$ f3 b1 b1 c$ clambda / creal_mul f2 c$ f8 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f4 c$ f6 b1 b0 c$ clambda / creal_mul f7 c$ f8 b1 b0 f0
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- (u = x)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c= f2 f1
- ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F), (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) |- (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) /\ ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c/\ c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- |- ((!e2. t) = t)
T c= ! f0 f0
- |- (((!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) ==> ((\u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) u)) = ((\u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c~ c\/ c= b0 f0 c= b0 f1 ! c==> c/\ c\/ c= b1 b0 c= b1 f2 c\/ c= b1 f0 c= b1 f1 c= b1 f2 cF * / c==> c~ c==> c~ c\/ c= b0 f0 c= b0 f1 ! c==> c/\ c\/ c= b1 b0 c= b1 f2 c\/ c= b1 f0 c= b1 f1 c= b1 f2 cF f3 * / c==> c~ c==> c~ c\/ c= b0 f0 c= b0 f1 ! c==> c/\ c\/ c= b1 b0 c= b1 f2 c\/ c= b1 f0 c= b1 f1 c= b1 f2 cF f3
- |- ((~ (_2889204 = _2889205)) \/ ((real_of_num _2889204) = (real_of_num _2889205)))
T c\/ c~ c= f0 f1 c= creal_of_num f0 creal_of_num f1
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((_2889223 = x) \/ ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889223)) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889223))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c\/ c= f5 f0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5
+ |- ((\u'. (!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))))))) w)
T * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((!x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (x' = x))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c/\ ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0
- (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c~ cF cF
+ |- ((\t'. (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) t')))) (w INSERT EMPTY))
T * / c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cDISJOINT * * part cINSERT f4 part cEMPTY b0 cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f1 part cEMPTY
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((v1 INSERT (w1 INSERT EMPTY)) IN (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN E) \/ (?v. ((v IN V) /\ (x = (v INSERT EMPTY)))))) x))))) = (((v1 INSERT (w1 INSERT EMPTY)) IN E) \/ (?v. ((v IN V) /\ ((v1 INSERT (w1 INSERT EMPTY)) = (v INSERT EMPTY))))))
T c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f2 c? / c/\ cIN b2 f3 c= b1 * * part cINSERT b2 part cEMPTY b1 c\/ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c? / c/\ cIN b0 f3 c= * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 part cEMPTY
- |- ((_2889226 = _2889229) ==> ((~ (_2889224 = _2889227)) \/ ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((vector_add ((% t1) x)) ((% t2) va)) = x)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= cvector_add c% f3 f0 c% f4 f8 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y))))) /\ (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' = x))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f2 b1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f2 b1 ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f4 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= b0 f0
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c==> c~ cF cF
+ |- ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))
T * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) = ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((!x'. (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) x') ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))) ==> ((?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))) = ((?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b1 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((((~ (x = w)) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y)))))) ==> (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))) = (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY)))))
T c= c==> c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
- |- (((!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))) ==> ((\t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))) t2')) = ((\t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))) t2'))
T c= c==> ! ! ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 cF * / ! ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 cF f3 * / ! ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 cF f3
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- ((\t. (!t'. (((t SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) t) SUBSET ((aff_ge (x INSERT EMPTY)) t'))))) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))
T * / ! c==> c/\ cSUBSET b0 b1 cDISJOINT * * part cINSERT f0 part cEMPTY b1 cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> F) = (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))
T c= c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
- (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0))) |- ((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))
T c==> c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!t1. (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) t1) ==> (x' = x)))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b1 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 c% b1 f5 b0 c= f0 f1
+ |- (((% (real_of_num (NUMERAL _0))) a) = (vec (NUMERAL _0)))
T c= c% creal_of_num cNUMERAL c_0 f0 cvec cNUMERAL c_0
+ (~ (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0))))
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 f0 f0 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 f0 f0 creal_of_num cNUMERAL c_0
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) |- (((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) /\ ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- (((!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))) ==> ((\v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))) v1)) = ((\v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))) v1))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 c= b3 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c= b3 f0 cF * / ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 c= b3 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c= b3 f0 cF f2 * / ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b3 c= b3 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f1 part cEMPTY b3 c= b3 f0 cF f2
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (x = A))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f7 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ cSUBSET * part cUNIONS f7 f8 c/\ cgraph f7 c/\ cfan1 c, f0 c, f8 f7 c/\ cfan2 c, f0 c, f8 f7 c/\ cfan6 c, f0 c, f8 f7 ! ! c==> c/\ cIN b0 * * part cUNION f7 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f8 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f7 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f8 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((lambdai. ((real_add ((lambdai. ((real_mul t1) (x $ i))) $ i)) ((lambdai. ((real_mul t2) ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) $ i)) ((lambdai. ((real_mul a) (w $ i))) $ i))) $ i))) $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul t1') (x $ i))) $ i)) ((lambdai. ((real_mul t2') (w $ i))) $ i))) $ i)) ==> (((lambdai. ((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i))) $ i) = ((lambdai. ((real_add ((lambdai. ((real_mul ((real_sub t1') t1)) (x $ i))) $ i)) ((lambdai. ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i))) $ i))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ clambda / creal_add c$ clambda / creal_mul f1 c$ f2 b1 b0 c$ clambda / creal_mul f3 c$ clambda / creal_add c$ clambda / creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 b1 b1 c$ clambda / creal_mul f4 c$ f6 b1 b1 b1 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul f7 c$ f2 b1 b0 c$ clambda / creal_mul f8 c$ f6 b1 b0 f0 c= c$ clambda / creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 b0 f0 c$ clambda / creal_add c$ clambda / creal_mul creal_sub f7 f1 c$ f2 b1 b0 c$ clambda / creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 b1 b0 f0
+ |- (!t'. (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) t'))))
T c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 cDISJOINT * * part cINSERT f5 part cEMPTY f4 cSUBSET * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY f4
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2') w)))), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f7 cvector_add c% f3 f0 c% f4 f8 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f9 f1 c% f9 f2 f8 c==> c/\ c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f7 cvector_add c% f5 f0 c% f6 f2 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f9 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= f7 f0
+ |- (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va))
T c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- ((~ (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) ==> F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((!x. (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) x) ==> (x' = x))) ==> ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) ==> (x' = x))) = ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) ==> (x' = x)))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= c==> ! c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b1 f1 c% b2 f5 b0 c= f0 f1 c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f5 c= f0 f1 c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f5 c= f0 f1
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)), ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) t1) |- (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) t1) /\ (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f5 f6 c/\ * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f5 f6 c= f0 f1
+ (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- F
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cF
+ |- (((t1 = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% (real_of_num (NUMERAL _0))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% (real_of_num (NUMERAL _0))) va)) = x))) = ((((real_add t1) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% ((real_mul (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul (real_of_num (NUMERAL _0))) a))) w))) ==> (((vector_add ((% t1) x)) ((% (real_of_num (NUMERAL _0))) va)) = x))))
T c= c==> c= f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_of_num cNUMERAL c_0 f1 cvector_add c% creal_sub f2 f0 f3 c% f4 f5 c= cvector_add c% f0 f3 c% creal_of_num cNUMERAL c_0 f6 f3 c==> c= creal_add f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f2 f0 f3 c% creal_sub f4 creal_mul creal_of_num cNUMERAL c_0 f7 f5 c= cvector_add c% f0 f3 c% creal_of_num cNUMERAL c_0 f6 f3
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- (((!x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) ==> ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x)) = ((\x. (!v. (!u. (!v1. ((((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))))))))) x))
T c= c==> ! ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! ! c==> c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b3 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- |- ((\w. (!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))))) w)
T * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 cF f0
- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?u. t) = t)
T c= c? / f0 f0
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY)) = (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))))
T c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY c= cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0))))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c~ c= creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))), ((x = B) ==> F), ((x = C) \/ (x = B)) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c==> c= f0 f2 cF c==> c\/ c= f0 f3 c= f0 f2 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b0 f8 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cT
- (u IN V) |- ((u IN V) = T)
T c==> cIN f0 f1 c= cIN f0 f1 cT
+ (~ (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) |- ((~ (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) /\ F)
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c/\ c~ c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- (x = w) |- ((~ (u = w1)) = (~ (u = w1)))
T c==> c= f0 f1 c= c~ c= f2 f3 c~ c= f2 f3
+ |- ((((~ (((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) = ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_add ((real_sub ((real_add t1') t2')) ((real_add t1) t2))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))) ==> F) ==> (((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) = ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_add ((real_sub ((real_add t1') t2')) ((real_add t1) t2))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))) = (((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) = ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_add ((real_sub ((real_add t1') t2')) ((real_add t1) t2))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))))
T c= c==> c==> c~ c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f4 creal_mul f0 f1 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_sub creal_add f2 f4 creal_add f3 f0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f4 creal_mul f0 f1 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_sub creal_add f2 f4 creal_add f3 f0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_add creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f2 f3 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_sub f4 creal_mul f0 f1 creal_mul creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_add creal_sub creal_add f2 f4 creal_add f3 f0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- F
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 cF
+ (~ (x = w)) |- (((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y))))) ==> (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' = x)))) = (((~ (x = w)) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y)))))) ==> (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))))
T c==> c~ c= f0 f1 c= c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= b0 f0 c==> c==> c~ c= f0 f1 c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
- (~ (x = w)), (x = u), (x = w1) |- (~ (w1 = w))
T c==> c~ c= f0 f1 c==> c= f0 f2 c==> c= f0 f3 c~ c= f3 f1
+ |- (((~ (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) ==> F) = (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))
T c= c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2
- (~ (x = w)), (x = v1), (x = w) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c= f0 f2 c==> c= f0 f1 c==> c~ cF cF
+ |- ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (!x. ((x IN ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) ==> (x IN (w INSERT EMPTY)))))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c==> cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (!V. (!E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))))) x)
T * / ! ! c= cFAN c, b0 c, b1 b2 c/\ cSUBSET * part cUNIONS b2 b1 c/\ cgraph b2 c/\ cfan1 c, b0 c, b1 b2 c/\ cfan2 c, b0 c, b1 b2 c/\ cfan6 c, b0 c, b1 b2 cfan7 c, b0 c, b1 b2 f0
+ (~ ((u = v1) \/ (u = w1))), (x = u), (x = w1) |- ((x = u) /\ F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f2 c/\ c= f3 f0 cF
+ (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (A = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f1
- |- ((x' IN (GSPEC (\GEN%PVAR%2. (?x'. (((SETSPEC GEN%PVAR%2) ((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) x'))))) = ((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY b1 c/\ cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) |- ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889237) \/ ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889237)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889237))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6
+ (_2889215 = _2889217) |- ((_2889214 = _2889216) ==> (((% _2889214) _2889215) = ((% _2889216) _2889217)))
T c==> c= f0 f1 c==> c= f2 f3 c= c% f2 f0 c% f3 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f6 creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((!t2'. (!x. (!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))))))) = T)
T c= ! ! ! ! ! c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b4 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b3 b2 b1 c% creal_sub b0 creal_mul f0 f1 f2 cT
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- ((!u. (!w. (!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN b0 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b4 creal_lt b4 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b4 b0 c% b4 b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT f0 part cEMPTY cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!t'. (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) t')))) ==> ((\t'. (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) t')))) (w INSERT EMPTY))) = ((\t'. (((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET t') /\ ((DISJOINT (x INSERT EMPTY)) t')) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) t')))) (w INSERT EMPTY)))
T c= c==> ! c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cDISJOINT * * part cINSERT f4 part cEMPTY b0 cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY b0 * / c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cDISJOINT * * part cINSERT f4 part cEMPTY b0 cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f1 part cEMPTY * / c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 cDISJOINT * * part cINSERT f4 part cEMPTY b0 cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f1 part cEMPTY
- |- ((~ (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) ==> F)
T c==> c~ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 cF
+ |- (((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u))) = ((!x'. ((x' IN ((x INSERT EMPTY) INTER (u INSERT EMPTY))) = (x' IN EMPTY))) = (~ (x = u))))
T c= c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 c= ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 part cEMPTY c~ c= f0 f1
- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))), ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) |- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
+ |- (((~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)) = ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c= c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cvector_add c% f3 f0 c% f4 f5 f0 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c= cvector_add c% f3 f0 c% f4 f5 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((% (real_of_num (NUMERAL (BIT1 _0)))) u) = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c% creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f5 f3 f0 c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((!x. (((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) x) ==> (x' = x))) ==> ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) ==> (x' = x))) = ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) ==> (x' = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> ! c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b1 f0 c% b2 f2 b0 c= f5 f0 c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0 c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0
- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) |- (((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) /\ (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f1 cvector_add c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f5 f3 f0 c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f6 creal_mul f4 f7 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= f1 cvector_add c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f5 f3 f0 c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((real_lt (real_of_num (NUMERAL _0))) (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_lt creal_of_num cNUMERAL c_0 creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- |- (((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) = T)
T c= c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cT
- |- (((!B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) ==> ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B)) = ((\B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))) B))
T c= c==> ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0 * / ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF f0
+ (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) |- (u IN (aff (x INSERT (w INSERT EMPTY))))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 f6 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f3 creal_mul f1 f4 f7 cIN f5 * part caff * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) = (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))
T c= c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ |- ((!E. (!u. (!w. (!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ c~ cIN b1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b5 creal_lt b5 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b5 b1 c% b5 b2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ (~ (x = w)), (~ ((u = v1) \/ (u = w1))), (x = w1), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) |- ((x = w1) /\ F)
T c==> c~ c= f0 f1 c==> c~ c\/ c= f2 f3 c= f2 f4 c==> c= f0 f4 c==> c/\ c\/ c= f0 f2 c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c= f0 f4 cF
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2) |- ((((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))) = ((((real_le (real_of_num (NUMERAL _0))) t2) ==> ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = x))))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c==> creal_le creal_of_num cNUMERAL c_0 f4 c= c==> c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 cvector_add c% creal_sub f5 f6 f7 c% creal_sub f8 creal_mul f4 f0 f2 c= cvector_add c% f6 f7 c% f4 f3 f7 c==> c==> creal_le creal_of_num cNUMERAL c_0 f4 c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 cvector_add c% creal_sub f5 f6 f7 c% creal_sub f8 creal_mul f4 f0 f2 c= cvector_add c% f6 f7 c% f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f7
- (~ F), (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c/\ c~ cF cF
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) |- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))) |- (((~ ((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ==> (((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = F)) = (((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = F))
T c==> c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c==> c~ c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF c= c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF
+ (~ (x = w)), (x = w), (x = w1) |- ((w1 = w1) ==> F)
T c==> c~ c= f0 f1 c==> c= f0 f1 c==> c= f0 f2 c==> c= f2 f2 cF
- (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))) |- (~ ((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))
T c==> c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c~ c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
- ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) |- (((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va))) = (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c= c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
+ (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f4 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
+ |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (~ (x = va)), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (x = va)) /\ (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- (((!w. (!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))))) ==> ((\w. (!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))))) w)) = ((\w. (!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))))) w))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 cF * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 cF f0 * / ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 cF f0
- (~ F), (~ ((u = v1) \/ (u = w1))), (x = u), (x = v1) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f1 c/\ c~ cF cF
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ |- ((t1 = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% (real_of_num (NUMERAL _0))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% (real_of_num (NUMERAL _0))) va)) = x)))
T c==> c= f0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_of_num cNUMERAL c_0 f1 cvector_add c% creal_sub f2 f0 f3 c% f4 f5 c= cvector_add c% f0 f3 c% creal_of_num cNUMERAL c_0 f6 f3
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (C = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f3
- (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- ((~ (x = u)) = (~ (x = u)))
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c= c~ c= f1 f2 c~ c= f1 f2
+ |- ((!v1. (!w1. (!a. (((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))) = T)
T c= ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ cIN f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 b2 creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 f3 c% b2 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 part cEMPTY cT
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- |- (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- ((?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% u) x)) ((% v) w)))))) = (u IN (aff (x INSERT (w INSERT EMPTY)))))
T c= c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))) |- ((~ ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))) /\ ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))))
T c==> c~ c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c/\ c~ c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
+ |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) = (((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) /\ (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))))
T c= c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) ==> ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) va)) = ((\v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))) va))
T c= c==> ! ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1
+ (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((C = C) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c= f1 f1 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!va. (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY ! c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b1 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- ((x = x) ==> F)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c==> c= f1 f1 cF
+ (~ (x = w)), (~ ((u = v1) \/ (u = w1))), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))), ((x = w1) ==> F) |- F
T c==> c~ c= f0 f1 c==> c~ c\/ c= f2 f3 c= f2 f4 c==> c/\ c\/ c= f0 f2 c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f4 cF cF
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f4 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 f2 c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f4 c==> creal_lt f5 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c= f0 f1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) t1') ==> (x' = x)) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 f8 c= f5 f0 cT
+ (~ (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))), ((((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) ==> F) |- F
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF cF
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222))) \/ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) /\ (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222)))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c/\ c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5
+ (~ ((u = v1) \/ (u = w1))), (x = u), (x = w1) |- (~ (w1 = w1))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f2 c~ c= f2 f2
+ |- (((((real_le (real_of_num (NUMERAL _0))) t2) ==> ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = x))) = ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = x)))
T c= c==> c==> creal_le creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f0 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 f5 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 f5
- |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) ==> (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- ((\va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))) va)
T * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 cF f2
+ |- (((real_le (real_of_num (NUMERAL _0))) t2) ==> ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)))
T c==> creal_le creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ |- ((((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)) = (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c= c==> c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 f8 f5 c= cvector_add c% f4 f5 c% f0 f8 f5
+ |- (((((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT EMPTY))) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> c/\ cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt t2) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) = (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
- |- ((!C. (!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))))) = T)
T c= ! ! ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cT
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))), ((x = B) \/ (x = C)) |- (((x = B) \/ (x = C)) /\ F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c\/ c= f0 f2 c= f0 f3 c/\ c\/ c= f0 f2 c= f0 f3 cF
+ (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (B = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f1
+ (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))), ((x = u) ==> F), ((x = w) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f1 cF c==> c==> c= f0 f2 cF cF
- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) /\ (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> c/\ cFINITE * * * part cset_of_edge f0 f4 f5 c/\ cIN f7 * * * part cset_of_edge f0 f4 f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f7 c/\ c~ c= f0 f7 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f7 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c/\ c~ cIN f7 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f7 part cEMPTY c~ cIN f7 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (x = w)), (x = w), (x = w1) |- (~ (w1 = w1))
T c==> c~ c= f0 f1 c==> c= f0 f1 c==> c= f0 f2 c~ c= f2 f2
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6
+ (_2889214 = _2889216), (_2889215 = _2889217) |- ((_2889214 = _2889216) /\ (((% _2889214) _2889215) = ((% _2889216) _2889217)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c% f0 f2 c% f1 f3
- |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (C = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c~ c= f1 f2
- |- ((\t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))) t1')
T * / ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 cF f6
+ |- ((((x' = x) /\ (x' = u)) /\ (~ (x = u))) ==> F)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_le (real_of_num (NUMERAL _0))) t2') /\ ((((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2') w))))) ==> (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f8 c/\ c= creal_add f9 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f9 f0 c% f8 f2 c= f5 f0
+ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= creal_add f4 f5 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f0 cvector_add c% f4 f1 c% f5 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f3 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f5 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= f0 f1
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
- (~ (x = va)) |- (((~ (va = x)) ==> ((va = x) = F)) = ((va = x) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((x = B) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c= f0 f2 cF
+ (FAN (x , (V , E))), ((u INSERT (w INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- |- ((!w. (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) = T)
T c= ! c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 c= b1 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= b1 f0 cT
- |- (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) = ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))))
T c= c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
+ (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> c/\ cFINITE * * * part cset_of_edge f0 f4 f5 c/\ cIN f6 * * * part cset_of_edge f0 f4 f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f6 c/\ c~ c= f0 f6 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f0 * * part cINSERT f6 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f0 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((x = C) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c= f0 f3 cF
- |- ((((~ (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) ==> F) ==> (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) = (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A))
T c= c==> c==> c~ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 cF c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0
+ |- ((\b. (((hull affine) (a INSERT (b INSERT EMPTY))) = (GSPEC (\GEN%PVAR%1415. (?u. (?v. (((SETSPEC GEN%PVAR%1415) (((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0))))) ((vector_add ((% u) a)) ((% v) b))))))))) b)
T * / c= * * part chull part caffine * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * part cGSPEC / c? / c? / cSETSPEC b1 c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 cvector_add c% b2 f0 c% b3 b0 f1
+ |- (!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))))
T c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), (u IN (aff (x INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (T = (((~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))) ==> ((~ (x = w)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (w INSERT EMPTY))))))))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> c= f2 cvector_add c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f5 f6 f0 c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f7 creal_mul f3 f4 f1 c==> cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cT c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% f6 f0 c% f3 f8 f0
+ |- ((((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (x = va)) /\ (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f3 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) ==> ((\a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) a)) = ((\a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))) a))
T c= c==> ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY f3 * / c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b0 c/\ creal_lt b0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 f1 c% b0 f2 * * part cINSERT f2 part cEMPTY f3
- (~ F), (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ cF cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((real_lt (real_of_num (NUMERAL _0))) (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) |- ((((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- |- (((!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))) ==> ((\v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))) v1)) = ((\v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))) v1))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f4 * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f4
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% f3 f0 c% f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 cvector_add c% f5 f0 c% f6 f2 c= cvector_add c% f3 f0 c% f4 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f0
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> F) = F)
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF cF
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c= c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((((~ (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))) ==> F) ==> (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))) = (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i))))
T c= c==> c==> c~ c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 cF c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3
+ |- (((!u'. (!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))))))) ==> ((\u'. (!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))))))) w)) = ((\u'. (!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (u' INSERT EMPTY))))))) w))
T c= c==> ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 cF
+ |- (((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w)))) = (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))))))
T c= c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 cvector_add c% f3 f5 c% f6 f7 c/\ c==> c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 cvector_add c% f3 f5 c% f6 f7 c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 cvector_add c% f3 f5 c% f6 f7
+ |- (T = ((((% (real_of_num (NUMERAL _0))) u) = ((vector_add ((% ((real_sub t1') (real_of_num (NUMERAL (BIT1 _0))))) x)) ((% t2') w))) ==> (((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% (real_of_num (NUMERAL _0))) va)) = x)))
T c= cT c==> c= c% creal_of_num cNUMERAL c_0 f0 cvector_add c% creal_sub f1 creal_of_num cNUMERAL cBIT1 c_0 f2 c% f3 f4 c= cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f2 c% creal_of_num cNUMERAL c_0 f5 f2
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((_2889218 = _2889220) ==> ((~ (_2889219 = _2889221)) \/ (((vector_add _2889218) _2889219) = ((vector_add _2889220) _2889221))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- (_2889226 = _2889229) |- ((_2889226 = _2889229) /\ ((~ (_2889224 = _2889227)) \/ ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- ((((x' = x) /\ (x' = u)) /\ (~ (x = u))) /\ F)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c/\ c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 cF
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- (((!e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2))))) ==> ((\e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2))))) (v1 INSERT (w1 INSERT EMPTY)))) = ((\e2. ((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER e2))))) (v1 INSERT (w1 INSERT EMPTY))))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c= c==> ! c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * / c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * / c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b1 cIN b2 f1 * * part cINSERT b2 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY
- |- ((!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) = T)
T c= ! c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 cT
+ |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ |- ((!x. ((x IN (A INSERT (B INSERT (C INSERT EMPTY)))) = (x IN (A INSERT (C INSERT (B INSERT EMPTY)))))) = ((A INSERT (B INSERT (C INSERT EMPTY))) = (A INSERT (C INSERT (B INSERT EMPTY)))))
T c= ! c= cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u))) = T)
T c= c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cT
+ (~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) |- (((?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) ==> F) = F)
T c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 c= c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF cF
- |- ((!x'. ((P x') \/ Q)) = ((!x'. (P x')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (_2889206 = _2889208), (_2889207 = _2889209) |- ((_2889207 = _2889209) /\ (((real_mul _2889206) _2889207) = ((real_mul _2889208) _2889209)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) va)))))))) y))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!x'. (((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f3 b1 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f1 c% f4 f2 f3 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY ! c==> c/\ cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
- |- ((((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))) = T)
T c= c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cT
- |- ((!u. ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) = T)
T c= ! c==> c~ c\/ c= b0 f0 c= b0 f1 ! c==> c/\ c\/ c= b1 b0 c= b1 f2 c\/ c= b1 f0 c= b1 f1 c= b1 f2 cT
- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) /\ (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c/\ c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))) ==> (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0
- (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) |- ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) /\ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))
T c==> c= cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 cvector_add c% f6 f1 c% f7 f5 c/\ c= cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 cvector_add c% f6 f1 c% f7 f5 c= c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5
+ ((\t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) t1) |- (((?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) ==> (x' = x)) = (x' = x))
T c==> * / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 f3 c= c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f3 f1 c% b0 f2 c= f0 f1 c= f0 f1
- ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) |- ((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ (_2889226 = _2889229)) \/ ((~ (_2889224 = _2889227)) \/ ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t2), ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f4 c==> creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((x = A) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c= f0 f1 cF
+ |- ((((~ (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) ==> F) ==> (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) = (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0))))))
T c= c==> c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
- (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (x = v1), (x = w) |- ((~ (u = v1)) = (~ (u = v1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f3 f1 c~ c= f3 f1
+ (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- (x' = u)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c= f0 f2
+ (FAN (x , (V , E))), (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))))) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f5 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) ==> ((\w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) w)) = ((\w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) w))
T c= c==> ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 c= b1 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= b1 f0 cF * / c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 c= b1 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= b1 f0 cF f4 * / c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 c= b1 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= b1 f0 cF f4
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))) ==> (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ creal_le creal_of_num cNUMERAL c_0 f6 c/\ c= creal_add f7 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f7 f1 c% f6 f5 c= f0 f1
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- ((real_neg ((real_sub ((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i)))))) ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i))))) = ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))))
T c= creal_neg creal_sub creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_mul f4 c$ f6 f2 creal_add creal_mul f7 c$ f1 f2 creal_mul f8 c$ f6 f2 creal_add creal_mul f4 creal_mul f3 c$ f5 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f4 creal_mul f3 c$ f6 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 c$ f1 f2 creal_add creal_mul f7 c$ f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f3 c$ f5 f2 creal_mul f8 c$ f6 f2
- |- ((!v1. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))) = T)
T c= ! ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cT
- |- (((!s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) ==> ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s)) = ((\s. (!t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cINTER b0 b1 * part cGSPEC / c? / cSETSPEC b2 c/\ cIN b3 b0 cIN b3 b1 b3 f0
- (~ F), (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c/\ c~ cF cF
- (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) ==> (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c~ c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))) ==> ((~ (x = va)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f0 c, f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f1 c% f8 f2 f3 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f7 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- ((((real_add ((real_mul a) t2)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889223) /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889223)) ==> (_2889223 = x))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c= f5 f0
+ |- ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u)
T * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- (~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) |- ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) /\ F)
T c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 c/\ c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- |- ((\x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))))) x)
T * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 cF f1
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ |- (((w1 = w1) ==> F) = F)
T c= c==> c= f0 f0 cF cF
+ (~ (x = w)), (~ ((u = v1) \/ (u = w1))), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) |- ((x = v1) ==> F)
T c==> c~ c= f0 f1 c==> c~ c\/ c= f2 f3 c= f2 f4 c==> c/\ c\/ c= f0 f2 c= f0 f1 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 cF
+ |- ((((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)))) = (((!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) /\ (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (x INSERT EMPTY))))))
T c= c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 c==> c/\ ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
+ (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (B = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f1
- |- (T = (((~ (_2889215 = _2889217)) \/ ((~ (_2889214 = _2889216)) \/ (((% _2889214) _2889215) = ((% _2889216) _2889217)))) = ((((% _2889214) _2889215) = ((% _2889216) _2889217)) \/ ((~ (_2889215 = _2889217)) \/ (~ (_2889214 = _2889216))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1 c\/ c= c% f2 f0 c% f3 f1 c\/ c~ c= f0 f1 c~ c= f2 f3
+ |- ((((~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))) ==> ((~ (x = w)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (w INSERT EMPTY))))))))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)) = (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% f3 f0 c% f4 f5 f0 c= cvector_add c% f3 f0 c% f4 f5 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> c/\ cfan2 c, f0 c, f7 f8 c/\ cfan6 c, f0 c, f7 f8 ! ! c==> c/\ cIN b0 * * part cUNION f8 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f7 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f8 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f7 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER b0 b1 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f8 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f8 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) |- ((~ (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B))))) /\ F)
T c==> c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c~ c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ |- ((((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))) = T)
T c= c= c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cT
- (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f3 f1 c% b0 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f5 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f4 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c= f0 f1
- (_2889210 = _2889212) |- ((_2889210 = _2889212) /\ ((~ (_2889211 = _2889213)) \/ (((real_sub _2889210) _2889211) = ((real_sub _2889212) _2889213))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))) ==> (x' = x)) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f4 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0 cT
- (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 f3 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f1 cvector_add c% f5 f2 c% f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f4 c% f8 f3 f7 c==> creal_le creal_of_num cNUMERAL c_0 f6 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c= f1 f2
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6
- (~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) |- F
T c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((vector_add ((% t1) x)) ((% t2) va)) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= cvector_add c% f3 f0 c% f4 f8 cvector_add c% f5 f0 c% f6 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- (~ F), (~ ((u = v1) \/ (u = w1))), (x = u), (x = w1) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f2 c/\ c~ cF cF
+ (~ (((real_le (real_of_num (NUMERAL _0))) t2) ==> ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)))) |- ((((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) \/ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))))
T c==> c~ c==> creal_le creal_of_num cNUMERAL c_0 f0 c\/ c= f0 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f0 c\/ c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_lt (real_of_num (NUMERAL _0))) t2) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))), ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c==> creal_lt creal_of_num cNUMERAL c_0 f1 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f0 f5 c% creal_sub f6 creal_mul f1 f2 f7 c= cvector_add c% f0 f5 c% f1 f8 f5 c==> c\/ c= f1 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f1 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 cvector_add c% creal_sub f4 f0 f5 c% creal_sub f6 creal_mul f1 f2 f7 c= cvector_add c% f0 f5 c% f1 f8 f5
+ |- ((\x. (!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))))))))) x)
T * / ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b3 c/\ creal_lt b3 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b1 c% b3 b2 * * part cINSERT b1 part cEMPTY c~ ccollinear * * part cINSERT b0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b3 b1 c% b3 b2 * * part cINSERT b2 part cEMPTY f0
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F), (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
- |- (((!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))))) ==> ((\w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))))) w1)) = ((\w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))))) w1))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 c= b4 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c= b4 f0 cF * / ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 c= b4 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c= b4 f0 cF f1 * / ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 c= b4 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c= b4 f0 cF f1
+ |- ((((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) ==> F)
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF
- (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) |- ((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) /\ (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))
T c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
+ (~ (x = w)), (x = v1), (x = w) |- ((v1 = v1) ==> F)
T c==> c~ c= f0 f1 c==> c= f0 f2 c==> c= f0 f1 c==> c= f2 f2 cF
+ (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))), ((x = v1) ==> F), ((x = w1) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f3 cF c==> c==> c= f0 f4 cF cF
- |- ((((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va))) = T)
T c= c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 cT
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c= cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= c% creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (~ ((u = v1) \/ (u = w1))), (x = u), (x = v1) |- (~ (v1 = v1))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f1 c~ c= f1 f1
+ |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) /\ (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
+ (~ (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))) |- ((~ (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))) /\ F)
T c==> c~ c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 c/\ c~ c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 cF
+ |- (((!v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> ((\v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) va)) = ((\v1. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (x = v1)) /\ (v1 IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) ==> (((aff_ge (x INSERT EMPTY)) (v1 INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) va))
T c= c==> ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 * / c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 b0 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
+ (x = u), (x = w1) |- ((~ (u = w1)) = (~ (w1 = w1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f1 f2 c~ c= f2 f2
+ (u IN (aff (x INSERT (w INSERT EMPTY)))) |- ((u IN (aff (x INSERT (w INSERT EMPTY)))) = T)
T c==> cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- |- ((\v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))) v1)
T * / ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT f2 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b2 cF f4
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))) /\ (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f4 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f4 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0
+ |- ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% A) ((vector_add B) C)) $ i) = (((vector_add ((% A) B)) ((% A) C)) $ i)))) = (((% A) ((vector_add B) C)) = ((vector_add ((% A) B)) ((% A) C))))
T c= ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% f0 cvector_add f1 f2 b0 c$ cvector_add c% f0 f1 c% f0 f2 b0 c= c% f0 cvector_add f1 f2 cvector_add c% f0 f1 c% f0 f2
- |- ((~ (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) ==> F)
T c==> c~ c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 cF
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))) ==> (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f4 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f0 c% b1 f2 c= f5 f0
+ |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) ==> F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ (~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), (u IN (aff (x INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))) ==> ((~ (x = w)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (w INSERT EMPTY))))))))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> c= f2 cvector_add c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f5 f6 f0 c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f7 creal_mul f3 f4 f1 c==> cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= cvector_add c% f6 f0 c% f3 f8 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) ==> (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))) = (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)))
T c= c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f0 c, f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f1 c% f8 f2 f3 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f7 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889222) \/ ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- ((~ (_2889206 = _2889208)) \/ ((~ (_2889207 = _2889209)) \/ (((real_mul _2889206) _2889207) = ((real_mul _2889208) _2889209))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- |- ((!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) = T)
T c= ! ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cT
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f0 c, f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f1 c% f8 f2 f3 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f7 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) |- (?u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% u) x)) ((% v) w))))))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 f6 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f3 creal_mul f1 f4 f7 c? / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f6 c% b1 f7
- (_2889202 = _2889203) |- ((_2889202 = _2889203) /\ ((NUMERAL _2889202) = (NUMERAL _2889203)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) = ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va))
T c= c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3
- (x = w), (x = w1) |- ((~ (u = v1)) = (~ (u = v1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f3 f4 c~ c= f3 f4
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) |- (va = ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c= f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2
- |- (((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- ((\E. ((FAN (x , (V , E))) = (((UNIONS E) SUBSET V) /\ ((graph E) /\ ((fan1 (x , (V , E))) /\ ((fan2 (x , (V , E))) /\ ((fan6 (x , (V , E))) /\ (fan7 (x , (V , E)))))))))) E)
T * / c= cFAN c, f0 c, f1 b0 c/\ cSUBSET * part cUNIONS b0 f1 c/\ cgraph b0 c/\ cfan1 c, f0 c, f1 b0 c/\ cfan2 c, f0 c, f1 b0 c/\ cfan6 c, f0 c, f1 b0 cfan7 c, f0 c, f1 b0 f2
- (_2889206 = _2889208) |- ((_2889207 = _2889209) ==> (((real_mul _2889206) _2889207) = ((real_mul _2889208) _2889209)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- ((~ (_2889238 = u)) \/ (~ (_2889238 = u)))
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c\/ c~ c= f2 f1 c~ c= f2 f1
+ (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u)))) |- ((((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u)))) /\ F)
T c==> c\/ c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c/\ c/\ c= f2 f0 c= f2 f1 c~ c= f0 f1 c/\ c\/ c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c/\ c/\ c= f2 f0 c= f2 f1 c~ c= f0 f1 cF
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (x' = x)) ==> F)
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c~ c= f5 f0 cF
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))), ((x = A) ==> F), (((x = B) \/ (x = C)) ==> F) |- F
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f2 c= f0 f3 cF cF
- |- (((!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))) ==> ((\w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))) w1)) = ((\w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))) w1))
T c= c==> ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 cF * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 cF f3 * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 cF f3
+ |- ((~ (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))) ==> F)
T c==> c~ c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 cF
- |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) = T)
T c==> cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cT
+ |- ((((real_lt (real_of_num (NUMERAL _0))) t2) /\ ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x''))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) = ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f5 c\/ ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f5
+ |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- (_2889200 = _2889201) |- ((_2889200 = _2889201) /\ ((BIT1 _2889200) = (BIT1 _2889201)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((x IN (y INSERT EMPTY)) = (x = y))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
+ |- (((!i. (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))) ==> ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))))) = ((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))))
T c= c==> ! c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0 c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 b0 c$ cvector_add c% f6 f1 c% f7 f5 b0 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 b0 c$ cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 b0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) |- ((((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) |- (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = T)
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cT
- |- (((!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) ==> ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C)) = ((\C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) C))
T c= c==> ! ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1 * / ! c==> c~ ! c= c\/ c= b2 b1 c\/ c= b2 f0 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c= b2 f0 cF f1
+ ((\x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) x') |- (((((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u)))) ==> F) = F)
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 f2 c= c==> c\/ c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c/\ c/\ c= f2 f0 c= f2 f1 c~ c= f0 f1 cF cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((((FAN (x , (V , E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN f5 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f5 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cT
- |- ((!w1. (!v1. (!u. ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))))) = T)
T c= ! ! ! c==> c~ c\/ c= b2 b1 c= b2 b0 ! c==> c/\ c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cT
+ (~ (x = w)), (~ ((u = v1) \/ (u = w1))), (((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) |- ((~ (x = w)) /\ F)
T c==> c~ c= f0 f1 c==> c~ c\/ c= f2 f3 c= f2 f4 c==> c/\ c\/ c= f0 f2 c= f0 f1 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 cF
- (_2889206 = _2889208) |- ((_2889206 = _2889208) /\ ((~ (_2889207 = _2889209)) \/ (((real_mul _2889206) _2889207) = ((real_mul _2889208) _2889209))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- |- ((~ (_2889202 = _2889203)) \/ ((NUMERAL _2889202) = (NUMERAL _2889203)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((real_neg ((real_sub ((real_mul A) ((real_add (B $ i)) (C $ i)))) ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 creal_of_num cNUMERAL c_0
+ (~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), (u IN (aff (x INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))) /\ (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> c= f2 cvector_add c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f5 f6 f0 c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f7 creal_mul f3 f4 f1 c==> cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cvector_add c% f6 f0 c% f3 f8 f0
- |- ((_2889230 = _2889232) ==> ((~ (_2889231 = _2889233)) \/ ((_2889230 INSERT _2889231) = (_2889232 INSERT _2889233))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (FAN (x , (V , E))), ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ c~ cIN f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f6 creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f7 part cEMPTY f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f3 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- (_2889231 = _2889233), (_2889230 = _2889232) |- ((_2889231 = _2889233) /\ ((_2889230 INSERT _2889231) = (_2889232 INSERT _2889233)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (A = C))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f3
+ (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))) |- ((((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v1 INSERT (w1 INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> ! ! c==> c/\ cIN b0 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY cIN b1 * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b2 cIN b3 f1 * * part cINSERT b3 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER b0 b1 c= c==> c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cUNION f0 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f1 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINTER * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f7 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f7 part cEMPTY * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f2 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), (((real_le (real_of_num (NUMERAL _0))) t2') /\ ((((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2') w))))), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_le (real_of_num (NUMERAL _0))) t2') /\ ((((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2') w))))) /\ (x' = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f8 c/\ c= creal_add f9 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f9 f0 c% f8 f2 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ creal_le creal_of_num cNUMERAL c_0 f8 c/\ c= creal_add f9 f8 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f9 f0 c% f8 f2 c= f5 f0
+ (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) /\ F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) ==> F)
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= f1 cvector_add c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f5 f3 f0 c% creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((x = C) /\ F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c= f0 f1 cF
+ |- ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) ==> (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (~ (x = w)), (x = w), (x = w1) |- F
T c==> c~ c= f0 f1 c==> c= f0 f1 c==> c= f0 f2 cF
+ |- (((!u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) ==> ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u)) = ((\u. (!w. ((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))))) u))
T c= c==> ! ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt f1 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% f1 b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))
T c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
+ ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) t2) |- (((((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))) ==> (x' = x)) = (x' = x))
T c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 f3 f4 c= c==> c/\ creal_le creal_of_num cNUMERAL c_0 f4 c/\ c= creal_add f0 f4 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% f4 f3 c= f1 f2 c= f1 f2
+ |- (((!u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) ==> ((\u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) u)) = ((\u. (!w. (!a. ((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY)))))))))) u))
T c= c==> ! ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY f1 * / ! ! c==> c/\ creal_lt creal_of_num cNUMERAL c_0 b2 c/\ creal_lt b2 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b0 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 b2 b0 c% b2 b1 * * part cINSERT b1 part cEMPTY f1
+ (~ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) |- ((~ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) /\ F)
T c==> c~ c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ c~ c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ ((\x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) x') |- (((\x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) x') /\ F)
T c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 f2 c/\ * / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 f2 cF
+ (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((C = C) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c= f1 f1 cF
- (x = w), (x = w1) |- ((~ (u = w1)) = (~ (u = w1)))
T c==> c= f0 f1 c==> c= f0 f2 c= c~ c= f3 f2 c~ c= f3 f2
- (va = x) |- (x = va)
T c==> c= f0 f1 c= f1 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) /\ (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (x INSERT EMPTY)))))
T c==> c/\ ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((\x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))) (real_of_num (NUMERAL (BIT1 _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 * / c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (~ (x = w)), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) |- (((((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT EMPTY))) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ c= f0 f1 c==> cSUBSET * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cSUBSET * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f2 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) = T)
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0 cT
+ |- ((((((real_lt (real_of_num (NUMERAL _0))) a) /\ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) /\ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))))) ==> ((~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT (w INSERT EMPTY))))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 c/\ creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f2 part cEMPTY c~ ccollinear * * part cINSERT f1 * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 c% f0 f3 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f1 part cEMPTY
+ (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 cF
+ (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 cF
+ |- (((!x'. (((\x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) x') ==> F)) ==> ((?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) ==> F)) = ((?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) ==> F))
T c= c==> ! c==> * / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b1 f0 c= b1 f1 c~ c= f0 f1 b0 cF c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (va INSERT (w INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))) /\ (~ (collinear (x INSERT (va INSERT (w INSERT EMPTY)))))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT f2 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f8 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT f1 part cEMPTY c~ ccollinear * * part cINSERT f0 * * part cINSERT f8 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c==> c~ cF cF
- |- ((_2889202 = _2889203) ==> ((NUMERAL _2889202) = (NUMERAL _2889203)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((((!x'. ((x' IN ((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))))) /\ (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))) = (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))))
T c= c==> c/\ ! c==> cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f5 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((~ a) \/ (~ b)) = (~ (a /\ b)))
T c= c\/ c~ f0 c~ f1 c~ c/\ f0 f1
+ |- ((\x. (!v. ((~ (x = v)) ==> (((aff_ge (x INSERT EMPTY)) (v INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) v)))))))) y)))))))) x)
T * / ! c==> c~ c= b0 b1 c= * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY * part cGSPEC / c? / cSETSPEC b2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b5 c/\ c= creal_add b4 b5 creal_of_num cNUMERAL cBIT1 c_0 c= b3 cvector_add c% b4 b0 c% b5 b1 b3 f0
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))), ((x = A) ==> F), (((x = C) \/ (x = B)) ==> F) |- F
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c==> c= f0 f1 cF c==> c==> c\/ c= f0 f3 c= f0 f2 cF cF
+ |- ((~ (((real_mul A) ((real_mul B) (C $ i))) = ((real_mul ((real_mul A) B)) (C $ i)))) ==> F)
T c==> c~ c= creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 cF
- (~ ((u = v1) \/ (u = w1))), (x = u), (x = w1) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f2 c==> c~ cF cF
- (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) ==> ((\x'. ((~ (x' = x)) \/ (~ (x' = u)))) _2889238)) = ((\x'. ((~ (x' = x)) \/ (~ (x' = u)))) _2889238))
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c= c==> ! c\/ c~ c= b0 f0 c~ c= b0 f1 * / c\/ c~ c= b0 f0 c~ c= b0 f1 f2 * / c\/ c~ c= b0 f0 c~ c= b0 f1 f2
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)), ((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) t2) |- (((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) t2) /\ (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f6 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f6 f1 c% b0 f5 f7 c/\ * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f6 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f6 f1 c% b0 f5 f7 c= f0 f1
+ |- (((u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)) = ((((% (real_of_num (NUMERAL (BIT1 _0)))) u) = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c= c==> c= f0 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_sub f3 f4 f5 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_sub f6 creal_mul f1 f2 f7 c= cvector_add c% f4 f5 c% f1 f8 f5 c==> c= c% creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_sub f3 f4 f5 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 creal_sub f6 creal_mul f1 f2 f7 c= cvector_add c% f4 f5 c% f1 f8 f5
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 creal_of_num cNUMERAL cBIT1 c_0 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= c% creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% creal_inv creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((x = B) /\ F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c/\ c= f0 f1 cF
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) /\ F)
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ |- (((!E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) ==> ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E)) = ((\E. (!V. (!x. ((fan7 (x , (V , E))) = (!e1. (!e2. (((e1 IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ (e2 IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) e1) INTER ((aff_ge (x INSERT EMPTY)) e2)) = ((aff_ge (x INSERT EMPTY)) (e1 INTER e2)))))))))) E))
T c= c==> ! ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0 * / ! ! c= cfan7 c, b2 c, b1 b0 ! ! c==> c/\ cIN b3 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY cIN b4 * * part cUNION b0 * part cGSPEC / c? / cSETSPEC b5 cIN b6 b1 * * part cINSERT b6 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT b2 part cEMPTY b3 * * part caff_ge * * part cINSERT b2 part cEMPTY b4 * * part caff_ge * * part cINSERT b2 part cEMPTY * * part cINTER b3 b4 f0
+ |- ((real_neg ((real_sub ((real_mul A) ((real_mul B) (C $ i)))) ((real_mul ((real_mul A) B)) (C $ i)))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_mul f0 creal_mul f1 c$ f2 f3 creal_mul creal_mul f0 f1 c$ f2 f3 creal_of_num cNUMERAL c_0
- (_2889218 = _2889220), (_2889219 = _2889221) |- ((_2889219 = _2889221) /\ (((vector_add _2889218) _2889219) = ((vector_add _2889220) _2889221)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
+ |- ((_2889215 = _2889217) ==> ((~ (_2889214 = _2889216)) \/ (((% _2889214) _2889215) = ((% _2889216) _2889217))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c% f2 f0 c% f3 f1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cFAN c, f0 c, f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f1 c% f8 f2 f3 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f7 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f7 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- (_2889210 = _2889212) |- ((_2889211 = _2889213) ==> (((real_sub _2889210) _2889211) = ((real_sub _2889212) _2889213)))
T c==> c= f0 f1 c==> c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
- |- ((~ (_2889230 = _2889232)) \/ ((~ (_2889231 = _2889233)) \/ ((_2889230 INSERT _2889231) = (_2889232 INSERT _2889233))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ (~ ((u = v1) \/ (u = w1))) |- (((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w)) = T)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c= c==> c/\ c\/ c= f3 f0 c= f3 f4 c\/ c= f3 f1 c= f3 f2 c= f3 f4 cT
+ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) = (GSPEC (\GEN%PVAR%5522. (?y. (((SETSPEC GEN%PVAR%5522) (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (y = ((vector_add ((% t1) x)) ((% t2) w)))))))) y))))) |- ((!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))) ==> (x' = x))) = (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' = x))))
T c==> c= * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * part cGSPEC / c? / cSETSPEC b0 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b3 c/\ c= creal_add b2 b3 creal_of_num cNUMERAL cBIT1 c_0 c= b1 cvector_add c% b2 f0 c% b3 f1 b1 c= ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f1 c= b0 f0 ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY c= b0 f0
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f2
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (?x'. (((x' = x) /\ (x' = u)) /\ (~ (x = u))))) = (?x'. (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) \/ (((x' = x) /\ (x' = u)) /\ (~ (x = u))))))
T c= c\/ c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c? / c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 c? / c\/ c/\ ! c\/ c~ c= b1 f0 c~ c= b1 f1 c= f0 f1 c/\ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1
+ ((real_lt (real_of_num (NUMERAL _0))) t2), ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))) = (((((real_lt (real_of_num (NUMERAL _0))) t2) /\ ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))))
T c==> creal_lt creal_of_num cNUMERAL c_0 f0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 f8 f5 c==> c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 f8 f5
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f1 c% f4 f2 f3 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((t2 = (real_of_num (NUMERAL _0))) \/ ((real_lt (real_of_num (NUMERAL _0))) t2)) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ c\/ c= f4 creal_of_num cNUMERAL c_0 creal_lt creal_of_num cNUMERAL c_0 f4 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
- |- ((~ (_2889198 = _2889199)) \/ ((real_inv _2889198) = (real_inv _2889199)))
T c\/ c~ c= f0 f1 c= creal_inv f0 creal_inv f1
- |- ((!x. ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) = T)
T c= ! c= ! c~ c/\ c= b1 b0 c= b1 f0 c~ c= b0 f0 cT
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) |- (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (((!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) ==> ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) u)) = ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f5 * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f5
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (!x'. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) t2) ==> (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f6 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f6 f1 c% b0 f5 f7 c= f0 f1
- (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- F
T c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
+ (FAN (x , (V , E))), (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ (u IN (v1 INSERT (w1 INSERT EMPTY)))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0))))))), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ cIN f3 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f7 creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f3 c% f7 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f1 f2 c% f3 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 c% f4 f6 f0 c$ cvector_add c% f7 f2 c% f8 f6 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f5 f0 c$ cvector_add c% creal_sub f7 f1 f2 c% creal_sub f8 creal_mul f3 f4 f6 f0
+ |- ((A INSERT (B INSERT (C INSERT EMPTY))) = (A INSERT (C INSERT (B INSERT EMPTY))))
T c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ (t1 = (real_of_num (NUMERAL (BIT1 _0)))) |- (((((% (real_of_num (NUMERAL _0))) u) = ((vector_add ((% ((real_sub t1') (real_of_num (NUMERAL (BIT1 _0))))) x)) ((% t2') w))) ==> (((vector_add ((% (real_of_num (NUMERAL (BIT1 _0)))) x)) ((% (real_of_num (NUMERAL _0))) va)) = x)) = ((((% (real_of_num (NUMERAL _0))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% (real_of_num (NUMERAL _0))) va)) = x)))
T c==> c= f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> c= c% creal_of_num cNUMERAL c_0 f1 cvector_add c% creal_sub f2 creal_of_num cNUMERAL cBIT1 c_0 f3 c% f4 f5 c= cvector_add c% creal_of_num cNUMERAL cBIT1 c_0 f3 c% creal_of_num cNUMERAL c_0 f6 f3 c==> c= c% creal_of_num cNUMERAL c_0 f1 cvector_add c% creal_sub f2 f0 f3 c% f4 f5 c= cvector_add c% f0 f3 c% creal_of_num cNUMERAL c_0 f6 f3
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((\t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))) t2') ==> (x' = x)) = T)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% f3 f0 c% f4 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f6 c==> creal_le creal_of_num cNUMERAL c_0 f4 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= c==> * / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f8 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% f8 f0 c% b0 f2 f9 c= f5 f0 cT
+ |- ((((~ ((((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))) ==> (((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i)))))) ==> F) ==> ((((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))) ==> (((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i)))))) = ((((real_add ((real_mul t1) (x $ i))) ((real_mul t2) ((real_add ((real_mul ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) (u $ i))) ((real_mul a) (w $ i))))) = ((real_add ((real_mul t1') (x $ i))) ((real_mul t2') (w $ i)))) ==> (((real_mul ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) (u $ i)) = ((real_add ((real_mul ((real_sub t1') t1)) (x $ i))) ((real_mul ((real_sub t2') ((real_mul t2) a))) (w $ i))))))
T c= c==> c==> c~ c==> c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_mul f4 c$ f6 f2 creal_add creal_mul f7 c$ f1 f2 creal_mul f8 c$ f6 f2 c= creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_add creal_mul creal_sub f7 f0 c$ f1 f2 creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 f2 cF c==> c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_mul f4 c$ f6 f2 creal_add creal_mul f7 c$ f1 f2 creal_mul f8 c$ f6 f2 c= creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_add creal_mul creal_sub f7 f0 c$ f1 f2 creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 f2 c==> c= creal_add creal_mul f0 c$ f1 f2 creal_mul f3 creal_add creal_mul creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_mul f4 c$ f6 f2 creal_add creal_mul f7 c$ f1 f2 creal_mul f8 c$ f6 f2 c= creal_mul creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 c$ f5 f2 creal_add creal_mul creal_sub f7 f0 c$ f1 f2 creal_mul creal_sub f8 creal_mul f3 f4 c$ f6 f2
- (_2889226 = _2889229) |- ((_2889224 = _2889227) ==> ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) /\ (x' = x))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c/\ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c= f5 f0
+ |- (((!x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) ==> ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x)) = ((\x. (!v. (!u. ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) ==> ((~ (x = v)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f0
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889223)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889223)) \/ (_2889223 = x)))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f5 c= f5 f0
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- ((\x'. ((~ (x' = x)) \/ (~ (x' = u)))) _2889238)
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 * / c\/ c~ c= b0 f0 c~ c= b0 f1 f2
+ (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) |- (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = x)) = ((((vector_add ((% t1) x)) ((% t2) va)) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c= c==> c= cvector_add c% f4 f5 c% f6 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 cvector_add c% f7 f5 c% f8 f2 c= cvector_add c% f4 f5 c% f6 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f5 c==> c= cvector_add c% f4 f5 c% f6 f3 cvector_add c% f7 f5 c% f8 f2 c= cvector_add c% f4 f5 c% f6 f3 f5
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (x' = x)
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> c/\ creal_le creal_of_num cNUMERAL c_0 f6 c/\ c= creal_add f7 f6 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f7 f1 c% f6 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c= f0 f1
+ (~ ((u = v1) \/ (u = w1))), (x = u), (x = v1) |- F
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f1 cF
- (~ (x = w)), (x = u) |- (~ (u = w))
T c==> c~ c= f0 f1 c==> c= f0 f2 c~ c= f2 f1
+ (~ (collinear (x INSERT (w INSERT (u INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), (u IN (aff (x INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((vector_add ((% t1) x)) ((% t2) va)) = x)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f1 c==> c= f2 cvector_add c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f5 f6 f0 c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f7 creal_mul f3 f4 f1 c==> cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cvector_add c% f6 f0 c% f3 f8 f0
+ (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) ==> F), (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) \/ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0))))) |- F
T c==> c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF c==> c\/ c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 cF
+ (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) /\ ((real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) = (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c==> c/\ c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
+ |- ((((u = u) /\ (u = u)) ==> F) = F)
T c= c==> c/\ c= f0 f0 c= f0 f0 cF cF
+ (~ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')), ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> F) |- F
T c==> c~ c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 cF cF
+ ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (!x'. ((((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) /\ (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c/\ c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0
+ |- ((((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i)) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))) ==> (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i))))) = (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) $ i) = (((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)) $ i))) ==> ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) $ i) = (((vector_add ((% t1') x)) ((% t2') w)) $ i)))))
T c= c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c==> c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0 c==> c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 f0 c$ cvector_add c% creal_sub f4 f5 f6 c% creal_sub f7 creal_mul f1 f2 f8 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add c% f5 f6 c% f1 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f2 f3 c% f2 f8 f0 c$ cvector_add c% f4 f6 c% f7 f8 f0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) = (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c= c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))), (u IN (aff (x INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((vector_add ((% t1) x)) ((% t2) va)) = x)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= f1 cvector_add c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f5 f6 f0 c% creal_mul creal_inv creal_mul f3 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f7 creal_mul f3 f4 f2 c==> cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c= cvector_add c% f6 f0 c% f3 f8 f0
+ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) |- ((((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))) = ((((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))))
T c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f1 f0 f7 c= cvector_add c% f4 f5 c% f1 f8 f5 c==> c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f1 f0 f7 c= cvector_add c% f4 f5 c% f1 f8 f5
+ |- ((((((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ (((real_lt (real_of_num (NUMERAL _0))) a) /\ ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))))) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))) = (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c= c==> c==> c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_lt creal_of_num cNUMERAL c_0 f3 creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 cIN cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c/\ c~ c= f3 f0 c/\ c~ c= f3 f6 c/\ c~ c= f0 f6 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f6 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c/\ cIN f0 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f0 * * part cINSERT f6 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f0 c% f7 f6 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))) SUBSET (w INSERT EMPTY)) /\ ((DISJOINT (x INSERT EMPTY)) (w INSERT EMPTY))) ==> (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> c/\ cSUBSET * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((\x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))) x)
T * / ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 cF f4
+ (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- F
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 cF
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((x = A) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c= f0 f1 cF
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) |- ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0
+ |- ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) |- ((~ (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) /\ F)
T c==> c~ c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 c/\ c~ c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 cF
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c~ cF cF
+ (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ (x = B)) /\ (~ (x = C)))
T c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c~ c= f0 f2 c~ c= f0 f3
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge t2) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- |- (((!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))) ==> ((\va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))) va)) = ((\va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))) va))
T c= c==> ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 cF * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 cF f2 * / ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 cF f2
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f3 c% f5 f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))), (~ (x = u)) |- ((((~ (x = va)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((~ (collinear (x INSERT (va INSERT (u INSERT EMPTY))))) ==> ((~ (x = va)) /\ ((~ (x = u)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f2 c= c==> c/\ c~ c= f0 f1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) |- (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) /\ ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c/\ c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
+ ((((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) \/ (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))))) |- F
T c==> c\/ c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 cF
- (x = w) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ |- (((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 cF
- |- ((((~ (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) ==> F) ==> (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) = (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i)))))
T c= c==> c==> c~ c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 cF c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2
+ ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((A = A) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c==> c= f1 f1 cF
+ |- ((u = u) /\ (u = u))
T c/\ c= f0 f0 c= f0 f0
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) t2), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= creal_add f3 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 c==> c= c% creal_mul f4 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 cvector_add c% creal_sub f5 f3 f0 c% creal_sub f6 creal_mul f4 f7 f2 c= cvector_add c% f3 f0 c% f4 f8 f0
+ (x = w), (x = w1) |- (w = w1)
T c==> c= f0 f1 c==> c= f0 f2 c= f1 f2
+ ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- ((~ (_2889238 = x)) \/ (~ (_2889238 = u)))
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1
+ |- (((((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x))) = ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) va)) = x)))
T c= c==> c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f1 f0 f7 c= cvector_add c% f4 f5 c% f1 f8 f5 c==> c= c% creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f1 f0 f7 c= cvector_add c% f4 f5 c% f1 f8 f5
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (((x = B) \/ (x = C)) ==> F)
T c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c\/ c= f0 f2 c= f0 f3 cF
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) /\ F)
T c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c/\ c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
+ |- ((((!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))))) /\ (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) ==> (x' IN (x INSERT EMPTY))))) ==> (!x'. ((x' IN (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))))) ==> (x' IN (x INSERT EMPTY))))) = ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c= c==> c/\ ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY ! c==> cIN b0 * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cIN b0 * * part cINSERT f0 part cEMPTY c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
+ |- (((((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))) ==> (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) /\ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w)))))
T c/\ c==> c= cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 cvector_add c% f6 f1 c% f7 f5 c= c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 c==> c= c% creal_mul f2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 cvector_add c% creal_sub f6 f0 f1 c% creal_sub f7 creal_mul f2 f3 f5 c= cvector_add c% f0 f1 c% f2 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f4 c% f3 f5 cvector_add c% f6 f1 c% f7 f5
- |- ((((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) = ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))
T c= c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
+ (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- F
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 cF
- (w IN (((set_of_edge u) V) E)) |- ((w IN (((set_of_edge u) V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
- (~ (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((((u INSERT (w INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5449. (?v. (((SETSPEC GEN%PVAR%5449) (v IN V)) (v INSERT EMPTY))))))) /\ ((v1 INSERT (w1 INSERT EMPTY)) IN (E UNION (GSPEC (\GEN%PVAR%5450. (?v. (((SETSPEC GEN%PVAR%5450) (v IN V)) (v INSERT EMPTY)))))))) ==> ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c= * * part cINTER * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY c==> c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f7 * * part cINSERT b1 part cEMPTY cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cUNION f2 * part cGSPEC / c? / cSETSPEC b0 cIN b1 f7 * * part cINSERT b1 part cEMPTY c= * * part cINTER * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINTER * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY * * part caff_ge * * part cINSERT f5 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f5 part cEMPTY
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F), (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
+ |- (((real_sub a) (real_of_num (NUMERAL _0))) = a)
T c= creal_sub f0 creal_of_num cNUMERAL c_0 f0
+ (~ ((u = v1) \/ (u = w1))) |- ((~ (u = v1)) /\ (~ (u = w1)))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f2
+ ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) |- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6
- ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) |- ((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- |- ((real_neg ((real_sub ((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A)) A)) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_sub creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 creal_of_num cNUMERAL c_0
- |- ((_2889200 = _2889201) ==> ((BIT1 _2889200) = (BIT1 _2889201)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ (((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c~ c==> creal_lt f0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_of_num cNUMERAL c_0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = w), (x = w1) |- (F = F)
T c==> c= f0 f1 c==> c= f0 f2 c= cF cF
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (~ (w IN (aff (x INSERT (u INSERT EMPTY))))), (FAN (x , (V , E))), ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) ==> (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f7 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 b0 f8 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
+ |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
+ (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) |- ((\u. (?v. ((((real_add u) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% u) x)) ((% v) w)))))) ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1)))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 f6 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f3 creal_mul f1 f4 f7 * / c? / c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% b0 f6 c% b1 f7 creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
+ (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) = ((((real_add ((real_mul a) t2)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c/\ c= creal_add creal_mul f0 f1 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
+ |- (((real_lt (real_of_num (NUMERAL _0))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) ==> (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0
+ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) ==> (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f3 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 f3 c% f4 f2 f5 c==> creal_lt f4 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f5 c= f0 f1
- |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((~ (x = va)) /\ (((DISJOINT (x INSERT (va INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (va INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (va INSERT (u INSERT EMPTY))) /\ (~ (u IN (aff (x INSERT (va INSERT EMPTY))))))))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E), (va IN ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c~ cIN f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f5 f6 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f7 f1 c% f7 f2 f8 c==> c/\ c~ c= f0 f8 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f8 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f8 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f8 * * part cINSERT f1 part cEMPTY c~ cIN f1 * part caff * * part cINSERT f0 * * part cINSERT f8 part cEMPTY c==> creal_lt f7 creal_of_num cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f8 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f8 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
+ (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- (!x'. (((?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va))))))) /\ (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w)))))))) ==> (x' = x)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f3 f1 c% f3 f2 f4 c==> creal_lt f3 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY ! c==> c/\ c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f4 c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b2 c/\ c= creal_add b1 b2 creal_of_num cNUMERAL cBIT1 c_0 c= b0 cvector_add c% b1 f0 c% b2 f2 c= b0 f0
- (~ (((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) = (real_of_num (NUMERAL _0)))) |- (((real_of_num (NUMERAL _0)) = ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = F)
T c==> c~ c= creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 creal_of_num cNUMERAL c_0 c= c= creal_of_num cNUMERAL c_0 creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cF
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) /\ (((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2) = (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
+ (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (((real_add t1') t2') = (real_of_num (NUMERAL (BIT1 _0)))), (((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) = (real_of_num (NUMERAL (BIT1 _0)))), (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t2') ((real_mul t2) a)))) w))) |- (?v. ((((real_add ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) v) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (u = ((vector_add ((% ((real_mul (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((real_sub t1') t1))) x)) ((% v) w)))))
T c==> c= creal_add f0 f1 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_add f2 f3 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f5 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 f6 c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f3 creal_mul f1 f4 f7 c? / c/\ c= creal_add creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f5 cvector_add c% creal_mul creal_inv creal_mul f1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f4 creal_sub f2 f0 f6 c% b0 f7
+ (~ ((u = v1) \/ (u = w1))), (x = w1) |- ((x = u) ==> F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f2 c==> c= f3 f0 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- |- (((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w)))) = T)
T c= c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cT
- |- (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) = ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w)))))
T c= c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3
- ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- ((~ F) ==> F)
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c==> c~ cF cF
- |- ((\w. (!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))))) w)
T * / ! ! ! c==> c~ c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0
- |- ((!w1. (!v1. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))))) = T)
T c= ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 cT
- (fan6 (x , (V , E))) |- ((fan6 (x , (V , E))) = T)
T c==> cfan6 c, f0 c, f1 f2 c= cfan6 c, f0 c, f1 f2 cT
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x''))) \/ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) = ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')))) \/ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f4 c\/ ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY f4
- |- ((\x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) x)
T * / c==> c~ c= ! c~ c/\ c= b1 b0 c= b1 f0 c~ c= b0 f0 cF f1
- |- (((!w. (!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))))) ==> ((\w. (!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))))) w)) = ((\w. (!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))))) w))
T c= c==> ! ! ! ! c==> c~ c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ c==> c~ c\/ c= b3 b2 c= b3 b1 ! c==> c/\ c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b2 c= b4 b1 c= b4 b0 cF f0
- |- (((!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A)) = ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A))
T c= c==> ! c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2 * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) |- (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) /\ ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c/\ c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- ((\va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))) va)
T * / ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 c= b2 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 f0 cF f3
- |- ((\w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) w)
T * / c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b1 c= b1 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b1 c= b1 f0 cF f4
- ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F), (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) |- (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) /\ ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c/\ c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- (~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) |- F
T c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
- |- ((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) = ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c= c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (_2889224 = _2889227), (_2889225 = _2889228), (_2889226 = _2889229) |- ((_2889225 = _2889228) /\ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ cF cF
- |- ((\u. (!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))) u)
T * / ! c==> c~ c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 cF f0
- (~ ((u = v1) \/ (u = w1))), (x = u), (x = v1) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f1 c==> c~ cF cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) A)
T * / c==> c~ ! c= c\/ c= b1 b0 c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f1 c= b1 f0 cF f2
- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'))
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (_2889230 = _2889232) |- ((_2889231 = _2889233) ==> ((_2889230 INSERT _2889231) = (_2889232 INSERT _2889233)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) /\ ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c/\ c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) |- ((((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))) ==> F)
T c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- (((real_ge t2) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge t2) (real_of_num (NUMERAL _0)))))
T c= creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0
- ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F), (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) |- ((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) /\ ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c/\ c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- ((((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)) ==> (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))
T c==> c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- (~ ((u = v1) \/ (u = w1))), (x = u), (x = v1) |- (~ (v1 = w1))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f1 c~ c= f1 f2
- |- ((\w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))) w1)
T * / ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT f2 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b3 cF f3
- |- ((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) = ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c= c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- |- ((!w1. (!v1. (!va. (!w. (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)))))))) = T)
T c= ! ! ! ! c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 c= b4 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c= b4 f0 cT
- (~ F), (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c/\ c~ cF cF
- |- ((!x'. (P \/ (Q x'))) = (P \/ (!x'. (Q x'))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) /\ ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c/\ c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- ((UNIONS E) SUBSET V) |- (((UNIONS E) SUBSET V) = T)
T c==> cSUBSET * part cUNIONS f0 f1 c= cSUBSET * part cUNIONS f0 f1 cT
- |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!va. (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va))))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- ((\w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))))) w1)
T * / ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 part cEMPTY b4 c= b4 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b4 c= b4 f0 cF f1
- (~ (x' = x)) |- ((x' = x) ==> F)
T c==> c~ c= f0 f1 c==> c= f0 f1 cF
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- (~ ((u = v1) \/ (u = w1))), (x = u), (x = w1) |- (~ (w1 = v1))
T c==> c~ c\/ c= f0 f1 c= f0 f2 c==> c= f3 f0 c==> c= f3 f2 c~ c= f2 f1
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889237)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889237)) \/ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889237))) = ((((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889237) \/ ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) _2889237)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889237))))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY f3 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3
- |- ((\t. ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))) t)
T * / c= * * part cINTER f0 b0 * part cGSPEC / c? / cSETSPEC b1 c/\ cIN b2 f0 cIN b2 b0 b2 f1
- |- (((!x. (!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))))) ==> ((\x. (!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))))) x)) = ((\x. (!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))))) x))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 cF * / ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 cF f0 * / ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 cF f0
- (~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) |- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) /\ F)
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c/\ c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
- |- (((!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))) ==> ((\t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))) t2)) = ((\t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))) t2))
T c= c==> ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 c= c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 cF * / ! ! ! ! ! c==> c~ c==> c= c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 c= c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 cF f2 * / ! ! ! ! ! c==> c~ c==> c= c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 c= c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 cF f2
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222))) \/ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5
- (~ (x' = x)), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (x' = x)) /\ F)
T c==> c~ c= f0 f1 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c= b0 f1 c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ c~ c= f0 f1 cF
- |- ((_2889204 = _2889205) ==> ((real_of_num _2889204) = (real_of_num _2889205)))
T c==> c= f0 f1 c= creal_of_num f0 creal_of_num f1
- ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F), (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) |- ((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) /\ ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) |- ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va)
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3
- |- (((!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))))) ==> ((\x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))))) x)) = ((\x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)))))) x))
T c= c==> ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 cF * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 cF f1 * / ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT f0 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f0 part cEMPTY b5 cF f1
- (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))), ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) |- (((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c/\ c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- (~ (x = va)) |- (~ (va = x))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!u. (!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))) ==> ((\u. (!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))) u)) = ((\u. (!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))) u))
T c= c==> ! ! c==> c~ c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 cF * / ! c==> c~ c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 cF f0 * / ! c==> c~ c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 cF f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (FAN (x , (V , E))), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge v1) V) E)) /\ ((w1 IN (((set_of_edge v1) V) E)) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v1) V) E)) /\ ((((v1 INSERT (w1 INSERT EMPTY)) IN E) = (w1 IN (((set_of_edge v1) V) E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f5 f6 c% f5 f7 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY
- ((!x'. ((~ (x' = x)) \/ (~ (x' = u)))) /\ (x = u)) |- (F = F)
T c==> c/\ ! c\/ c~ c= b0 f0 c~ c= b0 f1 c= f0 f1 c= cF cF
- (fan1 (x , (V , E))) |- ((fan1 (x , (V , E))) = T)
T c==> cfan1 c, f0 c, f1 f2 c= cfan1 c, f0 c, f1 f2 cT
- (?t1. (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) w))))))), (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1) x)) ((% t2) va)))))) /\ (x' = x))
T c==> c? / c? / c/\ creal_le creal_of_num cNUMERAL c_0 b1 c/\ c= creal_add b0 b1 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% b0 f1 c% b1 f2 c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f3 f1 c% b0 f4 c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f5 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f5 c==> c~ c= f1 f2 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f5 c% f6 f2 f4 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f3 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f0 cvector_add c% f3 f1 c% b0 f4 c= f0 f1
- |- ((!va. (!w. (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)))))) = T)
T c= ! ! c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 c= b2 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 f0 cT
- |- (((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) ==> ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F), (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) |- ((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) /\ ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c/\ c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- (_2889224 = _2889227), (_2889226 = _2889229) |- ((~ (_2889225 = _2889228)) \/ ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- (_2889224 = _2889227), (_2889225 = _2889228), (_2889226 = _2889229) |- ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
- (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (A = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c~ c= f1 f2
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (x'' = x))) = (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))) \/ (!x'. (x' = x))))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 c= b0 f0 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 ! c= b0 f0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- |- ((\a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))))))) a)
T * / ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 c= c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 cF f1
- |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- |- ((!w. (!x. (!va. (!w1. (!v1. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))))))) = (!w. (!x. (!va. (!w1. (!v1. (!u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))))))))
T c= ! ! ! ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! ! ! ! ! ! c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b5 * * part cINSERT b0 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 ! c==> c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b6 c/\ caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY b6 caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY b6 cF
- ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))
T c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f6 c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f6
- |- (((!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) ==> ((\u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) u)) = ((\u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) u))
T c= c==> ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 cF * / c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 cF f7 * / c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 cF f7
- (x = C), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (C = B))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c~ c= f1 f3
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((!w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))))))))))) = (!w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))))))
T c= ! ! ! ! ! ! ! ! c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 ! ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((_2889206 = _2889208) ==> ((~ (_2889207 = _2889209)) \/ (((real_mul _2889206) _2889207) = ((real_mul _2889208) _2889209))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_mul f0 f2 creal_mul f1 f3
- (~ (x = va)) |- ((va = x) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- (~ F), (x = A), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c~ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f3 c= f0 f2 c/\ c~ cF cF
- (~ F), (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c/\ c~ cF cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (B = C))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f3
- |- (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- (_2889224 = _2889227), (_2889225 = _2889228), (_2889226 = _2889229) |- ((((((aff_ge _2889224) _2889225) _2889226) = (((aff_ge _2889227) _2889228) _2889229)) ==> ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226)))) = ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= caff_ge f0 f2 f4 caff_ge f1 f3 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
- (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) |- ((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) /\ (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))
T c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c/\ c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- ((!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) = T)
T c= ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cT
- |- (((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c~ c= f1 f2
- |- ((s INTER t) = (GSPEC (\GEN%PVAR%2. (?x. (((SETSPEC GEN%PVAR%2) ((x IN s) /\ (x IN t))) x)))))
T c= * * part cINTER f0 f1 * part cGSPEC / c? / cSETSPEC b0 c/\ cIN b1 f0 cIN b1 f1 b1
- |- (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) = (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)))))
T c= c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0
- (~ (x' = x)), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) ==> F)
T c==> c~ c= f0 f1 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c= b0 f1 c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> c~ cF cF
- ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) |- ((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (~ (((real_mul A) ((real_add (B $ i)) (C $ i))) = ((real_add ((real_mul A) (B $ i))) ((real_mul A) (C $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_mul f0 creal_add c$ f1 f2 c$ f3 f2 creal_add creal_mul f0 c$ f1 f2 creal_mul f0 c$ f3 f2 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c==> c~ cF cF
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- (x = B), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (B = A))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f1 c= f0 f3 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f1 c~ c= f1 f2
- |- ((!u. (!x. ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u))))) = (!u. (!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))))
T c= ! ! c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 ! ! c==> c~ c= ! c~ c/\ c= b2 b1 c= b2 b0 c~ c= b1 b0 cF
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c==> c~ cF cF
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (x = C), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- ((~ F) ==> F)
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c==> c~ cF cF
- (~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) |- F
T c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F), (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) |- (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) /\ ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))
T c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c/\ c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) ==> F)
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c==> c~ cF cF
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!x'. (P x')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ F) ==> F)
T c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c~ cF cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_2889198 = _2889199) |- ((_2889198 = _2889199) /\ ((real_inv _2889198) = (real_inv _2889199)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_inv f0 creal_inv f1
- (~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) |- ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) /\ F)
T c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 c/\ c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt t2) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- |- ((_2889210 = _2889212) ==> ((~ (_2889211 = _2889213)) \/ (((real_sub _2889210) _2889211) = ((real_sub _2889212) _2889213))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= creal_sub f0 f2 creal_sub f1 f3
- (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- ((~ F) ==> F)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c==> c~ cF cF
- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add a) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add f0 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))) ==> ((\t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))) t1)) = ((\t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))) t1))
T c= c==> ! ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 cF * / ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 cF f5 * / ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 cF f5
- (_2889230 = _2889232) |- ((_2889230 = _2889232) /\ ((~ (_2889231 = _2889233)) \/ ((_2889230 INSERT _2889231) = (_2889232 INSERT _2889233))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))))) = T)
T c= ! ! c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b1 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b0 f2 f3 c% creal_sub f4 creal_mul f0 f1 f5 cT
- |- ((\w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))) w1)
T * / ! ! c==> c~ c==> c~ c\/ c= b2 b1 c= b2 b0 ! c==> c/\ c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1
- |- (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F))
T c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- |- (((real_gt t2) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt t2) (real_of_num (NUMERAL _0)))))
T c= creal_gt f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt f0 creal_of_num cNUMERAL c_0
- (~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) |- F
T c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- |- (((((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)) ==> (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))) = (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))
T c= c==> c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- |- ((!x. (!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))))))) = T)
T c= ! ! ! ! c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b3 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b2 b1 b0 c% creal_sub f2 creal_mul f0 f1 f3 cT
- |- (((!x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) ==> ((\x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) x)) = ((\x. ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) x))
T c= c==> ! c==> c~ c= ! c~ c/\ c= b1 b0 c= b1 f0 c~ c= b0 f0 cF * / c==> c~ c= ! c~ c/\ c= b1 b0 c= b1 f0 c~ c= b0 f0 cF f1 * / c==> c~ c= ! c~ c/\ c= b1 b0 c= b1 f0 c~ c= b0 f0 cF f1
- (~ F), (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c~ cF cF
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- |- ((_2889198 = _2889199) ==> ((real_inv _2889198) = (real_inv _2889199)))
T c==> c= f0 f1 c= creal_inv f0 creal_inv f1
- |- (((!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))) ==> ((\v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))) v1)) = ((\v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F))) v1))
T c= c==> ! ! c==> c~ c==> c~ c\/ c= b1 b0 c= b1 f0 ! c==> c/\ c\/ c= b2 b1 c= b2 f1 c\/ c= b2 b0 c= b2 f0 c= b2 f1 cF * / ! c==> c~ c==> c~ c\/ c= b1 b0 c= b1 f0 ! c==> c/\ c\/ c= b2 b1 c= b2 f1 c\/ c= b2 b0 c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ c==> c~ c\/ c= b1 b0 c= b1 f0 ! c==> c/\ c\/ c= b2 b1 c= b2 f1 c\/ c= b2 b0 c= b2 f0 c= b2 f1 cF f2
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (_2889204 = _2889205) |- ((_2889204 = _2889205) /\ ((real_of_num _2889204) = (real_of_num _2889205)))
T c==> c= f0 f1 c/\ c= f0 f1 c= creal_of_num f0 creal_of_num f1
- ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) |- (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) /\ ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c/\ c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) a)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (x' = x)), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- F
T c==> c~ c= f0 f1 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c= b0 f1 c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((\t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))) t1)
T * / ! ! c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub b1 b0 f2 c% creal_sub f3 creal_mul f0 f1 f4 cF f5
- |- ((?x'. (P /\ (Q x'))) = (P /\ (?x'. (Q x'))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- |- ((!x. (!w1. (!v1. (!va. (!w. (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))))))) = (!x. (!w1. (!v1. (!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F)))))))
T c= ! ! ! ! ! c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 ! ! ! ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b4 part cEMPTY b5 c= b5 b0 ! c==> c/\ caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b3 part cEMPTY b5 caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b5 c= b5 b0 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) = (((real_gt t2) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c= creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) |- ((((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) = T)
T c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c= cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- |- (((\t. (f t)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F) ==> ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 cF
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x''))) \/ (x' = x))) = ((!x'. ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) \/ (x' = x)))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= f3 f0 c\/ ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c= f3 f0
- |- (((!w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))) ==> ((\w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))) w1)) = ((\w1. (!v1. (!u. ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))) w1))
T c= c==> ! ! ! c==> c~ c==> c~ c\/ c= b2 b1 c= b2 b0 ! c==> c/\ c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ c==> c~ c\/ c= b2 b1 c= b2 b0 ! c==> c/\ c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ c==> c~ c\/ c= b2 b1 c= b2 b0 ! c==> c/\ c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b1 c= b3 b0 c= b3 f0 cF f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))) t2)
T * / ! ! ! ! ! c==> c~ c==> c= c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 c= c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 c% creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 b5 c% creal_inv creal_mul b0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 cvector_add c% creal_sub b4 b3 b2 c% creal_sub b1 creal_mul b0 f0 f1 cF f2
- |- ((((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))
T c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F), (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) |- (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) /\ ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c/\ c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- (((real_ge t2) (real_of_num (NUMERAL _0))) /\ (((real_gt ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) t2)) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge t2) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) t2)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge f0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 creal_of_num cNUMERAL c_0
- |- ((?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) ==> (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))
T c==> c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- (~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')) /\ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f3 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
- (~ (w1 = w1)) |- ((~ (w1 = w1)) /\ (w1 = w1))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- |- ((!B. (!C. (!A. (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))))) = (!B. (!C. (!A. ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F)))))
T c= ! ! ! ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 ! ! ! c==> c~ ! c= c\/ c= b3 b2 c\/ c= b3 b0 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c= b3 b0 cF
- (_2889218 = _2889220) |- ((_2889218 = _2889220) /\ ((~ (_2889219 = _2889221)) \/ (((vector_add _2889218) _2889219) = ((vector_add _2889220) _2889221))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= cvector_add f0 f2 cvector_add f1 f3
- |- ((!x''. ((~ (x' = x)) \/ (~ (x'' = u)))) = ((~ (x' = x)) \/ (!x'. (~ (x' = u)))))
T c= ! c\/ c~ c= f0 f1 c~ c= b0 f2 c\/ c~ c= f0 f1 ! c~ c= b0 f2
- (x = A), (((x = A) \/ ((x = B) \/ (x = C))) /\ ((~ (x = A)) /\ ((~ (x = C)) /\ (~ (x = B))))) |- (~ (A = C))
T c==> c= f0 f1 c==> c/\ c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f3 c~ c= f0 f2 c~ c= f1 f3
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) (real_of_num (NUMERAL _0)))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- (~ F), (x = B), (((~ (x = A)) /\ ((~ (x = B)) /\ (~ (x = C)))) /\ ((x = A) \/ ((x = C) \/ (x = B)))) |- ((~ F) /\ F)
T c==> c~ cF c==> c= f0 f1 c==> c/\ c/\ c~ c= f0 f2 c/\ c~ c= f0 f1 c~ c= f0 f3 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f1 c/\ c~ cF cF
- |- ((!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c= c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 c= c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 c% creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 b6 c% creal_inv creal_mul b1 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b0 cvector_add c% creal_sub b5 b4 b3 c% creal_sub b2 creal_mul b1 b0 f0 cT
- |- ((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) ==> (((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)))
T c==> c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- ((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) |- (((\va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)) va) /\ (?va. (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va)))
T c==> * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c/\ * / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0 f3 c? / c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f0 f1 c% f0 f2 b0
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x''))) = ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (!x'. (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 ! caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (_2889224 = _2889227), (_2889226 = _2889229) |- ((_2889225 = _2889228) ==> ((((aff_ge _2889227) _2889228) _2889229) \/ (~ (((aff_ge _2889224) _2889225) _2889226))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) /\ F)
T c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- (((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) t2))) t2)) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 f1 f1 creal_of_num cNUMERAL c_0
- (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v1) V) E)) /\ ((((v1 INSERT (w1 INSERT EMPTY)) IN E) = (w1 IN (((set_of_edge v1) V) E))) /\ (((v1 INSERT (w1 INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> c==> cFAN c, f3 c, f4 f5 c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 cIN f2 * * * part cset_of_edge f1 f4 f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f3 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))), (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = w)), (((real_add t1) t2) = (real_of_num (NUMERAL (BIT1 _0)))), (x' = ((vector_add ((% t1) x)) ((% t2) va))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_le (real_of_num (NUMERAL _0))) t2), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((?t2. (((real_le (real_of_num (NUMERAL _0))) t2) /\ ((((real_add t1') t2) = (real_of_num (NUMERAL (BIT1 _0)))) /\ (x' = ((vector_add ((% t1') x)) ((% t2) w)))))) /\ (x' = x))
T c==> c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 f3 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c= creal_add f5 f6 creal_of_num cNUMERAL cBIT1 c_0 c==> c= f1 cvector_add c% f5 f2 c% f6 f7 c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f8 f4 c% f8 f3 f7 c==> creal_le creal_of_num cNUMERAL c_0 f6 c==> creal_lt f8 creal_of_num cNUMERAL cBIT1 c_0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ c? / c/\ creal_le creal_of_num cNUMERAL c_0 b0 c/\ c= creal_add f0 b0 creal_of_num cNUMERAL cBIT1 c_0 c= f1 cvector_add c% f0 f2 c% b0 f3 c= f1 f2
- |- ((!x''. ((~ (x'' = x)) \/ (~ (x' = u)))) = ((!x'. (~ (x' = x))) \/ (~ (x' = u))))
T c= ! c\/ c~ c= b0 f0 c~ c= f1 f2 c\/ ! c~ c= b0 f0 c~ c= f1 f2
- |- ((!x''. ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'')) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) = ((!x'. (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'))) \/ (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x')))
T c= ! c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c\/ ! c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
- (((x' = x) /\ (x' = u)) /\ (~ (x = u))) |- (F = F)
T c==> c/\ c/\ c= f0 f1 c= f0 f2 c~ c= f1 f2 c= cF cF
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!va. (!w1. (!v1. (!u. (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'))))))))) = T)
T c= ! ! ! ! c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT f1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b4 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b4 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b4 cT
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- ((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((real_mul a) ((real_mul t2) (u $ i)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (w $ i))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1) (x $ i)))) ((real_add ((real_mul t1') (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2) (u $ i)))) ((real_mul t2') (w $ i)))))))) (real_of_num (NUMERAL _0)))) |- (((((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i)))))))) = (real_of_num (NUMERAL _0))) ==> (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0))))) = (!x. (((real_mul x) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul a) ((real_mul t2) (u $ i))))) ((real_add ((real_mul a) ((real_mul t2) (w $ i)))) ((real_add ((real_mul t1) (x $ i))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t1') (x $ i)))) ((real_add ((real_mul t2) (u $ i))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul t2') (w $ i))))))))) = (real_of_num (NUMERAL _0)))))
T c==> c/\ c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f5 c$ f6 f3 creal_add creal_mul f7 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f1 c$ f2 f3 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 c= c==> c= creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0 ! c= creal_mul b0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f0 creal_mul f1 c$ f2 f3 creal_add creal_mul f0 creal_mul f1 c$ f4 f3 creal_add creal_mul f5 c$ f6 f3 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f7 c$ f6 f3 creal_add creal_mul f1 c$ f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul f8 c$ f4 f3 creal_of_num cNUMERAL c_0
- |- ((((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)) ==> (((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F) ==> ((~ ((!x'. (~ ((x' = x) /\ (x' = u)))) = (~ (x = u)))) ==> F)))
T c==> c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF c==> c~ c= ! c~ c/\ c= b0 f0 c= b0 f1 c~ c= f0 f1 cF
- |- ((((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x)))) = T)
T c= c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cT
- |- ((((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)) ==> (((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F) ==> ((~ ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w))))) ==> F)))
T c==> c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF c==> c~ c==> c~ c\/ c= f0 f1 c= f0 f2 ! c==> c/\ c\/ c= b0 f0 c= b0 f3 c\/ c= b0 f1 c= b0 f2 c= b0 f3 cF
- (~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) /\ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'))
T c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2
- (fan2 (x , (V , E))) |- ((fan2 (x , (V , E))) = T)
T c==> cfan2 c, f0 c, f1 f2 c= cfan2 c, f0 c, f1 f2 cT
- (~ (x' = x)), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (x' = x)) /\ (x' = x))
T c==> c~ c= f0 f1 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c= b0 f1 c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ c~ c= f0 f1 c= f0 f1
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x') = ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')))
T c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2
- (x = u) |- ((~ (u = w1)) = (~ (u = w1)))
T c==> c= f0 f1 c= c~ c= f1 f2 c~ c= f1 f2
- |- ((((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F) ==> ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) = ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))
T c= c==> c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889223)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889223)) \/ (_2889223 = x))) = ((_2889223 = x) \/ ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889223)) \/ (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) _2889223))))))
T c= cT c= c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 c= f2 f0 c\/ c= f2 f0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2
- (~ F), (~ (x = w)), (x = v1), (x = w) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c= f0 f2 c==> c= f0 f1 c/\ c~ cF cF
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((!x''. (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x'') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x'')))) = (((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x')) \/ (~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x'))) \/ (!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))
T c= ! c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c\/ c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 ! c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 part cEMPTY b0
- (~ (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) |- ((~ (((real_add ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) A) = A)) /\ F)
T c==> c~ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 c/\ c~ c= creal_add creal_sub creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 f0 f0 cF
- (~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))), (~ (x = u)), (~ (x = va)), (~ (x = w)), ((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) = ((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY))))), (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) = va), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) SUBSET ((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY)))), (((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))), ((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) |- ((((aff_ge (x INSERT EMPTY)) ((u INSERT (w INSERT EMPTY)) INTER (v1 INSERT (w1 INSERT EMPTY)))) SUBSET ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f0 f1 c==> c~ c= f0 f3 c==> c~ c= f0 f2 c==> c= * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> c= cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f1 c% f6 f2 f3 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cSUBSET * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINTER * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 part cEMPTY
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ (x' = x)) ==> (x' = x))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 c==> c~ c= f5 f0 c= f5 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F) ==> ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))
T c==> c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c= b0 f0 cF
- (~ F), (~ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')), ((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f2 c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 part cEMPTY f2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cF cF
- (FINITE (((set_of_edge u) V) E)) |- ((FINITE (((set_of_edge u) V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- (~ F), (~ (x' = x)), ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))), ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c= f0 f1 c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b0 c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY b0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f5 part cEMPTY b0 c= b0 f1 c==> c/\ caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY f0 caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c/\ c~ cF cF
- |- ((\u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F)) u)
T * / c==> c~ c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 b0 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f2 f3 f4 c% creal_sub f5 creal_mul f0 f1 f6 cF f7
- (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) /\ (((vector_add ((% t1) x)) ((% t2) ((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)))) = ((vector_add ((% t1') x)) ((% t2') w))))
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= cvector_add c% f4 f5 c% f0 cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% f1 f7 cvector_add c% f3 f5 c% f6 f7
- ((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) |- ((~ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)) \/ ((~ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) _2889222)) \/ (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) _2889222)))
T c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY b0 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b0 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY b0 c= b0 f0 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5 c\/ c~ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY f5
- |- (((!va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))) ==> ((\va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))) va)) = ((\va. (!w. ((~ (((!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')) ==> (x' = x)))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (x' = x))))) ==> F))) va))
T c= c==> ! ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 c= b2 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 f0 cF * / ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 c= b2 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 f0 cF f3 * / ! c==> c~ c==> c/\ ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b1 part cEMPTY b2 c= b2 f0 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 part cEMPTY b2 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b2 c= b2 f0 cF f3
- |- ((?x'. ((P x') /\ Q)) = ((?x'. (P x')) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((?x''. ((x'' = x) /\ (x' = u))) = ((?x'. (x' = x)) /\ (x' = u)))
T c= c? / c/\ c= b0 f0 c= f1 f2 c/\ c? / c= b0 f0 c= f1 f2
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- (~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))), (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) /\ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))
T c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c/\ c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((\w. (!a. (!t2. (!t2'. (!x. (!t1. (!t1'. (!u. ((~ ((((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) ==> (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w)))))) ==> F))))))))) w)
T * / ! ! ! ! ! ! ! c==> c~ c==> c= c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 c= c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 c% creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 b7 c% creal_inv creal_mul b2 creal_sub creal_of_num cNUMERAL cBIT1 c_0 b1 cvector_add c% creal_sub b6 b5 b4 c% creal_sub b3 creal_mul b2 b1 b0 cF f0
- |- ((!v1. (!u. ((~ ((u = v1) \/ (u = w1))) ==> (!x. ((((x = u) \/ (x = w)) /\ ((x = v1) \/ (x = w1))) ==> (x = w)))))) = T)
T c= ! ! c==> c~ c\/ c= b1 b0 c= b1 f0 ! c==> c/\ c\/ c= b2 b1 c= b2 f1 c\/ c= b2 b0 c= b2 f0 c= b2 f1 cT
- |- ((((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))) ==> ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))) = ((((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)))) /\ ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY))) SUBSET (x INSERT EMPTY))) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY))))
T c= c==> c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY c==> c/\ cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f4 part cEMPTY * * part cINSERT f0 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 part cEMPTY
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\u. ((~ (((!x'. ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') ==> (((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x'))) /\ (!x'. (((((aff_ge (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))) ==> (!x'. (((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) x')) ==> ((((aff_ge (x INSERT EMPTY)) (va INSERT EMPTY)) x') /\ (((aff_ge (x INSERT EMPTY)) (w INSERT EMPTY)) x')))))) ==> F)) u)
T * / c==> c~ c==> c/\ ! c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f2 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 ! c==> c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY b1 c/\ caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 part cEMPTY b1 caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 part cEMPTY b1 cF f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F) ==> ((~ (!x. (((x = A) \/ ((x = B) \/ (x = C))) = ((x = A) \/ ((x = C) \/ (x = B)))))) ==> F))
T c==> c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF c==> c~ ! c= c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f2 c= b0 f1 cF
- (~ (u IN (v1 INSERT (w1 INSERT EMPTY)))), (FAN (x , (V , E))), ((real_lt a) (real_of_num (NUMERAL (BIT1 _0)))), ((real_lt (real_of_num (NUMERAL _0))) a), ((u INSERT (w INSERT EMPTY)) IN E), ((v1 INSERT (w1 INSERT EMPTY)) IN E) |- (((FINITE (((set_of_edge v1) V) E)) /\ ((w1 IN (((set_of_edge v1) V) E)) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) /\ ((~ (x = v1)) /\ ((~ (x = w1)) /\ ((~ (v1 = w1)) /\ (((DISJOINT (x INSERT (v1 INSERT EMPTY))) (w1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w1 INSERT EMPTY))) (v1 INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY))) /\ ((~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))) /\ ((v1 IN V) /\ ((~ (collinear (x INSERT (v1 INSERT (w1 INSERT EMPTY))))) = (~ (w1 IN (aff (x INSERT (v1 INSERT EMPTY))))))))))))))))) ==> ((((aff_ge (x INSERT EMPTY)) (((vector_add ((% ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)) u)) ((% a) w)) INSERT EMPTY)) INTER ((aff_ge (x INSERT EMPTY)) (v1 INSERT (w1 INSERT EMPTY)))) SUBSET (x INSERT EMPTY)))
T c==> c~ cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cFAN c, f3 c, f4 f5 c==> creal_lt f6 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 f6 c==> cIN * * part cINSERT f0 * * part cINSERT f7 part cEMPTY f5 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f5 c==> c/\ cFINITE * * * part cset_of_edge f1 f4 f5 c/\ cIN f2 * * * part cset_of_edge f1 f4 f5 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f3 f1 c/\ c~ c= f3 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f4 c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINTER * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT cvector_add c% creal_sub creal_of_num cNUMERAL cBIT1 c_0 f6 f0 c% f6 f7 part cEMPTY * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY
- (((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u) = ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))) |- ((~ (((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((% ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a))) u)) = ((% (real_inv ((real_mul t2) ((real_sub (real_of_num (NUMERAL (BIT1 _0)))) a)))) ((vector_add ((% ((real_sub t1') t1)) x)) ((% ((real_sub t2') ((real_mul t2) a))) w))))) ==> F)
T c==> c= c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 c==> c~ c= c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 c% creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 f2 c% creal_inv creal_mul f0 creal_sub creal_of_num cNUMERAL cBIT1 c_0 f1 cvector_add c% creal_sub f3 f4 f5 c% creal_sub f6 creal_mul f0 f1 f7 cF
