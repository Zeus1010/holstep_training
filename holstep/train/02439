N Betwn_corek_z_x.core_final
C |- (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((final_list L) r))) ==> (((core L) r) = ((MAP FST) r)))
T c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 cfinal_list f0 f2 c= ccore f0 f2 cMAP part cFST f2
D TRUTH
A |- T
T cT
D Hypermap.is_restricted
A |- (!H. ((is_restricted H) = ((~ ((dart H) = EMPTY)) /\ ((planar_hypermap H) /\ ((plain_hypermap H) /\ ((connected_hypermap H) /\ ((simple_hypermap H) /\ ((is_no_double_joins H) /\ ((is_edge_nondegenerate H) /\ ((is_node_nondegenerate H) /\ (!x. ((x IN (dart H)) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face H) x)))))))))))))))
T c= cis_restricted f0 c/\ c~ c= * part cdart f0 part cEMPTY c/\ cplanar_hypermap f0 c/\ cplain_hypermap f0 c/\ cconnected_hypermap f0 c/\ csimple_hypermap f0 c/\ cis_no_double_joins f0 c/\ cis_edge_nondegenerate f0 c/\ cis_node_nondegenerate f0 ! c==> cIN b0 * part cdart f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface f0 b0
D Seq.allP
A |- (!a. (!s. ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))))
T c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0
D Tame_defs2.loop_list
A |- (!L. (!s. (((loop_list L) s) = ((all (\x. (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el s) x))))) s))))
T c= cloop_list f0 f1 call / c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 f1
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.final_list_rot
A |- (!L. (!r. (!d. (((good_list L) /\ (((final_list L) r) /\ (((MEM d) r) /\ ((uniq r) /\ ((MEM d) (list_of_darts L)))))) ==> (?n. (((rot n) r) = ((find_face L) d)))))))
T c==> c/\ cgood_list f0 c/\ cfinal_list f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 cMEM f2 clist_of_darts f0 c? / c= crot b0 f1 cfind_face f0 f2
D Betwn_corek_z_x.core_final_list
A |- (((good_list L) /\ (((all (\x. ((MEM x) (list_of_darts L)))) f) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((final_list L) f) /\ (uniq f))))) ==> (((core L) f) = ((MAP FST) f)))
T c==> c/\ cgood_list f0 c/\ call / cMEM b0 clist_of_darts f0 f1 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cfinal_list f0 f1 cuniq f1 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (is_edge_nondegenerate (hypermap_of_list L)), (uniq r), (good_list L), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (is_edge_nondegenerate (hypermap_of_list L)), (uniq r), (good_list L), ((final_list L) r) |- ((((good_list L) /\ (((all (\x. ((MEM x) (list_of_darts L)))) r) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((final_list L) r) /\ (uniq r))))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cis_edge_nondegenerate chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cfinal_list f1 f0 c==> c==> c/\ cgood_list f1 c/\ call / cMEM b0 clist_of_darts f1 f0 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cfinal_list f1 f0 cuniq f0 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
+ ((\n. (((rot n) r) = ((find_face L) x))) n) |- (((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))) = (((core L) r) = ((MAP FST) r)))
T c==> * / c= crot b0 f0 cfind_face f1 f2 f3 c= c==> c= crot f3 f0 cfind_face f1 f2 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (uniq r), (good_list L), ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cuniq f0 c==> cgood_list f1 c==> c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
- (is_restricted (hypermap_of_list L)), (good_list L), ((normal_list L) N), ((final_list L) r) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cflag_list f0 f1 c= ccore f0 f2 cMAP part cFST f2
+ |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
+ (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- (((core L) r) = ((MAP FST) r))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c==> cflag_list f0 f1 c= ccore f0 f2 cMAP part cFST f2
+ (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
- ((MEM x) r) |- (((((MEM x) r) = T) ==> ((T ==> (((MEM x) (list_of_darts L)) = q')) ==> ((((MEM x) r) ==> ((MEM x) (list_of_darts L))) = (T ==> q')))) = ((T ==> (((MEM x) (list_of_darts L)) = q')) ==> ((((MEM x) r) ==> ((MEM x) (list_of_darts L))) = (T ==> q'))))
T c==> cMEM f0 f1 c= c==> c= cMEM f0 f1 cT c==> c==> cT c= cMEM f0 clist_of_darts f2 f3 c= c==> cMEM f0 f1 cMEM f0 clist_of_darts f2 c==> cT f3 c==> c==> cT c= cMEM f0 clist_of_darts f2 f3 c= c==> cMEM f0 f1 cMEM f0 clist_of_darts f2 c==> cT f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((final_list L) r) |- (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cfinal_list f0 f1 c==> cflag_list f0 f2 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f1 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 c==> cuniq f1 c==> c= crot f4 f1 cfind_face f0 f3 c= ccore f0 f1 cMAP part cFST f1
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
- (is_no_double_joins (hypermap_of_list L)) |- ((is_no_double_joins (hypermap_of_list L)) = T)
T c==> cis_no_double_joins chypermap_of_list f0 c= cis_no_double_joins chypermap_of_list f0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((flag_list L) N)))))), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cflag_list f0 f2 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cfinal_list f0 f1 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((((MEM _11396390) r) ==> ((MEM _11396390) (list_of_darts L))) = (((MEM _11396390) r) ==> T))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> cMEM f2 f0 cMEM f2 clist_of_darts f1 c==> cMEM f2 f0 cT
+ ((good_list L) /\ (((((marked_list L) N) r) x) /\ ((final_list L) r))) |- (((good_list L) /\ (((((marked_list L) N) r) x) /\ ((final_list L) r))) /\ (((core L) r) = ((MAP FST) r)))
T c==> c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 cfinal_list f0 f2 c/\ c/\ cgood_list f0 c/\ cmarked_list f0 f1 f2 f3 cfinal_list f0 f2 c= ccore f0 f2 cMAP part cFST f2
+ ((\n. (((rot n) r) = ((find_face L) x))) n) |- (((rot n) r) = ((find_face L) x))
T c==> * / c= crot b0 f0 cfind_face f1 f2 f3 c= crot f3 f0 cfind_face f1 f2
+ |- ((!f. (((good_list L) /\ (((all (\x. ((MEM x) (list_of_darts L)))) f) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ (((final_list L) f) /\ (uniq f))))) ==> (((core L) f) = ((MAP FST) f)))) = T)
T c= ! c==> c/\ cgood_list f0 c/\ call / cMEM b1 clist_of_darts f0 b0 c/\ cis_edge_nondegenerate chypermap_of_list f0 c/\ cfinal_list f0 b0 cuniq b0 c= ccore f0 b0 cMAP part cFST b0 cT
+ (is_restricted (hypermap_of_list L)), (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((final_list L) r) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cfinal_list f0 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cflag_list f0 f1 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- ((?n. (((rot n) r) = ((find_face L) x))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c==> c? / c= crot b0 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = ((((core L) r) = ((MAP FST) r)) ==> T))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> c= ccore f1 f0 cMAP part cFST f0 cT
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (uniq r), (good_list L), ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))))))))), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cuniq f0 c==> cgood_list f1 c==> c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((~ (EMPTY = (dart (hypermap_of_list L)))) ==> ((EMPTY = (dart (hypermap_of_list L))) = F)) = ((EMPTY = (dart (hypermap_of_list L))) = F))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c==> c~ c= part cEMPTY * part cdart chypermap_of_list f0 c= c= part cEMPTY * part cdart chypermap_of_list f0 cF c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ |- (((!p'. (!q'. (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 * / ! c==> c= ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 f2 * / ! c==> c= ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), ((MEM d) (flatten N)) |- (((MEM d) (flatten N)) /\ ((((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))) = T))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 c/\ cMEM f2 cflatten f0 c= cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), ((MEM x) r) |- (((one_step_list L) x) ((next_el r) x))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cMEM f2 f0 cone_step_list f1 f2 cnext_el f0 f2
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), ((MEM x) r) |- (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cMEM f2 f0 c/\ cMEM f2 clist_of_darts f1 cone_step_list f1 f2 cnext_el f0 f2
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cflag_list f0 f3 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cf_list f0 f2 c==> ! c==> cMEM b0 f1 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 c==> cuniq f1 c==> c= crot f4 f1 cfind_face f0 f2 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((f_list L) x))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cf_list f1 f3 c= ccore f1 f0 cMAP part cFST f0
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((rot n) r) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> c= crot f4 f0 cfind_face f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), ((final_list L) r) |- ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> cfinal_list f0 f2 c/\ cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- (((MEM x) r) ==> ((((one_step_list L) x) ((next_el r) x)) = T))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cMEM f2 f0 c= cone_step_list f1 f2 cnext_el f0 f2 cT
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ T |- (T /\ ((((core L) r) = ((MAP FST) r)) = (((core L) r) = ((MAP FST) r))))
T c==> cT c/\ cT c= c= ccore f0 f1 cMAP part cFST f1 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c==> cuniq f0 c==> c= crot f4 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (uniq r), (good_list L), ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cuniq f0 c==> cgood_list f1 c==> c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- ((uniq r) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c==> cuniq f0 c= ccore f1 f0 cMAP part cFST f0
+ (is_restricted (hypermap_of_list L)), (good_list L), ((final_list L) r) |- (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cfinal_list f0 f1 c==> cMEM f2 clist_of_darts f0 c==> cone_step_list f0 f2 cf_list f0 f2 c==> ! c==> cMEM b0 f1 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 c==> cuniq f1 c==> c= crot f3 f1 cfind_face f0 f2 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- (((!x. (((\n. (((rot n) r) = ((find_face L) x))) x) ==> (((core L) r) = ((MAP FST) r)))) ==> ((?n. (((rot n) r) = ((find_face L) x))) ==> (((core L) r) = ((MAP FST) r)))) = ((?n. (((rot n) r) = ((find_face L) x))) ==> (((core L) r) = ((MAP FST) r))))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c= c==> ! c==> * / c= crot b1 f0 cfind_face f1 f3 b0 c= ccore f1 f0 cMAP part cFST f0 c==> c? / c= crot b0 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0 c==> c? / c= crot b0 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((T ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = (T ==> q')))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> c==> cT c= c= ccore f1 f0 cMAP part cFST f0 f2 c= c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c==> cT f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (f_last L)) N), ((final_list L) r) |- (((all (f_last L)) N) /\ ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call * part cf_last f0 f1 c==> cfinal_list f0 f2 c/\ call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- (!n. (((\n. (((rot n) r) = ((find_face L) x))) n) ==> (((core L) r) = ((MAP FST) r))))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 ! c==> * / c= crot b1 f0 cfind_face f1 f3 b0 c= ccore f1 f0 cMAP part cFST f0
+ |- ((\q'. ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q'))))) q')
T * / c==> c= c==> ! c==> cMEM b1 f0 cMEM b1 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 f2 c==> c==> f2 c= c= ccore f1 f0 cMAP part cFST f0 b0 c= c==> c==> ! c==> cMEM b1 f0 cMEM b1 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> f2 b0 f3
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (?n. (((rot n) r) = ((find_face L) x))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> c? / c= crot b0 f0 cfind_face f1 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (uniq r), (good_list L), ((final_list L) r) |- (((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cuniq f0 c==> cgood_list f1 c==> cfinal_list f1 f0 c==> c/\ c~ c= * part cdart chypermap_of_list f1 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c= ccore f1 f0 cMAP part cFST f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((f_list L) x))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((f_list L) x))) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c/\ c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cf_list f1 f3 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) |- (((MEM r) N) ==> (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))))
T c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c==> cMEM f2 f0 ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0
+ |- ((((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (((core L) r) = ((MAP FST) r))) = (((normal_list L) N) ==> (((core L) r) = ((MAP FST) r))))
T c= c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 c/\ call * part cf_last f1 f0 c/\ call * part cloop_list f1 f0 ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= ccore f1 f2 cMAP part cFST f2 c==> cnormal_list f1 f0 c= ccore f1 f2 cMAP part cFST f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cfinal_list f1 f2 c==> cflag_list f1 f0 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f2 b0 c= ccore f1 f2 cMAP part cFST f2
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c= ccore f1 f0 cMAP part cFST f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ (((core L) r) = ((MAP FST) r)))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c/\ cuniq cflatten f3 c/\ call / c~ c= b0 cNIL f3 c/\ call * part cf_last f0 f3 c/\ call * part cloop_list f0 f3 ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c==> cflag_list f0 f3 c/\ c/\ cuniq cflatten f3 c/\ call / c~ c= b0 cNIL f3 c/\ call * part cf_last f0 f3 c/\ call * part cloop_list f0 f3 ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c= ccore f0 f1 cMAP part cFST f1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((normal_list L) N), ((final_list L) r) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c/\ cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cflag_list f0 f1 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- ((EMPTY = (dart (hypermap_of_list L))) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= part cEMPTY * part cdart chypermap_of_list f0 cF
+ (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- (((core L) r) = ((MAP FST) r))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c==> cflag_list f0 f1 c= ccore f0 f2 cMAP part cFST f2
+ |- ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q'))))
T c==> c= c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 f2 c==> c==> f2 c= c= ccore f1 f0 cMAP part cFST f0 f3 c= c==> c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((!x. (((MEM x) N) ==> (!x. (((MEM x) x) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el x) x))))))) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cfinal_list f1 f2 c==> cflag_list f1 f0 c/\ ! c==> cMEM b0 f0 ! c==> cMEM b1 b0 c/\ cMEM b1 clist_of_darts f1 cone_step_list f1 b1 cnext_el b0 b1 c= ccore f1 f2 cMAP part cFST f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((normal_list L) N), ((final_list L) r) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cflag_list f0 f1 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (is_restricted (hypermap_of_list L)), (good_list L), ((all (\s. (~ (s = NIL)))) N), ((final_list L) r) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> call / c~ c= b0 cNIL f1 c==> cfinal_list f0 f2 c/\ call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f3 c= ccore f0 f2 cMAP part cFST f2
+ (is_restricted (hypermap_of_list L)), (good_list L), ((final_list L) r) |- ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cfinal_list f0 f1 c==> ! c==> cMEM b0 f1 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 c==> cuniq f1 c==> c= crot f2 f1 cfind_face f0 f3 c= ccore f0 f1 cMAP part cFST f1
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (uniq r), (good_list L), ((~ ((dart (hypermap_of_list L)) = EMPTY)) /\ ((planar_hypermap (hypermap_of_list L)) /\ ((plain_hypermap (hypermap_of_list L)) /\ ((connected_hypermap (hypermap_of_list L)) /\ ((simple_hypermap (hypermap_of_list L)) /\ ((is_no_double_joins (hypermap_of_list L)) /\ ((is_edge_nondegenerate (hypermap_of_list L)) /\ ((is_node_nondegenerate (hypermap_of_list L)) /\ (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))))))))))), ((final_list L) r) |- (((core L) r) = ((MAP FST) r))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cuniq f0 c==> cgood_list f1 c==> c/\ c~ c= * part cdart chypermap_of_list f1 part cEMPTY c/\ cplanar_hypermap chypermap_of_list f1 c/\ cplain_hypermap chypermap_of_list f1 c/\ cconnected_hypermap chypermap_of_list f1 c/\ csimple_hypermap chypermap_of_list f1 c/\ cis_no_double_joins chypermap_of_list f1 c/\ cis_edge_nondegenerate chypermap_of_list f1 c/\ cis_node_nondegenerate chypermap_of_list f1 ! c==> cIN b0 * part cdart chypermap_of_list f1 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f1 b0 c==> cfinal_list f1 f0 c= ccore f1 f0 cMAP part cFST f0
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))) ==> (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> c==> cMEM f3 f0 c/\ cMEM f3 clist_of_darts f1 cone_step_list f1 f3 cnext_el f0 f3 c= ccore f1 f0 cMAP part cFST f0
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (x IN (dart (hypermap_of_list L))) |- ((x IN (dart (hypermap_of_list L))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))) = T))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c/\ cIN f1 * part cdart chypermap_of_list f0 c= c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
+ (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (is_restricted (hypermap_of_list L)), (uniq r), (good_list L), ((final_list L) r) |- ((uniq r) /\ ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cgood_list f1 c==> cfinal_list f1 f0 c/\ cuniq f0 c==> c= crot f2 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
- (is_restricted (hypermap_of_list L)), (good_list L), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cfinal_list f0 f1 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cflag_list f0 f2 c= ccore f0 f1 cMAP part cFST f1
+ (good_list L), ((final_list L) r) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((flag_list L) N)))))))) ==> (((core L) r) = ((MAP FST) r)))
T c==> cgood_list f0 c==> cfinal_list f0 f1 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cflag_list f0 f2 c= ccore f0 f1 cMAP part cFST f1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) r), ((final_list L) r) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cfinal_list f0 f2 c/\ cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cflag_list f0 f3 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cMEM f1 clist_of_darts f0 c==> cone_step_list f0 f1 cf_list f0 f1 c==> ! c==> cMEM b0 f2 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f2 b0 c==> cuniq f2 c==> c= crot f4 f2 cfind_face f0 f1 c= ccore f0 f2 cMAP part cFST f2
+ |- ((\L. (!r. (!d. (((good_list L) /\ (((final_list L) r) /\ (((MEM d) r) /\ ((uniq r) /\ ((MEM d) (list_of_darts L)))))) ==> (?n. (((rot n) r) = ((find_face L) d))))))) L)
T * / ! ! c==> c/\ cgood_list b0 c/\ cfinal_list b0 b1 c/\ cMEM b2 b1 c/\ cuniq b1 cMEM b2 clist_of_darts b0 c? / c= crot b3 b1 cfind_face b0 b2 f0
- |- ((?n. t) = t)
T c= c? / f0 f0
+ |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ |- (((((good_list L) /\ (((final_list L) r) /\ (((MEM x) r) /\ ((uniq r) /\ ((MEM x) (list_of_darts L)))))) ==> (?n. (((rot n) r) = ((find_face L) x)))) ==> (((core L) r) = ((MAP FST) r))) = (((core L) r) = ((MAP FST) r)))
T c= c==> c==> c/\ cgood_list f0 c/\ cfinal_list f0 f1 c/\ cMEM f2 f1 c/\ cuniq f1 cMEM f2 clist_of_darts f0 c? / c= crot b0 f1 cfind_face f0 f2 c= ccore f0 f1 cMAP part cFST f1 c= ccore f0 f1 cMAP part cFST f1
+ (is_restricted (hypermap_of_list L)), (good_list L), ((final_list L) r) |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((MEM x) (list_of_darts L)) ==> ((((one_step_list L) x) ((f_list L) x)) ==> ((!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) ==> ((uniq r) ==> ((((rot n) r) = ((find_face L) x)) ==> (((core L) r) = ((MAP FST) r)))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cfinal_list f0 f1 c==> cuniq cflatten f2 c==> call / c~ c= b0 cNIL f2 c==> call * part cf_last f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cMEM f3 clist_of_darts f0 c==> cone_step_list f0 f3 cf_list f0 f3 c==> ! c==> cMEM b0 f1 c/\ cMEM b0 clist_of_darts f0 cone_step_list f0 b0 cnext_el f1 b0 c==> cuniq f1 c==> c= crot f4 f1 cfind_face f0 f3 c= ccore f0 f1 cMAP part cFST f1
- ((MEM x) r) |- ((T ==> (((MEM x) (list_of_darts L)) = q')) ==> ((((MEM x) r) ==> ((MEM x) (list_of_darts L))) = (T ==> q')))
T c==> cMEM f0 f1 c==> c==> cT c= cMEM f0 clist_of_darts f2 f3 c= c==> cMEM f0 f1 cMEM f0 clist_of_darts f2 c==> cT f3
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ |- ((\p'. (!q'. ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) p')
T * / ! c==> c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 f2
- ((MEM _11396390) r) |- (T = ((MEM _11396390) r))
T c==> cMEM f0 f1 c= cT cMEM f0 f1
+ ((final_list L) r) |- ((((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((flag_list L) N)))))))) ==> (((core L) r) = ((MAP FST) r))) = (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (((core L) r) = ((MAP FST) r))))
T c==> cfinal_list f0 f1 c= c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 cflag_list f0 f2 c= ccore f0 f1 cMAP part cFST f1 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f2 c/\ cMEM f1 f2 c/\ cMEM f3 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c/\ c= cnext_el f1 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c/\ c==> cfinal_list f0 f1 cflag_list f0 f2 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f2 f1 f3 c= ccore f0 f1 cMAP part cFST f1
+ ((final_list L) r) |- (((final_list L) r) = T)
T c==> cfinal_list f0 f1 c= cfinal_list f0 f1 cT
+ |- (((!p'. (!q'. ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = p') ==> ((p' ==> ((((core L) r) = ((MAP FST) r)) = q')) ==> ((((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) ==> (((core L) r) = ((MAP FST) r))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 * / ! c==> c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 f2 * / ! c==> c= c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 b0 c==> c==> b0 c= c= ccore f1 f0 cMAP part cFST f0 b1 c= c==> c==> ! c==> cMEM b2 f0 cMEM b2 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0 c==> b0 b1 f2
- ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- (planar_hypermap (hypermap_of_list L)) |- ((planar_hypermap (hypermap_of_list L)) = T)
T c==> cplanar_hypermap chypermap_of_list f0 c= cplanar_hypermap chypermap_of_list f0 cT
- (is_node_nondegenerate (hypermap_of_list L)) |- ((is_node_nondegenerate (hypermap_of_list L)) = T)
T c==> cis_node_nondegenerate chypermap_of_list f0 c= cis_node_nondegenerate chypermap_of_list f0 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))), (x IN (dart (hypermap_of_list L))) |- ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1
- T |- (T = T)
T c==> cT c= cT cT
- (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cflag_list f0 f3 c= ccore f0 f2 cMAP part cFST f2
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))) |- ((((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x)))) = T)
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c= c==> cMEM f2 f0 c/\ cMEM f2 clist_of_darts f1 cone_step_list f1 f2 cnext_el f0 f2 cT
- (good_list L), ((((marked_list L) N) r) x) |- (((final_list L) r) ==> (((core L) r) = ((MAP FST) r)))
T c==> cgood_list f0 c==> cmarked_list f0 f1 f2 f3 c==> cfinal_list f0 f2 c= ccore f0 f2 cMAP part cFST f2
- (connected_hypermap (hypermap_of_list L)) |- ((connected_hypermap (hypermap_of_list L)) = T)
T c==> cconnected_hypermap chypermap_of_list f0 c= cconnected_hypermap chypermap_of_list f0 cT
- T, ((MEM x) (list_of_darts L)) |- (T /\ (((MEM x) (list_of_darts L)) = T))
T c==> cT c==> cMEM f0 clist_of_darts f1 c/\ cT c= cMEM f0 clist_of_darts f1 cT
- ((MEM x) (list_of_darts L)) |- (T ==> (((MEM x) (list_of_darts L)) = T))
T c==> cMEM f0 clist_of_darts f1 c==> cT c= cMEM f0 clist_of_darts f1 cT
- ((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) |- (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) = T)
T c==> c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 cT
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), (((rot n) r) = ((find_face L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- ((((rot n) r) = ((find_face L) x)) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> c= crot f4 f0 cfind_face f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c/\ c= crot f4 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
- (((one_step_list L) x) ((f_list L) x)) |- ((((one_step_list L) x) ((f_list L) x)) = T)
T c==> cone_step_list f0 f1 cf_list f0 f1 c= cone_step_list f0 f1 cf_list f0 f1 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- (((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x)))) = T)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c= c==> cIN f1 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), ((MEM x) r) |- (((MEM x) r) /\ ((((one_step_list L) x) ((next_el r) x)) = T))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> cMEM f2 f0 c/\ cMEM f2 f0 c= cone_step_list f1 f2 cnext_el f0 f2 cT
- ((MEM x) (list_of_darts L)) |- (((T ==> (((MEM x) (list_of_darts L)) = T)) ==> ((((MEM x) r) ==> ((MEM x) (list_of_darts L))) = (T ==> T))) = ((((MEM x) r) ==> ((MEM x) (list_of_darts L))) = (T ==> T)))
T c==> cMEM f0 clist_of_darts f1 c= c==> c==> cT c= cMEM f0 clist_of_darts f1 cT c= c==> cMEM f0 f2 cMEM f0 clist_of_darts f1 c==> cT cT c= c==> cMEM f0 f2 cMEM f0 clist_of_darts f1 c==> cT cT
- ((dart (hypermap_of_list L)) = EMPTY) |- (EMPTY = (dart (hypermap_of_list L)))
T c==> c= * part cdart chypermap_of_list f0 part cEMPTY c= part cEMPTY * part cdart chypermap_of_list f0
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- (((flag_list L) N) /\ (((core L) r) = ((MAP FST) r)))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c==> cflag_list f0 f3 c/\ cflag_list f0 f3 c= ccore f0 f1 cMAP part cFST f1
- (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> (((core L) r) = ((MAP FST) r)))
T c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f1 c==> cgood_list f0 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f3 f2 c==> cMEM f2 f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> call / c~ c= b0 cNIL f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f2 c==> cflag_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c= ccore f0 f2 cMAP part cFST f2
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (~ (EMPTY = (dart (hypermap_of_list L))))
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c~ c= part cEMPTY * part cdart chypermap_of_list f0
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cflag_list f0 f3 c= ccore f0 f1 cMAP part cFST f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- (plain_hypermap (hypermap_of_list L)) |- ((plain_hypermap (hypermap_of_list L)) = T)
T c==> cplain_hypermap chypermap_of_list f0 c= cplain_hypermap chypermap_of_list f0 cT
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cflag_list f0 f3 c= ccore f0 f1 cMAP part cFST f1
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((\x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) x)
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 * / c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (is_restricted (hypermap_of_list L)), (good_list L), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cnormal_list f0 f2 c==> cfinal_list f0 f1 c/\ cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cflag_list f0 f2 c= ccore f0 f1 cMAP part cFST f1
- (is_restricted (hypermap_of_list L)), (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f3 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cflag_list f0 f1 c= ccore f0 f3 cMAP part cFST f3
- (good_list L), ((final_list L) r), ((((marked_list L) N) r) x) |- (((final_list L) r) /\ (((core L) r) = ((MAP FST) r)))
T c==> cgood_list f0 c==> cfinal_list f0 f1 c==> cmarked_list f0 f2 f1 f3 c/\ cfinal_list f0 f1 c= ccore f0 f1 cMAP part cFST f1
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), ((MEM d) (flatten N)) |- (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (?n. (((rot n) r) = ((find_face L) x))), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM r) N), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N), (((one_step_list L) x) ((f_list L) x)) |- ((?n. (((rot n) r) = ((find_face L) x))) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f2 c==> c? / c= crot b0 f0 cfind_face f1 f3 c==> cis_restricted chypermap_of_list f1 c==> cuniq f0 c==> cuniq cflatten f2 c==> cgood_list f1 c==> c= cnext_el f0 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f2 c==> cMEM f3 f0 c==> cMEM f3 clist_of_darts f1 c==> cMEM f0 f2 c==> call * part cf_last f1 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f1 f2 c==> cfinal_list f1 f0 c==> cflag_list f1 f2 c==> cone_step_list f1 f3 cf_list f1 f3 c/\ c? / c= crot b0 f0 cfind_face f1 f3 c= ccore f1 f0 cMAP part cFST f0
- ((flag_list L) N) |- (((flag_list L) N) = T)
T c==> cflag_list f0 f1 c= cflag_list f0 f1 cT
- (!x. (((MEM x) r) ==> (((MEM x) (list_of_darts L)) /\ (((one_step_list L) x) ((next_el r) x))))), ((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) |- (((!x. (((MEM x) r) ==> ((MEM x) (list_of_darts L)))) ==> (((core L) r) = ((MAP FST) r))) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 f0 c/\ cMEM b0 clist_of_darts f1 cone_step_list f1 b0 cnext_el f0 b0 c==> c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c/\ c==> ! c==> cMEM b0 f0 cMEM b0 clist_of_darts f1 c= ccore f1 f0 cMAP part cFST f0 c= ccore f1 f0 cMAP part cFST f0
- (simple_hypermap (hypermap_of_list L)) |- ((simple_hypermap (hypermap_of_list L)) = T)
T c==> csimple_hypermap chypermap_of_list f0 c= csimple_hypermap chypermap_of_list f0 cT
- (is_restricted (hypermap_of_list L)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> cMEM f2 f1 c==> cMEM f1 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f1 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f2 c==> cflag_list f0 f3 c= ccore f0 f1 cMAP part cFST f1
- (~ ((dart (hypermap_of_list L)) = EMPTY)) |- (((dart (hypermap_of_list L)) = EMPTY) = F)
T c==> c~ c= * part cdart chypermap_of_list f0 part cEMPTY c= c= * part cdart chypermap_of_list f0 part cEMPTY cF
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- (!x. ((x IN (dart (hypermap_of_list L))) ==> ((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))))) |- ((x IN (dart (hypermap_of_list L))) ==> (((NUMERAL (BIT1 (BIT1 _0))) <= (CARD ((face (hypermap_of_list L)) x))) = T))
T c==> ! c==> cIN b0 * part cdart chypermap_of_list f0 c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 b0 c==> cIN f1 * part cdart chypermap_of_list f0 c= c<= cNUMERAL cBIT1 cBIT1 c_0 cCARD * * part cface chypermap_of_list f0 f1 cT
- (is_restricted (hypermap_of_list L)), (good_list L), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r)))))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cMEM f1 f2 c==> cMEM f2 f3 c==> cnormal_list f0 f3 c==> cfinal_list f0 f2 c/\ cMEM f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f2 f1 cf_list f0 f1 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f1 c==> cflag_list f0 f3 c= ccore f0 f2 cMAP part cFST f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (good_list L), (((next_el r) x) = ((f_list L) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((final_list L) r), ((flag_list L) N) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ (((core L) r) = ((MAP FST) r)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cgood_list f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f2 f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cfinal_list f1 f2 c==> cflag_list f1 f0 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= ccore f1 f2 cMAP part cFST f2
- (is_restricted (hypermap_of_list L)), (good_list L), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM r) N), ((normal_list L) N), ((final_list L) r) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((flag_list L) N) ==> (((core L) r) = ((MAP FST) r)))))
T c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> cMEM f2 f3 c==> cMEM f3 f1 c==> cnormal_list f0 f1 c==> cfinal_list f0 f3 c==> c= cnext_el f3 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cflag_list f0 f1 c= ccore f0 f3 cMAP part cFST f3
- (EMPTY = (dart (hypermap_of_list L))) |- ((dart (hypermap_of_list L)) = EMPTY)
T c==> c= part cEMPTY * part cdart chypermap_of_list f0 c= * part cdart chypermap_of_list f0 part cEMPTY
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> ((((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))) = T))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 c= cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
