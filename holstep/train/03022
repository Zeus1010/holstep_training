N Oxlzlez.radius_le_circumradius_all
C |- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Leaf_cell.CARD4_ALL_DISTINCT
A |- (!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))))))
T c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
D Leaf_cell.SET2_INSERT2
A |- (!a. (!b. (!w. (!x. (!y. (!z. ((((a INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (a = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))))
T c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
D Oxlzlez.NOT_COPLANAR_IMP_CARD4_ALT
A |- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0
D Oxlzlez.radius_le_circumradius
A |- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!u3. (!u2. (!u1. (!u0. (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))))
T c= ! ! ! ! ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
+ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))) u3)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4
- |- (((?u1. (?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = (?u1. ((?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= c\/ c? / c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c? / c\/ c~ creal_le cdistance c, b1 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c~ creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c\/ c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c? / c\/ c~ creal_le cdistance c, b1 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c\/ c~ creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) u0)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- |- ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- ((!u1. ((!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) = ((!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. ((!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= ! c/\ ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ ! creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! c/\ ! creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ |- ((\c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))) c)
T * / ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f1 b0 c/\ c~ c= f1 b1 c~ c= b0 b1 f2
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
- |- ((!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- ((!u2. ((!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) = ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= ! c/\ ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
+ |- ((!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))))))))) = T)
T c= ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= cCARD * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b2 b1 c==> cSUBSET * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (x = u3) |- ((~ (x = u2)) = (~ (u3 = u2)))
T c==> c= f0 f1 c= c~ c= f0 f2 c~ c= f1 f2
- ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ |- ((\y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))) u2)
T * / ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f4
- ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) |- (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) /\ ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
- |- ((~ (_7306835 = _7306837)) \/ ((~ (_7306836 = _7306838)) \/ ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = T)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- |- ((~ (_7306841 = _7306842)) \/ ((CARD _7306841) = (CARD _7306842)))
T c\/ c~ c= f0 f1 c= cCARD f0 cCARD f1
- |- ((~ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u0 = u3))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f3
+ |- ((!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u2 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((x = u1) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f2 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- (~ F), (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c/\ c~ cF cF
- |- ((~ (u3 = u3)) ==> (u3 = u3))
T c==> c~ c= f0 f0 c= f0 f0
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- ((x = u2) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c/\ c= f0 f3 cF
- |- ((!u1. (!u0. (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cT
+ |- (((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) ==> ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) u1)) = ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) u1))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- |- ((~ (_7306843 = _7306844)) \/ ((BIT1 _7306843) = (BIT1 _7306844)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
- |- (((?u0. (~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) = (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= c\/ c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c? / c\/ c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, f2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c? / c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, f2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY
- ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) |- ((((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) ==> ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F)) ==> ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
- |- (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) = (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c= c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- (((!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((\v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) v)) = ((\v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) v))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5 * / c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- (((!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2 * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
- |- ((!u2. ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c= ! c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
- ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = (((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f4 f5 c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- (~ (x = u0))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f1
+ ((x = u1) \/ (x = u2)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 cF
+ |- ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) u0)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u0 = u2)) /\ ((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f0 f2 cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((_7306841 = _7306842) ==> ((CARD _7306841) = (CARD _7306842)))
T c==> c= f0 f1 c= cCARD f0 cCARD f1
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u1)) /\ ((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))) v)
T * / ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= cCARD * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 b0 c==> cSUBSET * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
- ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) = T)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- |- (((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) ==> (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))) = (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))
T c= c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- (((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F))))))
T c= c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! c==> c~ c/\ creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
- (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ |- ((!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u3 = u1) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f3 f1 cF
+ ((x = u0) \/ (x = u1)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) = (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!u1. ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) = ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c= ! c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ |- ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
- |- (((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- (((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3)) = ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u2 = u3)) /\ ((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))) ==> ((\z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))) u3)) = ((\z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))) u3))
T c= c==> ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f5 * / c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f5
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (!d. (((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b1 part cEMPTY b0 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))) ==> ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))) u1)) = ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))) u1))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF f6 * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF f6
- |- (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) = (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u1 = u3))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f1 f3
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u3) ==> F), ((x = u0) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f4 cF c==> c\/ c= f0 f1 c= f0 f4 cF
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u2 = u3)) /\ ((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- |- ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cT
+ |- (((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F) = ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c= c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4
- |- (((?u3. (?u2. (?u1. (?u0. (~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) \/ (?u3. (?u2. (?u1. (?u0. ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = (?u3. ((?u2. (?u1. (?u0. (~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= c\/ c? / c? / c? / c? / c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c\/ c? / c? / c? / c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- (~ (u2 = u2))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c~ c= f3 f3
- ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) |- ((((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u2 = u3))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f2 f3
- |- ((\u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
- |- (((!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3 * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
- |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) ==> (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))
T c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- |- ((!u2. (!u1. (!u0. (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))))) = T)
T c= ! ! ! ! c==> c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
+ |- ((!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))))))) = T)
T c= ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((!x. (((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) x) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = ((?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b1 part cEMPTY b0 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c==> c\/ c= b3 b0 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- ((!u1. (!u0. (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- ((!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u0 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY
+ |- ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) u0)
T * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
- (_7306835 = _7306837), (_7306836 = _7306838) |- ((_7306836 = _7306838) /\ ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F), (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) |- (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) /\ ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- (~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
- |- ((!x. t) = t)
T c= ! f0 f0
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((x = u1) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 cF
- |- ((_7306845 = _7306846) ==> ((BIT0 _7306845) = (BIT0 _7306846)))
T c==> c= f0 f1 c= cBIT0 f0 cBIT0 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
- |- (((!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3 * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3
- ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F), (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) |- ((((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) /\ ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- |- ((!u1. (!u0. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
+ |- ((!d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))))))))))) = (!d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))))))
T c= ! ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- (~ (u1 = u0))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c~ c= f2 f1
- |- (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) = (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
+ |- (!x. ((x IN (u0 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- |- (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- |- (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) |- (((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 c/\ * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))) = T)
T c= ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_le cdistance c, f0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_le cdistance c, f0 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ creal_le cdistance c, b0 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, b1 b2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cT
- |- ((!u0. (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) = T)
T c= ! ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3 * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
+ ((x = u2) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f3 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f2 cF
- |- (((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) = (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c= c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u3 = u2) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f3 f2 cF
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?u0. t) = t)
T c= c? / f0 f0
+ ((x = u0) \/ (x = u3)) |- (((x = u0) \/ (x = u3)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2
- |- ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- |- (((!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3 * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
- |- (((((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) = (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ |- (((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) u0)) = ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) u0))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f0
+ |- (((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) u3)) = ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) u3))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) /\ (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))
T c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c/\ c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- ((!u3. (!u2. (!u1. (!u0. (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))))
T c= ! ! ! ! ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
+ |- ((((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cT
- |- (((?u3. (?u2. (?u1. (?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) \/ (?u3. (?u2. (?u1. (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))) = (?u3. ((?u2. (?u1. (?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))))
T c= c\/ c? / c? / c? / c? / c~ creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c\/ c~ creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c\/ c? / c? / c? / c~ creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c\/ c~ creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- (~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) |- (?u3. (?u2. (?u1. (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c==> c~ c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c\/ c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- (_7306835 = _7306837) |- ((_7306836 = _7306838) ==> ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ ((x = u0) \/ (x = u2)) |- (((x = u0) \/ (x = u2)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f4
- |- ((!u1. (!u0. (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
+ |- ((~ (_7306839 = _7306840)) \/ ((coplanar _7306840) \/ (~ (coplanar _7306839))))
T c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- (~ (u3 = u3))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c~ c= f4 f4
- (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- F
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) |- (((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) /\ ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- |- ((((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ |- ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u2) ==> F), ((x = u1) \/ (x = u2)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f2 c= f0 f3 cF
- |- (((?u2. (?u1. (?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))) = (?u2. ((?u1. (?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))))
T c= c\/ c? / c? / c? / c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c? / c\/ c~ creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c\/ c? / c? / c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c\/ c~ creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = T)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- (T = (((~ (x = y)) \/ ((~ (x = z)) \/ (y = z))) = ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ c~ c= f0 f2 c= f1 f2 c\/ c= f1 f2 c\/ c~ c= f0 f1 c~ c= f0 f2
- |- (((?u2. (?u1. (?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) = (?u2. ((?u1. (?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= c\/ c? / c? / c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c\/ c? / c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
- ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- |- (((!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ |- (((!w. (!x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))) ==> ((\w. (!x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))) u0)) = ((\w. (!x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))) u0))
T c= c==> ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * / ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2 * / ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b1 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- |- ((!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cT
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f4 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = T)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f4 cF
- |- ((\u1. (!u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) /\ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) = ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u2 = u0)) ==> ((u2 = u0) = F)) = ((u2 = u0) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f2 f0 c= c= f2 f0 cF c= c= f2 f0 cF
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- |- ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) |- (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- (((~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) ==> F) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c= c==> c~ c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u0 = u1)) ==> ((u0 = u1) = F)) = ((u0 = u1) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f0 f1 c= c= f0 f1 cF c= c= f0 f1 cF
+ |- (((!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) ==> ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) u0)) = ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) u0))
T c= c==> ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF f7 * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF f7
- |- ((((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) ==> ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F)) ==> (((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) ==> ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F)))
T c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u0 = u2)) /\ ((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f2 cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u2 = u0) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f2 f0 cF
- ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u3) ==> F), ((x = u2) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f4 cF c==> c\/ c= f0 f3 c= f0 f4 cF
- ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F), (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) |- (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) /\ ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
- |- (((!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ |- ((!x. ((x IN (u1 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
- |- (((?u1. (?u0. (~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = (?u1. ((?u0. (~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c= c\/ c? / c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c? / c\/ c~ creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c\/ c? / c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c\/ c~ creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u0 = u2) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f0 f2 cF
+ (_7306839 = _7306840) |- ((((coplanar _7306839) = (coplanar _7306840)) ==> ((coplanar _7306840) \/ (~ (coplanar _7306839)))) = ((coplanar _7306840) \/ (~ (coplanar _7306839))))
T c==> c= f0 f1 c= c==> c= ccoplanar f0 ccoplanar f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c~ ccoplanar f0
- (~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u3)) /\ ((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f3 cSUBSET * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))))) ==> ((\a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))))) a)) = ((\a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))))) a))
T c= c==> ! ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ c~ c= b0 b3 c/\ c~ c= b1 b2 c/\ c~ c= b1 b3 c~ c= b2 b3 * / ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ c~ c= b0 b3 c/\ c~ c= b1 b2 c/\ c~ c= b1 b3 c~ c= b2 b3 f0 * / ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ c~ c= b0 b3 c/\ c~ c= b1 b2 c/\ c~ c= b1 b3 c~ c= b2 b3 f0
+ |- ((!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u1 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- (~ (x = u2))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f3
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) |- (?u3. (?u2. (?u1. (?u0. ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c==> c~ c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ |- ((((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4 cT
+ |- ((!x. ((x IN (u1 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u0 = u3)) /\ ((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f0 f3 cSUBSET * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- (~ (u = v)) |- (((~ (v = u)) ==> ((v = u) = F)) = ((v = u) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- ((u2 = u2) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c==> c= f3 f3 cF
- |- (((!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ |- ((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
+ (~ (u = v)) |- ((u = v) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- (((!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- |- (((!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3 * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- |- (((((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) ==> (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F))) = (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)))
T c= c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ |- ((((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f4 cT
- |- ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)
T * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (~ ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u1 = u2))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f1 f2
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c==> c~ cF cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ |- ((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- |- (((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) ==> ((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u1) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f2 c= f0 f4 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((x = u3) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- ((x = u3) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c/\ c= f0 f4 cF
- |- ((!u2. (!u1. (!u0. (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))))) = T)
T c= ! ! ! ! c==> c\/ c= b3 b2 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
- |- ((\u0. ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f2 c\/ c= b1 f0 c= b1 f1 cF f3
- |- ((!u0. (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) = T)
T c= ! ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cT
+ |- (((!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))))) ==> ((\c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))))) c)) = ((\c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))))) c))
T c= c==> ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= cCARD * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b2 b1 c==> cSUBSET * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF * / ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= cCARD * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b2 b1 c==> cSUBSET * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1 * / ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= cCARD * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b2 b1 c==> cSUBSET * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
- |- ((!u1. (!u0. (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 f0 c= b2 f1 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cT
+ |- (!x. ((x IN (u1 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY
- ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c/\ c~ c= f0 f1 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c==> c~ cF cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u0 = u1))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u0 = u2)) ==> ((u0 = u2) = F)) = ((u0 = u2) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f0 f2 c= c= f0 f2 cF c= c= f0 f2 cF
+ |- ((\b. (!w. (!x. (!y. (!z. ((((u INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))) v)
T * / ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ c= f0 b0 c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f1
+ |- (!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!u3. ((!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= ! c/\ ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! c/\ ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ |- (((u3 = u3) ==> F) = F)
T c= c==> c= f0 f0 cF cF
- |- (((?u0. (~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = (?u0. ((~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c= c\/ c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c? / c\/ c~ creal_le cdistance c, b0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c~ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c? / c\/ c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, b0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c~ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 * * part cINSERT f2 part cEMPTY
- |- ((!u0. (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) = T)
T c= ! ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cT
+ |- (((!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))) ==> ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))) u2)) = ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))) u2))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f5 * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f5
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- (~ (u1 = u1))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c~ c= f2 f2
- |- (((!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ |- ((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_le cdistance c, f0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ creal_le cdistance c, f1 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cT
- ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ |- (((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) ==> ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) u2)) = ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) u2))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2
+ |- (((!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))) ==> ((\u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))) u)) = ((\u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))) u))
T c= c==> ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= cCARD * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f0 c==> cSUBSET * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF * / ! ! ! ! c==> c~ ccoplanar * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= cCARD * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f0 c==> cSUBSET * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3 * / ! ! ! ! c==> c~ ccoplanar * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= cCARD * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f0 c==> cSUBSET * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- (~ F), (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c/\ c~ cF cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- ((!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cT
+ |- ((\z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))) u3)
T * / c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f5
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((x = u2) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 cF
- |- ((!u2. (!u1. (!u0. (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))))) = T)
T c= ! ! ! ! c==> c\/ c= b3 b2 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
- (_7306835 = _7306837), (_7306836 = _7306838) |- ((((_7306835 SUBSET _7306836) = (_7306837 SUBSET _7306838)) ==> ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836)))) = ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cSUBSET f0 f2 cSUBSET f1 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
+ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) = (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u2) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
- |- ((!u0. (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = ((!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c= ! c/\ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY creal_le cdistance c, f2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY ! c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY creal_le cdistance c, f2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY
+ ((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) |- ((((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 c= c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((~ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> F) = (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c= c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- ((x = u0) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c/\ c= f0 f1 cF
+ |- ((_7306839 = _7306840) ==> ((coplanar _7306840) \/ (~ (coplanar _7306839))))
T c==> c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ |- (((!a. (!b. (!w. (!x. (!y. (!z. ((((a INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (a = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))) ==> ((\a. (!b. (!w. (!x. (!y. (!z. ((((a INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (a = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))) u)) = ((\a. (!b. (!w. (!x. (!y. (!z. ((((a INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (a = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))) u))
T c= c==> ! ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ c= b0 b1 c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY * / ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ c= b0 b1 c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f0 * / ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ c= b0 b1 c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f0
- |- ((((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) = ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c= c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
- |- ((_7306835 = _7306837) ==> ((~ (_7306836 = _7306838)) \/ ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (_7306847 = _7306848) |- ((_7306847 = _7306848) /\ ((NUMERAL _7306847) = (NUMERAL _7306848)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ |- ((!x. ((x IN (u0 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- (~ (u1 = u3))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c~ c= f2 f4
- |- ((!u0. (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) = T)
T c= ! ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cT
+ |- ((\a. (!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))))) a)
T * / ! ! ! c==> c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c/\ c~ c= b0 b3 c/\ c~ c= b1 b2 c/\ c~ c= b1 b3 c~ c= b2 b3 f0
- (_7306843 = _7306844) |- ((_7306843 = _7306844) /\ ((BIT1 _7306843) = (BIT1 _7306844)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u2)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c==> c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f4 f5 c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) = (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b2 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u3 = u0))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f3 f0
- |- ((~ (_7306847 = _7306848)) \/ ((NUMERAL _7306847) = (NUMERAL _7306848)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u3 = u2))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f3 f2
- |- ((_7306849 = _7306851) ==> ((~ (_7306850 = _7306852)) \/ ((_7306849 INSERT _7306850) = (_7306851 INSERT _7306852))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- (((!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))) ==> ((\d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))) d)) = ((\d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))) d))
T c= c==> ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 b0 c/\ c~ c= f1 f2 c/\ c~ c= f1 b0 c~ c= f2 b0 * / c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 b0 c/\ c~ c= f1 f2 c/\ c~ c= f1 b0 c~ c= f2 b0 f3 * / c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 b0 c/\ c~ c= f1 f2 c/\ c~ c= f1 b0 c~ c= f2 b0 f3
- (_7306850 = _7306852), (_7306849 = _7306851) |- ((_7306850 = _7306852) /\ ((_7306849 INSERT _7306850) = (_7306851 INSERT _7306852)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((x = u0) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- |- (((?u2. (?u1. (?u0. (~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = (?u2. ((?u1. (?u0. (~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= c\/ c? / c? / c? / c~ creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c? / c\/ c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c\/ c? / c? / c~ creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c? / c? / c\/ c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c\/ c~ creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
- |- (((!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) /\ ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((?u3. (?u2. (?u1. (?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) \/ (?u3. (?u2. (?u1. (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = (?u3. ((?u2. (?u1. (?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) \/ (?u2. (?u1. (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c= c\/ c? / c? / c? / c? / c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c\/ c? / c? / c? / c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c~ c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u3) ==> F), ((x = u1) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f4 cF c==> c\/ c= f0 f2 c= f0 f4 cF
+ |- ((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) ==> F) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= c==> c~ c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- |- (((!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) ==> ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)) = ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1))
T c= c==> ! ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2 * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ |- ((p \/ (q \/ r)) = (q \/ (p \/ r)))
T c= c\/ f0 c\/ f1 f2 c\/ f1 c\/ f0 f2
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((~ (x = u2)) /\ (~ (x = u3)))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f3 c~ c= f0 f4
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = T)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u1) ==> F), ((x = u0) \/ (x = u1)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f2 cF c==> c\/ c= f0 f1 c= f0 f2 cF
- (u1 = u0) |- (u0 = u1)
T c==> c= f0 f1 c= f1 f0
+ |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u0 = u1)) /\ ((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f0 f1 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))) |- (?u3. (?u2. (?u1. (?u0. ((~ ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))))
T c==> c~ c/\ ! ! ! ! creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c? / c? / c? / c? / c\/ c~ creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c\/ c~ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ |- ((!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u1 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((_7306847 = _7306848) ==> ((NUMERAL _7306847) = (NUMERAL _7306848)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u1 = u3)) /\ ((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f3 cSUBSET * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u1)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f2 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))), (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c/\ c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- ((u1 = u1) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c==> c= f2 f2 cF
+ ((x = u0) \/ (x = u3)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f4 c= f0 f2 cF
- (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
+ |- (((!d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))))) ==> ((\d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))))) d)) = ((\d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))))) d))
T c= c==> ! ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF * / ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0 * / ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ |- ((!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))))) = T)
T c= ! ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
- (~ F), (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c/\ c~ cF cF
- (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- |- (((~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))) ==> F) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))))
T c= c==> c~ c/\ ! ! ! ! creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF c/\ ! ! ! ! creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- |- ((~ (_7306849 = _7306851)) \/ ((~ (_7306850 = _7306852)) \/ ((_7306849 INSERT _7306850) = (_7306851 INSERT _7306852))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((!u2. ((!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = ((!u2. (!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. ((!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ ((!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= ! c/\ ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! c/\ ! ! creal_le cdistance c, b2 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY ! ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY
- |- ((!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u2 = u0))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f2 f0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) = (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c= c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- |- ((!u3. ((!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c= ! c/\ ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
+ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u2)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f3 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ |- ((!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u0 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((p \/ (p \/ q)) = (p \/ q))
T c= c\/ f0 c\/ f0 f1 c\/ f0 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ |- (!x. ((x IN (u2 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (~ F), (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c/\ c~ cF cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u1)) /\ ((~ (u0 = u2)) /\ ((~ (u0 = u3)) /\ ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
+ |- (((!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))) ==> ((\c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))) c)) = ((\c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d)))))))))) c))
T c= c==> ! ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f1 b0 c/\ c~ c= f1 b1 c~ c= b0 b1 * / ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f1 b0 c/\ c~ c= f1 b1 c~ c= b0 b1 f2 * / ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f1 b0 c/\ c~ c= f1 b1 c~ c= b0 b1 f2
+ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) = ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= c==> c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) |- (((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) /\ ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u1 = u3)) /\ ((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f3 cSUBSET * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((\u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)) = ((\u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0))
T c= c==> ! c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3 * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3
- |- ((\u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 f0 c= b1 f1 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f2 c= b1 f1 cF f3
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ ((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) |- ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))
T c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ (((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- (~ (u0 = u3))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c~ c= f1 f4
- (x = u3) |- (F = F)
T c==> c= f0 f1 c= cF cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- (((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F))))))
T c= c/\ ! ! ! ! creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! c==> c~ c/\ creal_le cdistance c, b3 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
- ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- ((((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) /\ ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c/\ c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
- (_7306841 = _7306842) |- ((_7306841 = _7306842) /\ ((CARD _7306841) = (CARD _7306842)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cCARD f0 cCARD f1
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- (((!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) ==> ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)) = ((\u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2))
T c= c==> ! ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1 * / ! ! c==> c~ ! c==> c\/ c= b3 b1 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1)) = ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- |- ((\u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
- |- (((?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) = (?u0. ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c= c\/ c? / c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c? / c~ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c? / c\/ c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
- |- (((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) = (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1
+ |- ((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u3 = u0)) ==> ((u3 = u0) = F)) = ((u3 = u0) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f3 f0 c= c= f3 f0 cF c= c= f3 f0 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u1 = u3) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f1 f3 cF
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- ((~ F) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c==> c~ cF cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u2) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f3 c= f0 f4 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cT
- ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- ((_7306843 = _7306844) ==> ((BIT1 _7306843) = (BIT1 _7306844)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u2 = u3)) ==> ((u2 = u3) = F)) = ((u2 = u3) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f2 f3 c= c= f2 f3 cF c= c= f2 f3 cF
+ |- ((((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cT
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u1 = u0) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f1 f0 cF
+ |- ((~ (a \/ b)) = ((~ a) /\ (~ b)))
T c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
- |- (((((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) = (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
+ ((x = u1) \/ (x = u3)) |- (((x = u1) \/ (x = u3)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f2
- |- ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)
T * / ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ |- ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))))) u1)
T * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f1
- |- (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) = (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))
T c= c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))) = ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- (~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- F
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- |- (((!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3))
T c= c==> ! ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0 * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
+ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) ==> ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1)) = ((\u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) u1))
T c= c==> ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1 * / ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f1
- (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) |- ((((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) /\ (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)))
T c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- |- ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 b0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f0 c= b2 f1 cF f2
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- (~ (u0 = u1))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c~ c= f1 f2
+ ((x = u1) \/ (x = u2)) |- (((x = u1) \/ (x = u2)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f2 c= f0 f4
- |- ((!u0. (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c= ! c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY ! creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u0 = u2))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f0 f2
- (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) |- ((((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) /\ (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u1) \/ (x = u3)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f2 c= f0 f4 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((~ F) ==> F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c~ cF cF
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- ((\v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) v)
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f5
- |- ((!u3. (!u2. (!u1. (!u0. (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))))
T c= ! ! ! ! ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c==> c\/ c= b4 b2 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
- |- ((\u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f2 c= b1 f0 cF f3
+ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = T)
T c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cT
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((~ (x = u0)) /\ ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3)))))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = T)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ! c==> c/\ c~ c= f4 b0 cSUBSET * * part cINSERT f4 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ |- (((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2)) = ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2))
T c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((!x. (((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) x) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = ((?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ! c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (_7306839 = _7306840) |- ((_7306839 = _7306840) /\ ((coplanar _7306840) \/ (~ (coplanar _7306839))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u1 = u2)) /\ ((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f2 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) |- (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) /\ ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c/\ c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY
- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))), (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) /\ ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c/\ c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- |- (((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F) ==> ((~ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ |- ((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, f0 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c/\ creal_le cdistance c, f1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cT
- (_7306835 = _7306837) |- ((_7306835 = _7306837) /\ ((~ (_7306836 = _7306838)) \/ ((_7306837 SUBSET _7306838) \/ (~ (_7306835 SUBSET _7306836)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cSUBSET f1 f3 c~ cSUBSET f0 f2
- ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
- |- ((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
- |- ((\u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))) u3)
T * / ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b0 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF f0
- (_7306849 = _7306851) |- ((_7306850 = _7306852) ==> ((_7306849 INSERT _7306850) = (_7306851 INSERT _7306852)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((\a. (!b. (!w. (!x. (!y. (!z. ((((a INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (a = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (a INSERT (b INSERT (c INSERT (d INSERT EMPTY)))))))))))))) u)
T * / ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY c/\ c~ c= b0 b1 c= cCARD * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b6 * * part cINSERT b7 part cEMPTY f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u1 = u2)) /\ ((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f1 f2 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (!x. ((x IN (u0 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f1 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f2 part cEMPTY
+ |- ((!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ |- ((!x. ((x IN (u2 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- ((coplanar _7306840) \/ ((~ (_7306839 = _7306840)) \/ (~ (coplanar _7306839))))
T c\/ ccoplanar f0 c\/ c~ c= f1 f0 c~ ccoplanar f1
- |- ((!u1. ((!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = ((!u1. (!u0. ((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) /\ (!u1. ((!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ ((!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))
T c= ! c/\ ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, b1 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! ! creal_le cdistance c, b1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! c/\ ! creal_le cdistance c, b1 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ ! creal_le cdistance c, b0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY ! creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u0 = u1)) /\ ((u0 INSERT (u1 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f1 cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- ((u3 = u3) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c==> c= f4 f4 cF
- (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- ((((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = T)
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f4 f5 cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
- |- ((!u0. (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) = ((!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) /\ (!u0. (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c= ! c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY ! c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- |- ((!u1. (!u0. (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))) = T)
T c= ! ! ! c==> c\/ c= b2 b0 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cT
- |- (((~ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))))) ==> F) = ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ ((!u3. (!u2. (!u1. (!u0. ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) /\ (!u3. (!u2. (!u1. (!u0. ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))))
T c= c==> c~ c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF c/\ ! ! ! ! creal_le cdistance c, b3 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ ! ! ! ! creal_le cdistance c, b2 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! creal_le cdistance c, b1 b0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u1 = u2) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f1 f2 cF
+ |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
- |- ((!u0. (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) = T)
T c= ! ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cT
+ |- ((!x. ((x IN (u0 INSERT (u3 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) = ((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c= ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f0 c\/ c= b1 f1 c= b1 f2 cF f3
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- (~ (u0 = u2))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c~ c= f1 f3
- |- (((?u1. (?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) \/ (?u1. (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = (?u1. ((?u0. (~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c= c\/ c? / c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c? / c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c\/ c? / c~ creal_le cdistance c, b0 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY c? / c~ creal_le cdistance c, f1 f0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f0 part cEMPTY
- ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
- ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F), (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) |- ((((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) /\ ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c/\ c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
+ |- ((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
- |- ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ |- ((\u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))) u1)
T * / ! c==> c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= cCARD * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f2 f3 c==> cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c= * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> ccoplanar * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cF f6
- |- ((((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) ==> (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)))
T c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u3 = u2)) ==> ((u3 = u2) = F)) = ((u3 = u2) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f3 f2 c= c= f3 f2 cF c= c= f3 f2 cF
- |- ((((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) = ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c= c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
- (~ (u = v)) |- (~ (v = u))
T c==> c~ c= f0 f1 c~ c= f1 f0
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2)
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ ((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) |- (((?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 c= c==> c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((!u2. (!u1. (!u0. (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))))) = T)
T c= ! ! ! ! c==> c\/ c= b3 b1 c= b3 f0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cT
- |- ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 b1 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u0 = u3) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f0 f3 cF
- |- ((((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) = ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c= c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- F
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (~ (u2 = u1))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ c= f2 f1
- |- (((((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) ==> (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F))) = (((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)))
T c= c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- (~ (u1 = u2))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c~ c= f2 f3
- |- (T = (((~ (_7306839 = _7306840)) \/ ((coplanar _7306840) \/ (~ (coplanar _7306839)))) = ((coplanar _7306840) \/ ((~ (_7306839 = _7306840)) \/ (~ (coplanar _7306839))))))
T c= cT c= c\/ c~ c= f0 f1 c\/ ccoplanar f1 c~ ccoplanar f0 c\/ ccoplanar f1 c\/ c~ c= f0 f1 c~ ccoplanar f0
+ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> F) = F)
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
- |- ((((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)) ==> (((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> F)))
T c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY cF
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ ((x = u0) \/ (x = u2)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) ==> F)
T c==> c\/ c= f0 f1 c= f0 f2 c==> c~ c\/ c= f0 f1 c\/ c= f0 f3 c\/ c= f0 f2 c= f0 f4 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u3)) /\ ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u3 = u1)) ==> ((u3 = u1) = F)) = ((u3 = u1) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f3 f1 c= c= f3 f1 cF c= c= f3 f1 cF
- |- (((?u0. (~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) \/ (?u0. ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))) = (?u0. ((~ ((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ ((~ ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) \/ (~ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c= c\/ c? / c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c\/ c~ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c? / c\/ c~ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c\/ c~ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u2)) /\ ((~ (u0 = u3)) /\ ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
- |- ((!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = T)
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f1 c= b0 f3 cT
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- (~ (u2 = u1))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c~ c= f3 f2
+ |- ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- ((!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) /\ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (x = u3) |- ((~ (x = u3)) = (~ (u3 = u3)))
T c==> c= f0 f1 c= c~ c= f0 f1 c~ c= f1 f1
- ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F), (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) |- (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) /\ ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c/\ c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)) |- ((~ (u = v)) /\ (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c/\ c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
- |- ((\u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) u1)
T * / ! c==> c~ ! c==> c\/ c= b2 b1 c= b2 f0 c\/ c= b2 b1 c\/ c= b2 b0 c\/ c= b2 f1 c= b2 f0 cF f2
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u2 = u3)) /\ ((u2 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f2 f3 cSUBSET * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (u = v)) |- ((v = u) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- (((((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))) = (((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c= c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))) = ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- ((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) /\ (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- (~ (u2 = u0))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c~ c= f3 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((~ (u1 = u3)) /\ ((u1 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c/\ c~ c= f1 f3 cSUBSET * * part cINSERT f1 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u1 = u0)) ==> ((u1 = u0) = F)) = ((u1 = u0) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- |- ((((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> (((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))
T c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f2 c\/ c= b0 f3 c= b0 f1 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u0) \/ (x = u1)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f1 c= f0 f2 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- ((~ (x = u1)) /\ ((~ (x = u2)) /\ (~ (x = u3))))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c~ c= f0 f4
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((\u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) u0)
T * / c==> c~ ! c==> c\/ c= b1 b0 c= b1 f0 c\/ c= b1 b0 c\/ c= b1 f1 c\/ c= b1 f0 c= b1 f2 cF f3
- |- ((\u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)))) u2)
T * / ! ! c==> c~ ! c==> c\/ c= b3 b2 c= b3 b0 c\/ c= b3 b2 c\/ c= b3 b1 c\/ c= b3 b0 c= b3 f0 cF f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u1 = u2)) /\ ((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f2 cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) |- ((\u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u)
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * / ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- (~ (u0 = u0))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c~ c= f1 f1
- |- ((((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))) ==> ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) = ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))
T c= c==> c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
- ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) |- ((((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F)) ==> ((~ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> F))
T c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c==> c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF c==> c~ c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY creal_le cdistance c, f3 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY cF
+ |- ((\d. (!c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))))) d)
T * / ! ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= cCARD * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b3 b2 c==> cSUBSET * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY c==> c= * * part cINSERT b7 * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
- ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) |- ((((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) ==> ((~ (!x. (((x = u1) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f1 c= b0 f3 cF
- |- ((!u3. (!u2. (!u1. (!u0. (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))))))) = (!u3. (!u2. (!u1. (!u0. ((~ (!x. (((x = u0) \/ (x = u2)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))))))
T c= ! ! ! ! ! c==> c\/ c= b4 b3 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 ! ! ! ! c==> c~ ! c==> c\/ c= b4 b3 c= b4 b1 c\/ c= b4 b3 c\/ c= b4 b2 c\/ c= b4 b1 c= b4 b0 cF
- (~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) |- ((~ (!x. (((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) /\ F)
T c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 c/\ c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f0 c\/ c= b0 f3 c= b0 f1 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))), ((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) |- (((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) /\ ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 c/\ * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- (((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 cF
+ |- (((!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))) ==> ((\y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))) u2)) = ((\y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))) u2))
T c= c==> ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * / ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f4 * / ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f4
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (((!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) ==> ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2)) = ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))) u2))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2
+ |- (((_7306839 = _7306840) /\ (coplanar _7306839)) ==> (coplanar _7306840))
T c==> c/\ c= f0 f1 ccoplanar f0 ccoplanar f1
- (!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))) |- (((!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) ==> ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3)) = ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) u3))
T c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= c==> ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3 * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f3
+ |- ((~ F) = T)
T c= c~ cF cT
- (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- F
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- |- ((((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F) ==> ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F)) = ((~ (!x. (((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))))) ==> F))
T c= c==> c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF c==> c~ ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f2 c\/ c= b0 f3 c\/ c= b0 f0 c= b0 f1 cF
- (~ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) /\ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))))) ==> ((\b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))))) b)) = ((\b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))))) b))
T c= c==> ! ! ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f0 b2 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c~ c= b1 b2 * / ! ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f0 b2 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c~ c= b1 b2 f1 * / ! ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f0 b2 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c~ c= b1 b2 f1
+ |- (((!x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))) ==> ((\x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))) u1)) = ((\x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))) u1))
T c= c==> ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * / ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f3 * / ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f3
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u2) |- (~ (u2 = u3))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f3 c~ c= f3 f4
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = ((~ (u0 = u3)) /\ ((u0 INSERT (u3 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= cSUBSET * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f3 cSUBSET * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- (~ (u3 = u2))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c~ c= f4 f3
- |- (((?u0. (P u0)) \/ (?u0. (Q u0))) = (?u0. ((P u0) \/ (Q u0))))
T c= c\/ c? / * f0 b0 c? / * f1 b0 c? / c\/ * f0 b0 * f1 b0
- (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u3) |- (~ (u3 = u1))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f4 c~ c= f4 f2
- |- ((!x. (P x)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
+ |- ((\u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))) u)
T * / ! ! ! ! c==> c~ ccoplanar * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= cCARD * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f0 c==> cSUBSET * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
+ |- ((\d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))) d)
T * / c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 b0 c/\ c~ c= f1 f2 c/\ c~ c= f1 b0 c~ c= f2 b0 f3
+ |- (((!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))) ==> ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))) u3)) = ((\u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))) u3))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= cCARD * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f0 f1 c==> cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c= * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))) = (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) = (((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))
T c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c= ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ ((x = u2) \/ (x = u3)) |- (((x = u2) \/ (x = u3)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f2
+ |- ((\u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))) u2)
T * / ! ! c==> c~ ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= cCARD * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f1 f2 c==> cSUBSET * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c= * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ccoplanar * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF f5
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u1 = u2)) ==> ((u1 = u2) = F)) = ((u1 = u2) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f1 f2 c= c= f1 f2 cF c= c= f1 f2 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))) = T)
T c= ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c~ ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- ((((\d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))) d) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = T)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> * / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY f7 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ |- ((((x = u2) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f4 c\/ c= f0 f1 c= f0 f2 cT
+ |- (((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))) = T)
T c= c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- (~ (x = u1))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f2
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u0 = u1) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f0 f1 cF
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u1) \/ (x = u2)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f2 c= f0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (~ (u = v)), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (!c. (((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f5 c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY ! c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b1 * * part cINSERT b1 part cEMPTY b0 creal_le cdistance c, f4 f5 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u0) |- ((u0 = u0) ==> F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f1 c==> c= f1 f1 cF
+ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- (((u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))) = (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- (((!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))) ==> ((\v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))) v)) = ((\v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F)))))))))))) v))
T c= c==> ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= cCARD * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 b0 c==> cSUBSET * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF * / ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= cCARD * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 b0 c==> cSUBSET * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2 * / ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= cCARD * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 b0 c==> cSUBSET * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
+ |- ((\u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))) u2)
T * / ! c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f2
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u2) ==> F), ((x = u0) \/ (x = u2)) |- F
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c==> c= f0 f3 cF c==> c\/ c= f0 f1 c= f0 f3 cF
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u1 = u3)) /\ (~ (u2 = u3)))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f1 f3 c~ c= f2 f3
+ |- ((\w. (!x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))) u0)
T * / ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b4 * * part cINSERT b5 part cEMPTY f2
+ ((x = u0) \/ (x = u1)) |- (((x = u0) \/ (x = u1)) /\ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))
T c==> c\/ c= f0 f1 c= f0 f2 c/\ c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4
+ ((\c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))) c) |- (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))
T c==> * / c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f6 c? / c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT b0 part cEMPTY
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
+ |- ((~ p) = (p ==> F))
T c= c~ f0 c==> f0 cF
+ |- ((!x. (((x = u0) \/ (x = u1)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3)))))) = (!x. ((x IN (u0 INSERT (u1 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= ! c==> c\/ c= b0 f0 c= b0 f1 c\/ c= b0 f0 c\/ c= b0 f1 c\/ c= b0 f2 c= b0 f3 ! c==> cIN b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cIN b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u0 = u3)) ==> ((u0 = u3) = F)) = ((u0 = u3) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f0 f3 c= c= f0 f3 cF c= c= f0 f3 cF
+ |- ((!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))))))))) = T)
T c= ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= cCARD * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b1 b0 c==> cSUBSET * * part cINSERT b1 * * part cINSERT b0 part cEMPTY * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c==> c= * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ ccoplanar * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((~ (u1 = u3)) ==> ((u1 = u3) = F)) = ((u1 = u3) = F))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= f1 f3 c= c= f1 f3 cF c= c= f1 f3 cF
+ |- ((\u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))) u0)
T * / c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= cCARD * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= f3 f4 c==> cSUBSET * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY c==> ccoplanar * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 part cEMPTY cF f7
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), ((x = u1) \/ (x = u2)) |- ((~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c\/ c= f0 f2 c= f0 f3 c/\ c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 cF
+ |- ((\c. (!v. (!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> F))))))))))))) c)
T * / ! ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= cCARD * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b2 b1 c==> cSUBSET * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c==> c= * * part cINSERT b6 * * part cINSERT b5 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> ccoplanar * * part cINSERT b2 * * part cINSERT b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))), ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) |- ((coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) /\ F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c/\ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY cF
+ |- ((\u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) u3)
T * / c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT b0 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f3
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) |- (~ (x = u3))
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c~ c= f0 f4
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((~ (u0 = u2)) /\ ((u0 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 f2 cSUBSET * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\x. (!y. (!z. ((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))))) u1)
T * / ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY f3
+ |- ((u1 INSERT (u2 INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))
T cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((\b. (!c. (!d. (((CARD (a INSERT (b INSERT (c INSERT (d INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (a = b)) /\ ((~ (a = c)) /\ ((~ (a = d)) /\ ((~ (b = c)) /\ ((~ (b = d)) /\ (~ (c = d))))))))))) b)
T * / ! ! c==> c= cCARD * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 b0 c/\ c~ c= f0 b1 c/\ c~ c= f0 b2 c/\ c~ c= b0 b1 c/\ c~ c= b0 b2 c~ c= b1 b2 f1
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((u2 = u3) = F)
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c= f2 f3 cF
+ |- (((!u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) ==> ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) u0)) = ((\u0. (!u1. (!u2. (!u3. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))))))) u0))
T c= c==> ! ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0 * / ! ! ! c==> c~ ccoplanar * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY c= cCARD * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 f0
+ |- (((x = y) /\ (x = z)) ==> (y = z))
T c==> c/\ c= f0 f1 c= f0 f2 c= f1 f2
+ |- ((!u. (!u3. (!u2. (!u1. (!u0. ((~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> (((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u = v)) ==> (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) ==> (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))))))))))) = T)
T c= ! ! ! ! ! c==> c~ ccoplanar * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= cCARD * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c==> c~ c= b0 f0 c==> cSUBSET * * part cINSERT b0 * * part cINSERT f0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c==> c= * * part cINSERT b4 * * part cINSERT b3 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ ccoplanar * * part cINSERT b0 * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- ((((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ==> ((~ (u0 = u1)) /\ ((~ (u0 = u2)) /\ ((~ (u0 = u3)) /\ ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3)))))))) = ((~ (u0 = u1)) /\ ((~ (u0 = u2)) /\ ((~ (u0 = u3)) /\ ((~ (u1 = u2)) /\ ((~ (u1 = u3)) /\ (~ (u2 = u3))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c==> c= cCARD * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3 c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f0 f3 c/\ c~ c= f1 f2 c/\ c~ c= f1 f3 c~ c= f2 f3
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u0 , u1))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u0 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f0 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))), ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) |- (((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ (((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))) ==> (~ (coplanar (u INSERT (v INSERT (c INSERT (d INSERT EMPTY))))))))
T c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cSUBSET * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY c~ ccoplanar * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f6 * * part cINSERT f7 part cEMPTY
+ (!u. (!v. (((~ (u = v)) /\ ((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))), (~ (coplanar (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))) |- (((real_le (distance (u1 , u2))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ (((real_le (distance (u1 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))) /\ ((real_le (distance (u2 , u3))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))))
T c==> ! ! c==> c/\ c~ c= b0 b1 cSUBSET * * part cINSERT b0 * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, b0 b1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ ccoplanar * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f2 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ creal_le cdistance c, f1 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY creal_le cdistance c, f2 f3 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ |- ((((((u INSERT (v INSERT EMPTY)) SUBSET (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) /\ ((~ (u = v)) /\ ((CARD (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))) = (u INSERT (v INSERT (c INSERT (d INSERT EMPTY)))))))) ==> ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))) = ((real_le (distance (u , v))) ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (radV (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY))))))))
T c= c==> c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ c= f0 f1 c= cCARD * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY creal_le cdistance c, f0 f1 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 cradV * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY
+ |- ((y = z) \/ ((~ (x = y)) \/ (~ (x = z))))
T c\/ c= f0 f1 c\/ c~ c= f2 f0 c~ c= f2 f1
+ |- (!x. ((x IN (u1 INSERT (u2 INSERT EMPTY))) ==> (x IN (u0 INSERT (u1 INSERT (u2 INSERT (u3 INSERT EMPTY)))))))
T c==> cIN f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f0 * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (((!b. (!w. (!x. (!y. (!z. ((((u INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))) ==> ((\b. (!w. (!x. (!y. (!z. ((((u INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))) v)) = ((\b. (!w. (!x. (!y. (!z. ((((u INSERT (b INSERT EMPTY)) SUBSET (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) /\ ((~ (u = b)) /\ ((CARD (w INSERT (x INSERT (y INSERT (z INSERT EMPTY))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))) ==> (?c. (?d. ((w INSERT (x INSERT (y INSERT (z INSERT EMPTY)))) = (u INSERT (b INSERT (c INSERT (d INSERT EMPTY))))))))))))) v))
T c= c==> ! ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ c= f0 b0 c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY * / ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ c= f0 b0 c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f1 * / ! ! ! ! c==> c/\ cSUBSET * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY c/\ c~ c= f0 b0 c= cCARD * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c? / c? / c= * * part cINSERT b1 * * part cINSERT b2 * * part cINSERT b3 * * part cINSERT b4 part cEMPTY * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b5 * * part cINSERT b6 part cEMPTY f1
+ |- ((((x = u1) \/ (x = u3)) ==> ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))) = T)
T c= c==> c\/ c= f0 f1 c= f0 f2 c\/ c= f0 f3 c\/ c= f0 f1 c\/ c= f0 f4 c= f0 f2 cT
+ (~ ((x = u0) \/ ((x = u1) \/ ((x = u2) \/ (x = u3))))), (x = u1) |- ((x = u1) /\ F)
T c==> c~ c\/ c= f0 f1 c\/ c= f0 f2 c\/ c= f0 f3 c= f0 f4 c==> c= f0 f2 c/\ c= f0 f2 cF
