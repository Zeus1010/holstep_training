N UNIFORMLY_CONTINUOUS_ON_ADD
C |- (!f. (!g. (!s. ((((uniformly_continuous_on f) s) /\ ((uniformly_continuous_on g) s)) ==> ((uniformly_continuous_on (\x. ((vector_add (f x)) (g x)))) s)))))
T c==> c/\ cuniformly_continuous_on f0 f1 cuniformly_continuous_on f2 f1 cuniformly_continuous_on / cvector_add * f0 b0 * f2 b0 f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_MUL_LID
A |- (!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x))
T c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 f0 f0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D Real_ext.REAL_SV_NEG_0
A |- ((real_neg (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_neg creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D CART_EQ
A |- (!x. (!y. ((x = y) = (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((x $ i) = (y $ i)))))))
T c= c= f0 f1 ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ f0 b0 c$ f1 b0
D LAMBDA_BETA
A |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda f1 f0 * f1 f0
D vector_add
A |- (!x. (!y. (((vector_add x) y) = (lambdai. ((real_add (x $ i)) (y $ i))))))
T c= cvector_add f0 f1 clambda / creal_add c$ f0 b0 c$ f1 b0
D vector_sub
A |- (!x. (!y. (((vector_sub x) y) = (lambdai. ((real_sub (x $ i)) (y $ i))))))
T c= cvector_sub f0 f1 clambda / creal_sub c$ f0 b0 c$ f1 b0
D VECTOR_ADD_LID
A |- (!x. (((vector_add (vec (NUMERAL _0))) x) = x))
T c= cvector_add cvec cNUMERAL c_0 f0 f0
D LIM_ADD
A |- (!net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net)))))))
T c==> c/\ c--> f0 f1 f2 c--> f3 f4 f2 c--> / cvector_add * f0 b0 * f3 b0 cvector_add f1 f4 f2
D UNIFORMLY_CONTINUOUS_ON_SEQUENTIALLY
A |- (!f. (!s. (((uniformly_continuous_on f) s) = (!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)))))))
T c= cuniformly_continuous_on f0 f1 ! ! c==> c/\ ! cIN * b0 b2 f1 c/\ ! cIN * b1 b2 f1 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f0 * b0 b2 * f0 * b1 b2 cvec cNUMERAL c_0 csequentially
+ |- ((!y. ((P y) ==> (Q y))) ==> ((!y. (P y)) ==> (!y. (Q y))))
T c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ (((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) |- ((((real_add ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) = ((real_sub ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) ((real_add ((f (y x')) $ i)) ((g (y x')) $ i)))) = (((lambdai. ((real_add ((lambdai. ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) $ i)) ((lambdai. ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) $ i)) ((lambdai. ((real_add ((f (y x')) $ i)) ((g (y x')) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c= creal_add creal_sub c$ * f1 * f2 f3 f0 c$ * f1 * f4 f3 f0 creal_sub c$ * f5 * f2 f3 f0 c$ * f5 * f4 f3 f0 creal_sub creal_add c$ * f1 * f2 f3 f0 c$ * f5 * f2 f3 f0 creal_add c$ * f1 * f4 f3 f0 c$ * f5 * f4 f3 f0 c= c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 * f2 f3 b1 c$ * f1 * f4 f3 b1 b0 c$ clambda / creal_sub c$ * f5 * f2 f3 b1 c$ * f5 * f4 f3 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_add c$ * f1 * f2 f3 b1 c$ * f5 * f2 f3 b1 b0 c$ clambda / creal_add c$ * f1 * f4 f3 b1 c$ * f5 * f4 f3 b1 b0 f0
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))), ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))) |- (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) /\ (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially))
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c==> c/\ c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f4 * f0 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially c/\ c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f3 * f0 b0 * f4 * f0 b0 cvector_add * f3 * f2 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially
+ |- ((!x. ((!y. ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)))) ==> (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially))))) ==> ((!x. (!y. ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))))) ==> (!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially))))))
T c==> ! c==> ! c/\ c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f1 * b0 b2 * f1 * b1 b2 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * b0 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f1 * b0 b2 * f2 * b0 b2 cvector_add * f1 * b1 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially c==> ! ! c/\ c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f1 * b0 b2 * f1 * b1 b2 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * b0 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f1 * b0 b2 * f2 * b0 b2 cvector_add * f1 * b1 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially
+ |- ((((--> (\x. ((vector_add ((\n. ((vector_sub (f (x n))) (f (y n)))) x)) ((\n. ((vector_sub (g (x n))) (g (y n)))) x)))) ((vector_add (vec (NUMERAL _0))) (vec (NUMERAL _0)))) sequentially) = (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially))
T c= c--> / cvector_add * / cvector_sub * f0 * f1 b1 * f0 * f2 b1 b0 * / cvector_sub * f3 * f1 b1 * f3 * f2 b1 b0 cvector_add cvec cNUMERAL c_0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f0 * f1 b0 * f3 * f1 b0 cvector_add * f0 * f2 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- ((y n) IN s)
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially cIN * f2 f3 f1
+ |- ((!s. ((((uniformly_continuous_on f) s) /\ ((uniformly_continuous_on g) s)) ==> ((uniformly_continuous_on (\x. ((vector_add (f x)) (g x)))) s))) = T)
T c= ! c==> c/\ cuniformly_continuous_on f0 b0 cuniformly_continuous_on f1 b0 cuniformly_continuous_on / cvector_add * f0 b1 * f1 b1 b0 cT
+ |- ((~ (((real_add ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) = ((real_sub ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) ((real_add ((f (y x')) $ i)) ((g (y x')) $ i))))) ==> F)
T c==> c~ c= creal_add creal_sub c$ * f0 * f1 f2 f3 c$ * f0 * f4 f2 f3 creal_sub c$ * f5 * f1 f2 f3 c$ * f5 * f4 f2 f3 creal_sub creal_add c$ * f0 * f1 f2 f3 c$ * f5 * f1 f2 f3 creal_add c$ * f0 * f4 f2 f3 c$ * f5 * f4 f2 f3 cF
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- ((a ==> (b ==> c)) ==> ((a ==> b) ==> (a ==> c)))
T c==> c==> f0 c==> f1 f2 c==> c==> f0 f1 c==> f0 f2
+ |- (!x. (((vector_add ((vector_sub (f (x x))) (f (y x)))) ((vector_sub (g (x x))) (g (y x)))) = ((vector_sub ((vector_add (f (x x))) (g (x x)))) ((vector_add (f (y x))) (g (y x))))))
T c= cvector_add cvector_sub * f0 * f1 f2 * f0 * f3 f2 cvector_sub * f4 * f1 f2 * f4 * f3 f2 cvector_sub cvector_add * f0 * f1 f2 * f4 * f1 f2 cvector_add * f0 * f3 f2 * f4 * f3 f2
+ |- (((((uniformly_continuous_on f) s) /\ ((uniformly_continuous_on g) s)) ==> ((uniformly_continuous_on (\x. ((vector_add (f x)) (g x)))) s)) = T)
T c= c==> c/\ cuniformly_continuous_on f0 f1 cuniformly_continuous_on f2 f1 cuniformly_continuous_on / cvector_add * f0 b0 * f2 b0 f1 cT
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially) /\ (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)) |- (((((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially) /\ (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially))
T c==> c/\ c--> / cvector_sub * f0 * f1 b0 * f0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f1 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c/\ c/\ c--> / cvector_sub * f0 * f1 b0 * f0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f1 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f0 * f1 b0 * f3 * f1 b0 cvector_add * f0 * f2 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- (((x n) IN s) = T)
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c= cIN * f0 f3 f1 cT
- |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
+ |- (((!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) ==> ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)) = ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i))
T c= c==> ! c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1 * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)))) /\ (!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))))) = (!x. ((!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially))) /\ (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))))))
T c= c/\ ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f1 * b0 b2 * f1 * b1 b2 cvec cNUMERAL c_0 csequentially ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * b0 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially ! c/\ ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f1 * b0 b2 * f1 * b1 b2 cvec cNUMERAL c_0 csequentially ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * b0 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially
+ |- (((!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)))) /\ (!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))))) ==> (!x. (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)))))
T c==> c/\ ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f1 * b0 b2 * f1 * b1 b2 cvec cNUMERAL c_0 csequentially ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * b0 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially ! ! c==> c/\ ! cIN * b0 b2 f0 c/\ ! cIN * b1 b2 f0 c--> / cvector_sub * b0 b2 * b1 b2 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f1 * b0 b2 * f2 * b0 b2 cvector_add * f1 * b1 b2 * f2 * b1 b2 cvec cNUMERAL c_0 csequentially
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
+ |- (((!net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) ==> ((\net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) net)) = ((\net. (!f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))))) net))
T c= c==> ! ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 * / ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 f0 * / ! ! ! ! c==> c/\ c--> b1 b3 b0 c--> b2 b4 b0 c--> / cvector_add * b1 b5 * b2 b5 cvector_add b3 b4 b0 f0
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) /\ F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
+ |- ((((vector_add ((vector_sub (f (x x'))) (f (y x')))) ((vector_sub (g (x x'))) (g (y x')))) = ((vector_sub ((vector_add (f (x x'))) (g (x x')))) ((vector_add (f (y x'))) (g (y x'))))) = T)
T c= c= cvector_add cvector_sub * f0 * f1 f2 * f0 * f3 f2 cvector_sub * f4 * f1 f2 * f4 * f3 f2 cvector_sub cvector_add * f0 * f1 f2 * f4 * f1 f2 cvector_add * f0 * f3 f2 * f4 * f3 f2 cT
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub (f (x x'))) (f (y x')))) ((vector_sub (g (x x'))) (g (y x')))) $ i) = (((vector_sub ((vector_add (f (x x'))) (g (x x')))) ((vector_add (f (y x'))) (g (y x')))) $ i))) = T)
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub * f1 * f2 f3 * f1 * f4 f3 cvector_sub * f5 * f2 f3 * f5 * f4 f3 f0 c$ cvector_sub cvector_add * f1 * f2 f3 * f5 * f2 f3 cvector_add * f1 * f4 f3 * f5 * f4 f3 f0 cT
+ |- (((!x. (((vector_add (vec (NUMERAL _0))) x) = x)) ==> ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)) = ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x))
T c= c==> ! c= cvector_add cvec cNUMERAL c_0 b0 b0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0 * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))) ==> ((\g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))) g)) = ((\g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))) g))
T c= c==> ! ! ! c==> c/\ c--> f0 b1 f1 c--> b0 b2 f1 c--> / cvector_add * f0 b3 * b0 b3 cvector_add b1 b2 f1 * / ! ! c==> c/\ c--> f0 b1 f1 c--> b0 b2 f1 c--> / cvector_add * f0 b3 * b0 b3 cvector_add b1 b2 f1 f2 * / ! ! c==> c/\ c--> f0 b1 f1 c--> b0 b2 f1 c--> / cvector_add * f0 b3 * b0 b3 cvector_add b1 b2 f1 f2
+ |- (((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) $ i)) ((lambdai. ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) $ i)) ((lambdai. ((real_add ((f (y x')) $ i)) ((g (y x')) $ i))) $ i))) $ i))) = ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub (f (x x'))) (f (y x')))) ((vector_sub (g (x x'))) (g (y x')))) $ i) = (((vector_sub ((vector_add (f (x x'))) (g (x x')))) ((vector_add (f (y x'))) (g (y x')))) $ i))))
T c= c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 * f2 f3 b1 c$ * f1 * f4 f3 b1 b0 c$ clambda / creal_sub c$ * f5 * f2 f3 b1 c$ * f5 * f4 f3 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_add c$ * f1 * f2 f3 b1 c$ * f5 * f2 f3 b1 b0 c$ clambda / creal_add c$ * f1 * f4 f3 b1 c$ * f5 * f4 f3 b1 b0 f0 c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub * f1 * f2 f3 * f1 * f4 f3 cvector_sub * f5 * f2 f3 * f5 * f4 f3 f0 c$ cvector_sub cvector_add * f1 * f2 f3 * f5 * f2 f3 cvector_add * f1 * f4 f3 * f5 * f4 f3 f0
+ |- ((\g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net))))) g)
T * / ! ! c==> c/\ c--> f0 b1 f1 c--> b0 b2 f1 c--> / cvector_add * f0 b3 * b0 b3 cvector_add b1 b2 f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- ((x n) IN s)
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially cIN * f0 f3 f1
+ |- (((real_mul (real_neg (real_of_num m))) (real_neg (real_of_num n))) = (real_of_num (m * n)))
T c= creal_mul creal_neg creal_of_num f0 creal_neg creal_of_num f1 creal_of_num c* f0 f1
- |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((real_mul (real_neg (real_of_num x))) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- |- (T = ((vec (NUMERAL _0)) = (vec (NUMERAL _0))))
T c= cT c= cvec cNUMERAL c_0 cvec cNUMERAL c_0
+ |- ((\x. (((vector_add (vec (NUMERAL _0))) x) = x)) x)
T * / c= cvector_add cvec cNUMERAL c_0 b0 b0 f0
+ |- ((\i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambda g) $ i) = (g i)))) i)
T * / c==> c/\ c<= cNUMERAL cBIT1 c_0 b0 c<= b0 cdimindex part cUNIV c= c$ clambda f0 b0 * f0 b0 f1
+ |- (((!g. ((f = g) = (!x. ((f x) = (g x))))) ==> ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)) = ((\g. ((f = g) = (!x. ((f x) = (g x))))) g))
T c= c==> ! c= c= f0 b0 ! c= * f0 b1 * b0 b1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1 * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!x. (((vector_add ((vector_sub (f (x x))) (f (y x)))) ((vector_sub (g (x x))) (g (y x)))) = ((vector_sub ((vector_add (f (x x))) (g (x x)))) ((vector_add (f (y x))) (g (y x)))))) = ((\x. ((vector_add ((vector_sub (f (x x))) (f (y x)))) ((vector_sub (g (x x))) (g (y x))))) = (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))))
T c= ! c= cvector_add cvector_sub * f0 * f1 b0 * f0 * f2 b0 cvector_sub * f3 * f1 b0 * f3 * f2 b0 cvector_sub cvector_add * f0 * f1 b0 * f3 * f1 b0 cvector_add * f0 * f2 b0 * f3 * f2 b0 c= / cvector_add cvector_sub * f0 * f1 b0 * f0 * f2 b0 cvector_sub * f3 * f1 b0 * f3 * f2 b0 / cvector_sub cvector_add * f0 * f1 b0 * f3 * f1 b0 cvector_add * f0 * f2 b0 * f3 * f2 b0
+ |- ((!y. (((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))) ==> (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)))) ==> ((!y. ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)))) ==> (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)))))
T c==> ! c==> c/\ c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * f0 b1 * f2 * b0 b1 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f2 * f0 b1 * f3 * f0 b1 cvector_add * f2 * b0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially c==> ! c/\ c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * f0 b1 * f2 * b0 b1 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially ! c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f2 * f0 b1 * f3 * f0 b1 cvector_add * f2 * b0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially
+ |- ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> (((lambdai. ((real_add ((lambdai. ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) $ i)) ((lambdai. ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) $ i))) $ i) = ((lambdai. ((real_sub ((lambdai. ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) $ i)) ((lambdai. ((real_add ((f (y x')) $ i)) ((g (y x')) $ i))) $ i))) $ i)))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ clambda / creal_add c$ clambda / creal_sub c$ * f1 * f2 f3 b1 c$ * f1 * f4 f3 b1 b0 c$ clambda / creal_sub c$ * f5 * f2 f3 b1 c$ * f5 * f4 f3 b1 b0 f0 c$ clambda / creal_sub c$ clambda / creal_add c$ * f1 * f2 f3 b1 c$ * f5 * f2 f3 b1 b0 c$ clambda / creal_add c$ * f1 * f4 f3 b1 c$ * f5 * f4 f3 b1 b0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially)
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ |- ((\f. (!g. (!l. (!m. (((((--> f) l) net) /\ (((--> g) m) net)) ==> (((--> (\x. ((vector_add (f x)) (g x)))) ((vector_add l) m)) net)))))) f)
T * / ! ! ! c==> c/\ c--> b0 b2 f0 c--> b1 b3 f0 c--> / cvector_add * b0 b4 * b1 b4 cvector_add b2 b3 f0 f1
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- ((((((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially) /\ (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)) = (((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)))
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c= c==> c/\ c--> / cvector_sub * f3 * f0 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f4 * f0 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f3 * f0 b0 * f4 * f0 b0 cvector_add * f3 * f2 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially c==> c/\ c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f4 * f0 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f3 * f0 b0 * f4 * f0 b0 cvector_add * f3 * f2 b0 * f4 * f2 b0 cvec cNUMERAL c_0 csequentially
+ (~ (((real_add ((real_sub ((f (x x')) $ i)) ((f (y x')) $ i))) ((real_sub ((g (x x')) $ i)) ((g (y x')) $ i))) = ((real_sub ((real_add ((f (x x')) $ i)) ((g (x x')) $ i))) ((real_add ((f (y x')) $ i)) ((g (y x')) $ i))))) |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) \/ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))))
T c==> c~ c= creal_add creal_sub c$ * f0 * f1 f2 f3 c$ * f0 * f4 f2 f3 creal_sub c$ * f5 * f1 f2 f3 c$ * f5 * f4 f2 f3 creal_sub creal_add c$ * f0 * f1 f2 f3 c$ * f5 * f1 f2 f3 creal_add c$ * f0 * f4 f2 f3 c$ * f5 * f4 f2 f3 c\/ creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ |- (!x. ((!y. ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)))) ==> (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub ((vector_add (f (x n))) (g (x n)))) ((vector_add (f (y n))) (g (y n)))))) (vec (NUMERAL _0))) sequentially)))))
T c==> ! c/\ c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * f0 b1 * f2 * b0 b1 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially ! c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub cvector_add * f2 * f0 b1 * f3 * f0 b1 cvector_add * f2 * b0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially
- (a = b), ((a = b) ==> (a ==> b)) |- (((a = b) ==> (a ==> b)) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c==> c= f0 f1 c==> f0 f1 c==> f0 f1
- |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) ==> ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f)) = ((\f. (!g. ((f = g) = (!x. ((f x) = (g x)))))) f))
T c= c==> ! ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0 * / ! c= c= b0 b1 ! c= * b0 b2 * b1 b2 f0
+ |- (((!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially))) /\ (!y. (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)))) = (!y. ((((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially)) /\ (((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) ==> (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)))))
T c= c/\ ! c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * f0 b1 * f2 * b0 b1 cvec cNUMERAL c_0 csequentially ! c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially ! c/\ c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f2 * f0 b1 * f2 * b0 b1 cvec cNUMERAL c_0 csequentially c==> c/\ ! cIN * f0 b1 f1 c/\ ! cIN * b0 b1 f1 c--> / cvector_sub * f0 b1 * b0 b1 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f0 b1 * f3 * b0 b1 cvec cNUMERAL c_0 csequentially
+ |- ((\P. (!Q. (((!x. (P x)) /\ (!x. (Q x))) = (!x. ((P x) /\ (Q x)))))) P)
T * / ! c= c/\ ! * b0 b2 ! * b1 b2 ! c/\ * b0 b2 * b1 b2 f0
+ |- (!i. ((((NUMERAL (BIT1 _0)) <= i) /\ (i <= (dimindex UNIV))) ==> ((((vector_add ((vector_sub (f (x x'))) (f (y x')))) ((vector_sub (g (x x'))) (g (y x')))) $ i) = (((vector_sub ((vector_add (f (x x'))) (g (x x')))) ((vector_add (f (y x'))) (g (y x')))) $ i))))
T c==> c/\ c<= cNUMERAL cBIT1 c_0 f0 c<= f0 cdimindex part cUNIV c= c$ cvector_add cvector_sub * f1 * f2 f3 * f1 * f4 f3 cvector_sub * f5 * f2 f3 * f5 * f4 f3 f0 c$ cvector_sub cvector_add * f1 * f2 f3 * f5 * f2 f3 cvector_add * f1 * f4 f3 * f5 * f4 f3 f0
+ |- ((\g. ((f = g) = (!x. ((f x) = (g x))))) g)
T * / c= c= f0 b0 ! c= * f0 b1 * b0 b1 f1
+ ((((--> (\n. ((vector_sub (f (x n))) (f (y n))))) (vec (NUMERAL _0))) sequentially) /\ (((--> (\n. ((vector_sub (g (x n))) (g (y n))))) (vec (NUMERAL _0))) sequentially)) |- (((--> (\x. ((vector_add ((\n. ((vector_sub (f (x n))) (f (y n)))) x)) ((\n. ((vector_sub (g (x n))) (g (y n)))) x)))) ((vector_add (vec (NUMERAL _0))) (vec (NUMERAL _0)))) sequentially)
T c==> c/\ c--> / cvector_sub * f0 * f1 b0 * f0 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_sub * f3 * f1 b0 * f3 * f2 b0 cvec cNUMERAL c_0 csequentially c--> / cvector_add * / cvector_sub * f0 * f1 b1 * f0 * f2 b1 b0 * / cvector_sub * f3 * f1 b1 * f3 * f2 b1 b0 cvector_add cvec cNUMERAL c_0 cvec cNUMERAL c_0 csequentially
+ ((!n. ((x n) IN s)) /\ ((!n. ((y n) IN s)) /\ (((--> (\n. ((vector_sub (x n)) (y n)))) (vec (NUMERAL _0))) sequentially))) |- (((!n. ((y n) IN s)) ==> ((\n. ((y n) IN s)) n)) = ((\n. ((y n) IN s)) n))
T c==> c/\ ! cIN * f0 b0 f1 c/\ ! cIN * f2 b0 f1 c--> / cvector_sub * f0 b0 * f2 b0 cvec cNUMERAL c_0 csequentially c= c==> ! cIN * f2 b0 f1 * / cIN * f2 b0 f1 f3 * / cIN * f2 b0 f1 f3
+ |- (((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) ==> F)
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (a = b), ((a = b) ==> (a ==> b)) |- ((a = b) /\ (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c/\ c= f0 f1 c==> f0 f1
- (!x. ((P x) ==> (Q x))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b))) = ((a = b) ==> (a ==> b)))
T c= c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (g i)))) ==> (((sum (m .. n)) f) = ((sum (m .. n)) g)))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 * f3 b0 c= csum * * part c.. f0 f1 f2 csum * * part c.. f0 f1 f3
- (!x. ((P x) ==> (Q x))), ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- ((!x. ((P x) ==> (Q x))) /\ ((!x. (P x)) ==> (!x. (Q x))))
T c==> ! c==> * f0 b0 * f1 b0 c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- (a = b) |- (((a = b) ==> (a ==> b)) ==> (a ==> b))
T c==> c= f0 f1 c==> c==> c= f0 f1 c==> f0 f1 c==> f0 f1
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((a = b) ==> (a ==> b)) ==> ((a = b) ==> (a ==> b)))
T c==> c==> c= f0 f1 c==> f0 f1 c==> c= f0 f1 c==> f0 f1
- |- ((((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) ==> ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x))))) = ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c= c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) |- (((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))) /\ ((!x. ((P x) ==> (Q x))) ==> ((!x. (P x)) ==> (!x. (Q x)))))
T c==> c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c/\ c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0 c==> ! c==> * f0 b0 * f1 b0 c==> ! * f0 b0 ! * f1 b0
- |- ((!i. (((m <= i) /\ (i <= n)) ==> ((f i) = (real_of_num (NUMERAL _0))))) ==> (((sum (m .. n)) f) = (real_of_num (NUMERAL _0))))
T c==> ! c==> c/\ c<= f0 b0 c<= b0 f1 c= * f2 b0 creal_of_num cNUMERAL c_0 c= csum * * part c.. f0 f1 f2 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\g. ((f o g) = (\x. (f (g x))))) g)
T * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!g. ((f o g) = (\x. (f (g x))))) ==> ((\g. ((f o g) = (\x. (f (g x))))) g)) = ((\g. ((f o g) = (\x. (f (g x))))) g))
T c= c==> ! c= * * part co f0 b0 / * f0 * b0 b1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1 * / c= * * part co f0 b0 / * f0 * b0 b1 f1
- |- (((\i. (f i)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((f o g) = (\x. (f (g x))))
T c= * * part co f0 f1 / * f0 * f1 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
