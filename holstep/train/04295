N Seq2.perm_eq_map
C |- (!f. (!s1. (!s2. (((perm_eq s1) s2) ==> ((perm_eq ((map f) s1)) ((map f) s2))))))
T c==> cperm_eq f0 f1 cperm_eq cmap f2 f0 cmap f2 f1
D Seq.perm_eqP
A |- (!s1. (!s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))))
T c= cperm_eq f0 f1 ! c= ccount b0 f0 ccount b0 f1
D Seq.count_map
A |- (!f. (!a. (!s. (((count a) ((map f) s)) = ((count ((preim f) a)) s)))))
T c= ccount f0 cmap f1 f2 ccount * * part cpreim f1 f0 f2
+ |- (((!a. (((count a) s1) = ((count a) s2))) ==> (!a. (((count ((preim f) a)) s1) = ((count a) ((map f) s2))))) = ((!a. (((count a) s1) = ((count a) s2))) ==> (!a. (((count a) ((map f) s1)) = ((count a) ((map f) s2))))))
T c= c==> ! c= ccount b0 f0 ccount b0 f1 ! c= ccount * * part cpreim f2 b0 f0 ccount b0 cmap f2 f1 c==> ! c= ccount b0 f0 ccount b0 f1 ! c= ccount b0 cmap f2 f0 ccount b0 cmap f2 f1
+ |- ((!s1. (!s2. (((perm_eq s1) s2) ==> ((perm_eq ((map f) s1)) ((map f) s2))))) = T)
T c= ! ! c==> cperm_eq b0 b1 cperm_eq cmap f0 b0 cmap f0 b1 cT
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ |- (((!a. (((count a) s1) = ((count a) s2))) ==> (!a. (((count a) ((map f) s1)) = ((count a) ((map f) s2))))) = ((!a. (((count a) s1) = ((count a) s2))) ==> ((perm_eq ((map f) s1)) ((map f) s2))))
T c= c==> ! c= ccount b0 f0 ccount b0 f1 ! c= ccount b0 cmap f2 f0 ccount b0 cmap f2 f1 c==> ! c= ccount b0 f0 ccount b0 f1 cperm_eq cmap f2 f0 cmap f2 f1
+ |- (((!s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) ==> ((\s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) s2)) = ((\s2. (((perm_eq s1) s2) = (!a. (((count a) s1) = ((count a) s2))))) s2))
T c= c==> ! c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 * / c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 f1 * / c= cperm_eq f0 b0 ! c= ccount b1 f0 ccount b1 b0 f1
+ |- (((!s. (((count a) ((map f) s)) = ((count ((preim f) a)) s))) ==> ((\s. (((count a) ((map f) s)) = ((count ((preim f) a)) s))) s)) = ((\s. (((count a) ((map f) s)) = ((count ((preim f) a)) s))) s))
T c= c==> ! c= ccount f0 cmap f1 b0 ccount * * part cpreim f1 f0 b0 * / c= ccount f0 cmap f1 b0 ccount * * part cpreim f1 f0 b0 f2 * / c= ccount f0 cmap f1 b0 ccount * * part cpreim f1 f0 b0 f2
+ |- ((\s. (((count a) ((map f) s)) = ((count ((preim f) a)) s))) s)
T * / c= ccount f0 cmap f1 b0 ccount * * part cpreim f1 f0 b0 f2
+ |- (((!a. (((count a) s1) = ((count a) s2))) ==> ((perm_eq ((map f) s1)) ((map f) s2))) = (((perm_eq s1) s2) ==> ((perm_eq ((map f) s1)) ((map f) s2))))
T c= c==> ! c= ccount b0 f0 ccount b0 f1 cperm_eq cmap f2 f0 cmap f2 f1 c==> cperm_eq f0 f1 cperm_eq cmap f2 f0 cmap f2 f1
- (!a. (((count a) s1) = ((count a) s2))) |- (T = (((count ((preim f) P)) s1) = ((count ((preim f) P)) s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 c= cT c= ccount * * part cpreim f2 f3 f0 ccount * * part cpreim f2 f3 f1
+ |- ((!a. (((count a) s1) = ((count a) s2))) ==> ((perm_eq ((map f) s1)) ((map f) s2)))
T c==> ! c= ccount b0 f0 ccount b0 f1 cperm_eq cmap f2 f0 cmap f2 f1
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
