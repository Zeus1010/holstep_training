N List_hypermap_iso.find_face_rot
C |- (!L1. (!L2. (!d. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))))
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c? / c= cfind_face f1 f2 crot b0 cfind_face f0 f2
D TRUTH
A |- T
T cT
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D MAP
A |- ((!f. (((MAP f) NIL) = NIL)) /\ (!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))))
T c/\ ! c= cMAP b0 cNIL cNIL ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2
D ALL2
A |- (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))
T c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
D ssreflect_eq_def
A |- (!v. (!P. (((ssreflect_eq v) P) = P)))
T c= cssreflect_eq f0 f1 f1
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D list_cases
A |- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l))))
T c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 ! * f0 b0
D Seq.perm_eq_mem
A |- (!s1. (!s2. (((perm_eq s1) s2) ==> (!x. (((MEM x) s1) = ((MEM x) s2))))))
T c==> cperm_eq f0 f1 ! c= cMEM b0 f0 cMEM b0 f1
D Seq2.rot_nil
A |- (!n. (((rot n) NIL) = NIL))
T c= crot f0 cNIL cNIL
D List_hypermap.list_of_faces
A |- (!L. ((list_of_faces L) = ((MAP list_pairs) L)))
T c= clist_of_faces f0 cMAP part clist_pairs f0
D List_hypermap.find_list
A |- (!h. (!t. (!x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x)))))))
T c/\ c= cfind_list cNIL f0 cNIL c= cfind_list cCONS f1 f2 f0 cCOND cMEM f0 f1 f1 cfind_list f2 f0
D List_hypermap.find_face
A |- (!L. (!d. (((find_face L) d) = ((find_list (list_of_faces L)) d))))
T c= cfind_face f0 f1 cfind_list clist_of_faces f0 f1
D List_hypermap.rot_list_pairs
A |- (!s. (!n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s)))))
T c= crot f0 clist_pairs f1 clist_pairs crot f0 f1
D List_hypermap.list_pairs_rot
A |- (!s. (!n. ((perm_eq (list_pairs ((rot n) s))) (list_pairs s))))
T cperm_eq clist_pairs crot f0 f1 clist_pairs f1
D List_hypermap.find_face_cons
A |- (!h. (!t. (!d. (((find_face ((CONS h) t)) d) = (((COND ((MEM d) (list_pairs h))) (list_pairs h)) ((find_face t) d))))))
T c= cfind_face cCONS f0 f1 f2 cCOND cMEM f2 clist_pairs f0 clist_pairs f0 cfind_face f1 f2
+ |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face NIL) d))))))))
T c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cNIL cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f0 crot b2 cfind_face cNIL f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) /\ (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cssreflect_eq f5 c~ cMEM f1 clist_pairs f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f6 c/\ cssreflect_eq f5 c~ cMEM f1 clist_pairs f4 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f6 f1 crot b0 cfind_face f0 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), ((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) |- (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) /\ (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c/\ c? / c= f2 crot b0 f3 cALL2 / / c? / c= b1 crot b2 b0 f0 f4 c/\ c/\ c? / c= f2 crot b0 f3 cALL2 / / c? / c= b1 crot b2 b0 f0 f4 c? / c= cfind_face cCONS f2 f4 f1 crot b0 cfind_face cCONS f3 f0 f1
+ (((find_face t2) d) = ((rot m) ((find_face t1) d))), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- ((((COND ((MEM d) (list_pairs h1))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot m) ((find_face t1) d)))
T c==> c= cfind_face f0 f1 crot f2 cfind_face f3 f1 c==> cssreflect_eq f4 c~ cMEM f1 clist_pairs f5 c= cCOND cMEM f1 clist_pairs f5 clist_pairs crot f6 f5 cfind_face f0 f1 crot f2 cfind_face f3 f1
- ((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) |- ((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) ==> (!l. (P l)))
T c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
- (L1 = L11) |- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L11) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L11) d))))))
T c==> c= f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f1 f2
- (((MEM d) (list_pairs h1)) = x) |- ((((MEM d) (list_pairs h1)) = x) /\ (?x. (((MEM d) (list_pairs h1)) = x)))
T c==> c= cMEM f0 clist_pairs f1 f2 c/\ c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- (?n. (NIL = ((rot n) ((find_list NIL) d))))
T c? / c= cNIL crot b0 cfind_list cNIL f0
+ |- ((\s. (!n. ((perm_eq (list_pairs ((rot n) s))) (list_pairs s)))) h1)
T * / ! cperm_eq clist_pairs crot b1 b0 clist_pairs b0 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- ((!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h2) t)) ==> (?n. (((find_face ((CONS h2) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 f0 cCONS f3 b0 c? / c= cfind_face cCONS f3 b0 f1 crot b1 cfind_face cCONS f2 f0 f1 cT
+ |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> b0 b1 f6 * / ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> b0 b1 f6
- |- ((((MEM d) (list_pairs h1)) = x) ==> (?x. (((MEM d) (list_pairs h1)) = x)))
T c==> c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ (h2 = ((rot n) h1)) |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))))
T c==> c= f0 crot f1 f2 c==> cssreflect_eq f3 cMEM f4 clist_pairs f2 c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 clist_pairs f2
+ (L2 = L21) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L21) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))
T c==> c= f0 f1 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f1 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f0 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
+ |- (P = ((ssreflect_eq mem_d) P))
T c= f0 cssreflect_eq f1 f0
- ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) /\ ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c/\ cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
- |- (((!f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) ==> ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)) = ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f))
T c= c==> ! ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0 * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
+ ((\L11. (L1 = L11)) L11) |- (((\L11. (L1 = L11)) L11) /\ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c==> cssreflect_eq f6 c~ cMEM f1 clist_pairs f4 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cfind_face f0 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face ((CONS h1) t1)) d))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cfind_face cCONS f4 f0 f1
+ |- ((!n. ((((find_face t2) d) = ((rot n) ((find_face t1) d))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))) = ((?n. (((find_face t2) d) = ((rot n) ((find_face t1) d)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))
T c= ! c==> c= cfind_face f0 f1 crot b0 cfind_face f2 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f0 f1 crot b1 cfind_face f2 f1 c==> c? / c= cfind_face f0 f1 crot b0 cfind_face f2 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f0 f1 crot b0 cfind_face f2 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h2) t)) ==> (?n. (((find_face ((CONS h2) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 f0 cCONS f3 b0 c? / c= cfind_face cCONS f3 b0 f1 crot b1 cfind_face cCONS f2 f0 f1
- (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d))))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f2 c? / c= cfind_face f2 f1 crot b0 cfind_face f0 f1 cT
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((\e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))) e')
T * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_face f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 cCOND f2 f3 b0 f5
+ (h2 = ((rot n) h1)), (((find_face t2) d) = ((rot m) ((find_face t1) d))), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- ((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs h2)) ((find_face t2) d)) = ((rot m) ((find_face t1) d)))
T c==> c= f0 crot f1 f2 c==> c= cfind_face f3 f4 crot f5 cfind_face f6 f4 c==> cssreflect_eq f7 c~ cMEM f4 clist_pairs f2 c= cCOND cMEM f4 clist_pairs crot f1 f2 clist_pairs f0 cfind_face f3 f4 crot f5 cfind_face f6 f4
- |- ((((\x. (((MEM d) (list_pairs h1)) = x)) x) ==> (?x. (((MEM d) (list_pairs h1)) = x))) = T)
T c= c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0 cT
+ ((\L21. (L2 = L21)) L21) |- (((\L21. (L2 = L21)) L21) /\ ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f0 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
+ |- (((!n. (((rot n) NIL) = NIL)) ==> ((\n. (((rot n) NIL) = NIL)) n)) = ((\n. (((rot n) NIL) = NIL)) n))
T c= c==> ! c= crot b0 cNIL cNIL * / c= crot b0 cNIL cNIL f0 * / c= crot b0 cNIL cNIL f0
- |- ((((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = ((find_face t2) d))) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)))) = ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d))))
T c= c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 cfind_face f2 f0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0
+ |- (((?n. (P n)) ==> Q) = (!n. ((P n) ==> Q)))
T c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
+ |- ((\v. (!P. (((ssreflect_eq v) P) = P))) v)
T * / ! c= cssreflect_eq b0 b1 b1 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS f2 f0 cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f1 crot b2 cfind_face cCONS f2 f0 f1
+ (h2 = ((rot n) h1)) |- (((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot n) (list_pairs h1))) = ((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))
T c==> c= f0 crot f1 f2 c= c= cCOND cMEM f3 clist_pairs crot f1 f2 clist_pairs crot f1 f2 cfind_face f4 f3 crot f1 clist_pairs f2 c= cCOND cMEM f3 clist_pairs crot f1 f2 clist_pairs f0 cfind_face f4 f3 crot f1 clist_pairs f2
+ |- ((?n. (((find_list NIL) d) = ((rot n) ((find_list NIL) d)))) = (?n. (((find_list NIL) d) = ((rot n) ((find_list ((MAP list_pairs) NIL)) d)))))
T c= c? / c= cfind_list cNIL f0 crot b0 cfind_list cNIL f0 c? / c= cfind_list cNIL f0 crot b0 cfind_list cMAP part clist_pairs cNIL f0
- |- ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))
T c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4
+ (h2 = ((rot n) h1)), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- (!n. ((((find_face t2) d) = ((rot n) ((find_face t1) d))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))
T c==> c= f0 crot f1 f2 c==> cssreflect_eq f3 c~ cMEM f4 clist_pairs f2 ! c==> c= cfind_face f5 f4 crot b0 cfind_face f6 f4 c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b1 cfind_face f6 f4
+ |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- (((!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) ==> ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2)) = ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2))
T c= c==> ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4 * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 cfind_face f6 f1 f7 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 cfind_face f6 f1 c==> f3 f7
+ |- ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d)
T * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x))))) x)
T * / c/\ c= cfind_list cNIL b0 cNIL c= cfind_list cCONS f0 f1 b0 cCOND cMEM b0 f0 f0 cfind_list f1 b0 f2
+ |- ((F ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face NIL) d))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h2) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face NIL) d))))))
T c= c==> cF c? / c= cfind_face cCONS f0 f1 f2 crot b0 cfind_face cNIL f2 c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cCONS f0 f1 c? / c= cfind_face cCONS f0 f1 f2 crot b0 cfind_face cNIL f2
+ |- (((!s. (!n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s))))) ==> ((\s. (!n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s))))) s)) = ((\s. (!n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s))))) s))
T c= c==> ! ! c= crot b1 clist_pairs b0 clist_pairs crot b1 b0 * / ! c= crot b1 clist_pairs b0 clist_pairs crot b1 b0 f0 * / ! c= crot b1 clist_pairs b0 clist_pairs crot b1 b0 f0
+ |- (?n. (((find_list (list_of_faces NIL)) d) = ((rot n) ((find_face NIL) d))))
T c? / c= cfind_list clist_of_faces cNIL f0 crot b0 cfind_face cNIL f0
+ |- ((!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))) = (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))))
T c= ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS f0 f1 cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f2 crot b2 cfind_face cCONS f0 f1 f2 c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 f1 cNIL c? / c= cfind_face cNIL f2 crot b0 cfind_face cCONS f0 f1 f2 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS f0 f1 cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f2 crot b2 cfind_face cCONS f0 f1 f2
- (L2 = L21) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L21) ==> (?n. (((find_face L21) d) = ((rot n) ((find_face L1) d)))))
T c==> c= f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f1 c? / c= cfind_face f1 f3 crot b0 cfind_face f2 f3
+ |- (?n. (((find_list NIL) d) = ((rot n) ((find_list ((MAP list_pairs) NIL)) d))))
T c? / c= cfind_list cNIL f0 crot b0 cfind_list cMAP part clist_pairs cNIL f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (((MEM d) (list_pairs h1)) = x), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= cMEM f1 clist_pairs f2 f3 c==> c= f4 crot f5 f2 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f6 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f6 f1 crot b0 cCOND f3 clist_pairs f2 cfind_face f0 f1
+ |- (((!t. (!d. (((find_face ((CONS h) t)) d) = (((COND ((MEM d) (list_pairs h))) (list_pairs h)) ((find_face t) d))))) ==> ((\t. (!d. (((find_face ((CONS h) t)) d) = (((COND ((MEM d) (list_pairs h))) (list_pairs h)) ((find_face t) d))))) t)) = ((\t. (!d. (((find_face ((CONS h) t)) d) = (((COND ((MEM d) (list_pairs h))) (list_pairs h)) ((find_face t) d))))) t))
T c= c==> ! ! c= cfind_face cCONS f0 b0 b1 cCOND cMEM b1 clist_pairs f0 clist_pairs f0 cfind_face b0 b1 * / ! c= cfind_face cCONS f0 b0 b1 cCOND cMEM b1 clist_pairs f0 clist_pairs f0 cfind_face b0 b1 f1 * / ! c= cfind_face cCONS f0 b0 b1 cCOND cMEM b1 clist_pairs f0 clist_pairs f0 cfind_face b0 b1 f1
+ |- (((!L. ((list_of_faces L) = ((MAP list_pairs) L))) ==> ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)) = ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L))
T c= c==> ! c= clist_of_faces b0 cMAP part clist_pairs b0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0 * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
+ |- (?n. (((find_list NIL) d) = ((rot n) ((find_list NIL) d))))
T c? / c= cfind_list cNIL f0 crot b0 cfind_list cNIL f0
- |- (((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) ==> (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l))))) = (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1
- ((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) = T)
T c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= cALL2 / / c? / c= b1 crot b2 b0 f2 f3 cT
+ |- ((?n. (NIL = NIL)) = (?n. (NIL = ((rot n) NIL))))
T c= c? / c= cNIL cNIL c? / c= cNIL crot b0 cNIL
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- ((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot n) (list_pairs h1)))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= cCOND cMEM f1 clist_pairs crot f3 f2 clist_pairs crot f3 f2 cfind_face f4 f1 crot f3 clist_pairs f2
+ |- ((\L1. (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))) L11)
T * / ! c==> cALL2 / / c? / c= b3 crot b4 b2 b0 b1 c? / c= cfind_face b1 f0 crot b2 cfind_face b0 f0 f1
+ |- ((\P. (P = ((ssreflect_eq mem_d) P))) P)
T * / c= b0 cssreflect_eq f0 b0 f1
+ |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
+ |- ((\Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))) Q)
T * / c= c==> c? / * f0 b1 b0 ! c==> * f0 b1 b0 f1
- |- (!L11. (((\L11. (L1 = L11)) L11) ==> (?L11. (L1 = L11))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ |- (((!P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) ==> ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)) = ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P))
T c= c==> ! ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0 * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
+ |- ((\L11. (L1 = L11)) L1)
T * / c= f0 b0 f0
+ |- ((((MEM d) (list_pairs h1)) = ((MEM d) (list_pairs h1))) = ((\x. (((MEM d) (list_pairs h1)) = x)) ((MEM d) (list_pairs h1))))
T c= c= cMEM f0 clist_pairs f1 cMEM f0 clist_pairs f1 * / c= cMEM f0 clist_pairs f1 b0 cMEM f0 clist_pairs f1
+ |- ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))
T c= c? / c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 crot b0 cfind_face cCONS f3 f4 f0 c? / c= cfind_face cCONS f1 f2 f0 crot b0 cfind_face cCONS f3 f4 f0
+ |- (((?n. (h2 = ((rot n) h1))) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))) = (!n. ((h2 = ((rot n) h1)) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))))
T c= c==> c? / c= f0 crot b0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 ! c==> c= f0 crot b0 f1 c==> cALL2 / / c? / c= b2 crot b3 b1 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b1 cfind_face cCONS f1 f2 f4
+ |- ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 c==> f3 b0 f7
- |- ((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) ==> (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))))
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1
+ |- (((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face NIL) d)))))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d))))))) = (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d)))))))
T c= c==> c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cNIL cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f0 crot b2 cfind_face cNIL f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0
+ (h2 = ((rot n) h1)), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- ((((find_face t2) d) = ((rot m) ((find_face t1) d))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))
T c==> c= f0 crot f1 f2 c==> cssreflect_eq f3 c~ cMEM f4 clist_pairs f2 c==> c= cfind_face f5 f4 crot f6 cfind_face f7 f4 c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 cfind_face f7 f4
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (((!x. (((\x. (((MEM d) (list_pairs h1)) = x)) x) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d))))))) ==> ((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d))))))) = ((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c= c==> ! c==> * / c= cMEM f1 clist_pairs f4 b1 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b1 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1 c==> c? / c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1 c==> c? / c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1
+ |- (((!P. (((ssreflect_eq v) P) = P)) ==> ((\P. (((ssreflect_eq v) P) = P)) P)) = ((\P. (((ssreflect_eq v) P) = P)) P))
T c= c==> ! c= cssreflect_eq f0 b0 b0 * / c= cssreflect_eq f0 b0 b0 f1 * / c= cssreflect_eq f0 b0 b0 f1
+ |- (((!s1. (!s2. (((perm_eq s1) s2) ==> (!x. (((MEM x) s1) = ((MEM x) s2)))))) ==> ((\s1. (!s2. (((perm_eq s1) s2) ==> (!x. (((MEM x) s1) = ((MEM x) s2)))))) s1)) = ((\s1. (!s2. (((perm_eq s1) s2) ==> (!x. (((MEM x) s1) = ((MEM x) s2)))))) s1))
T c= c==> ! ! c==> cperm_eq b0 b1 ! c= cMEM b2 b0 cMEM b2 b1 * / ! c==> cperm_eq b0 b1 ! c= cMEM b2 b0 cMEM b2 b1 f0 * / ! c==> cperm_eq b0 b1 ! c= cMEM b2 b0 cMEM b2 b1 f0
+ ((\x. (((MEM d) (list_pairs h1)) = x)) x) |- (((MEM d) (list_pairs h1)) = x)
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c= cMEM f0 clist_pairs f1 f2
+ |- ((?n. t) = t)
T c= c? / f0 f0
+ (h2 = ((rot n) h1)) |- (((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot m) ((find_face t1) d))) = ((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs h2)) ((find_face t2) d)) = ((rot m) ((find_face t1) d))))
T c==> c= f0 crot f1 f2 c= c= cCOND cMEM f3 clist_pairs crot f1 f2 clist_pairs crot f1 f2 cfind_face f4 f3 crot f5 cfind_face f6 f3 c= cCOND cMEM f3 clist_pairs crot f1 f2 clist_pairs f0 cfind_face f4 f3 crot f5 cfind_face f6 f3
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6
+ |- (?x. (((MEM d) (list_pairs h1)) = x))
T c? / c= cMEM f0 clist_pairs f1 b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ (L1 = L11) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L11) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L11) d)))))) = (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L11) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> c= f0 f1 c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f1 f2 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2
- (L1 = L11) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L11) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L11) d)))))) = (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> c= f0 f1 c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f1 f2 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2
+ |- ((\P. (((ssreflect_eq v) P) = P)) P)
T * / c= cssreflect_eq f0 b0 b0 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c/\ * * / / c? / c= b1 crot b2 b0 f2 f3 cALL2 / / c? / c= b1 crot b2 b0 f0 f4 c? / c= cfind_face cCONS f3 f4 f1 crot b0 cfind_face cCONS f2 f0 f1
+ |- (((!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 c==> f3 b0 f7 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cF clist_pairs f2 cfind_face f6 f1 c==> f3 b0 f7
+ |- ((\h. (!t. (!d. (((find_face ((CONS h) t)) d) = (((COND ((MEM d) (list_pairs h))) (list_pairs h)) ((find_face t) d)))))) h)
T * / ! ! c= cfind_face cCONS b0 b1 b2 cCOND cMEM b2 clist_pairs b0 clist_pairs b0 cfind_face b1 b2 f0
- (L2 = L21) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L21) ==> (?n. (((find_face L21) d) = ((rot n) ((find_face L1) d))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))
T c==> c= f0 f1 c= c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f1 c? / c= cfind_face f1 f3 crot b0 cfind_face f2 f3 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f0 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
+ |- ((T ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d))))))
T c= c==> cT c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0 c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0
+ (h2 = ((rot n) h1)) |- ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))))))
T c==> c= f0 crot f1 f2 c= c==> cssreflect_eq f3 c= cMEM f4 clist_pairs f2 cF c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 cCOND cF clist_pairs f2 cfind_face f6 f4 c/\ c==> cssreflect_eq f3 c= cMEM f4 clist_pairs f2 cT c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 cCOND cT clist_pairs f2 cfind_face f6 f4 c==> cssreflect_eq f3 c= cMEM f4 clist_pairs f2 cF c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 cCOND cF clist_pairs f2 cfind_face f6 f4
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (((h2 = ((rot n) h1)) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c= c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c? / c= cfind_face cCONS f2 f5 f1 crot b0 cfind_face cCONS f4 f0 f1 cT
- |- (((!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) ==> ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)) = ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h))
T c= c==> ! ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1 * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
+ |- ((!d. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) = T)
T c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 f1 c? / c= cfind_face f1 b0 crot b1 cfind_face f0 b0 cT
- |- ((\t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_face f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND f2 b0 b1 f4
+ |- (((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = ((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2))) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> q')))) = ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> q'))))
T c= c==> c= c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c==> c==> c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4 f5 c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4 c==> c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f5 c==> c==> c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4 f5 c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4 c==> c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f5
+ |- (((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))))) ==> (!x. (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d))))))))
T c==> c/\ c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 ! c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 b0 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b1 cCOND b0 clist_pairs f2 cfind_face f5 f1
+ (L2 = L21) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L21) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))
T c==> c= f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f1 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
- (((find_face t2) d) = ((rot m) ((find_face t1) d))) |- (T = ((((COND F) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot m) ((find_face t1) d))))
T c==> c= cfind_face f0 f1 crot f2 cfind_face f3 f1 c= cT c= cCOND cF clist_pairs crot f4 f5 cfind_face f0 f1 crot f2 cfind_face f3 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1
+ ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- (~ ((MEM d) (list_pairs h1)))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c~ cMEM f1 clist_pairs f2
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) |- ((\P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) /\ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face cCONS f2 f0 f1
+ |- (((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) ==> ((\P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) P)) = ((\P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 f0
- |- (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x)))
T c= cfind_list cCONS f0 f1 f2 cCOND cMEM f2 f0 f0 cfind_list f1 f2
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (!x. (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 ! c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b1 cCOND b0 clist_pairs f4 cfind_face f0 f1
+ |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)) = ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))) ==> ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))) = ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c= c==> c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f1 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f1 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4
+ |- ((\n. (((rot n) (list_pairs s)) = (list_pairs ((rot n) s)))) n)
T * / c= crot b0 clist_pairs f0 clist_pairs crot b0 f0 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- (((MEM d) (list_pairs h1)) = x) |- ((\x. (((MEM d) (list_pairs h1)) = x)) x)
T c==> c= cMEM f0 clist_pairs f1 f2 * / c= cMEM f0 clist_pairs f1 b0 f2
+ |- (((!s. (!n. ((perm_eq (list_pairs ((rot n) s))) (list_pairs s)))) ==> ((\s. (!n. ((perm_eq (list_pairs ((rot n) s))) (list_pairs s)))) h1)) = ((\s. (!n. ((perm_eq (list_pairs ((rot n) s))) (list_pairs s)))) h1))
T c= c==> ! ! cperm_eq clist_pairs crot b1 b0 clist_pairs b0 * / ! cperm_eq clist_pairs crot b1 b0 clist_pairs b0 f0 * / ! cperm_eq clist_pairs crot b1 b0 clist_pairs b0 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2), ((\x. (((MEM d) (list_pairs h1)) = x)) x) |- (((\x. (((MEM d) (list_pairs h1)) = x)) x) /\ (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c==> * / c= cMEM f1 clist_pairs f4 b0 f6 c/\ * / c= cMEM f1 clist_pairs f4 b0 f6 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1
+ |- (((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d)))))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d))))))
T c= c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cCOND cMEM f0 clist_pairs f2 clist_pairs f2 cfind_face f3 f0 crot b0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 c? / c= cCOND cMEM f0 clist_pairs f2 clist_pairs f2 cfind_face f3 f0 crot b0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0
+ ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- (((((COND T) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot n) (list_pairs h1))) = ((((COND ((MEM d) (list_pairs h1))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot n) (list_pairs h1))))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c= cCOND cT clist_pairs crot f3 f2 cfind_face f4 f1 crot f3 clist_pairs f2 c= cCOND cMEM f1 clist_pairs f2 clist_pairs crot f3 f2 cfind_face f4 f1 crot f3 clist_pairs f2
- |- ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)))
T c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))) = ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))))))
T c= c==> c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
+ (h2 = ((rot n) h1)), (((find_face t2) d) = ((rot m) ((find_face t1) d))), ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot m) ((find_face t1) d)))
T c==> c= f0 crot f1 f2 c==> c= cfind_face f3 f4 crot f5 cfind_face f6 f4 c==> cssreflect_eq f7 c~ cMEM f4 clist_pairs f2 c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f3 f4 crot f5 cfind_face f6 f4
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- ((\x. (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d))))))) x)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 * / c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b1 cCOND b0 clist_pairs f4 cfind_face f0 f1 f7
+ |- ((((COND T) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot n) (list_pairs h1)))
T c= cCOND cT clist_pairs crot f0 f1 cfind_face f2 f3 crot f0 clist_pairs f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) |- ((((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 ! * f0 b0 cT
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
- |- (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) e')))
T c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3
+ |- (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))
T c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 f4 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
+ (((MEM d) (list_pairs h1)) = x) |- ((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x))
T c==> c= cMEM f0 clist_pairs f1 f2 cssreflect_eq f3 c= cMEM f0 clist_pairs f1 f2
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- ((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face NIL) d)))))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d)))))))
T c==> c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cNIL cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f0 crot b2 cfind_face cNIL f0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0
+ |- (T = ((~ P) = (P = F)))
T c= cT c= c~ f0 c= f0 cF
- |- ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2)
T * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (((\x. (((MEM d) (list_pairs h1)) = x)) x) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND ((MEM d) (list_pairs h1))) (list_pairs h1)) ((find_face t1) d))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c==> * / c= cMEM f1 clist_pairs f4 b0 f6 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f0 f1
+ |- (((find_list NIL) x) = NIL)
T c= cfind_list cNIL f0 cNIL
+ |- ((L2 = L21) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))
T c==> c= f0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f0 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
- |- ((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = ((find_face t2) d)))
T c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 cfind_face f2 f0
- |- ((L1 = L11) = ((\L11. (L1 = L11)) L11))
T c= c= f0 f1 * / c= f0 b0 f1
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 cF c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cF clist_pairs f4 cfind_face f0 f1
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 c==> b0 b1 f6
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ (h2 = ((rot n) h1)) |- (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))))
T c==> c= f0 crot f1 f2 c==> cssreflect_eq f3 c= cMEM f4 clist_pairs f2 cT c? / c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot b0 cCOND cT clist_pairs f2 cfind_face f6 f4
+ |- ((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c==> c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f0 f1 cNIL c? / c= cfind_face cNIL f2 crot b0 cfind_face cCONS f0 f1 f2 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS f0 f1 cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f2 crot b2 cfind_face cCONS f0 f1 f2 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f0 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face cCONS f0 f1 f2
+ |- (T = (F ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face NIL) d))))))
T c= cT c==> cF c? / c= cfind_face cCONS f0 f1 f2 crot b0 cfind_face cNIL f2
+ |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d)))))) /\ (!a0. (!a1. ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face a1) d)))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS a0) a1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS a0) a1)) d))))))))))
T c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0 ! ! c==> ! c==> cALL2 / / c? / c= b4 crot b5 b3 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face b1 f0 ! c==> cALL2 / / c? / c= b4 crot b5 b3 cCONS b0 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face cCONS b0 b1 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- ((((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) /\ (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))))) ==> (!x. (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d)))))))) = (!x. (((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = x)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND x) (list_pairs h1)) ((find_face t1) d))))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c= c==> c/\ c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 cT c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cT clist_pairs f4 cfind_face f0 f1 c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 cF c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b0 cCOND cF clist_pairs f4 cfind_face f0 f1 ! c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b1 cCOND b0 clist_pairs f4 cfind_face f0 f1 ! c==> cssreflect_eq f6 c= cMEM f1 clist_pairs f4 b0 c? / c= cCOND cMEM f1 clist_pairs f2 clist_pairs f2 cfind_face f5 f1 crot b1 cCOND b0 clist_pairs f4 cfind_face f0 f1
- |- (((!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) ==> ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1)) = ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1))
T c= c==> ! ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3 * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3
- |- ((((MEM d) (list_pairs h2)) ==> ((list_pairs h2) = t')) ==> (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) t') e'))))
T c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4
- |- (((MEM d) (list_pairs h2)) ==> ((list_pairs h2) = (list_pairs h2)))
T c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1
+ |- (((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d)))))) /\ (!a0. (!a1. ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face a1) d)))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS a0) a1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS a0) a1)) d)))))))))) ==> (!L1. (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))))
T c==> c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0 ! ! c==> ! c==> cALL2 / / c? / c= b4 crot b5 b3 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face b1 f0 ! c==> cALL2 / / c? / c= b4 crot b5 b3 cCONS b0 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face cCONS b0 b1 f0 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 b0 b1 c? / c= cfind_face b1 f0 crot b2 cfind_face b0 f0
- |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))) = (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))), ((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) |- (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) /\ (!l. (P l)))
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 ! * f0 b0
+ |- ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 f6
+ |- (!L21. (((\L21. (L2 = L21)) L21) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> * / c= f0 b0 f1 c==> cALL2 / / c? / c= b1 crot b2 b0 f2 f0 c? / c= cfind_face f0 f3 crot b0 cfind_face f2 f3
+ |- ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f6 f1 f7 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f6 f1 c==> f3 f7
+ ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- (((MEM d) (list_pairs h1)) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= cMEM f1 clist_pairs f2 cT
+ |- (((!q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = T)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 c==> f3 b0 f7 * / c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cT c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cCOND cT clist_pairs f2 cfind_face f6 f1 c==> f3 b0 f7
- |- (((!x. (((\x. (((MEM d) (list_pairs h1)) = x)) x) ==> (?x. (((MEM d) (list_pairs h1)) = x)))) ==> ((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?x. (((MEM d) (list_pairs h1)) = x)))) = ((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?x. (((MEM d) (list_pairs h1)) = x))))
T c= c==> ! c==> * / c= cMEM f0 clist_pairs f1 b1 b0 c? / c= cMEM f0 clist_pairs f1 b1 c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0 c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
+ |- ((?n. (((find_list ((MAP list_pairs) NIL)) d) = ((rot n) ((find_list ((MAP list_pairs) NIL)) d)))) = (?n. (((find_list ((MAP list_pairs) NIL)) d) = ((rot n) ((find_list (list_of_faces NIL)) d)))))
T c= c? / c= cfind_list cMAP part clist_pairs cNIL f0 crot b0 cfind_list cMAP part clist_pairs cNIL f0 c? / c= cfind_list cMAP part clist_pairs cNIL f0 crot b0 cfind_list clist_of_faces cNIL f0
- |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1
+ |- (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))
T c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4
+ (L1 = L11) |- ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L11) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) = (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> c= f0 f1 c= ! c==> cALL2 / / c? / c= b2 crot b3 b1 f1 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))), (h2 = ((rot n) h1)), (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) /\ (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c==> c= f2 crot f3 f4 c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c/\ cALL2 / / c? / c= b1 crot b2 b0 f0 f5 c? / c= cfind_face cCONS f2 f5 f1 crot b0 cfind_face cCONS f4 f0 f1
+ |- ((\L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) L21)
T * / c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 f2
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
+ |- (((!d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) ==> ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d)) = ((\d. (((find_face L) d) = ((find_list (list_of_faces L)) d))) d))
T c= c==> ! c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1 * / c= cfind_face f0 b0 cfind_list clist_of_faces f0 b0 f1
+ (h2 = ((rot n) h1)) |- (((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs h2)) ((find_face t2) d)) = ((rot m) ((find_face t1) d))) = ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot m) ((find_face t1) d))))
T c==> c= f0 crot f1 f2 c= c= cCOND cMEM f3 clist_pairs crot f1 f2 clist_pairs f0 cfind_face f4 f3 crot f5 cfind_face f6 f3 c= cCOND cMEM f3 clist_pairs f0 clist_pairs f0 cfind_face f4 f3 crot f5 cfind_face f6 f3
- |- (((!q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))) ==> ((\q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))) q')) = ((\q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 b0 c= c==> c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 c==> f4 b0 * / c==> c= c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 b0 c= c==> c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 c==> f4 b0 f6 * / c==> c= c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 b0 c= c==> c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 c==> f4 b0 f6
+ |- (((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) = ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q')))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6
+ |- ((?L21. (L2 = L21)) ==> ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d))))))
T c==> c? / c= f0 b0 c==> cALL2 / / c? / c= b1 crot b2 b0 f1 f0 c? / c= cfind_face f0 f2 crot b0 cfind_face f1 f2
+ |- ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))
T c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4 c==> c/\ c? / c= f1 crot b0 f0 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f1 f3 f4 crot b0 cfind_face cCONS f0 f2 f4
+ |- ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((((\f1. (\f2. (?n. (f2 = ((rot n) f1))))) h1) h2) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))
T c==> c= c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f1 f3 f5 crot b0 cfind_face cCONS f0 f2 f5 f6 c= c==> c/\ * * / / c? / c= b1 crot b2 b0 f0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f1 f3 f5 crot b0 cfind_face cCONS f0 f2 f5 c==> f4 f6
- ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (((((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) /\ (!h. (!t. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h) t)) ==> (?n. (((find_face ((CONS h) t)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))) = (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c= c==> c/\ c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f2 f0 cNIL c? / c= cfind_face cNIL f1 crot b0 cfind_face cCONS f2 f0 f1 ! ! c==> cALL2 / / c? / c= b3 crot b4 b2 cCONS f2 f0 cCONS b0 b1 c? / c= cfind_face cCONS b0 b1 f1 crot b2 cfind_face cCONS f2 f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face cCONS f2 f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 cCONS f2 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face cCONS f2 f0 f1
- (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2) = T)
T c==> cALL2 / / c? / c= b1 crot b2 b0 f0 f1 c= cALL2 / / c? / c= b1 crot b2 b0 f0 f1 cT
+ |- ((?L11. (L1 = L11)) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> c? / c= f0 b0 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1
+ (h2 = ((rot n) h1)), ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))
T c==> c= f0 crot f1 f2 c==> cssreflect_eq f3 cMEM f4 clist_pairs f2 c= cCOND cMEM f4 clist_pairs f0 clist_pairs f0 cfind_face f5 f4 crot f1 clist_pairs f2
+ |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d))))) = q')) ==> ((((ssreflect_eq mem_d) (((MEM d) (list_pairs h1)) = F)) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND F) (list_pairs h1)) ((find_face t1) d)))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q')))
T c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c= cMEM f1 clist_pairs f2 cF c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cF clist_pairs f2 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6
+ |- ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))
T c= cALL2 f0 cCONS f1 f2 cCONS f3 f4 c/\ * * f0 f1 f3 cALL2 f0 f2 f4
+ |- ((~ P) = (P = F))
T c= c~ f0 c= f0 cF
+ |- ((\x. (((MEM d) (list_pairs h1)) = x)) ((MEM d) (list_pairs h1)))
T * / c= cMEM f0 clist_pairs f1 b0 cMEM f0 clist_pairs f1
- |- (((!g'. (!t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_face f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND b0 b1 b2 * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_face f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND b0 b1 b2 f3 * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_face f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND b0 b1 b2 f3
+ |- ((\h. (!t. (!x. ((((find_list NIL) x) = NIL) /\ (((find_list ((CONS h) t)) x) = (((COND ((MEM x) h)) h) ((find_list t) x))))))) h)
T * / ! ! c/\ c= cfind_list cNIL b2 cNIL c= cfind_list cCONS b0 b1 b2 cCOND cMEM b2 b0 b0 cfind_list b1 b2 f0
- |- (((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))) = ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))))))
T c= c==> c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q')))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> q'))))
T c= c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6 c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 f6 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f6
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) /\ ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (((COND T) (list_pairs h1)) ((find_face t1) d))))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c/\ cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cCOND cT clist_pairs f2 cfind_face f5 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
+ |- ((L1 = L11) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))))
T c==> c= f0 f1 ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f2 crot b1 cfind_face f0 f2
+ |- ((\L. ((list_of_faces L) = ((MAP list_pairs) L))) L)
T * / c= clist_of_faces b0 cMAP part clist_pairs b0 f0
+ |- ((\P. (!Q. (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))))) P)
T * / ! c= c==> c? / * b0 b2 b1 ! c==> * b0 b2 b1 f0
- |- ((?L11. (L1 = L11)) ==> (?L11. (L1 = L11)))
T c==> c? / c= f0 b0 c? / c= f0 b0
+ |- ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face NIL) d)))))
T c==> cALL2 / / c? / c= b1 crot b2 b0 cNIL cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cNIL f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- (((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) ==> ((\L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) L21)) = ((\L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) L1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face L1) d)))))) L21))
T c= c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 * / c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 f2 * / c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 f2
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((\h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t))))) h)
T * / ! c= cMAP f0 cCONS b0 b1 cCONS * f0 b0 cMAP f0 b1 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face t1) d)))))) |- (((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) ((CONS h2) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = T)
T c==> ! c==> cALL2 / / c? / c= b2 crot b3 b1 f0 b0 c? / c= cfind_face b0 f1 crot b1 cfind_face f0 f1 c= c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f2 f0 cCONS f3 f4 c? / c= cfind_face cCONS f3 f4 f1 crot b0 cfind_face cCONS f2 f0 f1 cT
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q'))))
T c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 clist_pairs f2 f6 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b0 clist_pairs f2 c==> f3 f6
+ (((ssreflect_eq mem_d) P) = P) |- (P = ((ssreflect_eq mem_d) P))
T c==> c= cssreflect_eq f0 f1 f1 c= f1 cssreflect_eq f0 f1
- (L1 = L11) |- (L11 = L1)
T c==> c= f0 f1 c= f1 f0
- |- (((!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 c==> f3 b0 * / c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 c==> f3 b0 f6 * / c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 c==> f3 b0 f6
+ |- (?n. (((find_list (list_of_faces NIL)) d) = ((rot n) ((find_list (list_of_faces NIL)) d))))
T c? / c= cfind_list clist_of_faces cNIL f0 crot b0 cfind_list clist_of_faces cNIL f0
+ |- ((t = T) = t)
T c= c= f0 cT f0
+ |- ((\L. (!d. (((find_face L) d) = ((find_list (list_of_faces L)) d)))) L)
T * / ! c= cfind_face b0 b1 cfind_list clist_of_faces b0 b1 f0
+ |- (F ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face NIL) d)))))
T c==> cF c? / c= cfind_face cCONS f0 f1 f2 crot b0 cfind_face cNIL f2
+ |- ((F ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS h1) t1)) NIL) ==> (?n. (((find_face NIL) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))))
T c= c==> cF c? / c= cfind_face cNIL f0 crot b0 cfind_face cCONS f1 f2 f0 c==> cALL2 / / c? / c= b1 crot b2 b0 cCONS f1 f2 cNIL c? / c= cfind_face cNIL f0 crot b0 cfind_face cCONS f1 f2 f0
+ |- ((\s1. (!s2. (((perm_eq s1) s2) ==> (!x. (((MEM x) s1) = ((MEM x) s2)))))) s1)
T * / ! c==> cperm_eq b0 b1 ! c= cMEM b2 b0 cMEM b2 b1 f0
+ |- (((((COND ((MEM d) (list_pairs h1))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot m) ((find_face t1) d))) = ((((COND ((MEM d) (list_pairs ((rot n) h1)))) (list_pairs ((rot n) h1))) ((find_face t2) d)) = ((rot m) ((find_face t1) d))))
T c= c= cCOND cMEM f0 clist_pairs f1 clist_pairs crot f2 f1 cfind_face f3 f0 crot f4 cfind_face f5 f0 c= cCOND cMEM f0 clist_pairs crot f2 f1 clist_pairs crot f2 f1 cfind_face f3 f0 crot f4 cfind_face f5 f0
- ((MEM d) (list_pairs h2)) |- (((MEM d) (list_pairs h2)) = T)
T c==> cMEM f0 clist_pairs f1 c= cMEM f0 clist_pairs f1 cT
- |- (((!h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) ==> ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1)) = ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1))
T c= c==> ! ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0 * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0
+ |- (((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))) = ((\n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) n))
T c= c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 crot f3 clist_pairs f4 * / c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 crot b0 clist_pairs f4 f3
- ((\L11. (L1 = L11)) L11) |- (((L1 = L11) ==> (?L11. (L1 = L11))) = (?L11. (L1 = L11)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
+ |- ((!a0. (!a1. ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face a1) d)))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS a0) a1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS a0) a1)) d))))))))) = ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) NIL) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face NIL) d)))))) /\ (!a0. (!a1. ((!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) a1) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face a1) d)))))) ==> (!L2. ((((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) ((CONS a0) a1)) L2) ==> (?n. (((find_face L2) d) = ((rot n) ((find_face ((CONS a0) a1)) d)))))))))))
T c= ! ! c==> ! c==> cALL2 / / c? / c= b4 crot b5 b3 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face b1 f0 ! c==> cALL2 / / c? / c= b4 crot b5 b3 cCONS b0 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face cCONS b0 b1 f0 c/\ ! c==> cALL2 / / c? / c= b2 crot b3 b1 cNIL b0 c? / c= cfind_face b0 f0 crot b1 cfind_face cNIL f0 ! ! c==> ! c==> cALL2 / / c? / c= b4 crot b5 b3 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face b1 f0 ! c==> cALL2 / / c? / c= b4 crot b5 b3 cCONS b0 b1 b2 c? / c= cfind_face b2 f0 crot b3 cfind_face cCONS b0 b1 f0
- |- (((!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q'))))) ==> ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q'))))) q')) = ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 c==> f3 b0 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 c==> f3 b0 f7 * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 c==> f3 b0 f7
- ((\x. (((MEM d) (list_pairs h1)) = x)) x) |- (((((MEM d) (list_pairs h1)) = x) ==> (?x. (((MEM d) (list_pairs h1)) = x))) = (?x. (((MEM d) (list_pairs h1)) = x)))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c= c==> c= cMEM f0 clist_pairs f1 f2 c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
- |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) /\ ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c/\ cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1
- |- ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q')))))) p')
T * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 c==> b0 b1 f5
- |- ((\q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 b0 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 cfind_face f6 f1 c==> f3 b0 f7
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = T)
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 cT
- |- ((\h1. (!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))))) h1)
T * / ! ! ! ! c/\ c= cALL2 b2 cNIL cNIL cT c/\ c= cALL2 b2 cCONS b0 b3 cNIL cF c/\ c= cALL2 b2 cNIL cCONS b1 b4 cF c= cALL2 b2 cCONS b0 b3 cCONS b1 b4 c/\ * * b2 b0 b1 cALL2 b2 b3 b4 f0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- |- ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))
T c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1
- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q))) |- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q))
T c==> c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1 c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1
- (L1 = L11) |- ((L1 = L11) /\ (?L11. (L1 = L11)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- |- (((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1)))) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> q')))) = ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> q'))))
T c= c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 cssreflect_eq f0 cMEM f1 clist_pairs f2 c==> c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 f5 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 f5 c==> c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 f5 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 f5
- |- (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))
T c= cMAP f0 cCONS f1 f2 cCONS * f0 f1 cMAP f0 f2
- |- (T = ((list_pairs ((rot n) h1)) = (list_pairs ((rot n) h1))))
T c= cT c= clist_pairs crot f0 f1 clist_pairs crot f0 f1
- ((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) |- (((~ ((MEM d) (list_pairs h1))) ==> (((MEM d) (list_pairs h1)) = F)) = (((MEM d) (list_pairs h1)) = F))
T c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c==> c~ cMEM f1 clist_pairs f2 c= cMEM f1 clist_pairs f2 cF c= cMEM f1 clist_pairs f2 cF
- ((\L11. (L1 = L11)) L11) |- (((\L11. (L1 = L11)) L11) /\ (?L11. (L1 = L11)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- ((\x. (((MEM d) (list_pairs h1)) = x)) x) |- (((\x. (((MEM d) (list_pairs h1)) = x)) x) /\ (?x. (((MEM d) (list_pairs h1)) = x)))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c/\ * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
- (((MEM d) (list_pairs h1)) = x) |- (x = ((MEM d) (list_pairs h1)))
T c==> c= cMEM f0 clist_pairs f1 f2 c= f2 cMEM f0 clist_pairs f1
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))), ((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) |- (!l. (P l))
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 ! * f0 b0
- ((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) |- ((?n. (h2 = ((rot n) h1))) = T)
T c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= f0 crot b0 f1 cT
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 c==> b0 b1 f5 * / ! c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 b1 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 clist_pairs f2 c==> b0 b1 f5
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- (((!h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) ==> ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2)) = ((\h2. (!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))))) h2))
T c= c==> ! ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1 * / ! ! ! c/\ c= cALL2 b1 cNIL cNIL cT c/\ c= cALL2 b1 cCONS f0 b2 cNIL cF c/\ c= cALL2 b1 cNIL cCONS b0 b3 cF c= cALL2 b1 cCONS f0 b2 cCONS b0 b3 c/\ * * b1 f0 b0 cALL2 b1 b2 b3 f1
- |- (((!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))) ==> ((\e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))) e')) = ((\e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_face f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 cCOND f2 f3 b0 * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_face f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 cCOND f2 f3 b0 f5 * / c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_face f4 f0 b0 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 cCOND f2 f3 b0 f5
- |- (((!x. (((\L11. (L1 = L11)) x) ==> (?L11. (L1 = L11)))) ==> ((?L11. (L1 = L11)) ==> (?L11. (L1 = L11)))) = ((?L11. (L1 = L11)) ==> (?L11. (L1 = L11))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((\t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))) t2)
T * / c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 f2 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f3 b0 cF c= cALL2 f0 cCONS f1 f2 cCONS f3 b0 c/\ * * f0 f1 f3 cALL2 f0 f2 b0 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) |- ((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) /\ (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))))
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1
- |- (((!P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) ==> ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P)) = ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P))
T c= c==> ! ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2 * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2
- |- (((!p'. (!q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 b0 c==> c==> b0 c= c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 b1 c= c==> c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 c==> b0 b1 * / ! c==> c= c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 b0 c==> c==> b0 c= c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 b1 c= c==> c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 c==> b0 b1 f5 * / ! c==> c= c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 b0 c==> c==> b0 c= c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 b1 c= c==> c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 c==> b0 b1 f5
- |- ((L1 = L11) ==> (?L11. (L1 = L11)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((?x. (((MEM d) (list_pairs h1)) = x)) ==> (?x. (((MEM d) (list_pairs h1)) = x)))
T c==> c? / c= cMEM f0 clist_pairs f1 b0 c? / c= cMEM f0 clist_pairs f1 b0
- |- ((\g'. (!t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cMEM f0 clist_pairs f1 b0 c==> c==> b0 c= clist_pairs f1 b1 c==> c==> c~ b0 c= cfind_face f2 f0 b2 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND b0 b1 b2 f3
- ((!x. ((P x) ==> Q)) = ((?x. (P x)) ==> Q)) |- (((?x. (P x)) ==> Q) = (!x. ((P x) ==> Q)))
T c==> c= ! c==> * f0 b0 f1 c==> c? / * f0 b0 f1 c= c==> c? / * f0 b0 f1 ! c==> * f0 b0 f1
- |- ((\P. (!t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2))))))))) P)
T * / ! ! c/\ c= cALL2 b0 cNIL cNIL cT c/\ c= cALL2 b0 cCONS f0 b1 cNIL cF c/\ c= cALL2 b0 cNIL cCONS f1 b2 cF c= cALL2 b0 cCONS f0 b1 cCONS f1 b2 c/\ * * b0 f0 f1 cALL2 b0 b1 b2 f2
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))))
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2
- |- (!x. (((\x. (((MEM d) (list_pairs h1)) = x)) x) ==> (?x. (((MEM d) (list_pairs h1)) = x))))
T c==> * / c= cMEM f0 clist_pairs f1 b0 f2 c? / c= cMEM f0 clist_pairs f1 b0
- ((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) |- (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = T)
T c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= cssreflect_eq f0 cMEM f1 clist_pairs f2 cT
- |- (((!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))) ==> ((\t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))) t)) = ((\t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))) t))
T c= c==> ! c= cMAP f0 cCONS f1 b0 cCONS * f0 f1 cMAP f0 b0 * / c= cMAP f0 cCONS f1 b0 cCONS * f0 f1 cMAP f0 b0 f2 * / c= cMAP f0 cCONS f1 b0 cCONS * f0 f1 cMAP f0 b0 f2
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0 cT
- |- ((\p'. (!q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 b0 c==> c==> b0 c= c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 b1 c= c==> c/\ c? / c= f0 crot b2 f1 cALL2 / / c? / c= b3 crot b4 b2 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b2 cfind_face cCONS f1 f2 f4 c==> b0 b1 f5
- |- ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e')))))
T c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 f3 c==> c==> c~ f2 c= cfind_face f4 f0 f5 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f4 f0 cCOND f2 f3 f5
- |- ((((MEM d) (list_pairs h1)) = x) = ((\x. (((MEM d) (list_pairs h1)) = x)) x))
T c= c= cMEM f0 clist_pairs f1 f2 * / c= cMEM f0 clist_pairs f1 b0 f2
- (L1 = L11) |- ((\L11. (L1 = L11)) L11)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((\t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))) t)
T * / c= cMAP f0 cCONS f1 b0 cCONS * f0 f1 cMAP f0 b0 f2
- |- ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))
T c==> c= c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f0 f3 f5 crot b0 cfind_face cCONS f1 f2 f5 f6 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f5 crot b0 cfind_face cCONS f1 f2 f5 c==> f4 f6
- |- (((!t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((MEM d) (list_pairs h2)) = g') ==> ((g' ==> ((list_pairs h2) = t')) ==> (((~ g') ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_face f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND f2 b0 b1 * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_face f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND f2 b0 b1 f4 * / ! c==> c= cMEM f0 clist_pairs f1 f2 c==> c==> f2 c= clist_pairs f1 b0 c==> c==> c~ f2 c= cfind_face f3 f0 b1 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND f2 b0 b1 f4
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- |- (((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = ((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2))) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> q')))) = ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> q'))))
T c= c==> c= c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c==> c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 f5 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f5 c==> c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 f5 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f5
- (~ ((MEM d) (list_pairs h2))) |- (((MEM d) (list_pairs h2)) = F)
T c==> c~ cMEM f0 clist_pairs f1 c= cMEM f0 clist_pairs f1 cF
- |- (((((MEM d) (list_pairs h2)) ==> ((list_pairs h2) = (list_pairs h2))) ==> (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) e')))) = (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) e'))))
T c= c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 f3 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f2 f0 cCOND cMEM f0 clist_pairs f1 clist_pairs f1 f3
- |- (((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))))) = ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))))))
T c= c==> c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1 c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 cfind_face f5 f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- |- (((\f2. (f f2)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (~ ((MEM d) (list_pairs h2))) |- ((~ ((MEM d) (list_pairs h2))) /\ (((find_face t2) d) = ((find_face t2) d)))
T c==> c~ cMEM f0 clist_pairs f1 c/\ c~ cMEM f0 clist_pairs f1 c= cfind_face f2 f0 cfind_face f2 f0
- |- ((\q'. ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (p' ==> q'))))) q')
T * / c==> c= cssreflect_eq f0 cMEM f1 clist_pairs f2 f3 c==> c==> f3 c= c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 b0 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f4 clist_pairs f4 cfind_face f5 f1 crot b1 clist_pairs f2 c==> f3 b0 f6
- |- ((\t1. (!t2. (((((ALL2 P) NIL) NIL) = T) /\ (((((ALL2 P) ((CONS h1) t1)) NIL) = F) /\ (((((ALL2 P) NIL) ((CONS h2) t2)) = F) /\ ((((ALL2 P) ((CONS h1) t1)) ((CONS h2) t2)) = (((P h1) h2) /\ (((ALL2 P) t1) t2)))))))) t1)
T * / ! c/\ c= cALL2 f0 cNIL cNIL cT c/\ c= cALL2 f0 cCONS f1 b0 cNIL cF c/\ c= cALL2 f0 cNIL cCONS f2 b1 cF c= cALL2 f0 cCONS f1 b0 cCONS f2 b1 c/\ * * f0 f1 f2 cALL2 f0 b0 b1 f3
- |- ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1)))) = q')) ==> ((((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) (list_pairs h1))))) = (((ssreflect_eq mem_d) ((MEM d) (list_pairs h1))) ==> q')))
T c==> c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 f5 c= c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b0 clist_pairs f2 c==> cssreflect_eq f0 cMEM f1 clist_pairs f2 f5
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- ((((\L11. (L1 = L11)) L11) ==> (?L11. (L1 = L11))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- |- (((((MEM d) (list_pairs h2)) = ((MEM d) (list_pairs h2))) ==> ((((MEM d) (list_pairs h2)) ==> ((list_pairs h2) = t')) ==> (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) t') e'))))) = ((((MEM d) (list_pairs h2)) ==> ((list_pairs h2) = t')) ==> (((~ ((MEM d) (list_pairs h2))) ==> (((find_face t2) d) = e')) ==> ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = (((COND ((MEM d) (list_pairs h2))) t') e')))))
T c= c==> c= cMEM f0 clist_pairs f1 cMEM f0 clist_pairs f1 c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4 c==> c==> cMEM f0 clist_pairs f1 c= clist_pairs f1 f2 c==> c==> c~ cMEM f0 clist_pairs f1 c= cfind_face f3 f0 f4 c= cCOND cMEM f0 clist_pairs f1 clist_pairs f1 cfind_face f3 f0 cCOND cMEM f0 clist_pairs f1 f2 f4
- (!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))), ((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) |- ((!P. (((P NIL) /\ (!h. (!t. (P ((CONS h) t))))) ==> (!l. (P l)))) /\ (!l. (P l)))
T c==> ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
- |- ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> q')))
T c==> c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c= c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 f5 c= c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 c? / c= cfind_face cCONS f0 f3 f4 crot b0 cfind_face cCONS f1 f2 f4 c==> c/\ c? / c= f0 crot b0 f1 cALL2 / / c? / c= b1 crot b2 b0 f2 f3 f5
- ((MEM d) (list_pairs h2)) |- (((MEM d) (list_pairs h2)) /\ ((list_pairs h2) = (list_pairs h2)))
T c==> cMEM f0 clist_pairs f1 c/\ cMEM f0 clist_pairs f1 c= clist_pairs f1 clist_pairs f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
- |- (((!p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) = p') ==> ((p' ==> ((?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d)))) = q')) ==> ((((ssreflect_eq mem_d) (~ ((MEM d) (list_pairs h1)))) ==> (?n. ((((COND ((MEM d) (list_pairs h2))) (list_pairs h2)) ((find_face t2) d)) = ((rot n) ((find_face t1) d))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 c==> b0 b1 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 c==> b0 b1 f6 * / ! c==> c= cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 b0 c==> c==> b0 c= c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 b1 c= c==> cssreflect_eq f0 c~ cMEM f1 clist_pairs f2 c? / c= cCOND cMEM f1 clist_pairs f3 clist_pairs f3 cfind_face f4 f1 crot b2 cfind_face f5 f1 c==> b0 b1 f6
- |- ((\q'. ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) = p') ==> ((p' ==> ((?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d)))) = q')) ==> ((((?n. (h2 = ((rot n) h1))) /\ (((ALL2 (\f1. (\f2. (?n. (f2 = ((rot n) f1)))))) t1) t2)) ==> (?n. (((find_face ((CONS h2) t2)) d) = ((rot n) ((find_face ((CONS h1) t1)) d))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 f4 c==> c==> f4 c= c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 b0 c= c==> c/\ c? / c= f0 crot b1 f1 cALL2 / / c? / c= b2 crot b3 b1 f2 f3 c? / c= cfind_face cCONS f0 f3 f5 crot b1 cfind_face cCONS f1 f2 f5 c==> f4 b0 f6
- |- ((\f. (!h. (!t. (((MAP f) ((CONS h) t)) = ((CONS (f h)) ((MAP f) t)))))) f)
T * / ! ! c= cMAP b0 cCONS b1 b2 cCONS * b0 b1 cMAP b0 b2 f0
