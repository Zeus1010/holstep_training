N Miqmcsn.SCS_3T7_OPP_IS_SCS
C |- (is_scs_v39 (scs_opp_v39 scs_3T7))
T cis_scs_v39 cscs_opp_v39 cscs_3T7
D TRUTH
A |- T
T cT
D Miqmcsn.SCS_3T7_IS_SCS
A |- (is_scs_v39 scs_3T7)
T cis_scs_v39 cscs_3T7
D Yxionxl2.OPP_IS_SCS
A |- (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))
T c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0
- |- ((scs_k_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = k)
T c= cscs_k_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, f7 c, f8 f9 f0
- |- ((\mkj. (!q. (!p. (!s. ((((((scs_half_slice_v39 s) p) q) d') mkj) = ((LET (\p'. (LET_END ((LET (\k'. (LET_END ((LET (\mod2. (LET_END ((LET (\mod2b. (LET_END ((LET (\a1. (LET_END ((LET (\b1. (LET_END ((LET (\J. (LET_END (scs_v39 (k' , (d' , (a1 , (a1 , (b1 , (b1 , (J , (EMPTY , (EMPTY , EMPTY))))))))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) mkj) (((mod2b (scs_J_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_bm_v39 s) p) q)) (((mod2 (scs_b_v39 s)) i'') j'')))))))) (\i''. (\j''. (((COND (((i'' MOD k') INSERT ((j'' MOD k') INSERT EMPTY)) = ((NUMERAL _0) INSERT ((k' - (NUMERAL (BIT1 _0))) INSERT EMPTY)))) (((scs_am_v39 s) p) q)) (((mod2 (scs_a_v39 s)) i'') j'')))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) (\f. (\j. (\j'. ((f ((j MOD k') + p')) ((j' MOD k') + p'))))))))) ((q + ((NUMERAL (BIT1 _0)) + ((scs_k_v39 s) - p'))) MOD (scs_k_v39 s)))))) (p MOD (scs_k_v39 s)))))))) mkj)
T * / ! ! ! c= cscs_half_slice_v39 b3 b2 b1 f0 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cscs_v39 c, b5 c, f0 c, b8 c, b8 c, b9 c, b9 c, b10 c, part cEMPTY c, part cEMPTY part cEMPTY / / cCOND c= * * part cINSERT cMOD b10 b5 * * part cINSERT cMOD b11 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY b0 * * * b7 * part cscs_J_v39 b3 b10 b11 / / cCOND c= * * part cINSERT cMOD b9 b5 * * part cINSERT cMOD b10 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_bm_v39 b3 b2 b1 * * * b6 * part cscs_b_v39 b3 b9 b10 / / cCOND c= * * part cINSERT cMOD b8 b5 * * part cINSERT cMOD b9 b5 part cEMPTY * * part cINSERT cNUMERAL c_0 * * part cINSERT c- b5 cNUMERAL cBIT1 c_0 part cEMPTY cscs_am_v39 b3 b2 b1 * * * b6 * part cscs_a_v39 b3 b8 b9 / / / * * b7 c+ cMOD b8 b5 b4 c+ cMOD b9 b5 b4 / / / * * b6 c+ cMOD b7 b5 b4 c+ cMOD b8 b5 b4 cMOD c+ b1 c+ cNUMERAL cBIT1 c_0 c- cscs_k_v39 b3 b4 cscs_k_v39 b3 cMOD b2 cscs_k_v39 b3 f1
- |- (((NUMERAL _0) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cF
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_am_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = alpha)))))) alpha)
T * / ! ! ! ! c= * part cscs_am_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 b0 f5
- |- (((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0)))
T c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0
+ |- (((!x. (((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) x) ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))) = ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s)))))
T c= c==> ! c==> * / c/\ cis_scs_v39 f0 c= b1 cscs_opp_v39 f0 b0 c==> ! ! c==> c/\ cis_scs_v39 b2 c= b1 cscs_opp_v39 b2 cis_scs_v39 cscs_opp_v39 b2 cis_scs_v39 cscs_opp_v39 f0 c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0 c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
- |- (((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = F)
T c= c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cF
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0)))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0
- |- (((!s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) ==> ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s)) = ((\s. ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))) s))
T c= c==> ! c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0 * / c= cscs_basic_v39 b0 c/\ cunadorned_v39 b0 ! ! c= cscs_J_v39 b0 b1 b2 cF f0
- |- ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL _0) < (NUMERAL (BIT1 (BIT1 _0)))) /\ (((a + (NUMERAL _0)) = a) /\ ((((NUMERAL _0) + a) = a) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL _0)) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) - (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))
T c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c< cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= c+ f0 cNUMERAL c_0 f0 c/\ c= c+ cNUMERAL c_0 f0 f0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c= c- cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- ((\alpha. (!beta. (!J. (!lo. (!str. ((scs_a_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = a)))))) alpha)
T * / ! ! ! ! c= * part cscs_a_v39 cscs_v39 c, f0 c, f1 c, f2 c, b0 c, b1 c, f3 c, b2 c, b3 c, f4 b4 f2 f5
- |- (((!k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) ==> ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k)) = ((\k. (!d. (!a. (!b. (!alpha. (!beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo)))))))))) k))
T c= c==> ! ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1 * / ! ! ! ! ! ! ! ! c= * part cscs_lo_v39 cscs_v39 c, b0 c, b1 c, b2 c, b4 c, b5 c, b3 c, b6 c, b7 c, f0 b8 b7 f1
- |- (~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))
T c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
- |- ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 _0)))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL _0))) = ((NUMERAL _0) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT1 _0)))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((((psort (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 (BIT1 _0))) , (NUMERAL (BIT0 (BIT1 _0))))) = ((NUMERAL (BIT0 (BIT1 _0))) , (NUMERAL (BIT1 (BIT1 _0))))) /\ ((!a. (!b. (!c. (!d. (((a , b) = (c , d)) = ((a = c) /\ (b = d))))))) /\ ((!a. (!d. ((((ASSOCD_v39 a) NIL) d) = d))) /\ ((!a. (!d. (!h. (!t. ((((ASSOCD_v39 a) ((CONS h) t)) d) = (((COND (a = (FST h))) (SND h)) (((ASSOCD_v39 a) t) d))))))) /\ ((!k. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) NIL) = NIL)) /\ ((!p. (!d. ((((ASSOCD_v39 p) NIL) d) = d))) /\ (!k. (!i. (!j. (!r. (!t. (((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) ((CONS ((i , j) , r)) t)) = ((CONS (((psort k) (i , j)) , r)) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) t))))))))))))))))))))))))
T c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cpsort cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c, cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ ! ! ! ! c= c= c, b0 b1 c, b2 b3 c/\ c= b0 b2 c= b1 b3 c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 c/\ ! ! ! ! c= cASSOCD_v39 b0 cCONS b2 b3 b1 cCOND c= b0 cFST b2 cSND b2 cASSOCD_v39 b0 b3 b1 c/\ ! c= cMAP * part cGABS / ! ! cGEQ * b1 c, b2 b3 c, cpsort b0 b2 b3 cNIL cNIL c/\ ! ! c= cASSOCD_v39 b0 cNIL b1 b1 ! ! ! ! ! c= cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 cCONS c, c, b1 b2 b3 b4 cCONS c, cpsort b0 c, b1 b2 b3 cMAP * part cGABS / ! ! cGEQ * b5 c, b6 b7 c, cpsort b0 b6 b7 b4
- |- (((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0))))))))))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
- ((NUMERAL _0) = (NUMERAL (BIT1 _0))) |- ((NUMERAL (BIT1 _0)) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cNUMERAL cBIT1 c_0 cNUMERAL c_0
- |- (((psort (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) = ((NUMERAL (BIT1 _0)) , (NUMERAL (BIT0 (BIT0 (BIT1 _0))))))
T c= cpsort cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c, cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0
- |- (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ ((((NUMERAL _0) MOD (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) /\ (~ ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) = (NUMERAL _0)))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c~ c= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))
T c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))), ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) |- (is_scs_v39 (scs_opp_v39 s))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0
- ((NUMERAL _0) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) |- ((NUMERAL (BIT0 (BIT1 (BIT1 _0)))) = (NUMERAL _0))
T c==> c= cNUMERAL c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cNUMERAL c_0
- |- (((!lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) ==> ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo)) = ((\lo. (!str. ((scs_J_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = J))) lo))
T c= c==> ! ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8 * / ! c= * part cscs_J_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, f4 c, f5 c, f6 c, b0 c, f7 b1 f6 f8
- |- (((NUMERAL (BIT1 _0)) = (NUMERAL (BIT1 (BIT1 _0)))) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cF
- |- ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c<= cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (~ ((NUMERAL (BIT1 _0)) = (NUMERAL (BIT0 (BIT1 _0)))))
T c~ c= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- |- (((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0)))))) ==> (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F)) = (((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = F))
T c= c==> c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF c= c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cF
+ |- (((?s'. ((is_scs_v39 scs_3T7) /\ (s' = (scs_opp_v39 scs_3T7)))) ==> (is_scs_v39 (scs_opp_v39 scs_3T7))) = (is_scs_v39 (scs_opp_v39 scs_3T7)))
T c= c==> c? / c/\ cis_scs_v39 cscs_3T7 c= b0 cscs_opp_v39 cscs_3T7 cis_scs_v39 cscs_opp_v39 cscs_3T7 cis_scs_v39 cscs_opp_v39 cscs_3T7
- |- (~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0)))
T c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\beta. (!J. (!lo. (!str. ((scs_lo_v39 (scs_v39 (k , (d , (a , (alpha , (beta , (b , (J , (lo , (hi , str))))))))))) = lo))))) beta)
T * / ! ! ! c= * part cscs_lo_v39 cscs_v39 c, f0 c, f1 c, f2 c, f3 c, b0 c, f4 c, b1 c, b2 c, f5 b3 b2 f6
- |- ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))
T c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
- |- (((!x. (x = x)) ==> ((\x. (x = x)) x)) = ((\x. (x = x)) x))
T c= c==> ! c= b0 b0 * / c= b0 b0 f0 * / c= b0 b0 f0
- |- (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)) /\ (((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL _0)) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0)))))))))))))))))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
- |- ((scs_basic_v39 s) = ((unadorned_v39 s) /\ (!i. (!j. ((((scs_J_v39 s) i) j) = F)))))
T c= cscs_basic_v39 f0 c/\ cunadorned_v39 f0 ! ! c= cscs_J_v39 f0 b0 b1 cF
- |- ((\u'. (!k. (!i. (!j. (((((((funlistA_v39 data) u) u') k) i) j) = (((COND ((i MOD k) = (j MOD k))) u) (((ASSOCD_v39 ((psort k) (i , j))) ((MAP (GABS (\f. (!u. (!d. ((GEQ (f (u , d))) (((psort k) u) , d))))))) data)) u'))))))) u')
T * / ! ! ! c= cfunlistA_v39 f0 f1 b0 b1 b2 b3 cCOND c= cMOD b2 b1 cMOD b3 b1 f1 cASSOCD_v39 cpsort b1 c, b2 b3 cMAP * part cGABS / ! ! cGEQ * b4 c, b5 b6 c, cpsort b1 b5 b6 f0 b0 f2
- |- (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT1 _0)) = (NUMERAL _0))) /\ ((((NUMERAL (BIT0 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((~ ((NUMERAL (BIT0 (BIT1 _0))) = (NUMERAL _0))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT0 (BIT1 _0)))) /\ (((NUMERAL (BIT0 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT0 (BIT1 _0)))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ ((((NUMERAL (BIT1 (BIT1 _0))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 _0)) <= (NUMERAL (BIT1 (BIT1 _0)))) /\ (((NUMERAL (BIT1 (BIT1 _0))) <= (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 _0)) + (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ (((SUC (NUMERAL (BIT1 (BIT1 _0)))) = (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) /\ ((~ ((NUMERAL (BIT1 (BIT1 _0))) = (NUMERAL _0))) /\ (((SUC (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0)))) /\ (((SUC (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL (BIT1 _0))) /\ ((~ ((NUMERAL (BIT0 (BIT0 (BIT1 _0)))) = (NUMERAL _0))) /\ (((NUMERAL _0) MOD (NUMERAL (BIT0 (BIT0 (BIT1 _0))))) = (NUMERAL _0))))))))))))))))))))))
T c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 c/\ c= cMOD cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c<= cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 c/\ c<= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= c+ cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT1 cBIT1 c_0 cNUMERAL c_0 c/\ c= cSUC cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0 c/\ c= cSUC cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c= cMOD cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 c/\ c~ c= cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0 c= cMOD cNUMERAL c_0 cNUMERAL cBIT0 cBIT0 cBIT1 c_0 cNUMERAL c_0
+ |- (((!s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))) ==> ((\s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))) s)) = ((\s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))) s))
T c= c==> ! c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 * / c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f0 * / c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f0
+ |- ((\s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))) s)
T * / c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f0
+ |- ((\s'. ((is_scs_v39 scs_3T7) /\ (s' = (scs_opp_v39 scs_3T7)))) (scs_opp_v39 scs_3T7))
T * / c/\ cis_scs_v39 cscs_3T7 c= b0 cscs_opp_v39 cscs_3T7 cscs_opp_v39 cscs_3T7
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))), ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) |- ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) /\ (is_scs_v39 (scs_opp_v39 s)))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 c/\ ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ ((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') |- (((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') /\ ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))
T c==> * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c/\ * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ |- (!s'. (((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s)))))
T c==> * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ |- (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))
T c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ |- ((!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))) = T)
T c= ! c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 cT
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- (((!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))) ==> ((\s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))) s)) = ((\s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))) s))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c= c==> ! c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 * / c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f1 * / c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f1
+ |- ((is_scs_v39 scs_3T7) = T)
T c= cis_scs_v39 cscs_3T7 cT
+ ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) |- (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) /\ ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))
T c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 c/\ c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- ((\s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s)))) s)
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 * / c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 f1
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))), (?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) |- ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) /\ (is_scs_v39 (scs_opp_v39 s)))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 c/\ c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0
+ |- ((((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))) = T)
T c= c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0 cT
+ |- (((is_scs_v39 scs_3T7) /\ ((scs_opp_v39 scs_3T7) = (scs_opp_v39 scs_3T7))) = ((\s'. ((is_scs_v39 scs_3T7) /\ (s' = (scs_opp_v39 scs_3T7)))) (scs_opp_v39 scs_3T7)))
T c= c/\ cis_scs_v39 cscs_3T7 c= cscs_opp_v39 cscs_3T7 cscs_opp_v39 cscs_3T7 * / c/\ cis_scs_v39 cscs_3T7 c= b0 cscs_opp_v39 cscs_3T7 cscs_opp_v39 cscs_3T7
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- (((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s))) = T)
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c= c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0 cT
+ |- (T = ((is_scs_v39 scs_3T7) /\ ((scs_opp_v39 scs_3T7) = (scs_opp_v39 scs_3T7))))
T c= cT c/\ cis_scs_v39 cscs_3T7 c= cscs_opp_v39 cscs_3T7 cscs_opp_v39 cscs_3T7
+ ((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') |- ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))
T c==> * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 ! c==> c/\ cis_scs_v39 b0 c= f0 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0
+ ((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') |- ((((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s)))) = ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s))))
T c==> * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c= c==> c/\ cis_scs_v39 f0 c= f1 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) /\ (!s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c/\ ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 ! c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0
+ |- ((is_scs_v39 scs_3T7) /\ ((scs_opp_v39 scs_3T7) = (scs_opp_v39 scs_3T7)))
T c/\ cis_scs_v39 cscs_3T7 c= cscs_opp_v39 cscs_3T7 cscs_opp_v39 cscs_3T7
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- ((\s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) s')
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 * / ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 f0
+ (!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) |- ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 cis_scs_v39 cscs_opp_v39 f0
+ |- (?s'. ((is_scs_v39 scs_3T7) /\ (s' = (scs_opp_v39 scs_3T7))))
T c? / c/\ cis_scs_v39 cscs_3T7 c= b0 cscs_opp_v39 cscs_3T7
+ (?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) |- ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s)))
T c==> c? / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0
+ |- ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (!s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))))
T c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 ! c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0
+ |- ((((\s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) s') ==> ((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (is_scs_v39 (scs_opp_v39 s)))) = T)
T c= c==> * / c/\ cis_scs_v39 f0 c= b0 cscs_opp_v39 f0 f1 c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 f0 cT
+ |- (((!s'. (!s. (((is_scs_v39 s) /\ (s' = (scs_opp_v39 s))) ==> (is_scs_v39 (scs_opp_v39 s))))) ==> (!s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s))))) = (!s. ((?s'. ((is_scs_v39 s) /\ (s' = (scs_opp_v39 s)))) ==> (is_scs_v39 (scs_opp_v39 s)))))
T c= c==> ! ! c==> c/\ cis_scs_v39 b1 c= b0 cscs_opp_v39 b1 cis_scs_v39 cscs_opp_v39 b1 ! c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0 ! c==> c? / c/\ cis_scs_v39 b0 c= b1 cscs_opp_v39 b0 cis_scs_v39 cscs_opp_v39 b0
+ |- ((T /\ t) = t)
T c= c/\ cT f0 f0
