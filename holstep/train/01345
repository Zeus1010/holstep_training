N Seq.perm_filterC
C |- (!a. (!s. (!s'. (((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s') = ((perm_eq s) s')))))
T c= cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f2 cperm_eq f1 f2
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D bool_elim
A |- (!P. (((P T) /\ (P F)) ==> (!x. (P x))))
T c==> c/\ * f0 cT * f0 cF ! * f0 b0
D Ssrbool.predC
A |- (!p. ((predC p) = (\x. (~ (p x)))))
T c= * part cpredC f0 / c~ * f0 b0
D Seq.cat
A |- (!x. (!t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))))))
T c/\ c= ccat cNIL f0 f0 c= ccat cCONS f1 f2 f0 cCONS f1 ccat f2 f0
D Seq.cat1s
A |- (!x. (!s. (((cat ((CONS x) NIL)) s) = ((CONS x) s))))
T c= ccat cCONS f0 cNIL f1 cCONS f0 f1
D Seq.filter
A |- (!a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))))))
T c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
D Seq.perm_eq_refl
A |- (!s. ((perm_eq s) s))
T cperm_eq f0 f0
D Seq.perm_eqlP
A |- (!s1. (!s2. (((perm_eq s1) s2) = (!s. (((perm_eq s1) s) = ((perm_eq s2) s))))))
T c= cperm_eq f0 f1 ! c= cperm_eq f0 b0 cperm_eq f1 b0
D Seq.perm_cons
A |- (!x. (!s1. (!s2. (((perm_eq ((CONS x) s1)) ((CONS x) s2)) = ((perm_eq s1) s2)))))
T c= cperm_eq cCONS f0 f1 cCONS f0 f2 cperm_eq f1 f2
D Seq.perm_catCA
A |- (!s1. (!s2. (!s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s))))))
T c= cperm_eq ccat f0 ccat f1 f2 f3 cperm_eq ccat f1 ccat f0 f2 f3
+ |- ((((perm_eq ((cat ((filter a) NIL)) ((filter (predC a)) NIL))) NIL) /\ (!a0. (!a1. (((perm_eq ((cat ((filter a) a1)) ((filter (predC a)) a1))) a1) ==> ((perm_eq ((cat ((filter a) ((CONS a0) a1))) ((filter (predC a)) ((CONS a0) a1)))) ((CONS a0) a1)))))) ==> (!s. ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s)))
T c==> c/\ cperm_eq ccat cfilter f0 cNIL cfilter * part cpredC f0 cNIL cNIL ! ! c==> cperm_eq ccat cfilter f0 b1 cfilter * part cpredC f0 b1 b1 cperm_eq ccat cfilter f0 cCONS b0 b1 cfilter * part cpredC f0 cCONS b0 b1 cCONS b0 b1 ! cperm_eq ccat cfilter f0 b0 cfilter * part cpredC f0 b0 b0
+ (((cat ((CONS x) NIL)) s) = ((CONS x) s)) |- (((CONS x) s) = ((cat ((CONS x) NIL)) s))
T c==> c= ccat cCONS f0 cNIL f1 cCONS f0 f1 c= cCONS f0 f1 ccat cCONS f0 cNIL f1
- |- ((\g'. (!t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c~ * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter / c~ * f0 b3 f2 b1 c==> c==> c~ b0 c= cfilter / c~ * f0 b3 f2 b2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b3 f2 cfilter / c~ * f0 b3 f2 cCOND b0 b1 b2 f3
+ |- (((!a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) ==> ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a)) = ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a))
T c= c==> ! ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0 * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
+ |- ((\s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2))))) s2)
T * / c/\ c= ccat cNIL b0 b0 c= ccat cCONS f0 f1 b0 cCONS f0 ccat f1 b0 f2
+ |- (((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s)))
T c= cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCONS f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCONS f1 f2
- ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cT * f0 cF c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
+ |- ((\t. (!s2. ((((cat NIL) s2) = s2) /\ (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))))) t)
T * / ! c/\ c= ccat cNIL b1 b1 c= ccat cCONS f0 b0 b1 cCONS f0 ccat b0 b1 f1
- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x)))) |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c==> c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0 c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
+ |- (((!g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c~ cT b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 f3
+ |- (((perm_eq ((cat NIL) NIL)) NIL) = ((perm_eq ((cat ((filter a) NIL)) ((filter (predC a)) NIL))) NIL))
T c= cperm_eq ccat cNIL cNIL cNIL cperm_eq ccat cfilter f0 cNIL cfilter * part cpredC f0 cNIL cNIL
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((((\x1. ((a x) = x1)) x1) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))) = T)
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c= c==> * / c= * f0 f2 b0 f3 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 cT
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) = (((perm_eq ((cat (((COND T) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) /\ ((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c= cperm_eq ccat cCOND cF cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cF cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 c/\ cperm_eq ccat cCOND cT cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cT cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 cperm_eq ccat cCOND cF cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cF cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
- |- ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)
T * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
- ((a x) = x1) |- ((\x1. ((a x) = x1)) x1)
T c==> c= * f0 f1 f2 * / c= * f0 f1 b0 f2
+ ((!s. (((perm_eq s1) s) = ((perm_eq s2) s))) = ((perm_eq s1) s2)) |- (((perm_eq s1) s2) = (!s. (((perm_eq s1) s) = ((perm_eq s2) s))))
T c==> c= ! c= cperm_eq f0 b0 cperm_eq f1 b0 cperm_eq f0 f1 c= cperm_eq f0 f1 ! c= cperm_eq f0 b0 cperm_eq f1 b0
+ |- (((~ F) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND F) ((CONS x) ((filter (predC a)) s))) e')))
T c==> c==> c~ cF c= cfilter * part cpredC f0 f1 f2 c= cCOND c~ cT cCONS f3 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCOND cF cCONS f3 cfilter * part cpredC f0 f1 f2
+ |- ((((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = ((filter (\x. (~ (a x)))) s))) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) = ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s))))
T c= c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 c= cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 c= cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2
+ |- ((\t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 b0 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b1 c= cCOND c~ cF cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 b0 b1 f4
- ((a x) = x1) |- (((a x) = x1) /\ (?x1. ((a x) = x1)))
T c==> c= * f0 f1 f2 c/\ c= * f0 f1 f2 c? / c= * f0 f1 b0
+ |- ((((perm_eq ((cat (((COND T) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) /\ ((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))) ==> (!x1. ((perm_eq ((cat (((COND x1) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ x1)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))))
T c==> c/\ cperm_eq ccat cCOND cT cCONS f0 cfilter f1 f2 cfilter f1 f2 cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCONS f0 f2 cperm_eq ccat cCOND cF cCONS f0 cfilter f1 f2 cfilter f1 f2 cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCONS f0 f2 ! cperm_eq ccat cCOND b0 cCONS f0 cfilter f1 f2 cfilter f1 f2 cCOND c~ b0 cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCONS f0 f2
+ |- (((!s1. (!s2. (((perm_eq ((CONS x) s1)) ((CONS x) s2)) = ((perm_eq s1) s2)))) ==> ((\s1. (!s2. (((perm_eq ((CONS x) s1)) ((CONS x) s2)) = ((perm_eq s1) s2)))) s1)) = ((\s1. (!s2. (((perm_eq ((CONS x) s1)) ((CONS x) s2)) = ((perm_eq s1) s2)))) s1))
T c= c==> ! ! c= cperm_eq cCONS f0 b0 cCONS f0 b1 cperm_eq b0 b1 * / ! c= cperm_eq cCONS f0 b0 cCONS f0 b1 cperm_eq b0 b1 f1 * / ! c= cperm_eq cCONS f0 b0 cCONS f0 b1 cperm_eq b0 b1 f1
+ |- ((!a1. (((perm_eq ((cat ((filter a) a1)) ((filter (predC a)) a1))) a1) ==> ((perm_eq ((cat ((filter a) ((CONS x) a1))) ((filter (predC a)) ((CONS x) a1)))) ((CONS x) a1)))) = T)
T c= ! c==> cperm_eq ccat cfilter f0 b0 cfilter * part cpredC f0 b0 b0 cperm_eq ccat cfilter f0 cCONS f1 b0 cfilter * part cpredC f0 cCONS f1 b0 cCONS f1 b0 cT
+ |- ((~ T) ==> (((filter (predC a)) s) = ((filter (predC a)) s)))
T c==> c~ cT c= cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1
+ |- (((cat ((CONS x) t)) s2) = ((CONS x) ((cat t) s2)))
T c= ccat cCONS f0 f1 f2 cCONS f0 ccat f1 f2
- |- (((!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))) ==> ((\e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))) e')) = ((\e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 f4 c==> c==> c~ f2 c= cfilter f0 f3 b0 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 f4 b0 * / c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 f4 c==> c==> c~ f2 c= cfilter f0 f3 b0 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 f4 b0 f5 * / c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 f4 c==> c==> c~ f2 c= cfilter f0 f3 b0 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 f4 b0 f5
+ |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ |- ((?s1. (s = s1)) ==> ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))
T c==> c? / c= f0 b0 cperm_eq ccat cfilter f1 f0 cfilter * part cpredC f1 f0 f0
+ |- ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))
T c==> c= * / c~ * f0 b0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b0 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b0 f3 f5 c= cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f3 cfilter / c~ * f0 b0 f3 cCOND f2 f4 f5
+ |- ((\x. (~ (p x))) = (predC p))
T c= / c~ * f0 b0 * part cpredC f0
- |- (((a x) = x1) = ((\x1. ((a x) = x1)) x1))
T c= c= * f0 f1 f2 * / c= * f0 f1 b0 f2
- ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (T = ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c= cT cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
+ |- ((perm_eq ((cat NIL) NIL)) NIL)
T cperm_eq ccat cNIL cNIL cNIL
+ (s = s1) |- (((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s1))) s1) = ((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s1))) s))
T c==> c= f0 f1 c= cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f1 f1 cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f1 f0
+ |- (((?x1. ((a x) = x1)) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c= c==> c? / c= * f0 f1 b0 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter * part cpredC f0 f2 cCONS f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter * part cpredC f0 f2 cCONS f1 f2
+ |- ((F ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ F) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND F) t') e'))))
T c==> c==> cF c= cCONS f0 cfilter * part cpredC f1 f2 f3 c==> c==> c~ cF c= cfilter * part cpredC f1 f2 f4 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND cF f3 f4
- |- (((!t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 * / ! c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 f4 * / ! c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 f4
- |- (!s1. (((\s1. (s = s1)) s1) ==> (?s1. (s = s1))))
T c==> * / c= f0 b0 f1 c? / c= f0 b0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND cF cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cF cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- (((!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) ==> ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5 * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5
+ |- ((\s1. (s = s1)) s)
T * / c= f0 b0 f0
+ |- (((!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) ==> ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s')) = ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s'))
T c= c==> ! c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2 * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
+ |- ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cF cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5
+ |- (((~ T) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND T) ((CONS x) ((filter (predC a)) s))) e')))
T c==> c==> c~ cT c= cfilter * part cpredC f0 f1 f2 c= cCOND c~ cF cCONS f3 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCOND cT cCONS f3 cfilter * part cpredC f0 f1 f2
+ (~ (a x)) |- ((~ (a x)) /\ (((CONS x) ((filter (\x. (~ (a x)))) s)) = ((CONS x) ((filter (\x. (~ (a x)))) s))))
T c==> c~ * f0 f1 c/\ c~ * f0 f1 c= cCONS f1 cfilter / c~ * f0 b0 f2 cCONS f1 cfilter / c~ * f0 b0 f2
+ |- (((!s1. (!s2. (!s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))))) ==> ((\s1. (!s2. (!s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))))) s1)) = ((\s1. (!s2. (!s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))))) s1))
T c= c==> ! ! ! ! c= cperm_eq ccat b0 ccat b1 b2 b3 cperm_eq ccat b1 ccat b0 b2 b3 * / ! ! ! c= cperm_eq ccat b0 ccat b1 b2 b3 cperm_eq ccat b1 ccat b0 b2 b3 f0 * / ! ! ! c= cperm_eq ccat b0 ccat b1 b2 b3 cperm_eq ccat b1 ccat b0 b2 b3 f0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND * / c~ * f0 b0 f2 cCONS f2 cfilter / c~ * f0 b0 f1 cfilter / c~ * f0 b0 f1 cCONS f2 f1
+ |- (((!g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 * / ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c~ cF b0 c==> c==> b0 c= cCONS f0 cfilter * part cpredC f1 f2 b1 c==> c==> c~ b0 c= cfilter * part cpredC f1 f2 b2 c= cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND b0 b1 b2 f3
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND T) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND cT cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cT cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ |- (((!t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 b0 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b1 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 b0 b1 * / ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 b0 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b1 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 b0 b1 f4 * / ! c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 b0 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b1 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 b0 b1 f4
+ (s = s1) |- (((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s))) s) = ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))
T c==> c= f0 f1 c= cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f0 f0 cperm_eq ccat cfilter f2 f0 cfilter * part cpredC f2 f0 f0
+ |- (((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s)))
T c= cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter / c~ * f0 b0 f2 cCONS f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCONS f1 f2
+ ((a x) = x1), ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((a x) = x1) /\ ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> c= * f0 f1 f2 c==> cperm_eq ccat cfilter f0 f3 cfilter * part cpredC f0 f3 f3 c/\ c= * f0 f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f3 cfilter * part cpredC f0 f3 cCONS f1 f3
+ |- (((((perm_eq ((cat ((filter a) NIL)) ((filter (predC a)) NIL))) NIL) /\ (!a0. (!a1. (((perm_eq ((cat ((filter a) a1)) ((filter (predC a)) a1))) a1) ==> ((perm_eq ((cat ((filter a) ((CONS a0) a1))) ((filter (predC a)) ((CONS a0) a1)))) ((CONS a0) a1)))))) ==> (!s. ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))) = (!s. ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s)))
T c= c==> c/\ cperm_eq ccat cfilter f0 cNIL cfilter * part cpredC f0 cNIL cNIL ! ! c==> cperm_eq ccat cfilter f0 b1 cfilter * part cpredC f0 b1 b1 cperm_eq ccat cfilter f0 cCONS b0 b1 cfilter * part cpredC f0 cCONS b0 b1 cCONS b0 b1 ! cperm_eq ccat cfilter f0 b0 cfilter * part cpredC f0 b0 b0 ! cperm_eq ccat cfilter f0 b0 cfilter * part cpredC f0 b0 b0
+ |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)) = ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
+ |- ((\g'. (!t'. (!e'. ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= * / c~ * f0 b3 f1 b0 c==> c==> b0 c= cCONS f1 cfilter / c~ * f0 b3 f2 b1 c==> c==> c~ b0 c= cfilter / c~ * f0 b3 f2 b2 c= cCOND * / c~ * f0 b3 f1 cCONS f1 cfilter / c~ * f0 b3 f2 cfilter / c~ * f0 b3 f2 cCOND b0 b1 b2 f3
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
+ |- (((!t'. (!e'. ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= * / c~ * f0 b2 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND * / c~ * f0 b2 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 * / ! c==> c= * / c~ * f0 b2 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND * / c~ * f0 b2 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 f4 * / ! c==> c= * / c~ * f0 b2 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND * / c~ * f0 b2 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 f4
- T |- (T = T)
T c==> cT c= cT cT
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s), ((\x1. ((a x) = x1)) x1) |- (((\x1. ((a x) = x1)) x1) /\ ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c==> * / c= * f0 f2 b0 f3 c/\ * / c= * f0 f2 b0 f3 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((\x1. ((a x) = x1)) x1) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c==> * / c= * f0 f2 b0 f3 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- ((\s1. (!s2. (((perm_eq ((CONS x) s1)) ((CONS x) s2)) = ((perm_eq s1) s2)))) s1)
T * / ! c= cperm_eq cCONS f0 b0 cCONS f0 b1 cperm_eq b0 b1 f1
+ |- ((\s1. (!s2. ((!s. (((perm_eq s1) s) = ((perm_eq s2) s))) = ((perm_eq s1) s2)))) s1)
T * / ! c= ! c= cperm_eq b0 b2 cperm_eq b1 b2 cperm_eq b0 b1 f0
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (!x. (P x))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF ! * f0 b0
+ |- ((\e'. ((((\x. (~ (a x))) x) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))) e')
T * / c==> c= * / c~ * f0 b1 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b1 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b1 f3 b0 c= cCOND * / c~ * f0 b1 f1 cCONS f1 cfilter / c~ * f0 b1 f3 cfilter / c~ * f0 b1 f3 cCOND f2 f4 b0 f5
+ |- (((!x. (((\s1. (s = s1)) x) ==> ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))) ==> ((?s1. (s = s1)) ==> ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))) = ((?s1. (s = s1)) ==> ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s)))
T c= c==> ! c==> * / c= f0 b1 b0 cperm_eq ccat cfilter f1 f0 cfilter * part cpredC f1 f0 f0 c==> c? / c= f0 b0 cperm_eq ccat cfilter f1 f0 cfilter * part cpredC f1 f0 f0 c==> c? / c= f0 b0 cperm_eq ccat cfilter f1 f0 cfilter * part cpredC f1 f0 f0
+ |- ((\s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s))) s)
T * / c= cperm_eq ccat f0 ccat f1 f2 b0 cperm_eq ccat f1 ccat f0 f2 b0 f3
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND x1) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ x1)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND f2 cCONS f3 cfilter f0 f1 cfilter f0 f1 cCOND c~ f2 cCONS f3 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f3 f1
+ |- (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s')))
T c= cfilter f0 cCONS f1 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
+ (s = s1) |- (((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s1))) s) = ((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s))) s))
T c==> c= f0 f1 c= cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f1 f0 cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f0 f0
+ |- ((\p. ((\x. (~ (p x))) = (predC p))) p)
T * / c= / c~ * b0 b1 * part cpredC b0 f0
+ |- (((!e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) ==> ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ F) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cF cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cF cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5 * / c==> c= c~ cF f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cF cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5
+ T |- (T /\ (((CONS x) ((filter (predC a)) s)) = ((CONS x) ((filter (predC a)) s))))
T c==> cT c/\ cT c= cCONS f0 cfilter * part cpredC f1 f2 cCONS f0 cfilter * part cpredC f1 f2
+ |- ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s)
T cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1
- |- ((\t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b2 f3 b0 c==> c==> c~ f2 c= cfilter / c~ * f0 b2 f3 b1 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b2 f3 cfilter / c~ * f0 b2 f3 cCOND f2 b0 b1 f4
- |- ((s = s1) = ((\s1. (s = s1)) s1))
T c= c= f0 f1 * / c= f0 b0 f1
+ ((\x1. ((a x) = x1)) x1) |- ((a x) = x1)
T c==> * / c= * f0 f1 b0 f2 c= * f0 f1 f2
- |- ((((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = ((filter (\x. (~ (a x)))) s))) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) = ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s))))
T c= c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2
+ |- (T ==> (((CONS x) ((filter (predC a)) s)) = ((CONS x) ((filter (predC a)) s))))
T c==> cT c= cCONS f0 cfilter * part cpredC f1 f2 cCONS f0 cfilter * part cpredC f1 f2
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (predC a)) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c= cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter * part cpredC f0 f2 cCONS f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter * part cpredC f0 f2 cCONS f1 f2
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter / c~ * f0 b0 f1 cfilter / c~ * f0 b0 f1 cCONS f2 f1
+ |- ((!s'. (((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s') = ((perm_eq s) s'))) = T)
T c= ! c= cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 b0 cperm_eq f1 b0 cT
- |- (((a x) = x1) ==> (?x1. ((a x) = x1)))
T c==> c= * f0 f1 f2 c? / c= * f0 f1 b0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND * / c~ * f0 b0 f2 cCONS f2 cfilter / c~ * f0 b0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- (((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (\x. (~ (a x)))) s)))) ((CONS x) s)))
T c= cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter * part cpredC f0 f2 cCONS f1 f2 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f2 cfilter / c~ * f0 b0 f2 cCONS f1 f2
- ((\x1. ((a x) = x1)) x1) |- ((((a x) = x1) ==> (?x1. ((a x) = x1))) = (?x1. ((a x) = x1)))
T c==> * / c= * f0 f1 b0 f2 c= c==> c= * f0 f1 f2 c? / c= * f0 f1 b0 c? / c= * f0 f1 b0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((CONS x) ((cat ((filter a) s)) ((filter (predC a)) s)))) ((CONS x) s))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cperm_eq cCONS f2 ccat cfilter f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
- |- (((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))) = (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
+ |- ((\a. (!x. (!s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))))) a)
T * / ! ! c/\ c= cfilter b0 cNIL cNIL c= cfilter b0 cCONS b1 b2 cCOND * b0 b1 cCONS b1 cfilter b0 b2 cfilter b0 b2 f0
+ |- ((((COND ((\x. (~ (a x))) x)) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))
T c= cCOND * / c~ * f0 b0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))), ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c/\ c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
- |- (((!g'. (!t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c~ * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter / c~ * f0 b3 f2 b1 c==> c==> c~ b0 c= cfilter / c~ * f0 b3 f2 b2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b3 f2 cfilter / c~ * f0 b3 f2 cCOND b0 b1 b2 * / ! ! c==> c= c~ * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter / c~ * f0 b3 f2 b1 c==> c==> c~ b0 c= cfilter / c~ * f0 b3 f2 b2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b3 f2 cfilter / c~ * f0 b3 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= c~ * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter / c~ * f0 b3 f2 b1 c==> c==> c~ b0 c= cfilter / c~ * f0 b3 f2 b2 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b3 f2 cfilter / c~ * f0 b3 f2 cCOND b0 b1 b2 f3
+ |- (((cat NIL) s2) = s2)
T c= ccat cNIL f0 f0
- ((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!x. (P x)))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! * f0 b0
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((!x. (((\x1. ((a x) = x1)) x) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))) ==> ((?x1. ((a x) = x1)) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))) = ((?x1. ((a x) = x1)) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c= c==> ! c==> * / c= * f0 f2 b1 b0 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 c==> c? / c= * f0 f2 b0 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 c==> c? / c= * f0 f2 b0 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- (((perm_eq NIL) NIL) = ((perm_eq ((cat NIL) NIL)) NIL))
T c= cperm_eq cNIL cNIL cperm_eq ccat cNIL cNIL cNIL
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((?x1. ((a x) = x1)) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c==> c? / c= * f0 f2 b0 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
- |- ((\e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b1 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b1 f3 b0 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b1 f3 cfilter / c~ * f0 b1 f3 cCOND f2 f4 b0 f5
+ |- ((\s'. ((((filter a) NIL) = NIL) /\ (((filter a) ((CONS x) s')) = (((COND (a x)) ((CONS x) ((filter a) s'))) ((filter a) s'))))) s')
T * / c/\ c= cfilter f0 cNIL cNIL c= cfilter f0 cCONS f1 b0 cCOND * f0 f1 cCONS f1 cfilter f0 b0 cfilter f0 b0 f2
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
+ |- (((perm_eq ((cat ((filter a) s)) ((CONS x) ((filter (predC a)) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c= cperm_eq ccat cfilter f0 f1 cCONS f2 cfilter * part cpredC f0 f1 cCONS f2 f1 cperm_eq ccat cCOND cF cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cF cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- ((\s2. ((!s. (((perm_eq s1) s) = ((perm_eq s2) s))) = ((perm_eq s1) s2))) s2)
T * / c= ! c= cperm_eq f0 b1 cperm_eq b0 b1 cperm_eq f0 b0 f1
+ ((\s1. (s = s1)) s1) |- (((s = s1) ==> ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s)) = ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 cperm_eq ccat cfilter f2 f0 cfilter * part cpredC f2 f0 f0 cperm_eq ccat cfilter f2 f0 cfilter * part cpredC f2 f0 f0
+ |- ((\P. (((P T) /\ (P F)) ==> (!x. (P x)))) P)
T * / c==> c/\ * b0 cT * b0 cF ! * b0 b1 f0
- |- ((?s1. (s = s1)) ==> (?s1. (s = s1)))
T c==> c? / c= f0 b0 c? / c= f0 b0
+ |- (((!s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))) ==> ((\s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))) s3)) = ((\s3. (!s. (((perm_eq ((cat s1) ((cat s2) s3))) s) = ((perm_eq ((cat s2) ((cat s1) s3))) s)))) s3))
T c= c==> ! ! c= cperm_eq ccat f0 ccat f1 b0 b1 cperm_eq ccat f1 ccat f0 b0 b1 * / ! c= cperm_eq ccat f0 ccat f1 b0 b1 cperm_eq ccat f1 ccat f0 b0 b1 f2 * / ! c= cperm_eq ccat f0 ccat f1 b0 b1 cperm_eq ccat f1 ccat f0 b0 b1 f2
+ |- (((F ==> (((CONS x) ((filter (predC a)) s)) = ((CONS x) ((filter (predC a)) s)))) ==> (((~ F) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND F) ((CONS x) ((filter (predC a)) s))) e')))) = (((~ F) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND F) ((CONS x) ((filter (predC a)) s))) e'))))
T c= c==> c==> cF c= cCONS f0 cfilter * part cpredC f1 f2 cCONS f0 cfilter * part cpredC f1 f2 c==> c==> c~ cF c= cfilter * part cpredC f1 f2 f3 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND cF cCONS f0 cfilter * part cpredC f1 f2 f3 c==> c==> c~ cF c= cfilter * part cpredC f1 f2 f3 c= cCOND c~ cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND cF cCONS f0 cfilter * part cpredC f1 f2 f3
- |- ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)
T * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((\P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) P)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 * / c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 f0
- |- ((((~ (a x)) ==> (((filter a) s) = ((filter a) s))) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)))) = ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))))
T c= c==> c==> c~ * f0 f1 c= cfilter f0 f2 cfilter f0 f2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
- (s = s1) |- ((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s1))) s1)
T c==> c= f0 f1 cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f1 f1
- (s = s1) |- (s1 = s)
T c==> c= f0 f1 c= f1 f0
- ((a x) = x1), ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- ((perm_eq ((cat (((COND x1) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ x1)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))
T c==> c= * f0 f1 f2 c==> cperm_eq ccat cfilter f0 f3 cfilter * part cpredC f0 f3 f3 cperm_eq ccat cCOND f2 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND c~ f2 cCONS f1 cfilter * part cpredC f0 f3 cfilter * part cpredC f0 f3 cCONS f1 f3
+ |- ((T ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ T) ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND T) t') e'))))
T c==> c==> cT c= cCONS f0 cfilter * part cpredC f1 f2 f3 c==> c==> c~ cT c= cfilter * part cpredC f1 f2 f4 c= cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND cT f3 f4
+ |- (((CONS x) s) = ((cat ((CONS x) NIL)) s))
T c= cCONS f0 f1 ccat cCONS f0 cNIL f1
- F |- (F = T)
T c==> cF c= cF cT
- |- (((!g'. (!t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter f0 f2 b1 c==> c==> c~ b0 c= cfilter f0 f2 b2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND b0 b1 b2 * / ! ! c==> c= * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter f0 f2 b1 c==> c==> c~ b0 c= cfilter f0 f2 b2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND b0 b1 b2 f3 * / ! ! c==> c= * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter f0 f2 b1 c==> c==> c~ b0 c= cfilter f0 f2 b2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND b0 b1 b2 f3
+ |- ((\e'. (((~ T) = g') ==> ((g' ==> (((CONS x) ((filter (predC a)) s)) = t')) ==> (((~ g') ==> (((filter (predC a)) s) = e')) ==> ((((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND g') t') e')))))) e')
T * / c==> c= c~ cT f0 c==> c==> f0 c= cCONS f1 cfilter * part cpredC f2 f3 f4 c==> c==> c~ f0 c= cfilter * part cpredC f2 f3 b0 c= cCOND c~ cT cCONS f1 cfilter * part cpredC f2 f3 cfilter * part cpredC f2 f3 cCOND f0 f4 b0 f5
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (!x1. (((\x1. ((a x) = x1)) x1) ==> ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s))))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 ! c==> * / c= * f0 f2 b1 b0 cperm_eq ccat cCOND * f0 f2 cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ * f0 f2 cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- ((\s. (((CONS x) s) = ((cat ((CONS x) NIL)) s))) s)
T * / c= cCONS f0 b0 ccat cCONS f0 cNIL b0 f1
+ |- (((perm_eq s) s) = T)
T c= cperm_eq f0 f0 cT
+ ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((perm_eq ((cat (((COND T) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ T)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) /\ ((perm_eq ((cat (((COND F) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c/\ cperm_eq ccat cCOND cT cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cT cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1 cperm_eq ccat cCOND cF cCONS f2 cfilter f0 f1 cfilter f0 f1 cCOND c~ cF cCONS f2 cfilter * part cpredC f0 f1 cfilter * part cpredC f0 f1 cCONS f2 f1
+ |- ((perm_eq ((cat ((filter a) NIL)) ((filter (predC a)) NIL))) NIL)
T cperm_eq ccat cfilter f0 cNIL cfilter * part cpredC f0 cNIL cNIL
- ((\s1. (s = s1)) s1) |- (((s = s1) ==> (?s1. (s = s1))) = (?s1. (s = s1)))
T c==> * / c= f0 b0 f1 c= c==> c= f0 f1 c? / c= f0 b0 c? / c= f0 b0
+ |- ((((COND (~ F)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)) = (((COND T) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))
T c= cCOND c~ cF cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2 cCOND cT cCONS f0 cfilter * part cpredC f1 f2 cfilter * part cpredC f1 f2
- |- (((!x. (((\x1. ((a x) = x1)) x) ==> (?x1. ((a x) = x1)))) ==> ((?x1. ((a x) = x1)) ==> (?x1. ((a x) = x1)))) = ((?x1. ((a x) = x1)) ==> (?x1. ((a x) = x1))))
T c= c==> ! c==> * / c= * f0 f1 b1 b0 c? / c= * f0 f1 b1 c==> c? / c= * f0 f1 b0 c? / c= * f0 f1 b0 c==> c? / c= * f0 f1 b0 c? / c= * f0 f1 b0
+ |- (((perm_eq ((cat ((filter a) s)) ((cat ((CONS x) NIL)) ((filter (predC a)) s)))) ((CONS x) s)) = ((perm_eq ((cat ((filter a) s)) ((CONS x) ((filter (predC a)) s)))) ((CONS x) s)))
T c= cperm_eq ccat cfilter f0 f1 ccat cCONS f2 cNIL cfilter * part cpredC f0 f1 cCONS f2 f1 cperm_eq ccat cfilter f0 f1 cCONS f2 cfilter * part cpredC f0 f1 cCONS f2 f1
- |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) ==> (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- |- (((!t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 b0 c==> c==> c~ f2 c= cfilter f0 f3 b1 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 b0 b1 * / ! c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 b0 c==> c==> c~ f2 c= cfilter f0 f3 b1 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 b0 b1 f4 * / ! c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 b0 c==> c==> c~ f2 c= cfilter f0 f3 b1 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 b0 b1 f4
- (~ (a x)) |- ((a x) = F)
T c==> c~ * f0 f1 c= * f0 f1 cF
- ((a x) = x1) |- (((perm_eq ((cat (((COND x1) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ x1)) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)) = ((perm_eq ((cat (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s))) (((COND (~ (a x))) ((CONS x) ((filter (predC a)) s))) ((filter (predC a)) s)))) ((CONS x) s)))
T c==> c= * f0 f1 f2 c= cperm_eq ccat cCOND f2 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND c~ f2 cCONS f1 cfilter * part cpredC f0 f3 cfilter * part cpredC f0 f3 cCONS f1 f3 cperm_eq ccat cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND c~ * f0 f1 cCONS f1 cfilter * part cpredC f0 f3 cfilter * part cpredC f0 f3 cCONS f1 f3
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((((P T) /\ (P F)) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c= c==> c/\ * f0 cT * f0 cF ! * f0 b0 cT
- |- (((!P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) ==> ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P)) = ((\P. (!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))))) P))
T c= c==> ! ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0 * / ! c= c==> b0 ! * b1 b2 ! c==> b0 * b1 b2 f0
- (s = s1) |- ((s = s1) /\ (?s1. (s = s1)))
T c==> c= f0 f1 c/\ c= f0 f1 c? / c= f0 b0
- ((\s1. (s = s1)) s1) |- (((\s1. (s = s1)) s1) /\ (?s1. (s = s1)))
T c==> * / c= f0 b0 f1 c/\ * / c= f0 b0 f1 c? / c= f0 b0
- (a x) |- ((a x) /\ (((CONS x) ((filter a) s)) = ((CONS x) ((filter a) s))))
T c==> * f0 f1 c/\ * f0 f1 c= cCONS f1 cfilter f0 f2 cCONS f1 cfilter f0 f2
- |- ((a x) ==> (((CONS x) ((filter a) s)) = ((CONS x) ((filter a) s))))
T c==> * f0 f1 c= cCONS f1 cfilter f0 f2 cCONS f1 cfilter f0 f2
- |- ((((a x) ==> (((CONS x) ((filter a) s)) = ((CONS x) ((filter a) s)))) ==> (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) e')))) = (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) e'))))
T c= c==> c==> * f0 f1 c= cCONS f1 cfilter f0 f2 cCONS f1 cfilter f0 f2 c==> c==> c~ * f0 f1 c= cfilter f0 f2 f3 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 f3 c==> c==> c~ * f0 f1 c= cfilter f0 f2 f3 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 f3
- |- ((~ (a x)) ==> (((filter a) s) = ((filter a) s)))
T c==> c~ * f0 f1 c= cfilter f0 f2 cfilter f0 f2
- |- (((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x))))) = (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c= c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((\e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))) e')
T * / c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 f4 c==> c==> c~ f2 c= cfilter f0 f3 b0 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 f4 b0 f5
- |- ((((~ (a x)) = (~ (a x))) ==> (((~ (a x)) ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) t') e'))))) = (((~ (a x)) ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) t') e')))))
T c= c==> c= c~ * f0 f1 c~ * f0 f1 c==> c==> c~ * f0 f1 c= cCONS f1 cfilter / c~ * f0 b0 f2 f3 c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f4 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 f3 f4 c==> c==> c~ * f0 f1 c= cCONS f1 cfilter / c~ * f0 b0 f2 f3 c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f4 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 f3 f4
- |- (((!e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))) ==> ((\e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))) e')) = ((\e'. (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b1 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b1 f3 b0 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b1 f3 cfilter / c~ * f0 b1 f3 cCOND f2 f4 b0 * / c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b1 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b1 f3 b0 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b1 f3 cfilter / c~ * f0 b1 f3 cCOND f2 f4 b0 f5 * / c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b1 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b1 f3 b0 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b1 f3 cfilter / c~ * f0 b1 f3 cCOND f2 f4 b0 f5
- (s = s1) |- (((perm_eq ((cat ((filter a) s1)) ((filter (predC a)) s1))) s1) = ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s))
T c==> c= f0 f1 c= cperm_eq ccat cfilter f2 f1 cfilter * part cpredC f2 f1 f1 cperm_eq ccat cfilter f2 f0 cfilter * part cpredC f2 f0 f0
- |- (((!x. (((\s1. (s = s1)) x) ==> (?s1. (s = s1)))) ==> ((?s1. (s = s1)) ==> (?s1. (s = s1)))) = ((?s1. (s = s1)) ==> (?s1. (s = s1))))
T c= c==> ! c==> * / c= f0 b1 b0 c? / c= f0 b1 c==> c? / c= f0 b0 c? / c= f0 b0 c==> c? / c= f0 b0 c? / c= f0 b0
- |- ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)))
T c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2
- |- (!x1. (((\x1. ((a x) = x1)) x1) ==> (?x1. ((a x) = x1))))
T c==> * / c= * f0 f1 b0 f2 c? / c= * f0 f1 b0
- |- (((~ (a x)) = g') ==> ((g' ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ g') ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND g') t') e')))))
T c==> c= c~ * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter / c~ * f0 b0 f3 f4 c==> c==> c~ f2 c= cfilter / c~ * f0 b0 f3 f5 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f3 cfilter / c~ * f0 b0 f3 cCOND f2 f4 f5
- |- ((?x1. ((a x) = x1)) ==> (?x1. ((a x) = x1)))
T c==> c? / c= * f0 f1 b0 c? / c= * f0 f1 b0
- (~ (~ (a x))) |- ((~ (a x)) = F)
T c==> c~ c~ * f0 f1 c= c~ * f0 f1 cF
- |- (((a x) ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) t') e'))))
T c==> c==> * f0 f1 c= cCONS f1 cfilter f0 f2 f3 c==> c==> c~ * f0 f1 c= cfilter f0 f2 f4 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 f3 f4
- |- ((s = s1) ==> (?s1. (s = s1)))
T c==> c= f0 f1 c? / c= f0 b0
- |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) ==> (!P. (((P T) /\ (P F)) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! c==> c/\ * b0 cT * b0 cF ! * b0 b1
- |- ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)))
T c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- (((P T) /\ (P F)) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ c/\ * f0 cT * f0 cF ! * f0 b0
- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x)))) |- ((!x. (P ==> (Q x))) = (P ==> (!x. (Q x))))
T c==> c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0 c= ! c==> f0 * f1 b0 c==> f0 ! * f1 b0
- ((a x) = x1) |- (x1 = (a x))
T c==> c= * f0 f1 f2 c= f2 * f0 f1
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))) = T)
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c= c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0 cT
- |- ((((~ (a x)) ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = ((CONS x) ((filter (\x. (~ (a x)))) s)))) ==> (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) e')))) = (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) e'))))
T c= c==> c==> c~ * f0 f1 c= cCONS f1 cfilter / c~ * f0 b0 f2 cCONS f1 cfilter / c~ * f0 b0 f2 c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f3 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 f3 c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f3 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 f3
- |- ((\g'. (!t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= * f0 f1 b0 c==> c==> b0 c= cCONS f1 cfilter f0 f2 b1 c==> c==> c~ b0 c= cfilter f0 f2 b2 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND b0 b1 b2 f3
- (s = s1) |- ((\s1. (s = s1)) s1)
T c==> c= f0 f1 * / c= f0 b0 f1
- |- ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))
T c= c==> f0 ! * f1 b0 ! c==> f0 * f1 b0
- (~ T) |- (T = F)
T c==> c~ cT c= cT cF
- |- ((((\x1. ((a x) = x1)) x1) ==> (?x1. ((a x) = x1))) = T)
T c= c==> * / c= * f0 f1 b0 f2 c? / c= * f0 f1 b0 cT
- ((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) |- (((perm_eq ((cat ((filter a) s)) ((filter (predC a)) s))) s) = T)
T c==> cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 c= cperm_eq ccat cfilter f0 f1 cfilter * part cpredC f0 f1 f1 cT
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- (!P. (((P T) /\ (P F)) ==> (!x. (P x)))), ((P T) /\ (P F)) |- ((!P. (((P T) /\ (P F)) ==> (!x. (P x)))) /\ (!x. (P x)))
T c==> ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 c==> c/\ * f0 cT * f0 cF c/\ ! c==> c/\ * b0 cT * b0 cF ! * b0 b1 ! * f0 b0
- |- (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) ((CONS x) ((filter a) s))) e')))
T c==> c==> c~ * f0 f1 c= cfilter f0 f2 f3 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 cCONS f1 cfilter f0 f2 f3
- |- (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) e')))
T c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f3 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 f3
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((a x) = (a x)) ==> (((a x) ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) t') e'))))) = (((a x) ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ (a x)) ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND (a x)) t') e')))))
T c= c==> c= * f0 f1 * f0 f1 c==> c==> * f0 f1 c= cCONS f1 cfilter f0 f2 f3 c==> c==> c~ * f0 f1 c= cfilter f0 f2 f4 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 f3 f4 c==> c==> * f0 f1 c= cCONS f1 cfilter f0 f2 f3 c==> c==> c~ * f0 f1 c= cfilter f0 f2 f4 c= cCOND * f0 f1 cCONS f1 cfilter f0 f2 cfilter f0 f2 cCOND * f0 f1 f3 f4
- (~ (a x)) |- ((~ (a x)) /\ (((filter a) s) = ((filter a) s)))
T c==> c~ * f0 f1 c/\ c~ * f0 f1 c= cfilter f0 f2 cfilter f0 f2
- |- (((!Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) ==> ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q)) = ((\Q. ((P ==> (!x. (Q x))) = (!x. (P ==> (Q x))))) Q))
T c= c==> ! c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1 * / c= c==> f0 ! * b0 b1 ! c==> f0 * b0 b1 f1
- |- (((~ (a x)) ==> (((CONS x) ((filter (\x. (~ (a x)))) s)) = t')) ==> (((~ (~ (a x))) ==> (((filter (\x. (~ (a x)))) s) = e')) ==> ((((COND (~ (a x))) ((CONS x) ((filter (\x. (~ (a x)))) s))) ((filter (\x. (~ (a x)))) s)) = (((COND (~ (a x))) t') e'))))
T c==> c==> c~ * f0 f1 c= cCONS f1 cfilter / c~ * f0 b0 f2 f3 c==> c==> c~ c~ * f0 f1 c= cfilter / c~ * f0 b0 f2 f4 c= cCOND c~ * f0 f1 cCONS f1 cfilter / c~ * f0 b0 f2 cfilter / c~ * f0 b0 f2 cCOND c~ * f0 f1 f3 f4
- |- ((\t'. (!e'. (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e'))))))) t')
T * / ! c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 b0 c==> c==> c~ f2 c= cfilter f0 f3 b1 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 b0 b1 f4
- |- ((((\s1. (s = s1)) s1) ==> (?s1. (s = s1))) = T)
T c= c==> * / c= f0 b0 f1 c? / c= f0 b0 cT
- ((\x1. ((a x) = x1)) x1) |- (((\x1. ((a x) = x1)) x1) /\ (?x1. ((a x) = x1)))
T c==> * / c= * f0 f1 b0 f2 c/\ * / c= * f0 f1 b0 f2 c? / c= * f0 f1 b0
- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) |- ((!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))) /\ (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x)))))
T c==> ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 c/\ ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1 ! c==> c/\ * b0 cNIL ! ! c==> * b0 b2 * b0 cCONS b1 b2 ! * b0 b1
- (a x) |- ((a x) = T)
T c==> * f0 f1 c= * f0 f1 cT
- |- (((a x) = g') ==> ((g' ==> (((CONS x) ((filter a) s)) = t')) ==> (((~ g') ==> (((filter a) s) = e')) ==> ((((COND (a x)) ((CONS x) ((filter a) s))) ((filter a) s)) = (((COND g') t') e')))))
T c==> c= * f0 f1 f2 c==> c==> f2 c= cCONS f1 cfilter f0 f3 f4 c==> c==> c~ f2 c= cfilter f0 f3 f5 c= cCOND * f0 f1 cCONS f1 cfilter f0 f3 cfilter f0 f3 cCOND f2 f4 f5
