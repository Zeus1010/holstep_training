N Reduction1.subdivFace0_alt_mem
C |- (!vs. (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((LET (\fg'. (LET_END ((MEM (FST fg')) (faces (SND fg')))))) (((((subdivFace0_alt g) f) r) n) vs))))))))
T c==> cMEM f0 cfaces f1 cLET / cLET_END cMEM cFST b0 cfaces cSND b0 csubdivFace0_alt f1 f0 f2 f3 f4
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D SELECT_AX
A |- (!P. (!x. ((P x) ==> (P (@ P)))))
T c==> * f0 f1 * f0 c@ f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D GABS_DEF
A |- (!P. ((GABS P) = (@ P)))
T c= cGABS f0 c@ f0
D GEQ_DEF
A |- (!a. (!b. (((GEQ a) b) = (a = b))))
T c= cGEQ f0 f1 c= f0 f1
D PAIR_EQ
A |- (!x. (!y. (!a. (!b. (((x , y) = (a , b)) = ((x = a) /\ (y = b)))))))
T c= c= c, f0 f1 c, f2 f3 c/\ c= f0 f2 c= f1 f3
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PAIR
A |- (!x. (((FST x) , (SND x)) = x))
T c= c, cFST f0 cSND f0 f0
D pair_RECURSION
A |- (!PAIR'. (?fn. (!a0. (!a1. ((fn (a0 , a1)) = ((PAIR' a0) a1))))))
T c? / ! ! c= * b0 c, b1 b2 * * f0 b1 b2
D list_INDUCT
A |- (!P. (((P NIL) /\ (!a0. (!a1. ((P a1) ==> (P ((CONS a0) a1)))))) ==> (!x. (P x))))
T c==> c/\ * f0 cNIL ! ! c==> * f0 b1 * f0 cCONS b0 b1 ! * f0 b0
D Tame_defs2.subdivFace0_alt
A |- (((((((subdivFace0_alt g) f) u) n) NIL) = (f , g)) /\ ((((((subdivFace0_alt g) f) u) n) ((CONS vo) vos)) = (((COND (vo = NONE)) (((((subdivFace0_alt g) f) u) (SUC n)) vos)) ((LET (\v. (LET_END (((COND ((((nextVertex f) u) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) vos)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) vos))))))))) (((((splitFace g) u) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the vo)))))
T c/\ c= csubdivFace0_alt f0 f1 f2 f3 cNIL c, f1 f0 c= csubdivFace0_alt f0 f1 f2 f3 cCONS f4 f5 cCOND c= f4 cNONE csubdivFace0_alt f0 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f0 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f0 f2 b0 f1 b1 cupt ccountVertices f0 c+ ccountVertices f0 f3 cthe f4
D Tame_list.MEM_splitFace2
A |- (!g. (!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))))
T c==> cMEM f0 cfaces f1 cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 csplitFace f1 f2 f3 f0 f4
+ |- (((!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) ==> ((\u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) r)) = ((\u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws))))))) r))
T c= c==> ! ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 * / ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 f1 * / ! ! ! c==> cMEM b2 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END cMEM b6 cfaces b7 csplitFace f0 b0 b1 b2 b3 f1
+ ((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) |- (((ws = ((upt (countVertices g)) ((countVertices g) + n))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) = ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> * / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 f2 c= c==> c= f2 cupt ccountVertices f0 c+ ccountVertices f0 f1 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f0 f5 f3 f6 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f0 f5 f3 f6 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f0 f5 f3 f6 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f0 f5 f3 f6 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ |- ((((MEM f) (faces g)) ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (((MEM f) (faces g)) ==> q')))
T c==> c==> cMEM f0 cfaces f1 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 f6 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> cMEM f0 cfaces f1 f6
+ |- (((MEM (FST (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))) = ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g'))))) (faces (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c= cMEM cFST csubdivFace0_alt f0 f1 f2 cNUMERAL c_0 f3 cfaces cSND csubdivFace0_alt f0 f1 f2 cNUMERAL c_0 f3 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f3 c, f4 c, f1 f0 cfaces cSND csubdivFace0_alt f0 f1 f2 cNUMERAL c_0 f3
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((MEM (FST (((((subdivFace0_alt g) f) r) (SUC n)) t))) (faces (SND (((((subdivFace0_alt g) f) r) (SUC n)) t))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 cSUC f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 cSUC f4 f0
+ |- ((a /\ T) = a)
T c= c/\ f0 cT f0
+ |- (((!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q'))))) ==> ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 c==> f2 b0 * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 c==> f2 b0 f7 * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 c==> f2 b0 f7
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) = (~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c~ c/\ c= cnextVertex f6 f4 f5 c= f8 cNUMERAL c_0 c~ c/\ c= cnextVertex f6 f4 f5 c= f8 cNUMERAL c_0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 b0 b1 f0 cfaces cSND csubdivFace0_alt f2 f1 b0 b1 f0
- |- ((\p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = (p' ==> q')))))) p')
T * / ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b2 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f5 csplitFace f1 f3 b2 f0 b3 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b2 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f5 csplitFace f1 f3 b2 f0 b3 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 b1 c= c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b2 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f5 csplitFace f1 f3 b2 f0 b3 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b2 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f5 csplitFace f1 f3 b2 f0 b3 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 c==> b0 b1 f6
- (~ (h = NONE)) |- (((~ (NONE = h)) ==> ((NONE = h) = F)) = ((NONE = h) = F))
T c==> c~ c= f0 cNONE c= c==> c~ c= cNONE f0 c= c= cNONE f0 cF c= c= cNONE f0 cF
+ |- ((T ==> (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n))))) = (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))))
T c= c==> cT c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((~ (h = NONE)) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = (((h = NONE) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) (SUC n)) t))) (faces (SND (((((subdivFace0_alt g) f) r) (SUC n)) t))))) /\ ((~ (h = NONE)) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> c~ c= f3 cNONE cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 c/\ c==> c= f3 cNONE cMEM cFST csubdivFace0_alt f2 f1 f4 cSUC f5 f0 cfaces cSND csubdivFace0_alt f2 f1 f4 cSUC f5 f0 c==> c~ c= f3 cNONE cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3
+ ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) g') |- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c= c, f0 c, f1 f7 csplitFace f2 f3 f4 f5 f6
- (~ (h = NONE)) |- ((NONE = h) = F)
T c==> c~ c= f0 cNONE c= c= cNONE f0 cF
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ |- (((!g'. ((GEQ ((GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) ==> ((\g'. ((GEQ ((GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')) = ((\g'. ((GEQ ((GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g'))
T c= c==> ! cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2 * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! ! c==> cMEM b0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 b0 b1 cSUC b2 f0 cLET / cLET_END cCOND c/\ c= cnextVertex b0 b1 b3 c= b2 cNUMERAL c_0 csubdivFace0_alt f1 b0 b3 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f0 csplitFace f1 b1 b3 b0 b4 cupt ccountVertices f1 c+ ccountVertices f1 b2 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 b0 b1 cSUC b2 f0 cLET / cLET_END cCOND c/\ c= cnextVertex b0 b1 b3 c= b2 cNUMERAL c_0 csubdivFace0_alt f1 b0 b3 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f0 csplitFace f1 b1 b3 b0 b4 cupt ccountVertices f1 c+ ccountVertices f1 b2 cthe f2 cT
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)), ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) g') |- (((\g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) g') /\ ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> * / c= c, f3 c, f4 b0 csplitFace f2 f5 f6 f1 f7 f8 c/\ * / c= c, f3 c, f4 b0 csplitFace f2 f5 f6 f1 f7 f8 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f2 f5 f6 f1 f7 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f2 f5 f6 f1 f7
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c= f3 cupt ccountVertices f2 c+ ccountVertices f2 f4 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f4 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f4
+ |- (((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))))) /\ ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))) = ((MEM (FST (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))) (faces (SND (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c= c/\ c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cMEM cFST csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cfaces cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cMEM cFST cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cfaces cSND cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3
+ |- ((((((subdivFace0_alt g) f) u) n) NIL) = (f , g))
T c= csubdivFace0_alt f0 f1 f2 f3 cNIL c, f1 f0
- |- ((((h = NONE) = (h = NONE)) ==> (((h = NONE) ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) t') e'))))) = (((h = NONE) ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) t') e')))))
T c= c==> c= c= f0 cNONE c= f0 cNONE c==> c==> c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 f6 c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 f7 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE f6 f7 c==> c==> c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 f6 c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 f7 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE f6 f7
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
- |- (((!t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 b0 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 b1 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 b0 b1 * / ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 b0 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 b1 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 b0 b1 f7 * / ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 b0 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 b1 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 b0 b1 f7
- |- ((((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))) = ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))
T c= c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3
- |- ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))
T c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3
+ |- ((\g'. ((GEQ ((GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))) g')
T * / cGEQ cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END cMEM b3 cfaces b4 c, f0 c, f1 b0 cLET_END cMEM f1 cfaces b0 f2
+ |- ((\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))) (GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))))
T * / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3 * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END cMEM b2 cfaces b3
+ |- (g' = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= f0 c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f1 c, f2 f0
+ (v = (the h)) |- ((v = (the h)) /\ (?v. (v = (the h))))
T c==> c= f0 cthe f1 c/\ c= f0 cthe f1 c? / c= b0 cthe f1
+ |- ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q'))))) q')
T * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL c==> f2 b0 f5
- ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) |- (((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))) = ((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))))
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cMEM cFST csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cfaces cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cMEM cFST csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cfaces cSND csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5
- (h = NONE) |- (((MEM (FST (((((subdivFace0_alt g) f) r) (SUC n)) t))) (faces (SND (((((subdivFace0_alt g) f) r) (SUC n)) t)))) = ((MEM (FST (((((subdivFace0_alt g) f) r) (SUC n)) t))) (faces (SND (((((subdivFace0_alt g) f) r) (SUC n)) t)))))
T c==> c= f0 cNONE c= cMEM cFST csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cfaces cSND csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cMEM cFST csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cfaces cSND csubdivFace0_alt f1 f2 f3 cSUC f4 f5
+ ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)), ((MEM f) (faces g)) |- ((((MEM f2) (faces g')) ==> ((MEM (FST (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))) = ((MEM (FST (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c==> cMEM f6 cfaces f3 c= c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f8 cfaces cSND csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f8 cMEM cFST csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f8 cfaces cSND csubdivFace0_alt f2 f1 f5 cNUMERAL c_0 f8
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)), ((MEM f) (faces g)) |- ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g'))))) (faces (SND (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= c, f1 c, f2 f3 csplitFace f4 f5 f6 f7 f8 c==> cMEM f7 cfaces f4 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 c, f1 c, f2 f3 cfaces cSND csubdivFace0_alt f3 f2 f6 cNUMERAL c_0 f0
+ |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) = ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) f1))
T c= c? / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 * / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5 f0
- |- ((((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) = ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))
T c= c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 c= cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 c= cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)), ((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) f2) |- (((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) f2) /\ ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> * / c? / c= c, f3 c, b0 b1 csplitFace f2 f4 f5 f1 f6 f7 c/\ * / c? / c= c, f3 c, b0 b1 csplitFace f2 f4 f5 f1 f6 f7 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f2 f4 f5 f1 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f2 f4 f5 f1 f6
+ |- (((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) (f2 , g')) = ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g')))))
T c= c@ / ! ! c= * b0 c, b1 b2 b1 c, f0 f1 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f2 c, f0 f1
- (~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) |- ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) /\ (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c/\ c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((\g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) g)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 f1
+ |- (((!p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL c==> b0 b1 * / ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL c==> b0 b1 f4 * / ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL c==> b0 b1 f4
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))), ((MEM f) (faces g)) |- ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 c==> cMEM f5 cfaces f2 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) f1) ==> ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f2 f3 f4 f1 f5 f6 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 f5 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 f5 cT
+ |- ((LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t)) = (LET_END (((((subdivFace0_alt ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) v) (NUMERAL _0)) t)))
T c= cLET_END csubdivFace0_alt f0 f1 f2 cNUMERAL c_0 f3 cLET_END csubdivFace0_alt c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f4 c, f1 f0 c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f4 c, f1 f0 f2 cNUMERAL c_0 f3
+ |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((!t. ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) ==> (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))))))))) = T)
T c= ! c==> ! ! ! ! c==> cMEM b2 cfaces b1 cMEM cFST csubdivFace0_alt b1 b2 b3 b4 b0 cfaces cSND csubdivFace0_alt b1 b2 b3 b4 b0 ! ! ! ! c==> cMEM b2 cfaces b1 cMEM cFST csubdivFace0_alt b1 b2 b3 b4 cCONS f0 b0 cfaces cSND csubdivFace0_alt b1 b2 b3 b4 cCONS f0 b0 cT
- (~ (h = NONE)) |- ((h = NONE) = F)
T c==> c~ c= f0 cNONE c= c= f0 cNONE cF
+ |- (((!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) r) v) f) ws))))) ==> ((\f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) r) v) f) ws))))) f)) = ((\f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) r) v) f) ws))))) f))
T c= c==> ! ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 * / ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 f3 * / ! c==> cMEM b0 cfaces f0 cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END cMEM b4 cfaces b5 csplitFace f0 f1 f2 b0 b1 f3
- (~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) |- (((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = F)
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cF
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)), ((MEM f) (faces g)) |- (((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) /\ ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= c, f1 c, f2 f3 csplitFace f4 f5 f6 f7 f8 c==> cMEM f7 cfaces f4 c/\ c= c, f1 c, f2 f3 csplitFace f4 f5 f6 f7 f8 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f4 f5 f6 f7 f8 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f4 f5 f6 f7 f8
- |- ((\g'. (!t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 cNONE b0 c==> c==> b0 c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 b2 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND b0 b1 b2 f6
- |- ((((h = NONE) ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = (((((subdivFace0_alt g) f) r) (SUC n)) t))) ==> (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) e')))) = (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) e'))))
T c= c==> c==> c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 csubdivFace0_alt f1 f2 f3 cSUC f4 f5 c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 f6 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 f6 c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 f6 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 f6
- ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) |- (((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = T)
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 cT
- |- ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = (p' ==> q'))))) q')
T * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f1 f4 b1 f0 b2 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 cfaces cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f1 f4 b1 f0 b2 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 b0 c= c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f1 f4 b1 f0 b2 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 cfaces cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f1 f4 b1 f0 b2 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 c==> f2 b0 f7
+ ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) f1) |- (((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) ==> ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))) = ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c= c==> c? / c? / c= c, f5 c, b0 b1 csplitFace f0 f1 f2 f3 f4 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f6 csplitFace f0 f1 f2 f3 f4 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f6 csplitFace f0 f1 f2 f3 f4 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f6 csplitFace f0 f1 f2 f3 f4 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f2 cNUMERAL c_0 f6 csplitFace f0 f1 f2 f3 f4
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 cNUMERAL c_0 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 cNUMERAL c_0 f0
+ |- (((((MEM f) (faces g)) = ((MEM f) (faces g))) ==> ((((MEM f) (faces g)) ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (((MEM f) (faces g)) ==> q')))) = ((((MEM f) (faces g)) ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (((MEM f) (faces g)) ==> q'))))
T c= c==> c= cMEM f0 cfaces f1 cMEM f0 cfaces f1 c==> c==> cMEM f0 cfaces f1 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 f6 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> cMEM f0 cfaces f1 f6 c==> c==> cMEM f0 cfaces f1 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 f6 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> cMEM f0 cfaces f1 f6
+ ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) g') |- ((((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) ==> ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))) = ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> * / c= c, f0 c, f1 b0 csplitFace f2 f3 f4 f5 f6 f7 c= c==> c= c, f0 c, f1 f7 csplitFace f2 f3 f4 f5 f6 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f8 csplitFace f2 f3 f4 f5 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f8 csplitFace f2 f3 f4 f5 f6 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f8 csplitFace f2 f3 f4 f5 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f8 csplitFace f2 f3 f4 f5 f6
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 b0 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 b0 f0 cT
+ |- ((T ==> (?v. (v = (the h)))) = (?v. (v = (the h))))
T c= c==> cT c? / c= b0 cthe f0 c? / c= b0 cthe f0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((\n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))) n)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 * / c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 b0 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 b0 f0 f4
+ |- ((LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) (faces ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))))) = (LET_END ((MEM f2) (faces g'))))
T c= cLET_END cMEM c@ / ! ! c= * b0 c, b1 b2 b1 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cfaces c@ / ! ! c= * b0 c, b1 b2 b2 c@ / ! ! c= * b0 c, b1 b2 b2 c, f0 c, f1 f2 cLET_END cMEM f1 cfaces f2
+ ((\v. (v = (the h))) v) |- (((v = (the h)) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))
T c==> * / c= b0 cthe f0 f1 c= c==> c= f1 cthe f0 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f5 f2 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f5 f3 b0 f2 b1 cupt ccountVertices f5 c+ ccountVertices f5 f4 cthe f0 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f5 f2 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f5 f3 b0 f2 b1 cupt ccountVertices f5 c+ ccountVertices f5 f4 cthe f0 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f5 f2 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f5 f3 b0 f2 b1 cupt ccountVertices f5 c+ ccountVertices f5 f4 cthe f0 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f5 f2 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f5 f3 b0 f2 b1 cupt ccountVertices f5 c+ ccountVertices f5 f4 cthe f0
+ |- (((MEM (FST (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))) (faces (SND (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) = ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) v))) (faces (SND (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))))
T c= cMEM cFST cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cfaces cSND cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f0 f1 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f1 b0 f0 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 f2 cfaces cSND cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3
- |- ((\t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 b0 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b1 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 b0 b1 f7
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) = (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f8 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f8 ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f8 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f8
- |- (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) e')))
T c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 f6 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f4 f6
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))), ((MEM f) (faces g)) |- ((?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) /\ ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 c==> cMEM f5 cfaces f2 c/\ c? / c? / c= c, f1 c, b0 b1 csplitFace f2 f3 f4 f5 f6 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f5 f6
- (~ (h = NONE)) |- (~ (NONE = h))
T c==> c~ c= f0 cNONE c~ c= cNONE f0
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ |- ((\f1. (!f2. (!g'. ((GEQ ((GABS (\_10384460. (!f1. (!f2. (!g'. ((GEQ (_10384460 (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))))) (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g'))))))) f1)
T * / ! ! cGEQ cGABS / ! ! ! cGEQ * b3 c, b4 c, b4 b4 cLET_END cMEM b4 cfaces b4 c, b0 c, b1 b2 cLET_END cMEM b1 cfaces b2 f0
+ ((f1 = (FST (((((splitFace g) r) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) r) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) r) v) f) ws)))))) |- (((f1 = (FST (((((splitFace g) r) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) r) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) r) v) f) ws)))))) /\ (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))))
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 c/\ c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((((\v. (v = (the h))) v) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> * / c= b0 cthe f3 f4 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f5 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f6 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f5 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f6 cthe f3 cT
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ ((f1 = (FST (((((splitFace g) r) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) r) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) r) v) f) ws)))))) |- ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) f1)
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 * / c? / c? / c= c, b0 c, b1 b2 csplitFace f1 f2 f3 f4 f5 f0
+ (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) /\ (?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c/\ c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c? / c= b0 cupt ccountVertices f1 c+ ccountVertices f1 f2
- ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) |- (((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) /\ ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c/\ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5
+ |- ((a = b) = ((GEQ a) b))
T c= c= f0 f1 cGEQ f0 f1
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))), ((MEM f) (faces g)) |- (((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) /\ ((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 c==> cMEM f1 cfaces f5 c/\ c/\ c= cnextVertex f1 f2 f3 c= f4 cNUMERAL c_0 cMEM cFST csubdivFace0_alt f5 f1 f3 cNUMERAL c_0 f0 cfaces cSND csubdivFace0_alt f5 f1 f3 cNUMERAL c_0 f0
+ ((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) f2) |- (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))
T c==> * / c? / c= c, f0 c, b0 b1 csplitFace f1 f2 f3 f4 f5 f6 c? / c= c, f0 c, f6 b0 csplitFace f1 f2 f3 f4 f5
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((!x. (((\v. (v = (the h))) x) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) ==> ((?v. (v = (the h))) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = ((?v. (v = (the h))) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> ! c==> * / c= b1 cthe f3 b0 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b1 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f0 csplitFace f2 f4 b1 f1 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 c==> c? / c= b0 cthe f3 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 c==> c? / c= b0 cthe f3 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f4 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f3
+ |- ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q'))))
T c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 f7 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cCONS f5 f6 c==> f2 f7
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)), ((\v. (v = (the h))) v) |- (((\v. (v = (the h))) v) /\ ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> * / c= b0 cthe f3 f4 c/\ * / c= b0 cthe f3 f4 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f5 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f6 cthe f3 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f2 f1 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f2 f5 b0 f1 b1 cupt ccountVertices f2 c+ ccountVertices f2 f6 cthe f3
+ |- (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = (((h = NONE) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) (SUC n)) t))) (faces (SND (((((subdivFace0_alt g) f) r) (SUC n)) t))))) /\ ((~ (h = NONE)) ==> ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c= cMEM cFST cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cfaces cSND cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 c/\ c==> c= f0 cNONE cMEM cFST csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cfaces cSND csubdivFace0_alt f1 f2 f3 cSUC f4 f5 c==> c~ c= f0 cNONE cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (ws = ((upt (countVertices g)) ((countVertices g) + n))), ((MEM f) (faces g)) |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) /\ ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= f1 cupt ccountVertices f2 c+ ccountVertices f2 f3 c==> cMEM f4 cfaces f2 c/\ c= f1 cupt ccountVertices f2 c+ ccountVertices f2 f3 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f4 b0 cupt ccountVertices f2 c+ ccountVertices f2 f3 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f4 b0 cupt ccountVertices f2 c+ ccountVertices f2 f3
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c/\ cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 f4 f0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f3 cNUMERAL c_0 f0 csplitFace f2 f4 f3 f1 f5 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f3 cNUMERAL c_0 f0 csplitFace f2 f4 f3 f1 f5
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((\f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))) f2) ==> ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> * / c? / c= c, f3 c, b0 b1 csplitFace f2 f4 f5 f1 f6 f7 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f2 f4 f5 f1 f6 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f2 f4 f5 f1 f6
+ |- ((ws = ((upt (countVertices g)) ((countVertices g) + n))) = ((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws))
T c= c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 * / c= b0 cupt ccountVertices f1 c+ ccountVertices f1 f2 f0
+ |- ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f4 cNONE csubdivFace0_alt f1 f0 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f2 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f3 cthe f4 cfaces cSND cCOND c= f4 cNONE csubdivFace0_alt f1 f0 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f2 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f3 cthe f4
+ ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- (((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g'))))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (f1 , (f2 , g')))))) = ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f8 c, f0 c, f1 f2 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f8 c, f0 c, f1 f2 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f8 csplitFace f3 f4 f5 f6 f7 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f8 csplitFace f3 f4 f5 f6 f7
+ |- (((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) = ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ws))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c= cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 csplitFace f2 f3 f0 f4 f5 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 csplitFace f2 f3 f0 f4 f5 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f0 cNUMERAL c_0 f1 csplitFace f2 f3 f0 f4 b0 f5 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f0 cNUMERAL c_0 f1 csplitFace f2 f3 f0 f4 f5
+ |- ((\g. (!u. (!v. (!f. (!ws. (((MEM f) (faces g)) ==> ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END ((MEM f2) (faces g')))))))))) (((((splitFace g) u) v) f) ws)))))))) g)
T * / ! ! ! ! c==> cMEM b3 cfaces b0 cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END cMEM b7 cfaces b8 csplitFace b0 b1 b2 b3 b4 f0
+ |- (((MEM f) (faces g)) ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = T))
T c==> cMEM f0 cfaces f1 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL cT
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)), ((MEM f) (faces g)) |- ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= c, f1 c, f2 f3 csplitFace f4 f5 f6 f7 f8 c==> cMEM f7 cfaces f4 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f4 f5 f6 f7 f8 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f6 cNUMERAL c_0 f0 csplitFace f4 f5 f6 f7 f8
- ((MEM f) (faces g)) |- (T = ((MEM f) (faces g)))
T c==> cMEM f0 cfaces f1 c= cT cMEM f0 cfaces f1
+ |- (T ==> (?v. (v = (the h))))
T c==> cT c? / c= b0 cthe f0
- (~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) |- (((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))) = ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3
+ (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ws))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ws)))) = ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f1 f5 f3 f6 b0 f0 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f1 f5 f3 f6 b0 f0 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f1 f5 f3 f6 b0 cupt ccountVertices f1 c+ ccountVertices f1 f2 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f4 csplitFace f1 f5 f3 f6 b0 cupt ccountVertices f1 c+ ccountVertices f1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((((\ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ws) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> * / c= b0 cupt ccountVertices f2 c+ ccountVertices f2 f3 f4 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f3 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f5 cNUMERAL c_0 f0 csplitFace f2 f6 f5 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f3 cT
+ |- (((!p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))) (faces (SND (((((subdivFace0_alt g) f) r) n) ((CONS h) t)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> b0 b1 * / ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> b0 b1 f6 * / ! c==> c= cMEM f0 cfaces f1 b0 c==> c==> b0 c= cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 b1 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cCONS f4 f5 c==> b0 b1 f6
+ |- ((\_10384454. (LET_END ((MEM f2) (faces _10384454)))) = (\_10384454. (LET_END ((MEM ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a0)))) ((@fn. (!a0. (!a1. ((fn (a0 , a1)) = a1)))) (f1 , (f2 , g'))))) (faces _10384454)))))
T c= / cLET_END cMEM f0 cfaces b0 / cLET_END cMEM c@ / ! ! c= * b1 c, b2 b3 b2 c@ / ! ! c= * b1 c, b2 b3 b3 c, f1 c, f0 f2 cfaces b0
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! c==> cMEM b0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 b0 b1 cSUC b2 f0 cLET / cLET_END cCOND c/\ c= cnextVertex b0 b1 b3 c= b2 cNUMERAL c_0 csubdivFace0_alt f1 b0 b3 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f0 csplitFace f1 b1 b3 b0 b4 cupt ccountVertices f1 c+ ccountVertices f1 b2 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 b0 b1 cSUC b2 f0 cLET / cLET_END cCOND c/\ c= cnextVertex b0 b1 b3 c= b2 cNUMERAL c_0 csubdivFace0_alt f1 b0 b3 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f0 csplitFace f1 b1 b3 b0 b4 cupt ccountVertices f1 c+ ccountVertices f1 b2 cthe f2
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) = (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f3 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f3 ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f3 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f3
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (v = (the h)), ((MEM f) (faces g)) |- ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c= f1 cthe f2 c==> cMEM f3 cfaces f4 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f3 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f4 f3 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f4 f5 b0 f3 b1 cupt ccountVertices f4 c+ ccountVertices f4 f6 cthe f2 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f3 f5 b0 c= f6 cNUMERAL c_0 csubdivFace0_alt f4 f3 b0 cNUMERAL c_0 f0 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f0 csplitFace f4 f5 b0 f3 b1 cupt ccountVertices f4 c+ ccountVertices f4 f6 cthe f2
+ ((\f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) f1) |- (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))
T c==> * / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 f5 c? / c? / c= c, f5 c, b0 b1 csplitFace f0 f1 f2 f3 f4
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ws))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ws))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f0 csplitFace f2 f4 f3 f1 b0 f5 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f3 cNUMERAL c_0 f0 csplitFace f2 f4 f3 f1 b0 f5
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))) ==> ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c==> c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f2 f3 f4 f1 f5 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 f5 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 f5
- |- ((((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = (((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c= c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2
+ |- (T = (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))))))))
T c= cT ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 cNIL cfaces cSND csubdivFace0_alt b0 b1 b2 b3 cNIL
+ |- ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (((MEM f) (faces g)) ==> T))
T c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f2 f3 cNIL cfaces cSND csubdivFace0_alt f1 f0 f2 f3 cNIL c==> cMEM f0 cfaces f1 cT
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 b0 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 b0 f0
- |- ((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))
T c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0
+ |- ((T ==> (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)))))) = (?f1. (?f2. (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))))))
T c= c==> cT c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4 c? / c? / c? / c= c, b0 c, b1 b2 csplitFace f0 f1 f2 f3 f4
- |- ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = (p' ==> q'))))
T c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f1 f4 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 cfaces cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f1 f4 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 f7 c= c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f1 f4 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 cfaces cSND cCOND c= f3 cNONE csubdivFace0_alt f1 f0 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f1 f4 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f5 cthe f3 c==> f2 f7
+ |- (((?ws. (ws = ((upt (countVertices g)) ((countVertices g) + n)))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) = ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))
T c= c==> c? / c= b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f3 csplitFace f0 f4 f2 f5 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f3 csplitFace f0 f4 f2 f5 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f3 csplitFace f0 f4 f2 f5 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f3 csplitFace f0 f4 f2 f5 b0 cupt ccountVertices f0 c+ ccountVertices f0 f1
- |- (((MEM f) (faces g)) ==> (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> cMEM f0 cfaces f1 c= cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2
+ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) = ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((MEM (FST (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) (faces (SND (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))))) /\ ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> ((MEM (FST ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))) (faces (SND ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f5 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f5 c/\ c==> c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 cMEM cFST csubdivFace0_alt f2 f1 f4 cNUMERAL c_0 f0 cfaces cSND csubdivFace0_alt f2 f1 f4 cNUMERAL c_0 f0 c==> c~ c/\ c= cnextVertex f1 f3 f4 c= f5 cNUMERAL c_0 cMEM cFST cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f5 cfaces cSND cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f4 cNUMERAL c_0 f0 csplitFace f2 f3 f4 f1 b0 cupt ccountVertices f2 c+ ccountVertices f2 f5
+ |- (((!q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q'))))) ==> ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q'))))) q')) = ((\q'. ((((MEM f) (faces g)) = p') ==> ((p' ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL)))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) NIL))) (faces (SND (((((subdivFace0_alt g) f) r) n) NIL))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL c==> f2 b0 * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL c==> f2 b0 f5 * / c==> c= cMEM f0 cfaces f1 f2 c==> c==> f2 c= cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL b0 c= c==> cMEM f0 cfaces f1 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 cNIL cfaces cSND csubdivFace0_alt f1 f0 f3 f4 cNIL c==> f2 b0 f5
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ ((f1 = (FST (((((splitFace g) r) v) f) ws))) /\ ((f2 = (FST (SND (((((splitFace g) r) v) f) ws)))) /\ (g' = (SND (SND (((((splitFace g) r) v) f) ws)))))) |- ((\g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) g')
T c==> c/\ c= f0 cFST csplitFace f1 f2 f3 f4 f5 c/\ c= f6 cFST cSND csplitFace f1 f2 f3 f4 f5 c= f7 cSND cSND csplitFace f1 f2 f3 f4 f5 * / c= c, f0 c, f6 b0 csplitFace f1 f2 f3 f4 f5 f7
- |- ((((MEM f) (faces g)) ==> (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = q')) ==> ((((MEM f) (faces g)) ==> ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))) = (((MEM f) (faces g)) ==> q')))
T c==> c==> cMEM f0 cfaces f1 c= cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 f6 c= c==> cMEM f0 cfaces f1 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 c==> cMEM f0 cfaces f1 f6
- |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
- (h = NONE) |- (NONE = h)
T c==> c= f0 cNONE c= cNONE f0
- (NONE = h) |- (h = NONE)
T c==> c= cNONE f0 c= f0 cNONE
- |- ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))
T c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0
- |- (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) e')))
T c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 f6 c= cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cCOND c= f0 cNONE csubdivFace0_alt f4 f1 f2 cSUC f3 f5 f6
- |- (((!g'. (!t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 b0 c==> c==> b0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 b2 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND b0 b1 b2 * / ! ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 b0 c==> c==> b0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 b2 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND b0 b1 b2 f6 * / ! ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 b0 c==> c==> b0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 b2 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND b0 b1 b2 f6
- |- ((\t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 b0 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 b1 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b2 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 b0 b1 f7
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
- |- (((!g'. (!t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 cNONE b0 c==> c==> b0 c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 b2 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND b0 b1 b2 * / ! ! c==> c= c= f0 cNONE b0 c==> c==> b0 c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 b2 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND b0 b1 b2 f6 * / ! ! c==> c= c= f0 cNONE b0 c==> c==> b0 c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 b2 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b3 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b3 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b5 c, b6 c, b7 b8 cLET_END csubdivFace0_alt b8 b7 b3 cNUMERAL c_0 f5 csplitFace f1 f3 b3 f2 b4 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND b0 b1 b2 f6
- (v = (the h)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= f0 cthe f1 c= cMEM f2 cfaces f3 cMEM f2 cfaces f3
- |- ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) t') e'))))
T c==> c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 f6 c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 f7 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f6 f7
- |- ((\e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))) e')
T * / c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 f7 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 b0 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 f7 b0 f8
- |- ((\e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 f7 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b0 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 f7 b0 f8
- |- (((h = NONE) ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ (h = NONE)) ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND (h = NONE)) t') e'))))
T c==> c==> c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 f6 c==> c==> c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 f7 c= cCOND c= f0 cNONE csubdivFace0_alt f1 f2 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f2 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f2 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f2 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f0 cCOND c= f0 cNONE f6 f7
- |- ((\g'. (!t'. (!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 b0 c==> c==> b0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 b1 c==> c==> c~ b0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 b2 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b3 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND b0 b1 b2 f6
- (~ (h = NONE)) |- ((~ (h = NONE)) /\ (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))
T c==> c~ c= f0 cNONE c/\ c~ c= f0 cNONE c= cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ (((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))) = T))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c/\ cMEM f1 cfaces f2 c= cMEM cFST csubdivFace0_alt f2 f1 f3 f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 f4 f0 cT
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))), ((MEM f) (faces g)) |- ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 c==> cMEM f6 cfaces f3 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) /\ (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c/\ ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0
- |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
- (v = (the h)) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= f0 cthe f1 c= c~ c= f1 cNONE c~ c= f1 cNONE
- |- ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))))
T c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f4 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3
- |- ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))
T c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 f7 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 f8 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b0 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 f7 f8
- ((MEM f) (faces g)) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))
T c==> cMEM f0 cfaces f1 c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f2 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f2 cMEM cFST csubdivFace0_alt f1 f0 f3 f4 f2 cfaces cSND csubdivFace0_alt f1 f0 f3 f4 f2
- |- (((!t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 b0 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b1 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 b0 b1 * / ! c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 b0 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b1 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 b0 b1 f7 * / ! c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 b0 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b1 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b2 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b4 c, b5 c, b6 b7 cLET_END csubdivFace0_alt b7 b6 b2 cNUMERAL c_0 f6 csplitFace f2 f4 b2 f3 b3 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 b0 b1 f7
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 b0 b1 f0 cfaces cSND csubdivFace0_alt f2 f1 b0 b1 f0 cT
- (h = NONE) |- ((h = NONE) /\ ((((((subdivFace0_alt g) f) r) (SUC n)) t) = (((((subdivFace0_alt g) f) r) (SUC n)) t)))
T c==> c= f0 cNONE c/\ c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 csubdivFace0_alt f1 f2 f3 cSUC f4 f5
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= ! ! ! c==> cMEM b0 cfaces f1 cMEM cFST csubdivFace0_alt f1 b0 b1 b2 f0 cfaces cSND csubdivFace0_alt f1 b0 b1 b2 f0 cT
- (h = NONE) |- ((h = NONE) = T)
T c==> c= f0 cNONE c= c= f0 cNONE cT
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), ((MEM f) (faces g)) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) /\ ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c/\ ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 cMEM cFST csubdivFace0_alt f2 f1 f3 f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 f4 f0
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c~ c= f8 cNONE c~ c= f8 cNONE
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- ((((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))) = T)
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c= c==> cMEM f1 cfaces f2 cMEM cFST csubdivFace0_alt f2 f1 f3 f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 f4 f0 cT
- |- (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))
T c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 f7 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 f8 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b0 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b0 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f6 csplitFace f2 f4 b0 f3 b1 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 f7 f8
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- ((((upt (countVertices g)) ((countVertices g) + n)) = ws) = (((upt (countVertices g)) ((countVertices g) + n)) = ws))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c= cupt ccountVertices f3 c+ ccountVertices f3 f8 f7 c= cupt ccountVertices f3 c+ ccountVertices f3 f8 f7
- |- (((!e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))) ==> ((\e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))) e')) = ((\e'. ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ g') ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 f7 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 b0 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 f7 b0 * / c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 f7 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 b0 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 f7 b0 f8 * / c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f4 c==> c==> f4 c= csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 f7 c==> c==> c~ f4 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 b0 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f5 f0 f2 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 f2 cNUMERAL c_0 f6 csplitFace f5 f1 f2 f0 b1 cupt ccountVertices f5 c+ ccountVertices f5 f3 cCOND f4 f7 b0 f8
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) = (~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c~ c/\ c= cnextVertex f3 f4 f5 c= f2 cNUMERAL c_0 c~ c/\ c= cnextVertex f3 f4 f5 c= f2 cNUMERAL c_0
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))), (?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))), ((MEM f) (faces g)) |- ((?g'. ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws))) /\ ((MEM (FST ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws)))) (faces (SND ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 c==> cMEM f6 cfaces f3 c/\ c? / c= c, f1 c, f2 b0 csplitFace f3 f4 f5 f6 f7 cMEM cFST cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7 cfaces cSND cLET * part cGABS / ! ! ! cGEQ * b0 c, b1 c, b2 b3 cLET_END csubdivFace0_alt b3 b2 f5 cNUMERAL c_0 f0 csplitFace f3 f4 f5 f6 f7
- |- (((!e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))) ==> ((\e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))) e')) = ((\e'. (((h = NONE) = g') ==> ((g' ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = t')) ==> (((~ g') ==> (((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)) = e')) ==> ((((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 f7 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b0 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 f7 b0 * / c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 f7 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b0 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 f7 b0 f8 * / c==> c= c= f0 cNONE f1 c==> c==> f1 c= csubdivFace0_alt f2 f3 f4 cSUC f5 f6 f7 c==> c==> c~ f1 c= cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 b0 c= cCOND c= f0 cNONE csubdivFace0_alt f2 f3 f4 cSUC f5 f6 cLET / cLET_END cCOND c/\ c= cnextVertex f3 f4 b1 c= f5 cNUMERAL c_0 csubdivFace0_alt f2 f3 b1 cNUMERAL c_0 f6 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b3 c, b4 c, b5 b6 cLET_END csubdivFace0_alt b6 b5 b1 cNUMERAL c_0 f6 csplitFace f2 f4 b1 f3 b2 cupt ccountVertices f2 c+ ccountVertices f2 f5 cthe f0 cCOND f1 f7 b0 f8
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- (((the h) = v) = ((the h) = v))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= c= cthe f8 f5 c= cthe f8 f5
- |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) ==> (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((the h) = v) = ((the h) = v))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c= cthe f3 f4 c= cthe f3 f4
- (~ (h = NONE)) |- (((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) = ((MEM (FST ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))) (faces (SND ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))
T c==> c~ c= f0 cNONE c= cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cMEM cFST cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0 cfaces cSND cLET / cLET_END cCOND c/\ c= cnextVertex f1 f2 b0 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f1 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f4 f2 b0 f1 b1 cupt ccountVertices f4 c+ ccountVertices f4 f3 cthe f0
- |- (((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)))
T c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5
- |- (((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) = ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) t') e'))))) = ((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = t')) ==> (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) t') e')))))
T c= c==> c= c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c==> c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 f6 c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 f7 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f6 f7 c==> c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 f6 c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 f7 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 f6 f7
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- ((~ (h = NONE)) = (~ (h = NONE)))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= c~ c= f3 cNONE c~ c= f3 cNONE
- ((f1 , (f2 , g')) = (((((splitFace g) r) v) f) ws)) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= c, f0 c, f1 f2 csplitFace f3 f4 f5 f6 f7 c= cMEM f6 cfaces f3 cMEM f6 cfaces f3
- |- (((\fg'. (f fg')) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- (v = (the h)) |- ((!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) = (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))))
T c==> c= f0 cthe f1 c= ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f2 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f2 ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f2 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f2
- (ws = ((upt (countVertices g)) ((countVertices g) + n))) |- (((MEM f) (faces g)) = ((MEM f) (faces g)))
T c==> c= f0 cupt ccountVertices f1 c+ ccountVertices f1 f2 c= cMEM f3 cfaces f1 cMEM f3 cfaces f1
- ((MEM f) (faces g)) |- (((MEM f) (faces g)) /\ (((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h)))))) = ((MEM (FST (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))) (faces (SND (((COND (h = NONE)) (((((subdivFace0_alt g) f) r) (SUC n)) t)) ((LET (\v. (LET_END (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))))))) (the h))))))))
T c==> cMEM f0 cfaces f1 c/\ cMEM f0 cfaces f1 c= cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cMEM cFST cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2 cfaces cSND cCOND c= f2 cNONE csubdivFace0_alt f1 f0 f3 cSUC f4 f5 cLET / cLET_END cCOND c/\ c= cnextVertex f0 f3 b0 c= f4 cNUMERAL c_0 csubdivFace0_alt f1 f0 b0 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b2 c, b3 c, b4 b5 cLET_END csubdivFace0_alt b5 b4 b0 cNUMERAL c_0 f5 csplitFace f1 f3 b0 f0 b1 cupt ccountVertices f1 c+ ccountVertices f1 f4 cthe f2
- |- ((h = NONE) ==> ((((((subdivFace0_alt g) f) r) (SUC n)) t) = (((((subdivFace0_alt g) f) r) (SUC n)) t)))
T c==> c= f0 cNONE c= csubdivFace0_alt f1 f2 f3 cSUC f4 f5 csubdivFace0_alt f1 f2 f3 cSUC f4 f5
- (!g. (!f. (!r. (!n. (((MEM f) (faces g)) ==> ((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t))))))))) |- (((MEM f) (faces g)) ==> (((MEM (FST (((((subdivFace0_alt g) f) r) n) t))) (faces (SND (((((subdivFace0_alt g) f) r) n) t)))) = T))
T c==> ! ! ! ! c==> cMEM b1 cfaces b0 cMEM cFST csubdivFace0_alt b0 b1 b2 b3 f0 cfaces cSND csubdivFace0_alt b0 b1 b2 b3 f0 c==> cMEM f1 cfaces f2 c= cMEM cFST csubdivFace0_alt f2 f1 f3 f4 f0 cfaces cSND csubdivFace0_alt f2 f1 f3 f4 f0 cT
- |- (((((((nextVertex f) r) = v) /\ (n = (NUMERAL _0))) ==> ((((((subdivFace0_alt g) f) v) (NUMERAL _0)) t) = (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t))) ==> (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) e')))) = (((~ ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) ==> (((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n))) = e')) ==> ((((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) ((LET (\ws. (LET_END ((LET (GABS (\f. (!f1. (!f2. (!g'. ((GEQ (f (f1 , (f2 , g')))) (LET_END (((((subdivFace0_alt g') f2) v) (NUMERAL _0)) t))))))))) (((((splitFace g) r) v) f) ws))))) ((upt (countVertices g)) ((countVertices g) + n)))) = (((COND ((((nextVertex f) r) = v) /\ (n = (NUMERAL _0)))) (((((subdivFace0_alt g) f) v) (NUMERAL _0)) t)) e'))))
T c= c==> c==> c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 f6 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 f6 c==> c==> c~ c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 c= cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 f6 c= cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 cLET / cLET_END cLET * part cGABS / ! ! ! cGEQ * b1 c, b2 c, b3 b4 cLET_END csubdivFace0_alt b4 b3 f2 cNUMERAL c_0 f5 csplitFace f4 f1 f2 f0 b0 cupt ccountVertices f4 c+ ccountVertices f4 f3 cCOND c/\ c= cnextVertex f0 f1 f2 c= f3 cNUMERAL c_0 csubdivFace0_alt f4 f0 f2 cNUMERAL c_0 f5 f6
- |- ((!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))) = T)
T c= ! ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c==> c==> c~ f1 c= f3 b1 c= cCOND f0 f2 f3 cCOND f1 b0 b1 cT
