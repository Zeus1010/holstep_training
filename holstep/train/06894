N Rogers.HL_DECREASE
C |- (!V. (!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul)))))))
T c==> c/\ cpacking f0 c/\ cIN f1 * * part cbarV f0 f2 c<= f3 f2 creal_le chl ctruncate_simplex f3 f1 chl f1
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D DE_MORGAN_THM
A |- (!t1. (!t2. (((~ (t1 /\ t2)) = ((~ t1) \/ (~ t2))) /\ ((~ (t1 \/ t2)) = ((~ t1) /\ (~ t2))))))
T c/\ c= c~ c/\ f0 f1 c\/ c~ f0 c~ f1 c= c~ c\/ f0 f1 c/\ c~ f0 c~ f1
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_EXISTS_THM
A |- (!P. ((~ (?x. (P x))) = (!x. (~ (P x)))))
T c= c~ c? / * f0 b0 ! c~ * f0 b0
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D Ssrnat.addSn
A |- (!m. (!n. (((SUC m) + n) = (SUC (m + n)))))
T c= c+ cSUC f0 f1 cSUC c+ f0 f1
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D Ssrnat.addnC
A |- (!m. (!n. ((m + n) = (n + m))))
T c= c+ f0 f1 c+ f1 f0
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D MULT_CLAUSES
A |- ((!n. (((NUMERAL _0) * n) = (NUMERAL _0))) /\ ((!m. ((m * (NUMERAL _0)) = (NUMERAL _0))) /\ ((!n. (((NUMERAL (BIT1 _0)) * n) = n)) /\ ((!m. ((m * (NUMERAL (BIT1 _0))) = m)) /\ ((!m. (!n. (((SUC m) * n) = ((m * n) + n)))) /\ (!m. (!n. ((m * (SUC n)) = (m + (m * n))))))))))
T c/\ ! c= c* cNUMERAL c_0 b0 cNUMERAL c_0 c/\ ! c= c* b0 cNUMERAL c_0 cNUMERAL c_0 c/\ ! c= c* cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= c* b0 cNUMERAL cBIT1 c_0 b0 c/\ ! ! c= c* cSUC b0 b1 c+ c* b0 b1 b1 ! ! c= c* b0 cSUC b1 c+ b0 c* b0 b1
D EXP_2
A |- (!n. ((n EXP (NUMERAL (BIT0 (BIT1 _0)))) = (n * n)))
T c= cEXP f0 cNUMERAL cBIT0 cBIT1 c_0 c* f0 f0
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LE_REFL
A |- (!n. (n <= n))
T c<= f0 f0
D LE_TRANS
A |- (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))))
T c==> c/\ c<= f0 f1 c<= f1 f2 c<= f0 f2
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D LT_EXISTS
A |- (!m. (!n. ((m < n) = (?d. (n = (m + (SUC d)))))))
T c= c< f0 f1 c? / c= f1 c+ f0 cSUC b0
D Ssrnat.eqn_leq
A |- (!m. (!n. ((m = n) = ((m <= n) /\ (n <= m)))))
T c= c= f0 f1 c/\ c<= f0 f1 c<= f1 f0
D ARITH_ZERO
A |- (((NUMERAL (NUMERAL _0)) = (NUMERAL _0)) /\ ((BIT0 _0) = _0))
T c/\ c= cNUMERAL cNUMERAL c_0 cNUMERAL c_0 c= cBIT0 c_0 c_0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D ARITH_MULT
A |- ((!m. (!n. (((NUMERAL m) * (NUMERAL n)) = (NUMERAL (m * n))))) /\ (((_0 * _0) = _0) /\ ((!n. ((_0 * (BIT0 n)) = _0)) /\ ((!n. ((_0 * (BIT1 n)) = _0)) /\ ((!n. (((BIT0 n) * _0) = _0)) /\ ((!n. (((BIT1 n) * _0) = _0)) /\ ((!m. (!n. (((BIT0 m) * (BIT0 n)) = (BIT0 (BIT0 (m * n)))))) /\ ((!m. (!n. (((BIT0 m) * (BIT1 n)) = ((BIT0 m) + (BIT0 (BIT0 (m * n))))))) /\ ((!m. (!n. (((BIT1 m) * (BIT0 n)) = ((BIT0 n) + (BIT0 (BIT0 (m * n))))))) /\ (!m. (!n. (((BIT1 m) * (BIT1 n)) = ((BIT1 m) + ((BIT0 n) + (BIT0 (BIT0 (m * n)))))))))))))))))
T c/\ ! ! c= c* cNUMERAL b0 cNUMERAL b1 cNUMERAL c* b0 b1 c/\ c= c* c_0 c_0 c_0 c/\ ! c= c* c_0 cBIT0 b0 c_0 c/\ ! c= c* c_0 cBIT1 b0 c_0 c/\ ! c= c* cBIT0 b0 c_0 c_0 c/\ ! c= c* cBIT1 b0 c_0 c_0 c/\ ! ! c= c* cBIT0 b0 cBIT0 b1 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT0 b0 cBIT1 b1 c+ cBIT0 b0 cBIT0 cBIT0 c* b0 b1 c/\ ! ! c= c* cBIT1 b0 cBIT0 b1 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1 ! ! c= c* cBIT1 b0 cBIT1 b1 c+ cBIT1 b0 c+ cBIT0 b1 cBIT0 cBIT0 c* b0 b1
D ARITH_EXP
A |- ((!m. (!n. (((NUMERAL m) EXP (NUMERAL n)) = (NUMERAL (m EXP n))))) /\ (((_0 EXP _0) = (BIT1 _0)) /\ ((!m. (((BIT0 m) EXP _0) = (BIT1 _0))) /\ ((!m. (((BIT1 m) EXP _0) = (BIT1 _0))) /\ ((!n. ((_0 EXP (BIT0 n)) = ((_0 EXP n) * (_0 EXP n)))) /\ ((!m. (!n. (((BIT0 m) EXP (BIT0 n)) = (((BIT0 m) EXP n) * ((BIT0 m) EXP n))))) /\ ((!m. (!n. (((BIT1 m) EXP (BIT0 n)) = (((BIT1 m) EXP n) * ((BIT1 m) EXP n))))) /\ ((!n. ((_0 EXP (BIT1 n)) = _0)) /\ ((!m. (!n. (((BIT0 m) EXP (BIT1 n)) = ((BIT0 m) * (((BIT0 m) EXP n) * ((BIT0 m) EXP n)))))) /\ (!m. (!n. (((BIT1 m) EXP (BIT1 n)) = ((BIT1 m) * (((BIT1 m) EXP n) * ((BIT1 m) EXP n)))))))))))))))
T c/\ ! ! c= cEXP cNUMERAL b0 cNUMERAL b1 cNUMERAL cEXP b0 b1 c/\ c= cEXP c_0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT0 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP cBIT1 b0 c_0 cBIT1 c_0 c/\ ! c= cEXP c_0 cBIT0 b0 c* cEXP c_0 b0 cEXP c_0 b0 c/\ ! ! c= cEXP cBIT0 b0 cBIT0 b1 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 c/\ ! ! c= cEXP cBIT1 b0 cBIT0 b1 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1 c/\ ! c= cEXP c_0 cBIT1 b0 c_0 c/\ ! ! c= cEXP cBIT0 b0 cBIT1 b1 c* cBIT0 b0 c* cEXP cBIT0 b0 b1 cEXP cBIT0 b0 b1 ! ! c= cEXP cBIT1 b0 cBIT1 b1 c* cBIT1 b0 c* cEXP cBIT1 b0 b1 cEXP cBIT1 b0 b1
D REAL_ADD_SYM
A |- (!x. (!y. (((real_add x) y) = ((real_add y) x))))
T c= creal_add f0 f1 creal_add f1 f0
D REAL_ADD_ASSOC
A |- (!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z)))))
T c= creal_add f0 creal_add f1 f2 creal_add creal_add f0 f1 f2
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D REAL_OF_NUM_MUL
A |- (!m. (!n. (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_ADD_RINV
A |- (!x. (((real_add x) (real_neg x)) = (real_of_num (NUMERAL _0))))
T c= creal_add f0 creal_neg f0 creal_of_num cNUMERAL c_0
D REAL_MUL_RZERO
A |- (!x. (((real_mul x) (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0))))
T c= creal_mul f0 creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D REAL_NEGNEG
A |- (!x. ((real_neg (real_neg x)) = x))
T c= creal_neg creal_neg f0 f0
D REAL_MUL_RNEG
A |- (!x. (!y. (((real_mul x) (real_neg y)) = (real_neg ((real_mul x) y)))))
T c= creal_mul f0 creal_neg f1 creal_neg creal_mul f0 f1
D REAL_MUL_LNEG
A |- (!x. (!y. (((real_mul (real_neg x)) y) = (real_neg ((real_mul x) y)))))
T c= creal_mul creal_neg f0 f1 creal_neg creal_mul f0 f1
D REAL_NEG_ADD
A |- (!x. (!y. ((real_neg ((real_add x) y)) = ((real_add (real_neg x)) (real_neg y)))))
T c= creal_neg creal_add f0 f1 creal_add creal_neg f0 creal_neg f1
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D int_le
A |- (!x. (!y. (((int_le x) y) = ((real_le (real_of_int x)) (real_of_int y)))))
T c= cint_le f0 f1 creal_le creal_of_int f0 creal_of_int f1
D int_of_num_th
A |- (!n. ((real_of_int (int_of_num n)) = (real_of_num n)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D int_add_th
A |- (!x. (!y. ((real_of_int ((int_add x) y)) = ((real_add (real_of_int x)) (real_of_int y)))))
T c= creal_of_int cint_add f0 f1 creal_add creal_of_int f0 creal_of_int f1
D INT_LT_DISCRETE
A |- (!x. (!y. (((int_lt x) y) = ((int_le ((int_add x) (int_of_num (NUMERAL (BIT1 _0))))) y))))
T c= cint_lt f0 f1 cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 f1
D INT_NOT_LE
A |- (!x. (!y. ((~ ((int_le x) y)) = ((int_lt y) x))))
T c= c~ cint_le f0 f1 cint_lt f1 f0
D INT_OF_NUM_ADD
A |- (!m. (!n. (((int_add (int_of_num m)) (int_of_num n)) = (int_of_num (m + n)))))
T c= cint_add cint_of_num f0 cint_of_num f1 cint_of_num c+ f0 f1
D INT_OF_NUM_LE
A |- (!m. (!n. (((int_le (int_of_num m)) (int_of_num n)) = (m <= n))))
T c= cint_le cint_of_num f0 cint_of_num f1 c<= f0 f1
D INT_POS
A |- (!n. ((int_le (int_of_num (NUMERAL _0))) (int_of_num n)))
T cint_le cint_of_num cNUMERAL c_0 cint_of_num f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D Sphere.BARV
A |- (!k. (!ul. (!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))))))
T c= cbarV f0 f1 f2 c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0
D Packing3.BARV_IMP_HD_IN_SET_OF_LIST
A |- (!V. (!k. (!ul. ((((barV V) k) ul) ==> ((HD ul) IN (set_of_list ul))))))
T c==> cbarV f0 f1 f2 cIN cHD f2 * part cset_of_list f2
D Packing3.TRUNCATE_SIMPLEX_BARV
A |- (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c==> c/\ cbarV f0 f1 f2 c<= f3 f1 cbarV f0 f3 ctruncate_simplex f3 f2
D Packing3.HD_TRUNCATE_SIMPLEX
A |- (!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul)))))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c= cHD ctruncate_simplex f0 f1 cHD f1
D Rogers.AFFINE_HULL_PROJECTION_DIST_LE
A |- (!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))))))
T c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 f4 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b0 f1 cIN b1 f1 c= cdot cvector_sub b0 b1 f4 creal_of_num cNUMERAL c_0 creal_le cdistance c, f3 f0 cdistance c, f2 f0
D Rogers.HL_PROPERTIES
A |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 ! c==> cIN b0 * part cset_of_list f2 c= cdistance c, ccircumcenter * part cset_of_list f2 b0 chl f2
D Rogers.BARV_CIRCUMCENTER_EXISTS
A |- (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul)))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 cIN ccircumcenter * part cset_of_list f2 * * part chull part caffine * part cset_of_list f2
D Rogers.HL_EQ_DIST0
A |- (!V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))))
T c==> c/\ cpacking f0 cbarV f0 f1 f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
D Rogers.BARV_CIRCUMCENTER_PROJECTION
A |- (!V. (!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul))))))))
T c==> c/\ cpacking f0 c/\ cIN f1 * * part cbarV f0 f2 c<= f3 f2 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list f1 cvector_add ccircumcenter b0 b1 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex f3 f1
+ |- ((((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496719)) /\ (((real_le (real_of_num (NUMERAL _0))) (real_of_int _3496720)) /\ ((((real_le ((real_add ((real_add (real_of_int _3496720)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _3496719)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le ((real_add (real_of_int _3496720)) (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) /\ (((real_le ((real_add (real_of_int _3496719)) (real_of_num (NUMERAL (BIT1 _0))))) ((real_add (real_of_int _3496720)) (real_of_num (NUMERAL (BIT1 _0))))) \/ ((real_le (real_of_int _3496719)) (real_of_int _3496720)))))) = (~ (((int_le (int_of_num (NUMERAL _0))) _3496719) ==> (((int_le (int_of_num (NUMERAL _0))) _3496720) ==> ((((int_le ((int_add _3496719) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _3496720) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le _3496719) _3496720)) \/ ((~ ((int_le ((int_add _3496719) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _3496720) (int_of_num (NUMERAL (BIT1 _0)))))) /\ (~ ((int_le _3496719) _3496720))))))))
T c= c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f0 c/\ creal_le creal_of_num cNUMERAL c_0 creal_of_int f1 c/\ c\/ creal_le creal_add creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 c\/ creal_le creal_add creal_of_int f0 creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f1 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_of_int f0 creal_of_int f1 c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_le f0 f1 c/\ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le f0 f1
+ |- ((((\n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))) n) ==> ((!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))) = T)
T c= c==> * / c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 b0 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b1 f1 cIN b2 f1 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 f4 c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 creal_le cdistance c, f3 f0 cdistance c, f2 f0 cT
+ ((\n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))) n) |- ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))
T c==> * / c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 b0 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b1 f1 cIN b2 f1 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 f4 c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 f4 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b0 f1 cIN b1 f1 c= cdot cvector_sub b0 b1 f4 creal_of_num cNUMERAL c_0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (p = ((vector_add p0) n)), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))), (((barV V) i) ((truncate_simplex i) ul)) |- (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= f4 cvector_add f5 f6 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f5 c==> c/\ c= f4 cvector_add f5 f6 ! ! c==> c/\ cIN b0 f3 cIN b1 f3 c= cdot cvector_sub b0 b1 f6 creal_of_num cNUMERAL c_0 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c? / c/\ cIN cHD f2 f3 c/\ c= f4 cvector_add f5 b0 c/\ cIN f5 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (((barV V) k) ul) |- ((((barV V) k) ul) = T)
T c==> cbarV f0 f1 f2 c= cbarV f0 f1 f2 cT
+ (!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) |- (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))
T c==> ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 ! c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH f0 c= cHD ctruncate_simplex b0 f0 cHD f0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((circumcenter (set_of_list ul)) = p), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((real_le (distance (p0 , (HD ul)))) (distance (p , (HD ul))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> c= ccircumcenter * part cset_of_list f2 f5 c==> c<= f1 f6 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f6 f2 creal_le cdistance c, f4 cHD f2 cdistance c, f5 cHD f2
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), ((HD ul) IN S), (((barV V) i) ((truncate_simplex i) ul)) |- (((HD ul) IN S) /\ (((HD ul) IN S) /\ (p0 IN ((hull affine) S))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> cIN cHD f2 f3 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c/\ cIN cHD f2 f3 c/\ cIN cHD f2 f3 cIN f4 * * part chull part caffine f3
- |- ((((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl)))) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q')))) = (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q'))))
T c= c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3 c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c<= f1 f5 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f5 f2 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) |- (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))))
T c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 ! ! ! c==> c/\ cIN b0 f0 c/\ c= f1 cvector_add b1 b2 c/\ cIN b1 * * part chull part caffine f0 ! ! c==> c/\ cIN b3 f0 cIN b3 f0 c= cdot cvector_sub b3 b3 b2 creal_of_num cNUMERAL c_0 creal_le cdistance c, b1 b0 cdistance c, f1 b0
+ |- ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) (set_of_list ((truncate_simplex i) ul)))
T * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 * part cset_of_list ctruncate_simplex f0 f1
+ |- (((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))))) = (!m. (!p. ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)))))
T c= c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1 ! ! c==> c? / c/\ c<= b0 b2 c<= b2 b1 c<= b0 b1
+ (i <= k), (((barV V) k) ul) |- (((barV V) i) ((truncate_simplex i) ul))
T c==> c<= f0 f1 c==> cbarV f2 f1 f3 cbarV f2 f0 ctruncate_simplex f0 f3
+ (packing V), ((hl ((truncate_simplex i) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((hl ((truncate_simplex i) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) /\ ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= chl ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f2 cHD ctruncate_simplex f1 f2 c==> c<= f1 f3 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f3 f2 c/\ c= chl ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f2 cHD ctruncate_simplex f1 f2 creal_le chl ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (((!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) ==> ((\r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) r)) = ((\r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl)))))) r))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= c==> ! ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 * / ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 f1 * / ! ! c==> c/\ cbarV f0 b1 b2 c<= b0 b1 cbarV f0 b0 ctruncate_simplex b0 b2 f1
+ ((\S. (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) S) |- (((\S. (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) S) /\ ((!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))
T c==> * / c? / c/\ cIN f0 b0 c/\ c= f1 cvector_add f2 b1 c/\ cIN f2 * * part chull part caffine b0 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 f3 c/\ * / c? / c/\ cIN f0 b0 c/\ c= f1 cvector_add f2 b1 c/\ cIN f2 * * part chull part caffine b0 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 f3 c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 creal_le cdistance c, f2 f0 cdistance c, f1 f0
+ |- ((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = T))
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f0 cT
+ |- (((i + (NUMERAL (BIT1 _0))) <= (k + (NUMERAL (BIT1 _0)))) = (i <= k))
T c= c<= c+ f0 cNUMERAL cBIT1 c_0 c+ f1 cNUMERAL cBIT1 c_0 c<= f0 f1
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((circumcenter (set_of_list ul)) = p), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (?S. (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> c= ccircumcenter * part cset_of_list f2 f5 c==> c<= f1 f6 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f6 f2 c? / c? / c/\ cIN cHD f2 b0 c/\ c= f5 cvector_add f4 b1 c/\ cIN f4 * * part chull part caffine b0 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) |- ((\w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) w)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 * / c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 f1
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))), (?k. ((((barV V) k) zl) /\ (r <= k))) |- ((?k. ((((barV V) k) zl) /\ (r <= k))) /\ (((barV V) r) ((truncate_simplex r) zl)))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c/\ c? / c/\ cbarV f0 b0 f1 c<= f2 b0 cbarV f0 f2 ctruncate_simplex f2 f1
+ (i <= k), (((barV V) k) ul) |- (?n. (((i + (NUMERAL (BIT1 _0))) <= n) /\ (n <= (LENGTH ul))))
T c==> c<= f0 f1 c==> cbarV f2 f1 f3 c? / c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 b0 c<= b0 cLENGTH f3
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((?p0. ((circumcenter S) = p0)) ==> ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c<= f1 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f4 f2 c==> c? / c= ccircumcenter f3 b0 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (packing V), (i <= k), (((barV V) k) ul) |- ((((packing V) /\ (((barV V) i) ((truncate_simplex i) ul))) ==> ((hl ((truncate_simplex i) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul)))))) ==> ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f2 f3 c==> c==> c/\ cpacking f0 cbarV f0 f1 ctruncate_simplex f1 f3 c= chl ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 creal_le chl ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((circumcenter (set_of_list ul)) = p) ==> ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c<= f1 f5 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f5 f2 c==> c= ccircumcenter * part cset_of_list f2 f6 creal_le cdistance c, f4 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ |- ((\v. ((?S. (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))) v)
T * / c==> c? / c? / c/\ cIN b0 b1 c/\ c= f0 cvector_add f1 b2 c/\ cIN f1 * * part chull part caffine b1 ! ! c==> c/\ cIN b3 b1 cIN b3 b1 c= cdot cvector_sub b3 b3 b2 creal_of_num cNUMERAL c_0 creal_le cdistance c, f1 b0 cdistance c, f0 b0 f2
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), ((circumcenter (set_of_list ul)) = p), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((circumcenter (set_of_list ul)) = p) /\ ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c= ccircumcenter * part cset_of_list f2 f5 c==> c<= f1 f6 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f6 f2 c/\ c= ccircumcenter * part cset_of_list f2 f5 creal_le cdistance c, f4 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ |- ((T /\ F) = F)
T c= c/\ cT cF cF
+ (packing V), ((((barV V) k) ul) /\ (i <= k)) |- ((real_le (hl ((truncate_simplex i) ul))) (hl ul))
T c==> cpacking f0 c==> c/\ cbarV f0 f1 f2 c<= f3 f1 creal_le chl ctruncate_simplex f3 f2 chl f2
+ |- ((((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = T)) ==> (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = ((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> T))) = (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = ((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> T)))
T c= c==> c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f0 cT c= c==> cbarV f2 f1 f0 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f0 c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 cT c= c==> cbarV f2 f1 f0 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f0 c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 cT
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! ! c==> c/\ c<= f0 b0 c<= b0 b1 c<= f0 b1
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (!p. (((m <= n) /\ (n <= p)) ==> (m <= p)))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 ! c==> c/\ c<= f0 f1 c<= f1 b0 c<= f0 b0
+ (packing V), (((barV V) i) ((truncate_simplex i) ul)) |- ((packing V) /\ (((barV V) i) ((truncate_simplex i) ul)))
T c==> cpacking f0 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c/\ cpacking f0 cbarV f0 f1 ctruncate_simplex f1 f2
- |- (((circumcenter (set_of_list ul)) = p) = ((\p. ((circumcenter (set_of_list ul)) = p)) p))
T c= c= ccircumcenter * part cset_of_list f0 f1 * / c= ccircumcenter * part cset_of_list f0 b0 f1
+ |- ((\V. (!k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))))) V)
T * / ! ! c==> c/\ cpacking b0 cbarV b0 b1 b2 c= chl b2 cdistance c, ccircumcenter * part cset_of_list b2 cHD b2 f0
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) |- ((\k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))) k)
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 * / c==> c/\ cpacking f0 cbarV f0 b0 f1 cIN ccircumcenter * part cset_of_list f1 * * part chull part caffine * part cset_of_list f1 f2
+ (packing V), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((hl ((truncate_simplex i) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) ==> ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f1 ctruncate_simplex f1 f3 c==> cbarV f0 f2 f3 c==> c= chl ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 creal_le chl ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
- (?n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))), (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)) |- ((?n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) /\ (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))
T c==> c? / c/\ c= f0 cvector_add f1 b0 ! ! c==> c/\ cIN b1 f2 cIN b2 f2 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c==> cpacking f3 c==> c= * part cset_of_list ctruncate_simplex f4 f5 f2 c==> c= cHD ctruncate_simplex f4 f5 cHD f5 c==> c= ccircumcenter f2 f1 c==> cbarV f3 f4 ctruncate_simplex f4 f5 c/\ c? / c/\ c= f0 cvector_add f1 b0 ! ! c==> c/\ cIN b1 f2 cIN b2 f2 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c? / c/\ cIN cHD f5 f2 c/\ c= f0 cvector_add f1 b0 c/\ cIN f1 * * part chull part caffine f2 ! ! c==> c/\ cIN b1 f2 cIN b2 f2 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ |- (!k. (((\k. ((((barV V) k) zl) /\ (r <= k))) k) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl)))))
T c==> * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
+ ((((barV V) k) zl) /\ (r <= k)) |- (((((barV V) k) zl) /\ (r <= k)) /\ ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> c/\ cbarV f0 f1 f2 c<= f3 f1 c/\ c/\ cbarV f0 f1 f2 c<= f3 f1 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f3 ctruncate_simplex f3 f2
+ (!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) |- ((\j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul)))) j)
T c==> ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 * / c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH f0 c= cHD ctruncate_simplex b0 f0 cHD f0 f1
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k)
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2
+ (i <= k), (((barV V) k) ul) |- ((\k. ((((barV V) k) ul) /\ (i <= k))) k)
T c==> c<= f0 f1 c==> cbarV f2 f1 f3 * / c/\ cbarV f2 b0 f3 c<= f0 b0 f1
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)), ((\n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) n) |- (((\n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) n) /\ (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> * / c/\ c= f5 cvector_add f4 b0 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 f6 c/\ * / c/\ c= f5 cvector_add f4 b0 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 f6 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ |- ((\ul. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul)))) ul)
T * / c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex f0 b0 cHD b0 f1
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul), ((\p. ((circumcenter (set_of_list ul)) = p)) p) |- (((\p. ((circumcenter (set_of_list ul)) = p)) p) /\ ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c<= f1 f5 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f5 f2 c==> * / c= ccircumcenter * part cset_of_list f2 b0 f6 c/\ * / c= ccircumcenter * part cset_of_list f2 b0 f6 creal_le cdistance c, f4 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ |- (((!x. (((\k. ((((barV V) k) zl) /\ (r <= k))) x) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))) ==> ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))) = ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl)))))
T c= c==> ! c==> * / c/\ cbarV f0 b1 f1 c<= f2 b1 b0 c==> ! ! ! ! c==> c/\ cbarV b1 b3 b4 c<= b2 b3 cbarV b1 b2 ctruncate_simplex b2 b4 cbarV f0 f2 ctruncate_simplex f2 f1 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1 c==> c? / c/\ cbarV f0 b0 f1 c<= f2 b0 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
+ ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) |- ((((set_of_list ((truncate_simplex i) ul)) = S) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))) = ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c= c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f0 f1 cHD ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f0 f1 cHD ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1
+ ((set_of_list ((truncate_simplex i) ul)) = S) |- (((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))) = ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 c= creal_le cdistance c, ccircumcenter f2 cHD ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f0 f1 cHD ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1
+ ((\p. ((circumcenter (set_of_list ul)) = p)) p) |- ((((circumcenter (set_of_list ul)) = p) ==> ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))) = ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> * / c= ccircumcenter * part cset_of_list f0 b0 f1 c= c==> c= ccircumcenter * part cset_of_list f0 f1 creal_le cdistance c, f2 cHD ctruncate_simplex f3 f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 creal_le cdistance c, f2 cHD ctruncate_simplex f3 f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))
T c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 f4 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 f4
+ |- ((((\k. ((packing V) /\ (((barV V) k) ul))) k) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))) = T)
T c= c==> * / c/\ cpacking f0 cbarV f0 b0 f1 f2 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 cIN ccircumcenter * part cset_of_list f1 * * part chull part caffine * part cset_of_list f1 cT
+ ((\k. ((((barV V) k) zl) /\ (r <= k))) k) |- (((\k. ((((barV V) k) zl) /\ (r <= k))) k) /\ ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c/\ * / c/\ cbarV f0 b0 f1 c<= f2 b0 f3 c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 cbarV f0 f2 ctruncate_simplex f2 f1
+ (!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) |- (((!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))) ==> ((\x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))) x)) = ((\x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))) x))
T c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 c= c==> ! ! c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add b0 b1 c/\ cIN b0 * * part chull part caffine f1 ! ! c==> c/\ cIN b2 f1 cIN b3 f1 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 creal_le cdistance c, b0 f0 cdistance c, f2 f0 * / ! c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add b0 b1 c/\ cIN b0 * * part chull part caffine f1 ! ! c==> c/\ cIN b2 f1 cIN b3 f1 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 creal_le cdistance c, b0 f0 cdistance c, f2 f0 f3 * / ! c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add b0 b1 c/\ cIN b0 * * part chull part caffine f1 ! ! c==> c/\ cIN b2 f1 cIN b3 f1 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 creal_le cdistance c, b0 f0 cdistance c, f2 f0 f3
- (?k. ((packing V) /\ (((barV V) k) ul))) |- ((?k. ((packing V) /\ (((barV V) k) ul))) /\ ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul)))))
T c==> c? / c/\ cpacking f0 cbarV f0 b0 f1 c/\ c? / c/\ cpacking f0 cbarV f0 b0 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 cIN ccircumcenter * part cset_of_list f1 * * part chull part caffine * part cset_of_list f1
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! c==> c/\ cbarV f0 f1 b0 c<= f2 f1 cbarV f0 f2 ctruncate_simplex f2 b0
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) |- (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 ! ! c==> c/\ cpacking f0 cbarV f0 b1 b0 cIN ccircumcenter * part cset_of_list b0 * * part chull part caffine * part cset_of_list b0
- |- (!S. (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S))))
T c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), ((circumcenter (set_of_list ul)) = p) |- (!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul))))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= ccircumcenter * part cset_of_list f0 f1 ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0
+ |- (((!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul))))))) ==> ((\ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul))))))) ul)) = ((\ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul))))))) ul))
T c= c==> ! ! ! c==> c/\ cpacking f0 c/\ cIN b0 * * part cbarV f0 b1 c<= b2 b1 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b0 cvector_add ccircumcenter b3 b4 ! ! c==> c/\ cIN b5 b3 cIN b6 b3 c= cdot cvector_sub b5 b6 b4 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b2 b0 * / ! ! c==> c/\ cpacking f0 c/\ cIN b0 * * part cbarV f0 b1 c<= b2 b1 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b0 cvector_add ccircumcenter b3 b4 ! ! c==> c/\ cIN b5 b3 cIN b6 b3 c= cdot cvector_sub b5 b6 b4 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b2 b0 f1 * / ! ! c==> c/\ cpacking f0 c/\ cIN b0 * * part cbarV f0 b1 c<= b2 b1 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b0 cvector_add ccircumcenter b3 b4 ! ! c==> c/\ cIN b5 b3 cIN b6 b3 c= cdot cvector_sub b5 b6 b4 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b2 b0 f1
+ |- (((!ul. (((packing V) /\ (((barV V) i) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ==> ((\ul. (((packing V) /\ (((barV V) i) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ((truncate_simplex i) ul))) = ((\ul. (((packing V) /\ (((barV V) i) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ((truncate_simplex i) ul)))
T c= c==> ! c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 * / c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 ctruncate_simplex f1 f2 * / c==> c/\ cpacking f0 cbarV f0 f1 b0 c= chl b0 cdistance c, ccircumcenter * part cset_of_list b0 cHD b0 ctruncate_simplex f1 f2
+ |- ((\k. (!ul. (((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))))) k)
T * / ! c==> c/\ cpacking f0 cbarV f0 b0 b1 c= chl b1 cdistance c, ccircumcenter * part cset_of_list b1 cHD b1 f1
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((!i. (((packing V) /\ ((((barV V) k) ul) /\ (i <= k))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul)))) = T)
T c= ! c==> c/\ cpacking f0 c/\ cbarV f0 f1 f2 c<= b0 f1 creal_le chl ctruncate_simplex b0 f2 chl f2 cT
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
- (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))), (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) /\ (((voronoi_nondg V) vl) = T))
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c==> c/\ cinitial_sublist f3 f0 c< cNUMERAL c_0 cLENGTH f3 c/\ c/\ cinitial_sublist f3 f0 c< cNUMERAL c_0 cLENGTH f3 c= cvoronoi_nondg f2 f3 cT
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))), (((barV V) i) ((truncate_simplex i) ul)) |- (((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))) /\ (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> c/\ c= f5 cvector_add f4 f6 ! ! c==> c/\ cIN b0 f3 cIN b1 f3 c= cdot cvector_sub b0 b1 f6 creal_of_num cNUMERAL c_0 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c/\ c/\ c= f5 cvector_add f4 f6 ! ! c==> c/\ cIN b0 f3 cIN b1 f3 c= cdot cvector_sub b0 b1 f6 creal_of_num cNUMERAL c_0 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ (!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) |- ((\x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))) x)
T c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 * / ! c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add b0 b1 c/\ cIN b0 * * part chull part caffine f1 ! ! c==> c/\ cIN b2 f1 cIN b3 f1 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 creal_le cdistance c, b0 f0 cdistance c, f2 f0 f3
+ |- (((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl))))))) = (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c= c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), ((HD ul) IN S), (((barV V) i) ((truncate_simplex i) ul)) |- (((HD ul) IN S) /\ (p0 IN ((hull affine) S)))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> cIN cHD f2 f3 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c/\ cIN cHD f2 f3 cIN f4 * * part chull part caffine f3
- ((\p0. ((circumcenter S) = p0)) p0) |- ((((circumcenter S) = p0) ==> (?p0. ((circumcenter S) = p0))) = (?p0. ((circumcenter S) = p0)))
T c==> * / c= ccircumcenter f0 b0 f1 c= c==> c= ccircumcenter f0 f1 c? / c= ccircumcenter f0 b0 c? / c= ccircumcenter f0 b0
+ (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_add ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul), ((\p0. ((circumcenter S) = p0)) p0) |- (((\p0. ((circumcenter S) = p0)) p0) /\ ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c<= f1 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f4 f2 c==> * / c= ccircumcenter f3 b0 f5 c/\ * / c= ccircumcenter f3 b0 f5 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c<= f1 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f4 f2 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ |- ((((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))) ==> (((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = q')) ==> (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = ((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> q')))) = (((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = q')) ==> (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = ((((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) ==> q'))))
T c= c==> c= cbarV f0 f1 f2 c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c==> c==> c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 f3 c= c==> cbarV f0 f1 f2 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 c==> c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3 c==> c==> c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 f3 c= c==> cbarV f0 f1 f2 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 c==> c/\ c= cLENGTH f2 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f2 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f0 b0 f3
+ |- (((!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) ==> ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl)) = ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl))
T c= c==> ! c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2 * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2
+ |- (((!V. (!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul)))))))) ==> ((\V. (!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul)))))))) V)) = ((\V. (!ul. (!k. (!i. (((packing V) /\ ((ul IN ((barV V) k)) /\ (i <= k))) ==> ((LET (\S. (LET_END (?n. (((circumcenter (set_of_list ul)) = ((vector_add (circumcenter S)) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) (set_of_list ((truncate_simplex i) ul)))))))) V))
T c= c==> ! ! ! ! c==> c/\ cpacking b0 c/\ cIN b1 * * part cbarV b0 b2 c<= b3 b2 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b1 cvector_add ccircumcenter b4 b5 ! ! c==> c/\ cIN b6 b4 cIN b7 b4 c= cdot cvector_sub b6 b7 b5 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b3 b1 * / ! ! ! c==> c/\ cpacking b0 c/\ cIN b1 * * part cbarV b0 b2 c<= b3 b2 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b1 cvector_add ccircumcenter b4 b5 ! ! c==> c/\ cIN b6 b4 cIN b7 b4 c= cdot cvector_sub b6 b7 b5 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b3 b1 f0 * / ! ! ! c==> c/\ cpacking b0 c/\ cIN b1 * * part cbarV b0 b2 c<= b3 b2 cLET / cLET_END c? / c/\ c= ccircumcenter * part cset_of_list b1 cvector_add ccircumcenter b4 b5 ! ! c==> c/\ cIN b6 b4 cIN b7 b4 c= cdot cvector_sub b6 b7 b5 creal_of_num cNUMERAL c_0 * part cset_of_list ctruncate_simplex b3 b1 f0
+ (packing V), (((barV V) k) ul) |- (((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul))) = ((((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul))))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul))))
T c==> cpacking f0 c==> cbarV f0 f1 f2 c= c==> ! c==> cIN b0 * part cset_of_list f2 c= cdistance c, ccircumcenter * part cset_of_list f2 b0 chl f2 creal_le chl ctruncate_simplex f3 f2 chl f2 c==> c==> c/\ cpacking f0 cbarV f0 f1 f2 ! c==> cIN b0 * part cset_of_list f2 c= cdistance c, ccircumcenter * part cset_of_list f2 b0 chl f2 creal_le chl ctruncate_simplex f3 f2 chl f2
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- ((\q'. (((((barV V) k) ul) = p') ==> ((p' ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = q')) ==> (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = (p' ==> q'))))) q')
T * / c==> c= cbarV f0 f1 f2 f3 c==> c==> f3 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 b0 c= c==> cbarV f0 f1 f2 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 c==> f3 b0 f4
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)) |- (((!x. (((\n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) x) ==> (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))) ==> ((?n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) ==> (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))))) = ((?n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) ==> (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c= c==> ! c==> * / c/\ c= f5 cvector_add f4 b1 ! ! c==> c/\ cIN b2 f3 cIN b3 f3 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 b0 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b1 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b2 f3 cIN b3 f3 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 c==> c? / c/\ c= f5 cvector_add f4 b0 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c==> c? / c/\ c= f5 cvector_add f4 b0 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\ul. (!V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))))) ul)
T * / ! c= cbarV b1 f0 b0 c/\ c= cLENGTH b0 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b2 b0 c< cNUMERAL c_0 cLENGTH b2 cvoronoi_nondg b1 b2 f1
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- ((!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) = T)
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= ! c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 cT
+ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))) |- (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f0 c= cdot cvector_sub b0 b1 f1 creal_of_num cNUMERAL c_0 c==> c/\ cIN f2 f0 cIN f3 f0 c= cdot cvector_sub f2 f3 f1 creal_of_num cNUMERAL c_0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((((\p0. ((circumcenter S) = p0)) p0) ==> ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))) = T)
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c<= f1 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f4 f2 c= c==> * / c= ccircumcenter f3 b0 f5 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2 cT
+ |- ((\zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))) zl)
T * / c==> c? / c/\ cbarV f0 b1 b0 c<= f1 b1 cbarV f0 f1 ctruncate_simplex f1 b0 f2
+ |- (((((barV V) k) ul) = p') ==> ((p' ==> (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = q')) ==> (((((barV V) k) ul) ==> ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))) = (p' ==> q'))))
T c==> c= cbarV f0 f1 f2 f3 c==> c==> f3 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 f4 c= c==> cbarV f0 f1 f2 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 c==> f3 f4
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))), ((((barV V) k) zl) /\ (r <= k)) |- (((barV V) r) ((truncate_simplex r) zl))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c==> c/\ cbarV f0 f1 f2 c<= f3 f1 cbarV f0 f3 ctruncate_simplex f3 f2
+ |- (((set_of_list ((truncate_simplex i) ul)) = (set_of_list ((truncate_simplex i) ul))) = ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) (set_of_list ((truncate_simplex i) ul))))
T c= c= * part cset_of_list ctruncate_simplex f0 f1 * part cset_of_list ctruncate_simplex f0 f1 * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 * part cset_of_list ctruncate_simplex f0 f1
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((circumcenter S) = p0) /\ ((real_le (distance ((circumcenter S) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c<= f1 f5 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f5 f2 c/\ c= ccircumcenter f3 f4 creal_le cdistance c, ccircumcenter f3 cHD ctruncate_simplex f1 f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2
+ (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((((barV V) k) ul) /\ (i <= k)) = ((\k. ((((barV V) k) ul) /\ (i <= k))) k))
T c= c/\ cbarV f0 f1 f2 c<= f3 f1 * / c/\ cbarV f0 b0 f2 c<= f3 b0 f1
+ |- ((!k. (!i. (((packing V) /\ ((((barV V) k) ul) /\ (i <= k))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul))))) = T)
T c= ! ! c==> c/\ cpacking f0 c/\ cbarV f0 b0 f1 c<= b1 b0 creal_le chl ctruncate_simplex b1 f1 chl f1 cT
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((circumcenter (set_of_list ul)) = p), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> c= ccircumcenter * part cset_of_list f2 f5 c==> c<= f1 f6 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f6 f2 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((circumcenter S) = p0), ((circumcenter (set_of_list ul)) = p), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- ((real_le (distance (p0 , (HD ((truncate_simplex i) ul))))) (distance (p , (HD ul))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= ccircumcenter f3 f4 c==> c= ccircumcenter * part cset_of_list f2 f5 c==> c<= f1 f6 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c==> cbarV f0 f6 f2 creal_le cdistance c, f4 cHD ctruncate_simplex f1 f2 cdistance c, f5 cHD f2
- ((\p. ((circumcenter (set_of_list ul)) = p)) p) |- ((((circumcenter (set_of_list ul)) = p) ==> (?p. ((circumcenter (set_of_list ul)) = p))) = (?p. ((circumcenter (set_of_list ul)) = p)))
T c==> * / c= ccircumcenter * part cset_of_list f0 b0 f1 c= c==> c= ccircumcenter * part cset_of_list f0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0 c? / c= ccircumcenter * part cset_of_list f0 b0
+ (i <= k), (((barV V) k) ul) |- (((?k. ((((barV V) k) ul) /\ (i <= k))) ==> (((barV V) i) ((truncate_simplex i) ul))) = (((barV V) i) ((truncate_simplex i) ul)))
T c==> c<= f0 f1 c==> cbarV f2 f1 f3 c= c==> c? / c/\ cbarV f2 b0 f3 c<= f0 b0 cbarV f2 f0 ctruncate_simplex f0 f3 cbarV f2 f0 ctruncate_simplex f0 f3
- |- (((!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) ==> ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q')) = ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4 * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- ((?n. ((m <= n) /\ (n <= p))) ==> (m <= p))
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c==> c? / c/\ c<= f0 b0 c<= b0 f1 c<= f0 f1
+ |- (~ (~ (((int_le (int_of_num (NUMERAL _0))) _3496719) ==> (((int_le (int_of_num (NUMERAL _0))) _3496720) ==> ((((int_le ((int_add _3496719) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _3496720) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le _3496719) _3496720)) \/ ((~ ((int_le ((int_add _3496719) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add _3496720) (int_of_num (NUMERAL (BIT1 _0)))))) /\ (~ ((int_le _3496719) _3496720))))))))
T c~ c~ c==> cint_le cint_of_num cNUMERAL c_0 f0 c==> cint_le cint_of_num cNUMERAL c_0 f1 c\/ c/\ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 cint_le f0 f1 c/\ c~ cint_le cint_add f0 cint_of_num cNUMERAL cBIT1 c_0 cint_add f1 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le f0 f1
+ |- (((!k. (!ul. ((((barV V) k) ul) ==> ((HD ul) IN (set_of_list ul))))) ==> ((\k. (!ul. ((((barV V) k) ul) ==> ((HD ul) IN (set_of_list ul))))) i)) = ((\k. (!ul. ((((barV V) k) ul) ==> ((HD ul) IN (set_of_list ul))))) i))
T c= c==> ! ! c==> cbarV f0 b0 b1 cIN cHD b1 * part cset_of_list b1 * / ! c==> cbarV f0 b0 b1 cIN cHD b1 * part cset_of_list b1 f1 * / ! c==> cbarV f0 b0 b1 cIN cHD b1 * part cset_of_list b1 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (i <= k) |- (((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) = (((i + (NUMERAL (BIT1 _0))) <= (k + (NUMERAL (BIT1 _0)))) /\ ((k + (NUMERAL (BIT1 _0))) <= (LENGTH ul))))
T c==> c<= f0 f1 c= c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2 c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 c+ f1 cNUMERAL cBIT1 c_0 c<= c+ f1 cNUMERAL cBIT1 c_0 cLENGTH f2
+ |- (((NUMERAL (BIT1 _0)) = (NUMERAL _0)) = F)
T c= c= cNUMERAL cBIT1 c_0 cNUMERAL c_0 cF
- |- ((?p0. ((circumcenter S) = p0)) ==> (?p0. ((circumcenter S) = p0)))
T c==> c? / c= ccircumcenter f0 b0 c? / c= ccircumcenter f0 b0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (packing V), ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))), (i <= k), (((barV V) k) ul) |- (((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))) /\ ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul))))
T c==> cpacking f0 c==> c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> c<= f2 f3 c==> cbarV f0 f3 f1 c/\ c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> ! c==> cIN b0 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b0 chl f1 creal_le chl ctruncate_simplex f2 f1 chl f1
- |- ((((\p0. ((circumcenter S) = p0)) p0) ==> (?p0. ((circumcenter S) = p0))) = T)
T c= c==> * / c= ccircumcenter f0 b0 f1 c? / c= ccircumcenter f0 b0 cT
+ ((\k. ((packing V) /\ (((barV V) k) ul))) k) |- ((((packing V) /\ (((barV V) k) ul)) ==> ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))) = ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul)))))
T c==> * / c/\ cpacking f0 cbarV f0 b0 f1 f2 c= c==> c/\ cpacking f0 cbarV f0 f2 f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 cIN ccircumcenter * part cset_of_list f1 * * part chull part caffine * part cset_of_list f1 c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 cIN ccircumcenter * part cset_of_list f1 * * part chull part caffine * part cset_of_list f1
+ |- ((\V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))) V)
T * / ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2 f0
+ ((\S. (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) S) |- (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))
T c==> * / c? / c/\ cIN f0 b0 c/\ c= f1 cvector_add f2 b1 c/\ cIN f2 * * part chull part caffine b0 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 f3 c? / c/\ cIN f0 f3 c/\ c= f1 cvector_add f2 b0 c/\ cIN f2 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
+ (!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) |- (((!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) ==> ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k)) = ((\k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))) k))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 c= c==> ! ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2 * / ! c==> c/\ cbarV f0 b0 b1 c<= f1 b0 cbarV f0 f1 ctruncate_simplex f1 b1 f2
+ |- ((\ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul))))))) ul)
T * / ! c==> c/\ cpacking f0 cbarV f0 b1 b0 ! c==> cIN b2 * part cset_of_list b0 c= cdistance c, ccircumcenter * part cset_of_list b0 b2 chl b0 f1
+ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))), (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), (p = ((vector_add p0) n)), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)) |- (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))
T c==> ! ! c==> c/\ cIN b0 f0 cIN b1 f0 c= cdot cvector_sub b0 b1 f1 creal_of_num cNUMERAL c_0 c==> cpacking f2 c==> c= * part cset_of_list ctruncate_simplex f3 f4 f0 c==> c= f5 cvector_add f6 f1 c==> c= cHD ctruncate_simplex f3 f4 cHD f4 c==> c= ccircumcenter f0 f6 c==> cbarV f2 f3 ctruncate_simplex f3 f4 c/\ cIN cHD f4 f0 c/\ c= f5 cvector_add f6 f1 c/\ cIN f6 * * part chull part caffine f0 ! ! c==> c/\ cIN b0 f0 cIN b1 f0 c= cdot cvector_sub b0 b1 f1 creal_of_num cNUMERAL c_0
+ |- ((int_of_num (m + n)) = ((int_add (int_of_num m)) (int_of_num n)))
T c= cint_of_num c+ f0 f1 cint_add cint_of_num f0 cint_of_num f1
+ |- (((!x. ((x IN P) = (P x))) ==> ((\x. ((x IN P) = (P x))) x)) = ((\x. ((x IN P) = (P x))) x))
T c= c==> ! c= cIN b0 f0 * f0 b0 * / c= cIN b0 f0 * f0 b0 f1 * / c= cIN b0 f0 * f0 b0 f1
+ |- (((real_add (real_of_num m)) (real_neg (real_of_num m))) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_of_num f0 creal_neg creal_of_num f0 creal_of_num cNUMERAL c_0
+ (packing V), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f1 ctruncate_simplex f1 f3 c==> cbarV f0 f2 f3 c==> * / c= * part cset_of_list ctruncate_simplex f1 f3 b0 f4 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
+ |- ((!V. (!r. (!k. (!zl. (((((barV V) k) zl) /\ (r <= k)) ==> (((barV V) r) ((truncate_simplex r) zl))))))) ==> (!V. (!r. (!zl. ((?k. ((((barV V) k) zl) /\ (r <= k))) ==> (((barV V) r) ((truncate_simplex r) zl)))))))
T c==> ! ! ! ! c==> c/\ cbarV b0 b2 b3 c<= b1 b2 cbarV b0 b1 ctruncate_simplex b1 b3 ! ! ! c==> c? / c/\ cbarV b0 b3 b2 c<= b1 b3 cbarV b0 b1 ctruncate_simplex b1 b2
+ |- ((\k. (!ul. ((((barV V) k) ul) ==> ((HD ul) IN (set_of_list ul))))) i)
T * / ! c==> cbarV f0 b0 b1 cIN cHD b1 * part cset_of_list b1 f1
+ (packing V), (i <= k), (((barV V) k) ul) |- ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ==> ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f2 f3 c==> ! c==> cIN b0 * part cset_of_list f3 c= cdistance c, ccircumcenter * part cset_of_list f3 b0 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 creal_le chl ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
+ |- (((int_le (int_of_num (NUMERAL _0))) (int_of_num k)) ==> ((((int_le ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0))))) /\ ((int_le (int_of_num i)) (int_of_num k))) \/ ((~ ((int_le ((int_add (int_of_num i)) (int_of_num (NUMERAL (BIT1 _0))))) ((int_add (int_of_num k)) (int_of_num (NUMERAL (BIT1 _0)))))) /\ (~ ((int_le (int_of_num i)) (int_of_num k))))))
T c==> cint_le cint_of_num cNUMERAL c_0 cint_of_num f0 c\/ c/\ cint_le cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 cint_le cint_of_num f1 cint_of_num f0 c/\ c~ cint_le cint_add cint_of_num f1 cint_of_num cNUMERAL cBIT1 c_0 cint_add cint_of_num f0 cint_of_num cNUMERAL cBIT1 c_0 c~ cint_le cint_of_num f1 cint_of_num f0
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)) |- (!n. (((\n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))) n) ==> (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> cbarV f0 f1 ctruncate_simplex f1 f2 ! c==> * / c/\ c= f5 cvector_add f4 b1 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b1 creal_of_num cNUMERAL c_0 b0 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b1 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b1 creal_of_num cNUMERAL c_0
+ |- (((!j. (!ul. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) ==> ((\j. (!ul. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) j)) = ((\j. (!ul. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) j))
T c= c==> ! ! c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH b1 c= cHD ctruncate_simplex b0 b1 cHD b1 * / ! c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH b1 c= cHD ctruncate_simplex b0 b1 cHD b1 f0 * / ! c==> c<= c+ b0 cNUMERAL cBIT1 c_0 cLENGTH b1 c= cHD ctruncate_simplex b0 b1 cHD b1 f0
+ (packing V), (((barV V) k) ul) |- ((((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))) ==> ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul)))) = ((((packing V) /\ (((barV V) k) ul)) ==> ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))) ==> ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul)))))
T c==> cpacking f0 c==> cbarV f0 f1 f2 c= c==> c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2 c==> ! c==> cIN b0 * part cset_of_list f2 c= cdistance c, ccircumcenter * part cset_of_list f2 b0 chl f2 creal_le chl ctruncate_simplex f3 f2 chl f2 c==> c==> c/\ cpacking f0 cbarV f0 f1 f2 c= chl f2 cdistance c, ccircumcenter * part cset_of_list f2 cHD f2 c==> ! c==> cIN b0 * part cset_of_list f2 c= cdistance c, ccircumcenter * part cset_of_list f2 b0 chl f2 creal_le chl ctruncate_simplex f3 f2 chl f2
+ |- (((((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) \/ (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0))))))) ==> F)
T c==> c\/ c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 cF
+ (?n. ((m <= n) /\ (n <= p))) |- ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p))
T c==> c? / c/\ c<= f0 b0 c<= b0 f1 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f1
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- (((NUMERAL _0) < (LENGTH vl)) = T)
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= c< cNUMERAL c_0 cLENGTH f0 cT
+ ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) |- (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) /\ ((!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))
T c==> c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 f4 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b0 f1 cIN b1 f1 c= cdot cvector_sub b0 b1 f4 creal_of_num cNUMERAL c_0 c/\ c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 f4 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b0 f1 cIN b1 f1 c= cdot cvector_sub b0 b1 f4 creal_of_num cNUMERAL c_0 c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 creal_le cdistance c, f3 f0 cdistance c, f2 f0
+ |- ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))))) k)
T * / c==> c/\ cpacking f0 cbarV f0 b0 f1 ! c==> cIN b1 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b1 chl f1 f2
- |- ((?n. t) = t)
T c= c? / f0 f0
+ |- ((\V. ((((barV V) k) ul) = (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))))) V)
T * / c= cbarV b0 f0 f1 c/\ c= cLENGTH f1 c+ f0 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b1 f1 c< cNUMERAL c_0 cLENGTH b1 cvoronoi_nondg b0 b1 f2
+ |- ((?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))) = ((\S. (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))) S))
T c= c? / c/\ cIN cHD f0 f1 c/\ c= f2 cvector_add f3 b0 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b1 f1 cIN b2 f1 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 * / c? / c/\ cIN cHD f0 b0 c/\ c= f2 cvector_add f3 b1 c/\ cIN f3 * * part chull part caffine b0 ! ! c==> c/\ cIN b2 b0 cIN b3 b0 c= cdot cvector_sub b2 b3 b1 creal_of_num cNUMERAL c_0 f1
+ |- (((m <= n) /\ (n <= p)) ==> ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p)))
T c==> c/\ c<= f0 f1 c<= f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f2
+ (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))), (((barV V) i) ((truncate_simplex i) ul)) |- (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))
T c==> cpacking f0 c==> c= * part cset_of_list ctruncate_simplex f1 f2 f3 c==> c= cHD ctruncate_simplex f1 f2 cHD f2 c==> c= ccircumcenter f3 f4 c==> c/\ c= f5 cvector_add f4 f6 ! ! c==> c/\ cIN b0 f3 cIN b1 f3 c= cdot cvector_sub b0 b1 f6 creal_of_num cNUMERAL c_0 c==> cbarV f0 f1 ctruncate_simplex f1 f2 c? / c/\ cIN cHD f2 f3 c/\ c= f5 cvector_add f4 b0 c/\ cIN f4 * * part chull part caffine f3 ! ! c==> c/\ cIN b1 f3 cIN b2 f3 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), ((hl ul) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))), (i <= k), (((barV V) k) ul) |- ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))) ==> ((real_le (hl ((truncate_simplex i) ul))) (hl ul)))
T c==> cpacking f0 c==> c= chl f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 c==> c<= f2 f3 c==> cbarV f0 f3 f1 c==> ! c==> cIN b0 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b0 chl f1 creal_le chl ctruncate_simplex f2 f1 chl f1
+ |- ((\P. (!x. ((x IN P) = (P x)))) P)
T * / ! c= cIN b1 b0 * b0 b1 f0
- ((set_of_list ((truncate_simplex i) ul)) = S) |- (((set_of_list ((truncate_simplex i) ul)) = S) /\ (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))
T c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 c/\ c= * part cset_of_list ctruncate_simplex f0 f1 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
+ (packing V), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul), ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) |- (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) /\ ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f1 ctruncate_simplex f1 f3 c==> cbarV f0 f2 f3 c==> * / c= * part cset_of_list ctruncate_simplex f1 f3 b0 f4 c/\ * / c= * part cset_of_list ctruncate_simplex f1 f3 b0 f4 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
+ |- (((!k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))))) ==> ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))))) k)) = ((\k. (((packing V) /\ (((barV V) k) ul)) ==> (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (hl ul)))))) k))
T c= c==> ! c==> c/\ cpacking f0 cbarV f0 b0 f1 ! c==> cIN b1 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b1 chl f1 * / c==> c/\ cpacking f0 cbarV f0 b0 f1 ! c==> cIN b1 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b1 chl f1 f2 * / c==> c/\ cpacking f0 cbarV f0 b0 f1 ! c==> cIN b1 * part cset_of_list f1 c= cdistance c, ccircumcenter * part cset_of_list f1 b1 chl f1 f2
+ (!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) |- (((?n. ((m <= n) /\ (n <= p))) ==> (m <= p)) = T)
T c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c= c==> c? / c/\ c<= f0 b0 c<= b0 f1 c<= f0 f1 cT
+ (!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))), ((packing V) /\ (((barV V) k) ul)) |- ((!V. (!ul. (!k. (((packing V) /\ (((barV V) k) ul)) ==> ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))))) /\ ((circumcenter (set_of_list ul)) IN ((hull affine) (set_of_list ul))))
T c==> ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 c==> c/\ cpacking f0 cbarV f0 f1 f2 c/\ ! ! ! c==> c/\ cpacking b0 cbarV b0 b2 b1 cIN ccircumcenter * part cset_of_list b1 * * part chull part caffine * part cset_of_list b1 cIN ccircumcenter * part cset_of_list f2 * * part chull part caffine * part cset_of_list f2
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (?p0. ((circumcenter S) = p0))
T c? / c= ccircumcenter f0 b0
+ ((\n. ((m <= n) /\ (n <= p))) n) |- (((\n. ((m <= n) /\ (n <= p))) n) /\ ((!m. (!n. (!p. (((m <= n) /\ (n <= p)) ==> (m <= p))))) ==> (m <= p)))
T c==> * / c/\ c<= f0 b0 c<= b0 f1 f2 c/\ * / c/\ c<= f0 b0 c<= b0 f1 f2 c==> ! ! ! c==> c/\ c<= b0 b1 c<= b1 b2 c<= b0 b2 c<= f0 f1
+ (i <= k), (((barV V) k) ul) |- ((i + (NUMERAL (BIT1 _0))) <= (LENGTH ul))
T c==> c<= f0 f1 c==> cbarV f2 f1 f3 c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (packing V), ((((barV V) k) ul) /\ (i <= k)), (((barV V) k) ul) |- ((real_le (hl ((truncate_simplex i) ul))) (hl ul))
T c==> cpacking f0 c==> c/\ cbarV f0 f1 f2 c<= f3 f1 c==> cbarV f0 f1 f2 creal_le chl ctruncate_simplex f3 f2 chl f2
+ (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), (packing V), (i <= k), (((barV V) k) ul) |- ((!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) /\ ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> cpacking f1 c==> c<= f2 f3 c==> cbarV f1 f3 f0 c/\ ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 creal_le chl ctruncate_simplex f2 f0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
+ ((hl ((truncate_simplex i) ul)) = (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) |- (((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))) = ((real_le (hl ((truncate_simplex i) ul))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> c= chl ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f0 f1 cHD ctruncate_simplex f0 f1 c= creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f0 f1 cHD ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1 creal_le chl ctruncate_simplex f0 f1 cdistance c, ccircumcenter * part cset_of_list f1 cHD f1
+ (packing V), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (((!x. (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) x) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) ==> ((?S. ((set_of_list ((truncate_simplex i) ul)) = S)) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) = ((?S. ((set_of_list ((truncate_simplex i) ul)) = S)) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f1 ctruncate_simplex f1 f3 c==> cbarV f0 f2 f3 c= c==> ! c==> * / c= * part cset_of_list ctruncate_simplex f1 f3 b1 b0 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> c? / c= * part cset_of_list ctruncate_simplex f1 f3 b0 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3 c==> c? / c= * part cset_of_list ctruncate_simplex f1 f3 b0 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
+ (packing V), (i <= k), (((barV V) i) ((truncate_simplex i) ul)), (((barV V) k) ul) |- (!S. (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) ==> ((real_le (distance ((circumcenter (set_of_list ((truncate_simplex i) ul))) , (HD ((truncate_simplex i) ul))))) (distance ((circumcenter (set_of_list ul)) , (HD ul))))))
T c==> cpacking f0 c==> c<= f1 f2 c==> cbarV f0 f1 ctruncate_simplex f1 f3 c==> cbarV f0 f2 f3 ! c==> * / c= * part cset_of_list ctruncate_simplex f1 f3 b1 b0 creal_le cdistance c, ccircumcenter * part cset_of_list ctruncate_simplex f1 f3 cHD ctruncate_simplex f1 f3 cdistance c, ccircumcenter * part cset_of_list f3 cHD f3
- |- (((set_of_list ((truncate_simplex i) ul)) = S) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))
T c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((circumcenter (set_of_list ul)) = p) |- ((\p. ((circumcenter (set_of_list ul)) = p)) p)
T c==> c= ccircumcenter * part cset_of_list f0 f1 * / c= ccircumcenter * part cset_of_list f0 b0 f1
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), ((circumcenter (set_of_list ul)) = p) |- ((\w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul)))))) w)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= ccircumcenter * part cset_of_list f0 f1 * / c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0 f2
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720)))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) /\ (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl)))
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c/\ c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((!x. (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) x) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))) ==> ((?S. ((set_of_list ((truncate_simplex i) ul)) = S)) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))) = ((?S. ((set_of_list ((truncate_simplex i) ul)) = S)) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S))))
T c= c==> ! c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b1 b0 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b1 c==> c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 c==> c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- |- ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((circumcenter S) = p0) = ((\p0. ((circumcenter S) = p0)) p0))
T c= c= ccircumcenter f0 f1 * / c= ccircumcenter f0 b0 f1
- |- ((real_neg (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = T))
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c==> c/\ cinitial_sublist f3 f0 c< cNUMERAL c_0 cLENGTH f3 c= cvoronoi_nondg f2 f3 cT
- |- ((?p. ((circumcenter (set_of_list ul)) = p)) ==> (?p. ((circumcenter (set_of_list ul)) = p)))
T c==> c? / c= ccircumcenter * part cset_of_list f0 b0 c? / c= ccircumcenter * part cset_of_list f0 b0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) |- ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl)
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 * / c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 f3
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- ((!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) ==> ((HD ((truncate_simplex j) ul)) = (HD ul)))
T c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c==> ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 c= cHD ctruncate_simplex f0 f1 cHD f1
- ((\p. ((circumcenter (set_of_list ul)) = p)) p) |- (((\p. ((circumcenter (set_of_list ul)) = p)) p) /\ (?p. ((circumcenter (set_of_list ul)) = p)))
T c==> * / c= ccircumcenter * part cset_of_list f0 b0 f1 c/\ * / c= ccircumcenter * part cset_of_list f0 b0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0
- |- ((((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S))) = T)
T c= c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 cT
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((\p0. ((circumcenter S) = p0)) p0) |- (((\p0. ((circumcenter S) = p0)) p0) /\ (?p0. ((circumcenter S) = p0)))
T c==> * / c= ccircumcenter f0 b0 f1 c/\ * / c= ccircumcenter f0 b0 f1 c? / c= ccircumcenter f0 b0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), ((circumcenter (set_of_list ul)) = p) |- (((!w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul)))))) ==> ((\w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul)))))) w)) = ((\w. ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul)))))) w))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= ccircumcenter * part cset_of_list f0 f1 c= c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0 * / c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0 f2 * / c==> cIN b0 * part cset_of_list f0 c= cdistance c, f1 b0 cdistance c, f1 cHD f0 f2
- |- (((!x. (((\p. ((circumcenter (set_of_list ul)) = p)) x) ==> (?p. ((circumcenter (set_of_list ul)) = p)))) ==> ((?p. ((circumcenter (set_of_list ul)) = p)) ==> (?p. ((circumcenter (set_of_list ul)) = p)))) = ((?p. ((circumcenter (set_of_list ul)) = p)) ==> (?p. ((circumcenter (set_of_list ul)) = p))))
T c= c==> ! c==> * / c= ccircumcenter * part cset_of_list f0 b1 b0 c? / c= ccircumcenter * part cset_of_list f0 b1 c==> c? / c= ccircumcenter * part cset_of_list f0 b0 c? / c= ccircumcenter * part cset_of_list f0 b0 c==> c? / c= ccircumcenter * part cset_of_list f0 b0 c? / c= ccircumcenter * part cset_of_list f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?S. ((set_of_list ((truncate_simplex i) ul)) = S)) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))
T c==> c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) |- ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> cIN f1 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 f1 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0
- |- ((real_of_num (NUMERAL (BIT0 (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((circumcenter S) = p0) |- ((\p0. ((circumcenter S) = p0)) p0)
T c==> c= ccircumcenter f0 f1 * / c= ccircumcenter f0 b0 f1
- |- (!p. (((\p. ((circumcenter (set_of_list ul)) = p)) p) ==> (?p. ((circumcenter (set_of_list ul)) = p))))
T c==> * / c= ccircumcenter * part cset_of_list f0 b0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0
- (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))), (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- ((voronoi_nondg V) vl)
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c==> c/\ cinitial_sublist f3 f0 c< cNUMERAL c_0 cLENGTH f3 cvoronoi_nondg f2 f3
- (!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))), ((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) /\ ((HD ((truncate_simplex j) ul)) = (HD ul)))
T c==> ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c= cHD ctruncate_simplex f0 f1 cHD f1
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> q')))
T c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 f3 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f3
- |- ((((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl))) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) = (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))))
T c= c==> c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), ((circumcenter (set_of_list ul)) = p) |- ((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul)))))
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= ccircumcenter * part cset_of_list f0 f1 c==> cIN f2 * part cset_of_list f0 c= cdistance c, f1 f2 cdistance c, f1 cHD f0
- ((circumcenter (set_of_list ul)) = p) |- (((circumcenter (set_of_list ul)) = p) /\ (?p. ((circumcenter (set_of_list ul)) = p)))
T c==> c= ccircumcenter * part cset_of_list f0 f1 c/\ c= ccircumcenter * part cset_of_list f0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720)))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- (((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) |- (((initial_sublist vl) ul) = T)
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cinitial_sublist f0 f1 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. (((\p0. ((circumcenter S) = p0)) x) ==> (?p0. ((circumcenter S) = p0)))) ==> ((?p0. ((circumcenter S) = p0)) ==> (?p0. ((circumcenter S) = p0)))) = ((?p0. ((circumcenter S) = p0)) ==> (?p0. ((circumcenter S) = p0))))
T c= c==> ! c==> * / c= ccircumcenter f0 b1 b0 c? / c= ccircumcenter f0 b1 c==> c? / c= ccircumcenter f0 b0 c? / c= ccircumcenter f0 b0 c==> c? / c= ccircumcenter f0 b0 c? / c= ccircumcenter f0 b0
- |- ((\q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q'))))) q')
T * / c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 f2 c==> c==> f2 c= cvoronoi_nondg f3 f0 b0 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f3 f0 c==> f2 b0 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((set_of_list ((truncate_simplex i) ul)) = S) = ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S))
T c= c= * part cset_of_list ctruncate_simplex f0 f1 f2 * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2
- |- (((NUMERAL (BIT0 (BIT1 _0))) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT0 (BIT1 _0))))
T c= c* cNUMERAL cBIT0 cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT0 cBIT1 c_0
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3
- ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) |- (((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) /\ (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))
T c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c/\ * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0)))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- (?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))) |- ((?n. ((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))))) /\ ((!S. (!p. (!v. (!x. (!n. (((v IN S) /\ ((p = ((vector_add x) n)) /\ ((x IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))) ==> ((real_le (distance (x , v))) (distance (p , v))))))))) ==> ((real_le (distance (x , v))) (distance (p , v)))))
T c==> c? / c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 b0 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b1 f1 cIN b2 f1 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c/\ c? / c/\ cIN f0 f1 c/\ c= f2 cvector_add f3 b0 c/\ cIN f3 * * part chull part caffine f1 ! ! c==> c/\ cIN b1 f1 cIN b2 f1 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c==> ! ! ! ! ! c==> c/\ cIN b2 b0 c/\ c= b1 cvector_add b3 b4 c/\ cIN b3 * * part chull part caffine b0 ! ! c==> c/\ cIN b5 b0 cIN b5 b0 c= cdot cvector_sub b5 b5 b4 creal_of_num cNUMERAL c_0 creal_le cdistance c, b3 b2 cdistance c, b1 b2 creal_le cdistance c, f3 f0 cdistance c, f2 f0
- (!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))), ((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) |- ((!ul. (!j. (((j + (NUMERAL (BIT1 _0))) <= (LENGTH ul)) ==> ((HD ((truncate_simplex j) ul)) = (HD ul))))) /\ ((HD ((truncate_simplex j) ul)) = (HD ul)))
T c==> ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 c==> c<= c+ f0 cNUMERAL cBIT1 c_0 cLENGTH f1 c/\ ! ! c==> c<= c+ b1 cNUMERAL cBIT1 c_0 cLENGTH b0 c= cHD ctruncate_simplex b1 b0 cHD b0 c= cHD ctruncate_simplex f0 f1 cHD f1
- ((set_of_list ((truncate_simplex i) ul)) = S) |- ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S)
T c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> (((voronoi_nondg V) vl) = ((voronoi_nondg V) vl)))
T c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 c= cvoronoi_nondg f2 f0 cvoronoi_nondg f2 f0
- |- (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (!p0. (((\p0. ((circumcenter S) = p0)) p0) ==> (?p0. ((circumcenter S) = p0))))
T c==> * / c= ccircumcenter f0 b0 f1 c? / c= ccircumcenter f0 b0
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- ((circumcenter S) = p0) |- (((circumcenter S) = p0) /\ (?p0. ((circumcenter S) = p0)))
T c==> c= ccircumcenter f0 f1 c/\ c= ccircumcenter f0 f1 c? / c= ccircumcenter f0 b0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))), ((circumcenter (set_of_list ul)) = p) |- (((w IN (set_of_list ul)) ==> ((distance (p , w)) = (distance (p , (HD ul))))) = T)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c==> c= ccircumcenter * part cset_of_list f0 f1 c= c==> cIN f2 * part cset_of_list f0 c= cdistance c, f1 f2 cdistance c, f1 cHD f0 cT
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- ((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0
- |- (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))
T c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0
- (((real_ge (real_of_int _3496719)) (real_of_num (NUMERAL _0))) /\ (((real_ge (real_of_int _3496720)) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496719))) (real_of_int _3496720))) (real_of_num (NUMERAL _0)))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add (real_of_int _3496719)) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_int _3496720))) (real_neg (real_of_num (NUMERAL (BIT1 _0))))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_of_int f0 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f0 creal_of_int f1 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_of_int f0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_int f1 creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- (((!p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) = p') ==> ((p' ==> (((voronoi_nondg V) vl) = q')) ==> (((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3 * / ! c==> c= c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 b0 c==> c==> b0 c= cvoronoi_nondg f2 f0 b1 c= c==> c/\ cinitial_sublist f0 f1 c< cNUMERAL c_0 cLENGTH f0 cvoronoi_nondg f2 f0 c==> b0 b1 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((\p. ((circumcenter (set_of_list ul)) = p)) p) ==> (?p. ((circumcenter (set_of_list ul)) = p))) = T)
T c= c==> * / c= ccircumcenter * part cset_of_list f0 b0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- (?n. ((p = ((vector_add p0) n)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0)))))))), (packing V), ((set_of_list ((truncate_simplex i) ul)) = S), ((HD ((truncate_simplex i) ul)) = (HD ul)), ((circumcenter S) = p0), (((barV V) i) ((truncate_simplex i) ul)) |- (?n. (((HD ul) IN S) /\ ((p = ((vector_add p0) n)) /\ ((p0 IN ((hull affine) S)) /\ (!v. (!w. (((v IN S) /\ (w IN S)) ==> (((dot ((vector_sub v) w)) n) = (real_of_num (NUMERAL _0))))))))))
T c==> c? / c/\ c= f0 cvector_add f1 b0 ! ! c==> c/\ cIN b1 f2 cIN b2 f2 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0 c==> cpacking f3 c==> c= * part cset_of_list ctruncate_simplex f4 f5 f2 c==> c= cHD ctruncate_simplex f4 f5 cHD f5 c==> c= ccircumcenter f2 f1 c==> cbarV f3 f4 ctruncate_simplex f4 f5 c? / c/\ cIN cHD f5 f2 c/\ c= f0 cvector_add f1 b0 c/\ cIN f1 * * part chull part caffine f2 ! ! c==> c/\ cIN b1 f2 cIN b2 f2 c= cdot cvector_sub b1 b2 b0 creal_of_num cNUMERAL c_0
- (((LENGTH ul) = (k + (NUMERAL (BIT1 _0)))) /\ (!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl)))) |- (((!vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) ==> ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl)) = ((\vl. ((((initial_sublist vl) ul) /\ ((NUMERAL _0) < (LENGTH vl))) ==> ((voronoi_nondg V) vl))) vl))
T c==> c/\ c= cLENGTH f0 c+ f1 cNUMERAL cBIT1 c_0 ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 c= c==> ! c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 * / c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 f3 * / c==> c/\ cinitial_sublist b0 f0 c< cNUMERAL c_0 cLENGTH b0 cvoronoi_nondg f2 b0 f3
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_le ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_le ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_le creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_le creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT0 (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT0 cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((real_lt (real_of_num m)) (real_of_num n)) = (m < n))
T c= creal_lt creal_of_num f0 creal_of_num f1 c< f0 f1
- (!w. ((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul)))))) |- (((w IN (set_of_list ul)) ==> ((distance ((circumcenter (set_of_list ul)) , w)) = (distance ((circumcenter (set_of_list ul)) , (HD ul))))) = T)
T c==> ! c==> cIN b0 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 b0 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 c= c==> cIN f1 * part cset_of_list f0 c= cdistance c, ccircumcenter * part cset_of_list f0 f1 cdistance c, ccircumcenter * part cset_of_list f0 cHD f0 cT
- |- (((circumcenter (set_of_list ul)) = p) ==> (?p. ((circumcenter (set_of_list ul)) = p)))
T c==> c= ccircumcenter * part cset_of_list f0 f1 c? / c= ccircumcenter * part cset_of_list f0 b0
- ((\S. ((set_of_list ((truncate_simplex i) ul)) = S)) S) |- ((((set_of_list ((truncate_simplex i) ul)) = S) ==> (?S. ((set_of_list ((truncate_simplex i) ul)) = S))) = (?S. ((set_of_list ((truncate_simplex i) ul)) = S)))
T c==> * / c= * part cset_of_list ctruncate_simplex f0 f1 b0 f2 c= c==> c= * part cset_of_list ctruncate_simplex f0 f1 f2 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0 c? / c= * part cset_of_list ctruncate_simplex f0 f1 b0
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((circumcenter S) = p0) ==> (?p0. ((circumcenter S) = p0)))
T c==> c= ccircumcenter f0 f1 c? / c= ccircumcenter f0 b0
- |- (((((real_mul ((real_add ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
