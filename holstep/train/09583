N Float.INTERVAL_NUM
C |- (!n. (((interval_eps (real_of_num n)) ((float (int_of_num n)) (int_of_num (NUMERAL _0)))) ((float (int_of_num (NUMERAL _0))) (int_of_num (NUMERAL _0)))))
T cinterval_eps creal_of_num f0 cfloat cint_of_num f0 cint_of_num cNUMERAL c_0 cfloat cint_of_num cNUMERAL c_0 cint_of_num cNUMERAL c_0
D TRUTH
A |- T
T cT
D REAL_LE_REFL
A |- (!x. ((real_le x) x))
T creal_le f0 f0
D REAL_MUL_RID
A |- (!x. (((real_mul x) (real_of_num (NUMERAL (BIT1 _0)))) = x))
T c= creal_mul f0 creal_of_num cNUMERAL cBIT1 c_0 f0
D REAL_SUB_REFL
A |- (!x. (((real_sub x) x) = (real_of_num (NUMERAL _0))))
T c= creal_sub f0 f0 creal_of_num cNUMERAL c_0
D REAL_ABS_0
A |- ((real_abs (real_of_num (NUMERAL _0))) = (real_of_num (NUMERAL _0)))
T c= creal_abs creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
D Num_ext_nabs.INT_NUM_REAL
A |- (!u. ((real_of_int (int_of_num u)) = (real_of_num u)))
T c= creal_of_int cint_of_num f0 creal_of_num f0
D Float.float
A |- (!x. (!n. (((float x) n) = ((real_mul (real_of_int x)) (twopow n)))))
T c= cfloat f0 f1 creal_mul creal_of_int f0 ctwopow f1
D Float.interval_eps
A |- (!x. (!f. (!eps. ((((interval_eps x) f) eps) = ((real_le (real_abs ((real_sub x) f))) eps)))))
T c= cinterval_eps f0 f1 f2 creal_le creal_abs creal_sub f0 f1 f2
D Float.TWOPOW_0
A |- ((twopow (int_of_num (NUMERAL _0))) = (real_of_num (NUMERAL (BIT1 _0))))
T c= ctwopow cint_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) ==> ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n)) = ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n))
T c= c==> ! c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1 * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1
+ |- (T = (!n. (((interval_eps (real_of_num n)) ((float (int_of_num n)) (int_of_num (NUMERAL _0)))) ((float (int_of_num (NUMERAL _0))) (int_of_num (NUMERAL _0))))))
T c= cT ! cinterval_eps creal_of_num b0 cfloat cint_of_num b0 cint_of_num cNUMERAL c_0 cfloat cint_of_num cNUMERAL c_0 cint_of_num cNUMERAL c_0
+ |- ((\u. ((real_of_int (int_of_num u)) = (real_of_num u))) u)
T * / c= creal_of_int cint_of_num b0 creal_of_num b0 f0
+ |- ((\f. (!eps. ((((interval_eps x) f) eps) = ((real_le (real_abs ((real_sub x) f))) eps)))) f)
T * / ! c= cinterval_eps f0 b0 b1 creal_le creal_abs creal_sub f0 b0 b1 f1
+ |- ((!n. t) = t)
T c= ! f0 f0
- |- ((twopow (int_of_num n)) = ((real_pow (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) n))
T c= ctwopow cint_of_num f0 creal_pow creal_of_num cNUMERAL cBIT0 cBIT1 c_0 f0
- |- ((\n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))) n)
T * / c= creal_pow f0 cSUC b0 creal_mul f0 creal_pow f0 b0 f1
+ |- (((!x. (!f. (!eps. ((((interval_eps x) f) eps) = ((real_le (real_abs ((real_sub x) f))) eps))))) ==> ((\x. (!f. (!eps. ((((interval_eps x) f) eps) = ((real_le (real_abs ((real_sub x) f))) eps))))) x)) = ((\x. (!f. (!eps. ((((interval_eps x) f) eps) = ((real_le (real_abs ((real_sub x) f))) eps))))) x))
T c= c==> ! ! ! c= cinterval_eps b0 b1 b2 creal_le creal_abs creal_sub b0 b1 b2 * / ! ! c= cinterval_eps b0 b1 b2 creal_le creal_abs creal_sub b0 b1 b2 f0 * / ! ! c= cinterval_eps b0 b1 b2 creal_le creal_abs creal_sub b0 b1 b2 f0
+ |- ((\x. (((real_sub x) x) = (real_of_num (NUMERAL _0)))) x)
T * / c= creal_sub b0 b0 creal_of_num cNUMERAL c_0 f0
+ |- (((!u. ((real_of_int (int_of_num u)) = (real_of_num u))) ==> ((\u. ((real_of_int (int_of_num u)) = (real_of_num u))) u)) = ((\u. ((real_of_int (int_of_num u)) = (real_of_num u))) u))
T c= c==> ! c= creal_of_int cint_of_num b0 creal_of_num b0 * / c= creal_of_int cint_of_num b0 creal_of_num b0 f0 * / c= creal_of_int cint_of_num b0 creal_of_num b0 f0
- |- ((\n. ((twopow (int_of_num n)) = ((real_pow (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) n))) n)
T * / c= ctwopow cint_of_num b0 creal_pow creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- |- (((!n. ((twopow (int_of_num n)) = ((real_pow (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) n))) ==> ((\n. ((twopow (int_of_num n)) = ((real_pow (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) n))) n)) = ((\n. ((twopow (int_of_num n)) = ((real_pow (real_of_num (NUMERAL (BIT0 (BIT1 _0))))) n))) n))
T c= c==> ! c= ctwopow cint_of_num b0 creal_pow creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 * / c= ctwopow cint_of_num b0 creal_pow creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0 * / c= ctwopow cint_of_num b0 creal_pow creal_of_num cNUMERAL cBIT0 cBIT1 c_0 b0 f0
- |- (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n)))
T c= creal_pow f0 cSUC f1 creal_mul f0 creal_pow f0 f1
- |- (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))
T c= creal_pow f0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
