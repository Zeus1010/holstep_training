N Hypermap.lemma_inverse_res
C |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y))))))
T c==> cIN f0 * * part cface f1 f2 c= cinverse * * part cres * part cface_map f1 * * part cface f1 f2 f0 cinverse * part cface_map f1 f0
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D o_ASSOC
A |- (!f. (!g. (!h. ((f o (g o h)) = ((f o g) o h)))))
T c= * * part co f0 * * part co f1 f2 * * part co * * part co f0 f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D I_O_ID
A |- (!f. (((I o f) = f) /\ ((f o I) = f)))
T c/\ c= * * part co part cI f0 f0 c= * * part co f0 part cI f0
D PERMUTES_INVERSES_o
A |- (!p. (!s. (((permutes p) s) ==> (((p o (inverse p)) = I) /\ (((inverse p) o p) = I)))))
T c==> cpermutes f0 f1 c/\ c= * * part co f0 * part cinverse f0 part cI c= * * part co * part cinverse f0 f0 part cI
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Hypermap.face_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (face_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cface_map f0 * part cdart f0
D Hypermap.RIGHT_MULT_MAP
A |- (!u. (!v. (!w. ((u = v) ==> ((u o w) = (v o w))))))
T c==> c= f0 f1 c= * * part co f0 f2 * * part co f1 f2
D Hypermap.inverse_element_lemma
A |- (!s. (!p. (((FINITE s) /\ ((permutes p) s)) ==> (?j. ((inverse p) = ((POWER p) j))))))
T c==> c/\ cFINITE f0 cpermutes f1 f0 c? / c= * part cinverse f1 * * part cPOWER f1 b0
D Hypermap.lemma_face_identity
A |- (!H. (!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))))
T c==> cIN f0 * * part cface f1 f2 c= * * part cface f1 f2 * * part cface f1 f0
D Hypermap.power_permutation_outside_domain
A |- (!s. (!p. (!x. (!n. ((((permutes p) s) /\ (~ (x IN s))) ==> ((((POWER p) n) x) = x))))))
T c==> c/\ cpermutes f0 f1 c~ cIN f2 f1 c= cPOWER f0 f3 f2 f2
D Hypermap.face_map_restrict
A |- (!H. (!x. ((permutes ((res (face_map H)) ((face H) x))) ((face H) x))))
T cpermutes * * part cres * part cface_map f0 * * part cface f0 f1 * * part cface f0 f1
D Hypermap.power_res_face_map
A |- (!H. (!x. (!n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x)))))
T c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f1 f2 f1 cPOWER * part cface_map f0 f2 f1
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ ((inverse (face_map H)) = ((POWER (face_map H)) j)) |- (((!w. (((inverse (face_map H)) o w) = (((POWER (face_map H)) j) o w))) ==> ((\w. (((inverse (face_map H)) o w) = (((POWER (face_map H)) j) o w))) (face_map H))) = ((\w. (((inverse (face_map H)) o w) = (((POWER (face_map H)) j) o w))) (face_map H)))
T c==> c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 f1 c= c==> ! c= * * part co * part cinverse * part cface_map f0 b0 * * part co * * part cPOWER * part cface_map f0 f1 b0 * / c= * * part co * part cinverse * part cface_map f0 b0 * * part co * * part cPOWER * part cface_map f0 f1 b0 * part cface_map f0 * / c= * * part co * part cinverse * part cface_map f0 b0 * * part co * * part cPOWER * part cface_map f0 f1 b0 * part cface_map f0
+ (~ (x IN ((face H) y))) |- ((x IN ((face H) y)) = F)
T c==> c~ cIN f0 * * part cface f1 f2 c= cIN f0 * * part cface f1 f2 cF
+ |- (((!x. (!n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x)))) ==> ((\x. (!n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x)))) x)) = ((\x. (!n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x)))) x))
T c= c==> ! ! c= cPOWER * * part cres * part cface_map f0 * * part cface f0 b0 b1 b0 cPOWER * part cface_map f0 b1 b0 * / ! c= cPOWER * * part cres * part cface_map f0 * * part cface f0 b0 b1 b0 cPOWER * part cface_map f0 b1 b0 f1 * / ! c= cPOWER * * part cres * part cface_map f0 * * part cface f0 b0 b1 b0 cPOWER * part cface_map f0 b1 b0 f1
+ |- (((!h. (((f o g) o h) = (f o (g o h)))) ==> ((\h. (((f o g) o h) = (f o (g o h)))) h)) = ((\h. (((f o g) o h) = (f o (g o h)))) h))
T c= c==> ! c= * * part co * * part co f0 f1 b0 * * part co f0 * * part co f1 b0 * / c= * * part co * * part co f0 f1 b0 * * part co f0 * * part co f1 b0 f2 * / c= * * part co * * part co f0 f1 b0 * * part co f0 * * part co f1 b0 f2
+ |- (((!x. (((\j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) x) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y)))) ==> ((?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y)))) = ((?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y))))
T c= c==> ! c==> * / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b1 b0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f1 cinverse * part cface_map f0 f1 c==> c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f1 cinverse * part cface_map f0 f1 c==> c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f1 cinverse * part cface_map f0 f1
+ ((~ (~ (x IN ((face H) y)))) ==> ((((POWER ((res (face_map H)) ((face H) y))) (SUC j)) x) = x)) |- ((((POWER ((res (face_map H)) ((face H) y))) (SUC j)) x) = x)
T c==> c==> c~ c~ cIN f0 * * part cface f1 f2 c= cPOWER * * part cres * part cface_map f1 * * part cface f1 f2 cSUC f3 f0 f0 c= cPOWER * * part cres * part cface_map f1 * * part cface f1 f2 cSUC f3 f0 f0
+ (~ (~ (x IN ((face H) y)))) |- (x IN ((face H) y))
T c==> c~ c~ cIN f0 * * part cface f1 f2 cIN f0 * * part cface f1 f2
+ |- ((\f. (!g. (!h. (((f o g) o h) = (f o (g o h)))))) f)
T * / ! ! c= * * part co * * part co b0 b1 b2 * * part co b0 * * part co b1 b2 f0
+ ((inverse (face_map H)) = ((POWER (face_map H)) j)), (((POWER ((res (face_map H)) ((face H) y))) (SUC j)) = I) |- (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y))
T c==> c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 f1 c==> c= * * part cPOWER * * part cres * part cface_map f0 * * part cface f0 f2 cSUC f1 part cI c= cinverse * * part cres * part cface_map f0 * * part cface f0 f2 f2 cinverse * part cface_map f0 f2
+ (~ (~ (x IN ((face H) y)))) |- (((x IN ((face H) y)) ==> ((((POWER ((res (face_map H)) ((face H) y))) (SUC j)) x) = x)) = ((((POWER ((res (face_map H)) ((face H) y))) (SUC j)) x) = x))
T c==> c~ c~ cIN f0 * * part cface f1 f2 c= c==> cIN f0 * * part cface f1 f2 c= cPOWER * * part cres * part cface_map f1 * * part cface f1 f2 cSUC f3 f0 f0 c= cPOWER * * part cres * part cface_map f1 * * part cface f1 f2 cSUC f3 f0 f0
+ |- (((!n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x))) ==> ((\n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x))) n)) = ((\n. ((((POWER ((res (face_map H)) ((face H) x))) n) x) = (((POWER (face_map H)) n) x))) n))
T c= c==> ! c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f1 b0 f1 cPOWER * part cface_map f0 b0 f1 * / c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f1 b0 f1 cPOWER * part cface_map f0 b0 f1 f2 * / c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f1 b0 f1 cPOWER * part cface_map f0 b0 f1 f2
+ |- (((y IN ((face H) x)) ==> (((inverse ((res (face_map H)) ((face H) x))) y) = ((inverse (face_map H)) y))) = T)
T c= c==> cIN f0 * * part cface f1 f2 c= cinverse * * part cres * part cface_map f1 * * part cface f1 f2 f0 cinverse * part cface_map f1 f0 cT
+ (I = ((POWER (face_map H)) (SUC j))) |- (((((POWER ((res (face_map H)) ((face H) y))) (SUC j)) x) = x) = T)
T c==> c= part cI * * part cPOWER * part cface_map f0 cSUC f1 c= c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f2 cSUC f1 f3 f3 cT
+ |- (((!p. (!n. (!x. ((?s. (((permutes p) s) /\ (~ (x IN s)))) ==> ((((POWER p) n) x) = x))))) ==> ((\p. (!n. (!x. ((?s. (((permutes p) s) /\ (~ (x IN s)))) ==> ((((POWER p) n) x) = x))))) p)) = ((\p. (!n. (!x. ((?s. (((permutes p) s) /\ (~ (x IN s)))) ==> ((((POWER p) n) x) = x))))) p))
T c= c==> ! ! ! c==> c? / c/\ cpermutes b0 b3 c~ cIN b2 b3 c= cPOWER b0 b1 b2 b2 * / ! ! c==> c? / c/\ cpermutes b0 b3 c~ cIN b2 b3 c= cPOWER b0 b1 b2 b2 f0 * / ! ! c==> c? / c/\ cpermutes b0 b3 c~ cIN b2 b3 c= cPOWER b0 b1 b2 b2 f0
+ (!u. (!v. (!w. ((u = v) ==> ((u o w) = (v o w)))))) |- (((u = v) ==> (!w. ((u o w) = (v o w)))) = T)
T c==> ! ! ! c==> c= b0 b1 c= * * part co b0 b2 * * part co b1 b2 c= c==> c= f0 f1 ! c= * * part co f0 b0 * * part co f1 b0 cT
+ (!s. (!p. (!x. (!n. ((((permutes p) s) /\ (~ (x IN s))) ==> ((((POWER p) n) x) = x)))))) |- ((!n. (!x. ((?s. (((permutes p) s) /\ (~ (x IN s)))) ==> ((((POWER p) n) x) = x)))) = T)
T c==> ! ! ! ! c==> c/\ cpermutes b1 b0 c~ cIN b2 b0 c= cPOWER b1 b3 b2 b2 c= ! ! c==> c? / c/\ cpermutes f0 b2 c~ cIN b1 b2 c= cPOWER f0 b0 b1 b1 cT
+ |- ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)
T * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
+ |- (((I = ((POWER (face_map H)) (SUC j))) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y))) = ((I = (((POWER (face_map H)) j) o (face_map H))) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y))))
T c= c==> c= part cI * * part cPOWER * part cface_map f0 cSUC f1 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f2 f2 cinverse * part cface_map f0 f2 c==> c= part cI * * part co * * part cPOWER * part cface_map f0 f1 * part cface_map f0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f2 f2 cinverse * part cface_map f0 f2
+ |- (((!g. (!h. (((f o g) o h) = (f o (g o h))))) ==> ((\g. (!h. (((f o g) o h) = (f o (g o h))))) g)) = ((\g. (!h. (((f o g) o h) = (f o (g o h))))) g))
T c= c==> ! ! c= * * part co * * part co f0 b0 b1 * * part co f0 * * part co b0 b1 * / ! c= * * part co * * part co f0 b0 b1 * * part co f0 * * part co b0 b1 f1 * / ! c= * * part co * * part co f0 b0 b1 * * part co f0 * * part co b0 b1 f1
+ |- (((!x. ((permutes ((res (face_map H)) ((face H) x))) ((face H) x))) ==> ((\x. ((permutes ((res (face_map H)) ((face H) x))) ((face H) x))) x)) = ((\x. ((permutes ((res (face_map H)) ((face H) x))) ((face H) x))) x))
T c= c==> ! cpermutes * * part cres * part cface_map f0 * * part cface f0 b0 * * part cface f0 b0 * / cpermutes * * part cres * part cface_map f0 * * part cface f0 b0 * * part cface f0 b0 f1 * / cpermutes * * part cres * part cface_map f0 * * part cface f0 b0 * * part cface f0 b0 f1
+ |- (((!x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) ==> ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x)) = ((\x. (!y. ((y IN ((face H) x)) ==> (((face H) x) = ((face H) y))))) x))
T c= c==> ! ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1 * / ! c==> cIN b1 * * part cface f0 b0 c= * * part cface f0 b0 * * part cface f0 b1 f1
+ (!s. (!p. (!x. (!n. ((((permutes p) s) /\ (~ (x IN s))) ==> ((((POWER p) n) x) = x)))))) |- ((\x. (!n. ((((permutes p) s) /\ (~ (x IN s))) ==> ((((POWER p) n) x) = x)))) x)
T c==> ! ! ! ! c==> c/\ cpermutes b1 b0 c~ cIN b2 b0 c= cPOWER b1 b3 b2 b2 * / ! c==> c/\ cpermutes f0 f1 c~ cIN b0 f1 c= cPOWER f0 b1 b0 b0 f2
- |- (((!H. (!x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x)))) ==> ((\H. (!x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x)))) H)) = ((\H. (!x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x)))) H))
T c= c==> ! ! c= cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 cloop_of_face b0 b1 * / ! c= cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 cloop_of_face b0 b1 f0 * / ! c= cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 cloop_of_face b0 b1 f0
+ ((inverse (face_map H)) = ((POWER (face_map H)) j)) |- ((I = (((POWER (face_map H)) j) o (face_map H))) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y)))
T c==> c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 f1 c==> c= part cI * * part co * * part cPOWER * part cface_map f0 f1 * part cface_map f0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f2 f2 cinverse * part cface_map f0 f2
+ |- ((((\j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) j) ==> (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y))) = T)
T c= c==> * / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 f1 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f2 f2 cinverse * part cface_map f0 f2 cT
+ (!u. (!v. (!w. ((u = v) ==> ((u o w) = (v o w)))))) |- (!v. (!w. ((u = v) ==> ((u o w) = (v o w)))))
T c==> ! ! ! c==> c= b0 b1 c= * * part co b0 b2 * * part co b1 b2 ! ! c==> c= f0 b0 c= * * part co f0 b1 * * part co b0 b1
- |- ((\H. (!x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x)))) H)
T * / ! c= cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 cloop_of_face b0 b1 f0
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (~ (x IN ((face H) y))))) = ((\t. (t \/ (~ t))) (~ (x IN ((face H) y)))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c~ cIN f0 * * part cface f1 f2 * / c\/ b0 c~ b0 c~ cIN f0 * * part cface f1 f2
+ |- (((((POWER (face_map H)) (SUC j)) x) = (I x)) ==> ((((POWER (face_map H)) (SUC j)) x) = x))
T c==> c= cPOWER * part cface_map f0 cSUC f1 f2 cI f2 c= cPOWER * part cface_map f0 cSUC f1 f2 f2
- |- (((!x. (FINITE ((face H) x))) ==> ((\x. (FINITE ((face H) x))) x)) = ((\x. (FINITE ((face H) x))) x))
T c= c==> ! cFINITE * * part cface f0 b0 * / cFINITE * * part cface f0 b0 f1 * / cFINITE * * part cface f0 b0 f1
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
- |- ((!x. t) = t)
T c= ! f0 f0
- (?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) |- ((?j. ((inverse (face_map H)) = ((POWER (face_map H)) j))) /\ (((inverse ((res (face_map H)) ((face H) y))) y) = ((inverse (face_map H)) y)))
T c==> c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c/\ c? / c= * part cinverse * part cface_map f0 * * part cPOWER * part cface_map f0 b0 c= cinverse * * part cres * part cface_map f0 * * part cface f0 f1 f1 cinverse * part cface_map f0 f1
- |- ((\x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))) x)
T * / c= cloop_of_face f0 b0 cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 f1
- |- ((\x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))) x)
T * / c= cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 cloop_of_face f0 b0 f1
- |- (FINITE ((face H) x))
T cFINITE * * part cface f0 f1
- |- ((FINITE ((face H) x)) = T)
T c= cFINITE * * part cface f0 f1 cT
- |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- |- (((inverse ((res (face_map H)) ((face H) y))) o ((res (face_map H)) ((face H) y))) = I)
T c= * * part co * part cinverse * * part cres * part cface_map f0 * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1 part cI
- ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x)) |- (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))
T c==> c= cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1 cloop_of_face f0 f1 c= cloop_of_face f0 f1 cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1
- |- (((!H. (!x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x))))))) ==> ((\H. (!x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x))))))) H)) = ((\H. (!x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x))))))) H))
T c= c==> ! ! c= cloop_of_face b0 b1 cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 * / ! c= cloop_of_face b0 b1 cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 f0 * / ! c= cloop_of_face b0 b1 cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 f0
- |- ((x = x) = T)
T c= c= f0 f0 cT
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((!H. (!x. (FINITE ((face H) x)))) ==> ((\H. (!x. (FINITE ((face H) x)))) H)) = ((\H. (!x. (FINITE ((face H) x)))) H))
T c= c==> ! ! cFINITE * * part cface b0 b1 * / ! cFINITE * * part cface b0 b1 f0 * / ! cFINITE * * part cface b0 b1 f0
- |- ((\H. (!x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x))))))) H)
T * / ! c= cloop_of_face b0 b1 cloop c, * * part cface b0 b1 * * part cres * part cface_map b0 * * part cface b0 b1 f0
- |- (((!x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))) ==> ((\x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))) x)) = ((\x. ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))) x))
T c= c==> ! c= cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 cloop_of_face f0 b0 * / c= cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 cloop_of_face f0 b0 f1 * / c= cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 cloop_of_face f0 b0 f1
- |- (T = ((((POWER ((res (face_map H)) ((face H) y))) j) y) = (((POWER (face_map H)) j) y)))
T c= cT c= cPOWER * * part cres * part cface_map f0 * * part cface f0 f1 f2 f1 cPOWER * part cface_map f0 f2 f1
- |- ((\H. (!x. (FINITE ((face H) x)))) H)
T * / ! cFINITE * * part cface b0 b1 f0
- |- (((POWER f) (NUMERAL _0)) = I)
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
- |- ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))
T c= cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1 cloop_of_face f0 f1
- |- ((\f. (((POWER f) (NUMERAL _0)) = I)) f)
T * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
- |- (((face_map H) o (inverse (face_map H))) = I)
T c= * * part co * part cface_map f0 * part cinverse * part cface_map f0 part cI
- |- (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))
T c= cloop_of_face f0 f1 cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1
- |- ((\x. (FINITE ((face H) x))) x)
T * / cFINITE * * part cface f0 b0 f1
- |- (((!x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))) ==> ((\x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))) x)) = ((\x. (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x)))))) x))
T c= c==> ! c= cloop_of_face f0 b0 cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 * / c= cloop_of_face f0 b0 cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 f1 * / c= cloop_of_face f0 b0 cloop c, * * part cface f0 b0 * * part cres * part cface_map f0 * * part cface f0 b0 f1
- (((loop_of_face H) x) = (loop (((face H) x) , ((res (face_map H)) ((face H) x))))) |- ((loop (((face H) x) , ((res (face_map H)) ((face H) x)))) = ((loop_of_face H) x))
T c==> c= cloop_of_face f0 f1 cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1 c= cloop c, * * part cface f0 f1 * * part cres * part cface_map f0 * * part cface f0 f1 cloop_of_face f0 f1
