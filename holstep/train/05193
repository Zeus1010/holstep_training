N Tame_opposite.opposite_tame_12o
C |- (!H. ((tame_12o H) ==> (tame_12o (opposite_hypermap H))))
T c==> ctame_12o f0 ctame_12o copposite_hypermap f0
D TRUTH
A |- T
T cT
D Tame_defs.exceptional_face
A |- (!H. (!x. (((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))))
T c= cexceptional_face f0 f1 c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
D Tame_defs.node_type_exceptional_face
A |- (!H. (!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))))
T c= cnode_type_exceptional_face f0 f1 c==> c/\ cexceptional_face f0 f1 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
D Tame_defs.node_exceptional_face
A |- (!H. (!x. (((node_exceptional_face H) x) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c= cnode_exceptional_face f0 f1 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
D Tame_defs.tame_12o
A |- (!H. ((tame_12o H) = (!x. (((node_type_exceptional_face H) x) /\ ((node_exceptional_face H) x)))))
T c= ctame_12o f0 ! c/\ cnode_type_exceptional_face f0 b0 cnode_exceptional_face f0 b0
D Tame_opposite.opposite_components
A |- (!H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))))
T c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1 c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
D Tame_opposite.the_SAME_type
A |- (!H. (!x. (((type_of_node H) x) = ((type_of_node (opposite_hypermap H)) x))))
T c= ctype_of_node f0 f1 ctype_of_node copposite_hypermap f0 f1
- |- (((((exceptional_face H) x) = ((exceptional_face H) x)) ==> ((((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> q')))) = ((((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> q'))))
T c= c==> c= cexceptional_face f0 f1 cexceptional_face f0 f1 c==> c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 f2 c==> c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 f2
+ |- (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 f3
- |- (((!p'. (!q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 * / ! c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
+ |- (((!x. (((node_exceptional_face H) x) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((\x. (((node_exceptional_face H) x) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) x)) = ((\x. (((node_exceptional_face H) x) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) x))
T c= c==> ! c= cnode_exceptional_face f0 b0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 * / c= cnode_exceptional_face f0 b0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 * / c= cnode_exceptional_face f0 b0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1
+ |- ((\x. (((type_of_node (opposite_hypermap H)) x) = ((type_of_node H) x))) x)
T * / c= ctype_of_node copposite_hypermap f0 b0 ctype_of_node f0 b0 f1
+ (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f3 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 f3
- |- (((((exceptional_face (opposite_hypermap H)) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= c==> c==> cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))
T c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((\q'. ((((exceptional_face H) x) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= cexceptional_face f0 f1 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3
+ |- ((\q'. (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = q')) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = (p' ==> q'))))) q')
T * / c==> c= ! c/\ c==> c/\ c>= cCARD * * part cface f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b1 c<= cCARD * * part cnode copposite_hypermap f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b1 c<= cCARD * * part cnode copposite_hypermap f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f1 b0 f2
+ |- (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))
T c==> c= ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f1 f2
+ |- ((\p'. (!q'. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
- |- ((\p'. (!q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
+ |- ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = T))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))), (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!p'. (!q'. ((((exceptional_face (opposite_hypermap H)) x) = p') ==> ((p' ==> (((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((exceptional_face (opposite_hypermap H)) x) = p') ==> ((p' ==> (((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((exceptional_face (opposite_hypermap H)) x) = p') ==> ((p' ==> (((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cexceptional_face copposite_hypermap f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cexceptional_face copposite_hypermap f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= cexceptional_face copposite_hypermap f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
- |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))
T c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ |- ((\H. (!x. (((type_of_node (opposite_hypermap H)) x) = ((type_of_node H) x)))) H)
T * / ! c= ctype_of_node copposite_hypermap b0 b1 ctype_of_node b0 b1 f0
+ (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- ((((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = T)) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> T))) = (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> T)))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) /\ ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\H. (!x. (((node_exceptional_face H) x) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) H)
T * / ! c= cnode_exceptional_face b0 b1 c==> cexceptional_face b0 b1 c<= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f0
+ |- ((!H. ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = (!H. ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))))
T c= ! c==> ! c/\ c==> c/\ c>= cCARD * * part cface b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face b0 b1 c<= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap b0 b1 c<= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> ! c/\ c==> c/\ c>= cCARD * * part cface b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face b0 b1 c<= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap b0 b1 c<= cCARD * * part cnode copposite_hypermap b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- ((exceptional_face H) x) |- (((exceptional_face H) x) /\ (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> cexceptional_face f0 f1 c/\ cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- (T = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))
T c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cT c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0
+ |- ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))
T c/\ c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1 c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
+ |- ((!H. ((!x. (((node_type_exceptional_face H) x) /\ ((node_exceptional_face H) x))) ==> (!x. (((node_type_exceptional_face (opposite_hypermap H)) x) /\ ((node_exceptional_face (opposite_hypermap H)) x))))) = (!H. ((tame_12o H) ==> (tame_12o (opposite_hypermap H)))))
T c= ! c==> ! c/\ cnode_type_exceptional_face b0 b1 cnode_exceptional_face b0 b1 ! c/\ cnode_type_exceptional_face copposite_hypermap b0 b1 cnode_exceptional_face copposite_hypermap b0 b1 ! c==> ctame_12o b0 ctame_12o copposite_hypermap b0
+ |- ((!x. t) = t)
T c= ! f0 f0
- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) /\ ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))
T c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- (((!q'. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3 * / c==> c= c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- (((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((\H. (!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) H)
T * / ! c= cnode_type_exceptional_face b0 b1 c==> c/\ cexceptional_face b0 b1 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((\p'. (!q'. ((((exceptional_face (opposite_hypermap H)) x) = p') ==> ((p' ==> (((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= cexceptional_face copposite_hypermap f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
+ |- (!H. ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))), (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ |- ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((!q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 * / c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3 * / c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3
+ |- (((face (opposite_hypermap H)) x) = ((face H) x))
T c= * * part cface copposite_hypermap f0 f1 * * part cface f0 f1
+ |- (((!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))) ==> ((\x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))) x)) = ((\x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))) x))
T c= c==> ! c= cnode_type_exceptional_face f0 b0 c==> c/\ cexceptional_face f0 b0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 * / c= cnode_type_exceptional_face f0 b0 c==> c/\ cexceptional_face f0 b0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1 * / c= cnode_type_exceptional_face f0 b0 c==> c/\ cexceptional_face f0 b0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f1
+ |- (((!H. (!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) ==> ((\H. (!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) H)) = ((\H. (!x. (((node_type_exceptional_face H) x) = ((((exceptional_face H) x) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))) H))
T c= c==> ! ! c= cnode_type_exceptional_face b0 b1 c==> c/\ cexceptional_face b0 b1 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 * / ! c= cnode_type_exceptional_face b0 b1 c==> c/\ cexceptional_face b0 b1 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 * / ! c= cnode_type_exceptional_face b0 b1 c==> c/\ cexceptional_face b0 b1 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
+ |- ((\H. (!x. (((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))))) H)
T * / ! c= cexceptional_face b0 b1 c>= cCARD * * part cface b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f0
+ (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> T))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ ((exceptional_face (opposite_hypermap H)) x) |- (((exceptional_face (opposite_hypermap H)) x) /\ (((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> cexceptional_face copposite_hypermap f0 f1 c/\ cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode copposite_hypermap f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((node (opposite_hypermap H)) x) = ((node H) x))
T c= * * part cnode copposite_hypermap f0 f1 * * part cnode f0 f1
+ |- ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x)
T * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1
- ((exceptional_face (opposite_hypermap H)) x) |- (((exceptional_face (opposite_hypermap H)) x) = T)
T c==> cexceptional_face copposite_hypermap f0 f1 c= cexceptional_face copposite_hypermap f0 f1 cT
+ |- (((!p'. (!q'. ((((exceptional_face H) x) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((exceptional_face H) x) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((exceptional_face H) x) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= cexceptional_face f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 * / ! c==> c= cexceptional_face f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= cexceptional_face f0 f1 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
- ((exceptional_face H) x) |- (((exceptional_face H) x) = T)
T c==> cexceptional_face f0 f1 c= cexceptional_face f0 f1 cT
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ |- (((!H. ((tame_12o H) = (!x. (((node_type_exceptional_face H) x) /\ ((node_exceptional_face H) x))))) ==> ((\H. ((tame_12o H) = (!x. (((node_type_exceptional_face H) x) /\ ((node_exceptional_face H) x))))) H)) = ((\H. ((tame_12o H) = (!x. (((node_type_exceptional_face H) x) /\ ((node_exceptional_face H) x))))) H))
T c= c==> ! c= ctame_12o b0 ! c/\ cnode_type_exceptional_face b0 b1 cnode_exceptional_face b0 b1 * / c= ctame_12o b0 ! c/\ cnode_type_exceptional_face b0 b1 cnode_exceptional_face b0 b1 f0 * / c= ctame_12o b0 ! c/\ cnode_type_exceptional_face b0 b1 cnode_exceptional_face b0 b1 f0
+ |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((!H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) ==> ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H)) = ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H))
T c= c==> ! ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0 * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0
- |- (((!p'. (!q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> b0 b1 * / ! c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2 * / ! c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c==> c==> b0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b1 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> b0 b1 f2
+ |- ((\q'. ((((exceptional_face (opposite_hypermap H)) x) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= cexceptional_face copposite_hypermap f0 f1 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3
+ |- ((\q'. (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = p') ==> ((p' ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = (p' ==> q'))))) q')
T * / c==> c= ! c/\ c==> c/\ c>= cCARD * * part cface f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c==> c==> f1 c= ! c==> cexceptional_face copposite_hypermap f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b1 c<= cCARD * * part cnode f0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f1 b0 f2
+ |- (((((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> q')))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= cexceptional_face f0 f1 c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2
+ |- ((!H. ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) = (!H. ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ ((node_exceptional_face H) x))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ ((node_exceptional_face (opposite_hypermap H)) x))))))
T c= ! c==> ! c/\ c==> c/\ c>= cCARD * * part cface b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face b0 b1 c<= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap b0 b1 c<= cCARD * * part cnode copposite_hypermap b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> ! c/\ c==> c/\ c>= cCARD * * part cface b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 cnode_exceptional_face b0 b1 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap b0 b1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap b0 b1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap b0 b1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 cnode_exceptional_face copposite_hypermap b0 b1
+ |- (((!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) ==> ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x)) = ((\x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x))))) x))
T c= c==> ! c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1 * / c/\ c= * part cdart copposite_hypermap f0 * part cdart f0 c/\ c= * * part cnode copposite_hypermap f0 b0 * * part cnode f0 b0 c= * * part cface copposite_hypermap f0 b0 * * part cface f0 b0 f1
+ |- ((\H. (!x. (((dart (opposite_hypermap H)) = (dart H)) /\ ((((node (opposite_hypermap H)) x) = ((node H) x)) /\ (((face (opposite_hypermap H)) x) = ((face H) x)))))) H)
T * / ! c/\ c= * part cdart copposite_hypermap b0 * part cdart b0 c/\ c= * * part cnode copposite_hypermap b0 b1 * * part cnode b0 b1 c= * * part cface copposite_hypermap b0 b1 * * part cface b0 b1 f0
+ |- (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = q')) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> q')))
T c==> c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1
+ |- (((type_of_node (opposite_hypermap H)) x) = ((type_of_node H) x))
T c= ctype_of_node copposite_hypermap f0 f1 ctype_of_node f0 f1
+ |- (((!x. (((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) ==> ((\x. (((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) x)) = ((\x. (((exceptional_face H) x) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))))) x))
T c= c==> ! c= cexceptional_face f0 b0 c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 * / c= cexceptional_face f0 b0 c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1 * / c= cexceptional_face f0 b0 c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f1
+ |- ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((((CARD ((face (opposite_hypermap H)) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node (opposite_hypermap H)) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node (opposite_hypermap H)) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node (opposite_hypermap H)) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c/\ c==> c/\ c>= cCARD * * part cface copposite_hypermap f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node copposite_hypermap f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode copposite_hypermap f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
+ |- (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> T))
T c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
+ (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T)) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> T))) = ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> T)))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = T)) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> T))) = (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> T)))
T c= c==> c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))) = (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))))
T c= c==> c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- (T = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= cT c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((exceptional_face (opposite_hypermap H)) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- |- ((\q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b0 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 b0 f3
- |- ((dart (opposite_hypermap H)) = (dart H))
T c= * part cdart copposite_hypermap f0 * part cdart f0
- |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> q')))
T c==> c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2
- |- (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0)))))) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> q')))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> q'))))
T c= c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2
- |- ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))), ((exceptional_face H) x) |- ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- (((((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))))
T c= c==> c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((\p'. (!q'. ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q')))))) p')
T * / ! c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 b0 c==> c==> b0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 b1 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> b0 b1 f2
- |- ((((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))))) = (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))))
T c= c==> c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- ((exceptional_face (opposite_hypermap H)) x) |- (((exceptional_face (opposite_hypermap H)) x) /\ (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c==> cexceptional_face copposite_hypermap f0 f1 c/\ cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> q')))) = (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> q'))))
T c= c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 f2 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2
- |- (((!q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) ==> ((\q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')) = ((\q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 * / c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3 * / c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> q')))
T c==> c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))), (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) /\ (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c/\ c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = q')) ==> (((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) = ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> q')))
T c==> c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1 c= c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f1
- |- ((!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))) ==> ((!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))))) = (!x. (((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 ! c==> cexceptional_face copposite_hypermap f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
- |- ((((exceptional_face (opposite_hypermap H)) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> q')))
T c==> c==> cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 f2
- |- ((\q'. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = p') ==> ((p' ==> ((((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0))))) = q')) ==> (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c==> c==> f2 c= c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c= c==> c/\ c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 f1 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> f2 b0 f3
- ((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) |- (((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = T)
T c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 cT
- (!x. (((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) /\ ((CARD ((node H) x)) = (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) ==> (((type_of_node H) x) = ((NUMERAL (BIT1 (BIT0 (BIT1 _0)))) , ((NUMERAL _0) , (NUMERAL (BIT1 _0)))))) /\ (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))), ((exceptional_face H) x) |- (((exceptional_face H) x) /\ (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = T))
T c==> ! c/\ c==> c/\ c>= cCARD * * part cface f0 b0 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c= ctype_of_node f0 b0 c, cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c, cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> cexceptional_face f0 b0 c<= cCARD * * part cnode f0 b0 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c/\ cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 cT
- |- ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) = p') ==> ((p' ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((CARD ((face H) x)) >= (NUMERAL (BIT1 (BIT0 (BIT1 _0))))) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (p' ==> q'))))
T c==> c= c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 f2 c==> c==> f2 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f3 c= c==> c>= cCARD * * part cface f0 f1 cNUMERAL cBIT1 cBIT0 cBIT1 c_0 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> f2 f3
- |- (((((exceptional_face (opposite_hypermap H)) x) = ((exceptional_face (opposite_hypermap H)) x)) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> q')))) = ((((exceptional_face (opposite_hypermap H)) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face (opposite_hypermap H)) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face (opposite_hypermap H)) x) ==> q'))))
T c= c==> c= cexceptional_face copposite_hypermap f0 f1 cexceptional_face copposite_hypermap f0 f1 c==> c==> cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 f2 c==> c==> cexceptional_face copposite_hypermap f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face copposite_hypermap f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face copposite_hypermap f0 f1 f2
- |- ((((exceptional_face H) x) ==> (((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0))))) = q')) ==> ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> q')))
T c==> c==> cexceptional_face f0 f1 c= c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 f2 c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 f2
- |- ((((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))) = (((exceptional_face H) x) ==> ((CARD ((node H) x)) <= (NUMERAL (BIT0 (BIT1 (BIT1 _0)))))))
T c= c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0 c==> cexceptional_face f0 f1 c<= cCARD * * part cnode f0 f1 cNUMERAL cBIT0 cBIT1 cBIT1 c_0
