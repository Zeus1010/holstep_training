N Asfutbf.hyp_conj_tuple
C |- (!H. (!p. (((permutes p) (dart H)) ==> ((tuple_hypermap ((hyp_conj p) H)) = ((dart H) , ((p o ((edge_map H) o (inverse p))) , ((p o ((node_map H) o (inverse p))) , (p o ((face_map H) o (inverse p))))))))))
T c==> cpermutes f0 * part cdart f1 c= ctuple_hypermap chyp_conj f0 f1 c, * part cdart f1 c, * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 c, * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0
D TRUTH
A |- T
T cT
D FUN_EQ_THM
A |- (!f. (!g. ((f = g) = (!x. ((f x) = (g x))))))
T c= c= f0 f1 ! c= * f0 b0 * f1 b0
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D FORALL_BOOL_THM
A |- ((!b. (P b)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
D o_THM
A |- (!f. (!g. (!x. (((f o g) x) = (f (g x))))))
T c= co f0 f1 f2 * f0 * f1 f2
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D PERMUTES_INVERSES
A |- (!p. (!s. (((permutes p) s) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))))))
T c==> cpermutes f0 f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0
D PERMUTES_COMPOSE
A |- (!p. (!q. (!s. ((((permutes p) s) /\ ((permutes q) s)) ==> ((permutes (q o p)) s)))))
T c==> c/\ cpermutes f0 f1 cpermutes f2 f1 cpermutes * * part co f2 f0 f1
D PERMUTES_INVERSE
A |- (!p. (!s. (((permutes p) s) ==> ((permutes (inverse p)) s))))
T c==> cpermutes f0 f1 cpermutes * part cinverse f0 f1
D Hypermap.hypermap_tybij
A |- ((!a. ((hypermap (tuple_hypermap a)) = a)) /\ (!r. (((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))) = ((tuple_hypermap (hypermap r)) = r))))
T c/\ ! c= chypermap ctuple_hypermap b0 b0 ! c= c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI c= ctuple_hypermap chypermap b0 b0
D Hypermap.hypermap_lemma
A |- (!H. ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))))
T c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
D Hypermap.node_map_and_darts
A |- (!H. ((FINITE (dart H)) /\ ((permutes (node_map H)) (dart H))))
T c/\ cFINITE * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0
D Asfutbf.hyp_conj
A |- (!H. (!p. (((hyp_conj p) H) = (hypermap ((dart H) , ((p o ((edge_map H) o (inverse p))) , ((p o ((node_map H) o (inverse p))) , (p o ((face_map H) o (inverse p))))))))))
T c= chyp_conj f0 f1 chypermap c, * part cdart f1 c, * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 c, * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0
+ ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> ((!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)) = T))
T c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 c= ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0 cT
+ |- (((!x. ((I x) = x)) ==> ((\x. ((I x) = x)) x)) = ((\x. ((I x) = x)) x))
T c= c==> ! c= cI b0 b0 * / c= cI b0 b0 f0 * / c= cI b0 b0 f0
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- ((\x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)) x)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 * / c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 f1
+ (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) |- ((!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) /\ (!P. (!q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))))
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 c/\ ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 ! ! ! ! c==> c/\ c/\ cpermutes b2 b3 cpermutes b1 b3 * b0 cT * b0 cpermutes * * part co b1 b2 b3
+ |- (!y. (((\x. ((\v. (v /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) x)) y) = ((\v. (v /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) y)))
T c= * / * / c/\ b1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 f2 * / c/\ b0 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI f2
+ |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) = (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))))))
T c= c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (node_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cnode_map f0 * part cdart f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- (((!p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> ((((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> ((((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = p') ==> ((p' ==> ((((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> b0 b1 * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> b0 b1 f2 * / ! c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI b0 c==> c==> b0 c= c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b1 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> b0 b1 f2
+ ((permutes p) (dart H)) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))
T c==> cpermutes f0 * part cdart f1 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 c= * * part co * part cedge_map f1 * * part co * part cnode_map f1 * part cface_map f1 part cI c/\ cpermutes * part cface_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI
+ |- (((!f. (!y. (((\x. (f x)) y) = (f y)))) ==> ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((v /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) = ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. ((v /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))))
T c= c==> ! ! c= * / * b0 b2 b1 * b0 b1 * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ b0 cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ c/\ b0 cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI
+ ((permutes p) (dart H)) |- ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ ((T /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))
T c==> cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ c/\ cT cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI
+ |- (((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ ((T /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) = ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) T)))
T c= c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ c/\ cT cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 * / * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cT
+ ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) |- ((\x. ((p ((inverse p) x)) = x)) x)
T c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 * / c= * f0 cinverse f0 b0 b0 f1
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) |- (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 ! ! ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * b2 cT * b2 cpermutes * * part co f0 b0 b1
- (~ F), (~ (P b)), (P c), (b = c) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c/\ c~ cF cF
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((permutes (node_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= cpermutes * part cnode_map f0 * part cdart f0 cT
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- ((FINITE (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= cFINITE * part cdart f0 cT
+ ((permutes p) s) |- (((permutes p) s) /\ (((permutes (inverse p)) s) = T))
T c==> cpermutes f0 f1 c/\ cpermutes f0 f1 c= cpermutes * part cinverse f0 f1 cT
+ ((permutes p) (dart H)) |- (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)))
T c==> cpermutes f0 * part cdart f1 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0
+ ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) |- (((!x. ((p ((inverse p) x)) = x)) ==> ((\x. ((p ((inverse p) x)) = x)) x)) = ((\x. ((p ((inverse p) x)) = x)) x))
T c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c= c==> ! c= * f0 cinverse f0 b0 b0 * / c= * f0 cinverse f0 b0 b0 f1 * / c= * f0 cinverse f0 b0 b0 f1
+ ((permutes p) (dart H)) |- ((((permutes ((node_map H) o (inverse p))) (dart H)) /\ ((permutes p) (dart H))) /\ ((\x. ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) T))
T c==> cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 cpermutes f0 * part cdart f1 * / * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cT
+ |- ((\q'. ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) = p') ==> ((p' ==> ((!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b1 b1 f1 c==> c==> f1 c= ! c= * f2 cedge_map f0 cinverse f2 * f2 cnode_map f0 cinverse f2 * f2 cface_map f0 cinverse f2 b1 b1 b0 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b1 b1 ! c= * f2 cedge_map f0 cinverse f2 * f2 cnode_map f0 cinverse f2 * f2 cface_map f0 cinverse f2 b1 b1 c==> f1 b0 f3
+ |- ((!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) = T)
T c= ! ! ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * b2 cT * b2 cpermutes * * part co f0 b0 b1 cT
+ |- ((\c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b))))) c)
T * / c==> c==> f0 c= f1 b0 ! c==> c/\ f0 * b1 b0 * b1 f1 f2
+ ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((permutes (face_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI cpermutes * part cface_map f0 * part cdart f0
+ ((permutes p) (dart H)) |- ((\x. ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) ((permutes (p o ((face_map H) o (inverse p)))) (dart H)))
T c==> cpermutes f0 * part cdart f1 * / * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
+ (P c), (b = c) |- (P b)
T c==> * f0 f1 c==> c= f2 f1 * f0 f2
+ (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) |- ((\P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))) P)
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 * / c==> c/\ c/\ cpermutes f0 f1 cpermutes f2 f1 * b0 cT * b0 cpermutes * * part co f2 f0 f1 f3
+ |- (((b = c) ==> (!P. ((P c) ==> (P b)))) = T)
T c= c==> c= f0 f1 ! c==> * b0 f1 * b0 f0 cT
+ ((permutes p) (dart H)) |- ((T ==> (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) = q')) ==> ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (T ==> q')))
T c==> cpermutes f0 * part cdart f1 c==> c==> cT c= c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 f2 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> cT f2
+ ((permutes p) (dart H)) |- ((((permutes ((node_map H) o (inverse p))) (dart H)) /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))
T c==> cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI
+ ((permutes p) (dart H)) |- ((((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x))) = q')) ==> (((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) ==> (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)))) = (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) ==> q')))
T c==> cpermutes f0 * part cdart f1 c==> c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c= c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0 f2 c= c==> c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0 c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 f2
+ ((permutes p) (dart H)) |- (((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) ==> (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)))) = (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) ==> T))
T c==> cpermutes f0 * part cdart f1 c= c==> c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0 c==> c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 cT
+ |- (((!y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) y))) ==> ((\y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) y))) ((permutes ((face_map H) o (inverse p))) (dart H)))) = ((\y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) y))) ((permutes ((face_map H) o (inverse p))) (dart H))))
T c= c==> ! c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 * / c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 * / c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
+ |- (((!r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) ==> ((\r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) r)) = ((\r. (((tuple_hypermap (hypermap r)) = r) = ((FINITE (FST r)) /\ (((permutes (FST (SND r))) (FST r)) /\ (((permutes (FST (SND (SND r)))) (FST r)) /\ (((permutes (SND (SND (SND r)))) (FST r)) /\ (((FST (SND r)) o ((FST (SND (SND r))) o (SND (SND (SND r))))) = I))))))) r))
T c= c==> ! c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI * / c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI f0 * / c= c= ctuple_hypermap chypermap b0 b0 c/\ cFINITE * part cFST b0 c/\ cpermutes * part cFST cSND b0 * part cFST b0 c/\ cpermutes * part cFST cSND cSND b0 * part cFST b0 c/\ cpermutes * part cSND cSND cSND b0 * part cFST b0 c= * * part co * part cFST cSND b0 * * part co * part cFST cSND cSND b0 * part cSND cSND cSND b0 part cI f0
+ |- ((!p. (((permutes p) (dart H)) ==> ((FINITE (dart H)) /\ (((permutes (p o ((edge_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) = T)
T c= ! c==> cpermutes b0 * part cdart f0 c/\ cFINITE * part cdart f0 c/\ cpermutes * * part co b0 * * part co * part cedge_map f0 * part cinverse b0 * part cdart f0 c/\ cpermutes * * part co b0 * * part co * part cnode_map f0 * part cinverse b0 * part cdart f0 c/\ cpermutes * * part co b0 * * part co * part cface_map f0 * part cinverse b0 * part cdart f0 c= * * part co * * part co b0 * * part co * part cedge_map f0 * part cinverse b0 * * part co * * part co b0 * * part co * part cnode_map f0 * part cinverse b0 * * part co b0 * * part co * part cface_map f0 * part cinverse b0 part cI cT
+ ((permutes p) (dart H)) |- (T = ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) ==> (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)))))
T c==> cpermutes f0 * part cdart f1 c= cT c==> c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> c/\ cFINITE * part cdart f1 c/\ cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes * part cface_map f1 * part cdart f1 ! c= cedge_map f1 cnode_map f1 cface_map f1 b0 b0 ! c= * f0 cedge_map f1 cinverse f0 * f0 cnode_map f1 cinverse f0 * f0 cface_map f1 cinverse f0 b0 b0
+ |- (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) ((permutes ((face_map H) o (inverse p))) (dart H))) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) ((permutes ((face_map H) o (inverse p))) (dart H))))
T c= * / * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 * / c/\ c/\ b0 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI cpermutes * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
+ |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))
T c= c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI
+ |- ((!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) ==> (!P. (!q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))))
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 ! ! ! ! c==> c/\ c/\ cpermutes b2 b3 cpermutes b1 b3 * b0 cT * b0 cpermutes * * part co b1 b2 b3
+ |- (((!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))) ==> ((\p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))) p)) = ((\p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))) p))
T c= c==> ! ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * f1 cT * f1 cpermutes * * part co f0 b0 b1 * / ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * f1 cT * f1 cpermutes * * part co f0 b0 b1 f2 * / ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * f1 cT * f1 cpermutes * * part co f0 b0 b1 f2
+ |- ((\q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) q)
T * / ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * f0 cT * f0 cpermutes * * part co b0 b1 b2 f1
+ ((permutes p) (dart H)) |- ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) x)) ((permutes ((edge_map H) o (inverse p))) (dart H)))
T c==> cpermutes f0 * part cdart f1 * / * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cedge_map f1 * part cinverse f0 * part cdart f1
- |- ((\a. (a = (hypermap (tuple_hypermap a)))) a)
T * / c= b0 chypermap ctuple_hypermap b0 f0
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ |- (((!q'. ((((permutes p) (dart H)) = p') ==> ((p' ==> (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) = q')) ==> ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (p' ==> q'))))) ==> ((\q'. ((((permutes p) (dart H)) = p') ==> ((p' ==> (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) = q')) ==> ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (p' ==> q'))))) q')) = ((\q'. ((((permutes p) (dart H)) = p') ==> ((p' ==> (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) = q')) ==> ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= cpermutes f0 * part cdart f1 f2 c==> c==> f2 c= c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 b0 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 c==> f2 b0 * / c==> c= cpermutes f0 * part cdart f1 f2 c==> c==> f2 c= c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 b0 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 c==> f2 b0 f3 * / c==> c= cpermutes f0 * part cdart f1 f2 c==> c==> f2 c= c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 b0 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b1 b1 ! c= cinverse f0 * f0 b1 b1 c==> f2 b0 f3
+ |- ((\f. (!y. (((\x. (f x)) y) = (f y)))) (\v. (v /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))
T * / ! c= * / * b0 b2 b1 * b0 b1 / c/\ b0 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI
+ |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) = ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I)))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q')))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> ((((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> q'))))
T c= c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI f2
+ |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))
T c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 ! c= * f1 cedge_map f0 cinverse f1 * f1 cnode_map f0 cinverse f1 * f1 cface_map f0 cinverse f1 b0 b0 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI
+ |- (((!q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) ==> ((\q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) q)) = ((\q. (!p. (!s. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) q))
T c= c==> ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * f0 cT * f0 cpermutes * * part co b0 b1 b2 * / ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * f0 cT * f0 cpermutes * * part co b0 b1 b2 f1 * / ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * f0 cT * f0 cpermutes * * part co b0 b1 b2 f1
+ |- ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) ==> (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = (((permutes (face_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))
T c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI c/\ cpermutes * part cface_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- (((permutes (face_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= cpermutes * part cface_map f0 * part cdart f0 cT
+ |- (((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) = ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x))))))) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> ((!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> q')))) = ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> ((!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x)) = q')) ==> ((((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> (!x. ((p ((edge_map H) ((inverse p) (p ((node_map H) ((inverse p) (p ((face_map H) ((inverse p) x))))))))) = x))) = (((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) ==> q'))))
T c= c==> c= c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= ! c= * f1 cedge_map f0 cinverse f1 * f1 cnode_map f0 cinverse f1 * f1 cface_map f0 cinverse f1 b0 b0 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 ! c= * f1 cedge_map f0 cinverse f1 * f1 cnode_map f0 cinverse f1 * f1 cface_map f0 cinverse f1 b0 b0 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 f2 c==> c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= ! c= * f1 cedge_map f0 cinverse f1 * f1 cnode_map f0 cinverse f1 * f1 cface_map f0 cinverse f1 b0 b0 f2 c= c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 ! c= * f1 cedge_map f0 cinverse f1 * f1 cnode_map f0 cinverse f1 * f1 cface_map f0 cinverse f1 b0 b0 c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 f2
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) |- ((\p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s)))))) p)
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 * / ! ! c==> c/\ c/\ cpermutes b0 b1 cpermutes f0 b1 * b2 cT * b2 cpermutes * * part co f0 b0 b1 f1
+ |- (((!y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) y))) ==> ((\y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) y))) ((permutes ((node_map H) o (inverse p))) (dart H)))) = ((\y. (((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) y) = ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) y))) ((permutes ((node_map H) o (inverse p))) (dart H))))
T c= c==> ! c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 * / c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 * / c= * / * / c/\ c/\ b2 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1
+ ((permutes p) (dart H)) |- ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) ((permutes ((face_map H) o (inverse p))) (dart H)))
T c==> cpermutes f0 * part cdart f1 * / * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
+ |- (((T ==> (((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))) = ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))))) ==> ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (T ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))))) = ((((permutes p) (dart H)) ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x)))) = (T ==> ((!x. ((p ((inverse p) x)) = x)) /\ (!x. (((inverse p) (p x)) = x))))))
T c= c==> c==> cT c= c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> cT c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c= c==> cpermutes f0 * part cdart f1 c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0 c==> cT c/\ ! c= * f0 cinverse f0 b0 b0 ! c= cinverse f0 * f0 b0 b0
+ ((permutes p) (dart H)) |- ((((permutes (inverse p)) (dart H)) /\ ((permutes (face_map H)) (dart H))) /\ ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) T))
T c==> cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cface_map f1 * part cdart f1 * / * / c/\ c/\ b1 cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cT
+ |- ((\y. (((\x. ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) y) = ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) y))) ((permutes (p o ((face_map H) o (inverse p)))) (dart H)))
T * / c= * / * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b2 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b1 b0 * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((permutes (node_map H)) (dart H))
T cpermutes * part cnode_map f0 * part cdart f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- (b = c) |- ((P c) = (P c))
T c==> c= f0 f1 c= * f2 f1 * f2 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- (((((permutes ((edge_map H) o (inverse p))) (dart H)) /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) x)) ((permutes ((edge_map H) o (inverse p))) (dart H))))
T c= c/\ c/\ cpermutes * * part co * part cedge_map f0 * part cinverse f1 * part cdart f0 cpermutes f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cface_map f0 * part cinverse f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI * / * / c/\ c/\ b1 cpermutes f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cface_map f0 * part cinverse f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b0 cpermutes * * part co * part cedge_map f0 * part cinverse f1 * part cdart f0
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))) = (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c= c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
- T |- (T = T)
T c==> cT c= cT cT
- |- ((a = (hypermap (tuple_hypermap a))) = T)
T c= c= f0 chypermap ctuple_hypermap f0 cT
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))), ((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) |- ((!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) /\ (P ((permutes (q o p)) s)))
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 c==> c/\ c/\ cpermutes f0 f1 cpermutes f2 f1 * f3 cT c/\ ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 * f3 cpermutes * * part co f2 f0 f1
- |- (((((permutes ((node_map H) o (inverse p))) (dart H)) /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) ((permutes ((node_map H) o (inverse p))) (dart H))))
T c= c/\ c/\ cpermutes * * part co * part cnode_map f0 * part cinverse f1 * part cdart f0 cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cface_map f0 * part cinverse f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI * / * / c/\ c/\ b1 cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c/\ cpermutes * * part co f1 * * part co * part cface_map f0 * part cinverse f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b0 cpermutes * * part co * part cnode_map f0 * part cinverse f1 * part cdart f0
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- (((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) = ((\x. ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) x)) ((permutes (p o ((node_map H) o (inverse p)))) (dart H))))
T c= c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI * / * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- (!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))), ((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) |- (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) /\ (P ((permutes (q o p)) s)))
T c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 c==> c/\ c/\ cpermutes f0 f1 cpermutes f2 f1 * f3 cT c/\ c/\ c/\ cpermutes f0 f1 cpermutes f2 f1 * f3 cT * f3 cpermutes * * part co f2 f0 f1
- ((permutes p) (dart H)) |- (T = ((permutes p) (dart H)))
T c==> cpermutes f0 * part cdart f1 c= cT cpermutes f0 * part cdart f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) ==> (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- ((permutes (face_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 cpermutes * part cface_map f0 * part cdart f0
- |- (a = (hypermap (tuple_hypermap a)))
T c= f0 chypermap ctuple_hypermap f0
- (~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) |- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) /\ F)
T c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 c/\ c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- ((FINITE (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= cFINITE * part cdart f0 cT
- (b = c) |- (F = F)
T c==> c= f0 f1 c= cF cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((permutes (node_map H)) (dart H)) = T)
T c= cpermutes * part cnode_map f0 * part cdart f0 cT
- ((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) |- ((!q. (!p. (!s. (!P. (((((permutes p) s) /\ ((permutes q) s)) /\ (P T)) ==> (P ((permutes (q o p)) s))))))) ==> (P ((permutes (q o p)) s)))
T c==> c/\ c/\ cpermutes f0 f1 cpermutes f2 f1 * f3 cT c==> ! ! ! ! c==> c/\ c/\ cpermutes b1 b2 cpermutes b0 b2 * b3 cT * b3 cpermutes * * part co b0 b1 b2 * f3 cpermutes * * part co f2 f0 f1
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- (((permutes (edge_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= cpermutes * part cedge_map f0 * part cdart f0 cT
- (~ (P c)), (P c) |- ((~ (P c)) /\ (P c))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
- |- (((!a. (a = (hypermap (tuple_hypermap a)))) ==> ((\a. (a = (hypermap (tuple_hypermap a)))) a)) = ((\a. (a = (hypermap (tuple_hypermap a)))) a))
T c= c==> ! c= b0 chypermap ctuple_hypermap b0 * / c= b0 chypermap ctuple_hypermap b0 f0 * / c= b0 chypermap ctuple_hypermap b0 f0
- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) /\ (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)))
T c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F), (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) |- (((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) /\ ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c/\ c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- |- (((((permutes ((face_map H) o (inverse p))) (dart H)) /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) = ((\x. ((\v. ((v /\ ((permutes p) (dart H))) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) ((permutes ((face_map H) o (inverse p))) (dart H))))
T c= c/\ c/\ cpermutes * * part co * part cface_map f0 * part cinverse f1 * part cdart f0 cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI * / * / c/\ c/\ b1 cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c/\ c/\ cpermutes * part cinverse f1 * part cdart f0 cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes f1 * part cdart f0 c= * * part co * * part co f1 * * part co * part cedge_map f0 * part cinverse f1 * * part co * * part co f1 * * part co * part cnode_map f0 * part cinverse f1 * * part co f1 * * part co * part cface_map f0 * part cinverse f1 part cI b0 cpermutes * * part co * part cface_map f0 * part cinverse f1 * part cdart f0
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (((edge_map H) o ((node_map H) o (face_map H))) = I))))) |- (((edge_map H) o ((node_map H) o (face_map H))) = I)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI c= * * part co * part cedge_map f0 * * part co * part cnode_map f0 * part cface_map f0 part cI
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- ((permutes (node_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 cpermutes * part cnode_map f0 * part cdart f0
- |- ((((permutes (p o ((edge_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))) = ((\x. ((\v. (v /\ (((permutes (p o ((node_map H) o (inverse p)))) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))) x)) ((permutes (p o ((edge_map H) o (inverse p)))) (dart H))))
T c= c/\ cpermutes * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI * / * / c/\ b1 c/\ cpermutes * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * part cdart f1
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (P c) |- ((~ (P c)) ==> (P c))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- |- ((((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F) ==> ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F)) = ((~ (!a. (!b. (!c. ((a ==> (b = c)) ==> (!P. ((a /\ (P c)) ==> (P b)))))))) ==> F))
T c= c==> c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF c==> c~ ! ! ! c==> c==> b0 c= b1 b2 ! c==> c/\ b0 * b3 b2 * b3 b1 cF
- T |- ((T = T) = T)
T c==> cT c= c= cT cT cT
- |- (((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (((permutes (p o ((face_map H) o (inverse p)))) (dart H)) /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I)))))) = ((\x. ((\v. ((((permutes (inverse p)) (dart H)) /\ ((permutes (node_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ ((((permutes (inverse p)) (dart H)) /\ ((permutes (edge_map H)) (dart H))) /\ (((permutes p) (dart H)) /\ (v /\ (((p o ((edge_map H) o (inverse p))) o ((p o ((node_map H) o (inverse p))) o (p o ((face_map H) o (inverse p))))) = I))))))) x)) ((permutes (p o ((face_map H) o (inverse p)))) (dart H))))
T c= c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI * / * / c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cnode_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ c/\ cpermutes * part cinverse f0 * part cdart f1 cpermutes * part cedge_map f1 * part cdart f1 c/\ cpermutes f0 * part cdart f1 c/\ b1 c= * * part co * * part co f0 * * part co * part cedge_map f1 * part cinverse f0 * * part co * * part co f0 * * part co * part cnode_map f1 * part cinverse f0 * * part co f0 * * part co * part cface_map f1 * part cinverse f0 part cI b0 cpermutes * * part co f0 * * part co * part cface_map f1 * part cinverse f0 * part cdart f1
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- (((permutes (node_map H)) (dart H)) = T)
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 c= cpermutes * part cnode_map f0 * part cdart f0 cT
- ((FINITE (dart H)) /\ (((permutes (edge_map H)) (dart H)) /\ (((permutes (node_map H)) (dart H)) /\ (((permutes (face_map H)) (dart H)) /\ (!x. (((edge_map H) ((node_map H) ((face_map H) x))) = x)))))) |- ((permutes (edge_map H)) (dart H))
T c==> c/\ cFINITE * part cdart f0 c/\ cpermutes * part cedge_map f0 * part cdart f0 c/\ cpermutes * part cnode_map f0 * part cdart f0 c/\ cpermutes * part cface_map f0 * part cdart f0 ! c= cedge_map f0 cnode_map f0 cface_map f0 b0 b0 cpermutes * part cedge_map f0 * part cdart f0
- (~ (P b)), (P c), (b = c) |- ((~ F) ==> F)
T c==> c~ * f0 f1 c==> * f0 f2 c==> c= f1 f2 c==> c~ cF cF
