N Conforming.SIGMA_FAN_OF_FANADD_AT_POINT2
C |- (!x. (!V. (!E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 f5 f6
D TRUTH
A |- T
T cT
D ETA_AX
A |- (!t. ((\x. (t x)) = t))
T c= / * f0 b0 f0
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D NOT_FORALL_THM
A |- (!P. ((~ (!x. (P x))) = (?x. (~ (P x)))))
T c= c~ ! * f0 b0 c? / c~ * f0 b0
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D NUMERAL
A |- (!n. ((NUMERAL n) = n))
T c= cNUMERAL f0 f0
D num_INDUCTION
A |- (!P. (((P (NUMERAL _0)) /\ (!n. ((P n) ==> (P (SUC n))))) ==> (!n. (P n))))
T c==> c/\ * f0 cNUMERAL c_0 ! c==> * f0 b0 * f0 cSUC b0 ! * f0 b0
D ADD_0
A |- (!m. ((m + (NUMERAL _0)) = m))
T c= c+ f0 cNUMERAL c_0 f0
D Ssrnat.addnS
A |- (!m. (!n. ((m + (SUC n)) = (SUC (m + n)))))
T c= c+ f0 cSUC f1 cSUC c+ f0 f1
D ADD_CLAUSES
A |- ((!n. (((NUMERAL _0) + n) = n)) /\ ((!m. ((m + (NUMERAL _0)) = m)) /\ ((!m. (!n. (((SUC m) + n) = (SUC (m + n))))) /\ (!m. (!n. ((m + (SUC n)) = (SUC (m + n))))))))
T c/\ ! c= c+ cNUMERAL c_0 b0 b0 c/\ ! c= c+ b0 cNUMERAL c_0 b0 c/\ ! ! c= c+ cSUC b0 b1 cSUC c+ b0 b1 ! ! c= c+ b0 cSUC b1 cSUC c+ b0 b1
D Ssrnat.addn_eq0
A |- (!m. (!n. (((m + n) = (NUMERAL _0)) = ((m = (NUMERAL _0)) /\ (n = (NUMERAL _0))))))
T c= c= c+ f0 f1 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c= f1 cNUMERAL c_0
D ONE
A |- ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0)))
T c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
D TWO
A |- ((NUMERAL (BIT0 (BIT1 _0))) = (SUC (NUMERAL (BIT1 _0))))
T c= cNUMERAL cBIT0 cBIT1 c_0 cSUC cNUMERAL cBIT1 c_0
D MULT_0
A |- (!m. ((m * (NUMERAL _0)) = (NUMERAL _0)))
T c= c* f0 cNUMERAL c_0 cNUMERAL c_0
D MULT_SUC
A |- (!m. (!n. ((m * (SUC n)) = (m + (m * n)))))
T c= c* f0 cSUC f1 c+ f0 c* f0 f1
D LE
A |- ((!m. ((m <= (NUMERAL _0)) = (m = (NUMERAL _0)))) /\ (!m. (!n. ((m <= (SUC n)) = ((m = (SUC n)) \/ (m <= n))))))
T c/\ ! c= c<= b0 cNUMERAL c_0 c= b0 cNUMERAL c_0 ! ! c= c<= b0 cSUC b1 c\/ c= b0 cSUC b1 c<= b0 b1
D GT
A |- (!n. (!m. ((m > n) = (n < m))))
T c= c> f0 f1 c< f1 f0
D LE_0
A |- (!n. ((NUMERAL _0) <= n))
T c<= cNUMERAL c_0 f0
D LT_REFL
A |- (!n. (~ (n < n)))
T c~ c< f0 f0
D NOT_LE
A |- (!m. (!n. ((~ (m <= n)) = (n < m))))
T c= c~ c<= f0 f1 c< f1 f0
D ARITH_SUC
A |- ((!n. ((SUC (NUMERAL n)) = (NUMERAL (SUC n)))) /\ (((SUC _0) = (BIT1 _0)) /\ ((!n. ((SUC (BIT0 n)) = (BIT1 n))) /\ (!n. ((SUC (BIT1 n)) = (BIT0 (SUC n)))))))
T c/\ ! c= cSUC cNUMERAL b0 cNUMERAL cSUC b0 c/\ c= cSUC c_0 cBIT1 c_0 c/\ ! c= cSUC cBIT0 b0 cBIT1 b0 ! c= cSUC cBIT1 b0 cBIT0 cSUC b0
D ARITH_ADD
A |- ((!m. (!n. (((NUMERAL m) + (NUMERAL n)) = (NUMERAL (m + n))))) /\ (((_0 + _0) = _0) /\ ((!n. ((_0 + (BIT0 n)) = (BIT0 n))) /\ ((!n. ((_0 + (BIT1 n)) = (BIT1 n))) /\ ((!n. (((BIT0 n) + _0) = (BIT0 n))) /\ ((!n. (((BIT1 n) + _0) = (BIT1 n))) /\ ((!m. (!n. (((BIT0 m) + (BIT0 n)) = (BIT0 (m + n))))) /\ ((!m. (!n. (((BIT0 m) + (BIT1 n)) = (BIT1 (m + n))))) /\ ((!m. (!n. (((BIT1 m) + (BIT0 n)) = (BIT1 (m + n))))) /\ (!m. (!n. (((BIT1 m) + (BIT1 n)) = (BIT0 (SUC (m + n)))))))))))))))
T c/\ ! ! c= c+ cNUMERAL b0 cNUMERAL b1 cNUMERAL c+ b0 b1 c/\ c= c+ c_0 c_0 c_0 c/\ ! c= c+ c_0 cBIT0 b0 cBIT0 b0 c/\ ! c= c+ c_0 cBIT1 b0 cBIT1 b0 c/\ ! c= c+ cBIT0 b0 c_0 cBIT0 b0 c/\ ! c= c+ cBIT1 b0 c_0 cBIT1 b0 c/\ ! ! c= c+ cBIT0 b0 cBIT0 b1 cBIT0 c+ b0 b1 c/\ ! ! c= c+ cBIT0 b0 cBIT1 b1 cBIT1 c+ b0 b1 c/\ ! ! c= c+ cBIT1 b0 cBIT0 b1 cBIT1 c+ b0 b1 ! ! c= c+ cBIT1 b0 cBIT1 b1 cBIT0 cSUC c+ b0 b1
D REAL_ADD_LID
A |- (!x. (((real_add (real_of_num (NUMERAL _0))) x) = x))
T c= creal_add creal_of_num cNUMERAL c_0 f0 f0
D REAL_ADD_LINV
A |- (!x. (((real_add (real_neg x)) x) = (real_of_num (NUMERAL _0))))
T c= creal_add creal_neg f0 f0 creal_of_num cNUMERAL c_0
D REAL_LE_ANTISYM
A |- (!x. (!y. ((((real_le x) y) /\ ((real_le y) x)) = (x = y))))
T c= c/\ creal_le f0 f1 creal_le f1 f0 c= f0 f1
D Real_ext.REAL_LE
A |- (!m. (!n. (((real_le (real_of_num m)) (real_of_num n)) = (m <= n))))
T c= creal_le creal_of_num f0 creal_of_num f1 c<= f0 f1
D Misc_defs_and_lemmas.REAL_ADD
A |- (!m. (!n. (((real_add (real_of_num m)) (real_of_num n)) = (real_of_num (m + n)))))
T c= creal_add creal_of_num f0 creal_of_num f1 creal_of_num c+ f0 f1
D real_lt
A |- (!y. (!x. (((real_lt x) y) = (~ ((real_le y) x)))))
T c= creal_lt f0 f1 c~ creal_le f1 f0
D real_ge
A |- (!y. (!x. (((real_ge x) y) = ((real_le y) x))))
T c= creal_ge f0 f1 creal_le f1 f0
D real_gt
A |- (!y. (!x. (((real_gt x) y) = ((real_lt y) x))))
T c= creal_gt f0 f1 creal_lt f1 f0
D REAL_ADD_RID
A |- (!x. (((real_add x) (real_of_num (NUMERAL _0))) = x))
T c= creal_add f0 creal_of_num cNUMERAL c_0 f0
D REAL_LE_LNEG
A |- (!x. (!y. (((real_le (real_neg x)) y) = ((real_le (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c= creal_le creal_neg f0 f1 creal_le creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_LE_NEG
A |- (!x. (!y. (((real_le (real_neg x)) (real_neg y)) = ((real_le y) x))))
T c= creal_le creal_neg f0 creal_neg f1 creal_le f1 f0
D REAL_LE_RNEG
A |- (!x. (!y. (((real_le x) (real_neg y)) = ((real_le ((real_add x) y)) (real_of_num (NUMERAL _0))))))
T c= creal_le f0 creal_neg f1 creal_le creal_add f0 f1 creal_of_num cNUMERAL c_0
D REAL_SUB_LE
A |- (!x. (!y. (((real_le (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_le y) x))))
T c= creal_le creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_le f1 f0
D REAL_NEG_SUB
A |- (!x. (!y. ((real_neg ((real_sub x) y)) = ((real_sub y) x))))
T c= creal_neg creal_sub f0 f1 creal_sub f1 f0
D REAL_LE_LT
A |- (!x. (!y. (((real_le x) y) = (((real_lt x) y) \/ (x = y)))))
T c= creal_le f0 f1 c\/ creal_lt f0 f1 c= f0 f1
D REAL_SUB_LT
A |- (!x. (!y. (((real_lt (real_of_num (NUMERAL _0))) ((real_sub x) y)) = ((real_lt y) x))))
T c= creal_lt creal_of_num cNUMERAL c_0 creal_sub f0 f1 creal_lt f1 f0
D REAL_SUB_0
A |- (!x. (!y. ((((real_sub x) y) = (real_of_num (NUMERAL _0))) = (x = y))))
T c= c= creal_sub f0 f1 creal_of_num cNUMERAL c_0 c= f0 f1
D Real_ext.REAL_PROP_POS_ADD2
A |- (!x. (!y. ((((real_lt (real_of_num (NUMERAL _0))) x) /\ ((real_lt (real_of_num (NUMERAL _0))) y)) ==> ((real_lt (real_of_num (NUMERAL _0))) ((real_add x) y)))))
T c==> c/\ creal_lt creal_of_num cNUMERAL c_0 f0 creal_lt creal_of_num cNUMERAL c_0 f1 creal_lt creal_of_num cNUMERAL c_0 creal_add f0 f1
D REAL_POLY_CLAUSES
A |- ((!x. (!y. (!z. (((real_add x) ((real_add y) z)) = ((real_add ((real_add x) y)) z))))) /\ ((!x. (!y. (((real_add x) y) = ((real_add y) x)))) /\ ((!x. (((real_add (real_of_num (NUMERAL _0))) x) = x)) /\ ((!x. (!y. (!z. (((real_mul x) ((real_mul y) z)) = ((real_mul ((real_mul x) y)) z))))) /\ ((!x. (!y. (((real_mul x) y) = ((real_mul y) x)))) /\ ((!x. (((real_mul (real_of_num (NUMERAL (BIT1 _0)))) x) = x)) /\ ((!x. (((real_mul (real_of_num (NUMERAL _0))) x) = (real_of_num (NUMERAL _0)))) /\ ((!x. (!y. (!z. (((real_mul x) ((real_add y) z)) = ((real_add ((real_mul x) y)) ((real_mul x) z)))))) /\ ((!x. (((real_pow x) (NUMERAL _0)) = (real_of_num (NUMERAL (BIT1 _0))))) /\ (!x. (!n. (((real_pow x) (SUC n)) = ((real_mul x) ((real_pow x) n))))))))))))))
T c/\ ! ! ! c= creal_add b0 creal_add b1 b2 creal_add creal_add b0 b1 b2 c/\ ! ! c= creal_add b0 b1 creal_add b1 b0 c/\ ! c= creal_add creal_of_num cNUMERAL c_0 b0 b0 c/\ ! ! ! c= creal_mul b0 creal_mul b1 b2 creal_mul creal_mul b0 b1 b2 c/\ ! ! c= creal_mul b0 b1 creal_mul b1 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL cBIT1 c_0 b0 b0 c/\ ! c= creal_mul creal_of_num cNUMERAL c_0 b0 creal_of_num cNUMERAL c_0 c/\ ! ! ! c= creal_mul b0 creal_add b1 b2 creal_add creal_mul b0 b1 creal_mul b0 b2 c/\ ! c= creal_pow b0 cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 ! ! c= creal_pow b0 cSUC b1 creal_mul b0 creal_pow b0 b1
D REAL_POLY_NEG_CLAUSES
A |- ((!x. ((real_neg x) = ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) x))) /\ (!x. (!y. (((real_sub x) y) = ((real_add x) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) y))))))
T c/\ ! c= creal_neg b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b0 ! ! c= creal_sub b0 b1 creal_add b0 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 b1
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D UNION
A |- (!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))))
T c= * * part cUNION f0 f1 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 f0 cIN b1 f1 b1
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_UNION
A |- (!s. (!t. (!x. ((x IN (s UNION t)) = ((x IN s) \/ (x IN t))))))
T c= cIN f0 * * part cUNION f1 f2 c\/ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D IN_SING
A |- (!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y))))
T c= cIN f0 * * part cINSERT f1 part cEMPTY c= f0 f1
D FINITE_EMPTY
A |- (FINITE EMPTY)
T cFINITE part cEMPTY
D Oxl_2012.CARD_INSERT
A |- (!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))))
T c==> cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
D Oxl_2012.CARD_EMPTY
A |- ((CARD EMPTY) = (NUMERAL _0))
T c= cCARD part cEMPTY cNUMERAL c_0
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Fan.SIGMA_FAN
A |- (!x. (!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))))))
T c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f4 c, f1 f2 cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN csigma_fan f4 f1 f2 f0 f3 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f4 f1 f2 f0 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0
D Fan.UNIQUE_SIGMA_FAN
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w))))))))
T c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f4 c, f1 f2 c/\ cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= f5 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 f5 cazim f4 f0 f3 b0 c= csigma_fan f4 f1 f2 f0 f3 f5
D Planarity.angle_is_small_fan
A |- (!x. (!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f3 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 f3 f4 f5 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4
D Conforming.SET_OF_EDGE_UNION_GRAPH
A |- (!v. (!V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))))))
T c= * * * part cset_of_edge f0 f1 * * part cUNION f2 f3 * * part cUNION * * * part cset_of_edge f0 f1 f2 * * * part cset_of_edge f0 f1 f3
D Conforming.add_edge_imp_card_set_edge_ge1_fan
A |- (!x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= f3 * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f3 cNUMERAL cBIT1 c_0
D Conforming.add_edge_graph
A |- (!v. (!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))))))
T c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY f3 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f3 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3
D Conforming.set_of_only_edge
A |- (!v. (!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY))))))
T c==> cIN f0 f1 c= * * * part cset_of_edge f2 f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f4 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY part cEMPTY f4 c==> c= csigma_fan f2 f0 f1 f6 f5 f3 c==> c/\ cIN f5 * * * part cset_of_edge f6 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f5 c/\ c~ c= f6 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ cIN f6 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c= csigma_fan f2 f0 f4 f3 f6 f5
+ |- ((w1 = w) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> c= f0 f1 creal_le cazim f2 f3 f4 f1 cazim f2 f3 f4 f0
- |- (((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- |- (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) = ((A x) ==> ((A x) \/ (B x))))
T c= c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> * f0 f1 c\/ * f0 f1 * f2 f1
+ |- (((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = ((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0)))) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))) = ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q'))))
T c= c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 f5 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5 c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 f5 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5
- |- ((\A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) A)
T * / c==> c~ c= c/\ c\/ b0 f0 c~ f0 c/\ b0 c~ f0 cF f1
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
- |- ((\u. (!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))))) u)
T * / ! ! ! c==> c~ c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 cF f0
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) ==> F), ((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) ==> F) |- F
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 cF c==> c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) /\ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> c/\ c\/ cIN f6 * * * part cset_of_edge f5 f0 f1 c= f6 f4 c~ c= f6 f3 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c/\ c/\ c\/ cIN f6 * * * part cset_of_edge f5 f0 f1 c= f6 f4 c~ c= f6 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6
+ (~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) |- (?x. (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))))
T c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c? / c/\ c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b1 c~ c= b1 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b1 c= b1 f3
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> creal_le cazim f2 f5 f3 csigma_fan f2 f0 f1 f5 f3 cazim f2 f5 f3 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c= csigma_fan f2 f0 f1 f3 f4 f5 c/\ cfan80 c, f2 c, f0 f1 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 csigma_fan f2 f0 f1 f5 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
- ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F), (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) |- (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) /\ ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c/\ c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
- ((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = T)
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) |- (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))
T c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY f3 c= f3 * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY
+ |- (((!x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) ==> ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)) = ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x))
T c= c==> ! ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0 * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
- ((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))), (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c/\ c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c= csigma_fan f4 f2 f3 f1 f0 f5
+ |- (((!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) ==> ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)) = ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t))
T c= c==> ! c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1 * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
+ |- ((\v. (!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))))) v)
T * / ! ! c==> cIN b1 b2 c= * * * part cset_of_edge b0 b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * * part cINSERT b1 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (w1 IN (((set_of_edge v) V) E)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c/\ cIN csigma_fan f4 f0 f1 f6 f3 * * * part cset_of_edge f6 f0 f1 c/\ c~ c= csigma_fan f4 f0 f1 f6 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f6 f0 f1 c~ c= b0 f3 creal_le cazim f4 f6 f3 csigma_fan f4 f0 f1 f6 f3 cazim f4 f6 f3 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
- |- ((_3071050 = _3071054) ==> ((~ (_3071053 = _3071057)) \/ ((~ (_3071051 = _3071055)) \/ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) ==> F) |- F
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 cF cF
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- (((~ (w1 = u)) ==> ((w1 = u) = F)) = ((w1 = u) = F))
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= c==> c~ c= f0 f5 c= c= f0 f5 cF c= c= f0 f5 cF
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((~ (u = u)) ==> (u = u))
T c==> c~ c= f0 f0 c= f0 f0
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((((sigma_fan x) V) E1) v) u) = w))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= csigma_fan f0 f1 f5 f6 f3 f4 c= csigma_fan f0 f1 f5 f6 f3 f4
- |- (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
+ (FAN (x , (V , E))), ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))))) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 f5 f6
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- (~ (u = w1))
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c~ c= f5 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_ge creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ (~ (x = u)), (FAN (x , (V , E))), ((u INSERT (w INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge u) V) E)) /\ ((((u INSERT (w INSERT EMPTY)) IN E) = (w IN (((set_of_edge u) V) E))) /\ (((u INSERT (w INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = u)) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c~ c= f0 f1 c==> cFAN c, f0 c, f2 f3 c==> cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c= c==> c/\ cFINITE * * * part cset_of_edge f1 f2 f3 c/\ cIN f4 * * * part cset_of_edge f1 f2 f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f4 c/\ c~ c= f1 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= csigma_fan f0 f2 f5 f6 f1 f4 c==> c==> cFAN c, f0 c, f2 f3 c/\ cFINITE * * * part cset_of_edge f1 f2 f3 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 cIN f4 * * * part cset_of_edge f1 f2 f3 c==> cIN * * part cINSERT f1 * * part cINSERT f4 part cEMPTY f3 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f4 c/\ c~ c= f1 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f2 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= csigma_fan f0 f2 f5 f6 f1 f4
+ (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((((((set_of_edge v) V) E1) x) ==> (x = u)) = (x = u))
T c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c= c==> cset_of_edge f0 f1 f2 f3 c= f3 f4 c= f3 f4
+ |- (((!y. ((x IN (y INSERT EMPTY)) = (x = y))) ==> ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)) = ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y))
T c= c==> ! c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1 * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ |- ((\V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))) V)
T * / c==> cIN f0 b0 c= * * * part cset_of_edge f1 b0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY f2
- (~ (x = u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ (x = u)) /\ (x = u))
T c==> c~ c= f0 f1 c==> c/\ c\/ c/\ cset_of_edge f2 f3 f4 f0 c~ c= f0 f1 c/\ c~ cset_of_edge f2 f3 f4 f0 c= f0 f1 c/\ ! c\/ cset_of_edge f2 f3 f4 b0 c~ c= b0 f1 ! c\/ c~ cset_of_edge f2 f3 f4 b0 c= b0 f1 c==> c/\ cset_of_edge f2 f3 f4 f0 c~ c= f0 f1 c/\ c~ c= f0 f1 c= f0 f1
- |- (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))
T c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 f8 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 f8
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5
+ |- ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ |- (((!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))) ==> ((\q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))) q')) = ((\q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= c= csigma_fan f1 f2 f3 f4 f5 f6 b0 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f5 f6 c==> f0 b0 * / c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= c= csigma_fan f1 f2 f3 f4 f5 f6 b0 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f5 f6 c==> f0 b0 f7 * / c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= c= csigma_fan f1 f2 f3 f4 f5 f6 b0 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f5 f6 c==> f0 b0 f7
+ |- ((a \/ b) = ((~ b) ==> a))
T c= c\/ f0 f1 c==> c~ f1 f0
+ |- ((\t'. (!e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f4 f5 c==> c~ c= f2 f5 c==> c~ c= f6 f2 c==> c~ c= f6 f5 c==> cFAN c, f6 c, f0 f1 c==> cFAN c, f6 c, f0 f3 c==> cfan80 c, f6 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f6 f0 f1 f4 f5 f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cIN f5 * * * part cset_of_edge f2 f0 f3 c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c> cCARD * * * part cset_of_edge f2 f0 f3 cNUMERAL cBIT1 c_0 c= csigma_fan f6 f0 f3 f2 f4 f5
- (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) /\ (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c/\ c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))
T c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 f6 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 c==> f1 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN V) |- (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c==> cIN f4 f0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f5 f0 f1 * * * part cset_of_edge f5 f0 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= b0 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((w IN (((set_of_edge v) V) E1)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f5 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f6 c==> cfan80 c, f4 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f4 f0 f1 f2 f3 f5 c==> c/\ cIN f3 * * * part cset_of_edge f5 f0 f6 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ c= f5 f3 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c==> cIN f3 * * * part cset_of_edge f5 f0 f6 c= csigma_fan f4 f0 f6 f5 f2 f3
+ |- (((((set_of_edge v) V) E1) = (u INSERT EMPTY)) ==> (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) |- (F = F)
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c= cF cF
+ |- ((\x. (!V. (!E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c= b3 * * part cUNION b2 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b3 cNUMERAL cBIT1 c_0 f2
+ |- ((\q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))) q')
T * / c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= c= csigma_fan f1 f2 f3 f4 f5 f6 b0 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f5 f6 c==> f0 b0 f7
+ |- (((!x. (!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))))) ==> ((\x. (!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))))) x)) = ((\x. (!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))))) x))
T c= c==> ! ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b3 b1 b2 * * part cINSERT b4 part cEMPTY c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 c/\ cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 c/\ c~ c= csigma_fan b0 b1 b2 b3 b4 b4 ! c==> c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 c~ c= b5 b4 creal_le cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cazim b0 b3 b4 b5 * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b3 b1 b2 * * part cINSERT b4 part cEMPTY c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 c/\ cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 c/\ c~ c= csigma_fan b0 b1 b2 b3 b4 b4 ! c==> c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 c~ c= b5 b4 creal_le cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cazim b0 b3 b4 b5 f0 * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b3 b1 b2 * * part cINSERT b4 part cEMPTY c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 c/\ cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 c/\ c~ c= csigma_fan b0 b1 b2 b3 b4 b4 ! c==> c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 c~ c= b5 b4 creal_le cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cazim b0 b3 b4 b5 f0
+ |- (F ==> ((CARD EMPTY) = (NUMERAL _0)))
T c==> cF c= cCARD part cEMPTY cNUMERAL c_0
+ |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((((((sigma_fan x) V) E1) v) u) = w) = ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 c= csigma_fan f0 f1 f2 f3 f4 f5
- (_3071050 = _3071054), (_3071053 = _3071057) |- ((_3071051 = _3071055) ==> ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
- |- (((!s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) ==> ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)) = ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s))
T c= c==> ! ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0 * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
+ ((((set_of_edge v) V) E) = (u INSERT EMPTY)) |- (((((set_of_edge v) V) E) = (u INSERT EMPTY)) /\ (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f4 f0 f3 f5 cazim f4 f0 f3 f6
+ |- ((~ (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> F)
T c==> c~ c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c==> creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 f5 cF
- |- ((\q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q')
T * / c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8
+ (FAN (x , (V , E))), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((FINITE (((set_of_edge v) V) E)) /\ ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= csigma_fan f0 f1 f5 f3 f4 f6 c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= csigma_fan f0 f1 f5 f3 f4 f6
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- F
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 cF
- |- ((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) ==> (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))
T c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- ((((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) ==> F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 cF
- (w IN V) |- (T = (w IN V))
T c==> cIN f0 f1 c= cT cIN f0 f1
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ ((v INSERT (w INSERT EMPTY)) IN E1) |- (((v INSERT (w INSERT EMPTY)) IN E1) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
- |- (((!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) ==> ((\A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) A)) = ((\A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) A))
T c= c==> ! c==> c~ c==> * b0 f0 c\/ * b0 f0 * f1 f0 cF * / c==> c~ c==> * b0 f0 c\/ * b0 f0 * f1 f0 cF f2 * / c==> c~ c==> * b0 f0 c\/ * b0 f0 * f1 f0 cF f2
+ |- (T = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c= cT c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- ((((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
+ |- ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))))) V)
T * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ cfan80 c, f0 c, b0 b1 ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 f1
+ |- ((w1 IN (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN (((set_of_edge v) V) E)) \/ (x = w))) x))))) = ((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c\/ cIN b1 * * * part cset_of_edge f1 f2 f3 c= b1 f4 b1 c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4
- |- ((!A. ((A x) ==> ((A x) \/ (B x)))) = T)
T c= ! c==> * b0 f0 c\/ * b0 f0 * f1 f0 cT
- |- (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- ((\x. (!s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s))))))) x)
T * / ! c==> cFINITE b1 c= cCARD * * part cINSERT b0 b1 cCOND cIN b0 b1 cCARD b1 cSUC cCARD b1 f0
+ |- (((((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((((sigma_fan x) V) E1) v) u) = w))
T c= c==> c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY f3 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f3 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c= csigma_fan f4 f5 f3 f1 f6 f2 c= csigma_fan f4 f5 f3 f1 f6 f2
- ((((set_of_edge v) V) E) = (u INSERT EMPTY)) |- ((u INSERT EMPTY) = (((set_of_edge v) V) E))
T c==> c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((u IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f5 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f6 f3 f2 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN f6 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cIN f6 * * part cUNION * * * part cset_of_edge f2 f0 f1 * * * part cset_of_edge f2 f0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f2 f0 f1 * * * part cset_of_edge f2 f0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= b0 f6 creal_le cazim f4 f2 f6 f3 cazim f4 f2 f6 b0
- (~ ((((((sigma_fan x) V) E) v) u) = u)) |- ((u = (((((sigma_fan x) V) E) v) u)) = F)
T c==> c~ c= csigma_fan f0 f1 f2 f3 f4 f4 c= c= f4 csigma_fan f0 f1 f2 f3 f4 cF
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- (((~ (u = w1)) ==> ((u = w1) = F)) = ((u = w1) = F))
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= c==> c~ c= f5 f0 c= c= f5 f0 cF c= c= f5 f0 cF
+ |- ((\q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q')
T * / c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8
+ |- (((!p'. (!q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 * / ! c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7 * / ! c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) /\ (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c/\ c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
+ |- (((!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))) ==> ((\V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))) V)) = ((\V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))) V))
T c= c==> ! c==> cIN f0 b0 c= * * * part cset_of_edge f1 b0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY * / c==> cIN f0 b0 c= * * * part cset_of_edge f1 b0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY f2 * / c==> cIN f0 b0 c= * * * part cset_of_edge f1 b0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY f2
+ |- (((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = ((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0)))) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))) = ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q'))))
T c= c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 f5 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5 c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 f5 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) |- (((~ ((u INSERT EMPTY) = (((set_of_edge v) V) E))) ==> (((u INSERT EMPTY) = (((set_of_edge v) V) E)) = F)) = (((u INSERT EMPTY) = (((set_of_edge v) V) E)) = F))
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c= c==> c~ c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2 c= c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2 cF c= c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2 cF
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) u)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) u))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
- |- ((?x'. (((((set_of_edge v) V) E1) x) /\ (~ (x' = u)))) = (((((set_of_edge v) V) E1) x) /\ (?x. (~ (x = u)))))
T c= c? / c/\ cset_of_edge f0 f1 f2 f3 c~ c= b0 f4 c/\ cset_of_edge f0 f1 f2 f3 c? / c~ c= b0 f4
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- (((((set_of_edge v) V) E1) _3071031) ==> (_3071031 = u))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> cset_of_edge f0 f1 f2 f5 c= f5 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c==> cIN f4 f0 c> cCARD * * * part cset_of_edge f4 f0 f6 cNUMERAL cBIT1 c_0 c= csigma_fan f5 f0 f6 f4 f2 f3
- |- (T = ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))))
T c= cT creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
+ |- (((?x. (P x)) /\ Q) = (?x. ((P x) /\ Q)))
T c= c/\ c? / * f0 b0 f1 c? / c/\ * f0 b0 f1
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (~ ((((set_of_edge v) V) E1) u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((~ ((((set_of_edge v) V) E1) u)) /\ ((((set_of_edge v) V) E1) u))
T c==> c~ cset_of_edge f0 f1 f2 f3 c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f4 c~ c= f4 f3 c/\ c~ cset_of_edge f0 f1 f2 f4 c= f4 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 f3 cset_of_edge f0 f1 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c==> c/\ c\/ cIN f6 * * * part cset_of_edge f5 f0 f1 c= f6 f4 c~ c= f6 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f4 f5 c==> c~ c= f2 f5 c==> c~ c= f6 f2 c==> c~ c= f6 f5 c==> cFAN c, f6 c, f0 f1 c==> cFAN c, f6 c, f0 f3 c==> cfan80 c, f6 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f6 f0 f1 f4 f5 f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cIN f5 * * * part cset_of_edge f2 f0 f3 c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c= csigma_fan f6 f0 f3 f2 f4 f5
+ |- ((!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))))) = T)
T c= ! ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b3 * * part cINSERT b1 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b2 b3 b1 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b1 * * part cINSERT b3 part cEMPTY part cEMPTY b0 c= csigma_fan f0 f1 b0 b1 b2 b3 cT
- |- ((p \/ p) = p)
T c= c\/ f0 f0 f0
+ (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> cfan80 c, f0 c, f1 f2 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c= csigma_fan f0 f1 f3 f6 f4 f5
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((FINITE (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- (((FINITE (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f5 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f6 c==> cfan80 c, f4 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f4 f0 f1 f2 f3 f5 c==> c/\ cFINITE * * * part cset_of_edge f5 f0 f6 c/\ cIN f3 * * * part cset_of_edge f5 f0 f6 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ c= f5 f3 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c/\ c/\ cFINITE * * * part cset_of_edge f5 f0 f6 c/\ cIN f3 * * * part cset_of_edge f5 f0 f6 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ c= f5 f3 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= csigma_fan f4 f0 f6 f5 f2 f3
+ ((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) ==> (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))), (((((set_of_edge v) V) E1) = (u INSERT EMPTY)) ==> (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5 c==> c==> c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5 c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- (~ (u = w1))
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c~ c= f5 f0
- |- ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))
T c= cHAS_SIZE f0 f1 c/\ cFINITE f0 c= cCARD f0 f1
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))
T c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 f6 c= c==> c> cCARD * * part cINSERT f4 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f6
+ |- (((~ F) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND F) (NUMERAL _0)) e')))
T c==> c==> c~ cF c= cSUC cCARD part cEMPTY f0 c= cCOND cIN f1 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cF cNUMERAL c_0 f0
+ |- (((FINITE EMPTY) ==> ((CARD (u INSERT EMPTY)) = (((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))))) = ((CARD (u INSERT EMPTY)) = (((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY)))))
T c= c==> cFINITE part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY c= cCARD * * part cINSERT f0 part cEMPTY cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY
- |- (((A \/ B) /\ (~ B)) = (A /\ (~ B)))
T c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1
- |- ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY)))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f5 f0 f1 * * * part cset_of_edge f5 f0 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= b0 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 b0
+ (FAN (x , (V , E))), (FAN (x , (V , E1))), ((((((sigma_fan x) V) E) u) w) = v), (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> c/\ c= csigma_fan f0 f1 f2 f4 f5 f6 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c= csigma_fan f0 f1 f3 f6 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c==> c/\ cFAN c, f5 c, f0 f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= f6 * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f6 cNUMERAL cBIT1 c_0 c= csigma_fan f5 f0 f6 f4 f2 f3
- |- (((real_mul (real_of_num m)) (real_of_num n)) = (real_of_num (m * n)))
T c= creal_mul creal_of_num f0 creal_of_num f1 creal_of_num c* f0 f1
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
+ |- ((FINITE EMPTY) = T)
T c= cFINITE part cEMPTY cT
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
+ |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_ge y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_ge f1 creal_of_num cNUMERAL c_0 creal_gt creal_add f0 f1 creal_of_num cNUMERAL c_0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u IN (((set_of_edge v) V) E)) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> c/\ cIN f6 * * * part cset_of_edge f4 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c==> cIN f6 * * * part cset_of_edge f4 f0 f1 c= csigma_fan f2 f0 f3 f4 f6 f5
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- (x = u)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c= f3 f4
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- ((w1 = u) = F)
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= c= f0 f5 cF
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ |- (((!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w)))))) ==> ((\E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w)))))) E1)) = ((\E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w)))))) E1))
T c= c==> ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= b3 b2 ! c==> c/\ cIN b4 * * * part cset_of_edge b1 f0 b0 c~ c= b4 b2 creal_le cazim f1 b1 b2 b3 cazim f1 b1 b2 b4 c= csigma_fan f1 f0 b0 b1 b2 b3 * / ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= b3 b2 ! c==> c/\ cIN b4 * * * part cset_of_edge b1 f0 b0 c~ c= b4 b2 creal_le cazim f1 b1 b2 b3 cazim f1 b1 b2 b4 c= csigma_fan f1 f0 b0 b1 b2 b3 f2 * / ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= b3 b2 ! c==> c/\ cIN b4 * * * part cset_of_edge b1 f0 b0 c~ c= b4 b2 creal_le cazim f1 b1 b2 b3 cazim f1 b1 b2 b4 c= csigma_fan f1 f0 b0 b1 b2 b3 f2
- (~ ((((((sigma_fan x) V) E) v) u) = u)) |- (((~ (u = (((((sigma_fan x) V) E) v) u))) ==> ((u = (((((sigma_fan x) V) E) v) u)) = F)) = ((u = (((((sigma_fan x) V) E) v) u)) = F))
T c==> c~ c= csigma_fan f0 f1 f2 f3 f4 f4 c= c==> c~ c= f4 csigma_fan f0 f1 f2 f3 f4 c= c= f4 csigma_fan f0 f1 f2 f3 f4 cF c= c= f4 csigma_fan f0 f1 f2 f3 f4 cF
- |- (((!q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) ==> ((\q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q')) = ((\q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 * / c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8 * / c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8
- ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) |- (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) /\ ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c/\ c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- ((\p'. (!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q')))))) p')
T * / ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= csigma_fan f1 f2 f3 f4 f0 f5 b1 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f0 f5 c==> b0 b1 f6
+ |- (T = (FINITE EMPTY))
T c= cT cFINITE part cEMPTY
+ |- (((!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))))) ==> ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))))) E)) = ((\E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))))) E))
T c= c==> ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ cfan80 c, f0 c, f1 b0 ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 creal_le cazim f0 b1 b2 b3 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ cfan80 c, f0 c, f1 b0 ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 creal_le cazim f0 b1 b2 b3 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 f2 * / ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b2 b3 b1 c/\ cfan80 c, f0 c, f1 b0 ! c==> cIN b4 f1 c> cCARD * * * part cset_of_edge b4 f1 b0 cNUMERAL cBIT1 c_0 creal_le cazim f0 b1 b2 b3 cazim f0 b1 b2 csigma_fan f0 f1 b0 b1 b2 f2
- |- ((!E1. (!V. (!v. ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))))) = T)
T c= ! ! ! c\/ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 c~ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 cT
+ |- ((\E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))) E)
T * / ! c==> c= * * part cUNION b0 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY b1 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b1 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 f2
- |- (((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) ==> (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))) = (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))
T c= c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5
- (w IN V) |- ((w IN V) /\ ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))
T c==> cIN f0 f1 c/\ cIN f0 f1 c= * * * part cset_of_edge f2 f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY part cEMPTY * * part cINSERT f0 part cEMPTY
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))) ==> ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))) v)) = ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))) v))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 b0 b1 b2 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 b0 b1 b2 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 f3 * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 b0 b1 b2 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 f3
- ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) |- (((~ ((((set_of_edge v) V) E1) _3071033)) \/ (_3071033 = u)) = ((~ ((((set_of_edge v) V) E1) _3071033)) \/ (_3071033 = u)))
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c= c\/ c~ cset_of_edge f0 f1 f2 f5 c= f5 f4 c\/ c~ cset_of_edge f0 f1 f2 f5 c= f5 f4
- |- (((!p'. (!q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) ==> ((\p'. (!q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')) = ((\p'. (!q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 * / ! c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7 * / ! c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7
+ |- (((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)
T * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f5 f0 f1 * * * part cset_of_edge f5 f0 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= b0 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 b0
+ |- ((\E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2))))) E1)
T * / ! c= * * * part cset_of_edge f0 f1 * * part cUNION b0 b1 * * part cUNION * * * part cset_of_edge f0 f1 b0 * * * part cset_of_edge f0 f1 b1 f2
+ |- (((!p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> b0 b1 * / ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> b0 b1 f6 * / ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> b0 b1 f6
- |- ((F = t) = (~ t))
T c= c= cF f0 c~ f0
+ |- ((((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 f5 f6 cT
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
+ |- (((!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) ==> ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1)) = ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5
+ |- (((!x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) ==> ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)) = ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x))
T c= c==> ! ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0 * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> c/\ cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c= csigma_fan f2 f0 f3 f4 f6 f5
- |- ((\B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))) B)
T * / ! c==> c~ c==> * b1 f0 c\/ * b1 f0 * b0 f0 cF f1
- (~ ((A x) \/ (B x))) |- (~ (B x))
T c==> c~ c\/ * f0 f1 * f2 f1 c~ * f2 f1
- |- ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> q')))
T c==> c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f7
+ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) |- (~ ((((set_of_edge v) V) E1) u))
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c~ cset_of_edge f0 f1 f2 f4
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c= csigma_fan f5 f0 f6 f4 f2 f3
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?x. t) = t)
T c= c? / f0 f0
- |- (T = (((~ ((((set_of_edge v) V) E1) _3071031)) \/ (_3071031 = u)) = ((_3071031 = u) \/ (~ ((((set_of_edge v) V) E1) _3071031)))))
T c= cT c= c\/ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c\/ c= f3 f4 c~ cset_of_edge f0 f1 f2 f3
- |- (T = (!B. (!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))))
T c= cT ! ! c==> c~ c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 cF
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))
T c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 f5 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5
+ |- (((!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))))) ==> ((\V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))))) V)) = ((\V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))))) V))
T c= c==> ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= csigma_fan f0 b0 b1 b2 b3 b3 ! c==> c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c~ c= b4 b3 creal_le cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cazim f0 b2 b3 b4 * / ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= csigma_fan f0 b0 b1 b2 b3 b3 ! c==> c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c~ c= b4 b3 creal_le cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cazim f0 b2 b3 b4 f1 * / ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN csigma_fan f0 b0 b1 b2 b3 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= csigma_fan f0 b0 b1 b2 b3 b3 ! c==> c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c~ c= b4 b3 creal_le cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 cazim f0 b2 b3 b4 f1
+ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))), (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (w1 IN (((set_of_edge v) V) E)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c~ c= f5 f3 c==> cFAN c, f4 c, f1 f2 c==> cfan80 c, f4 c, f1 f2 c==> c= csigma_fan f4 f1 f2 f3 f6 f0 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f2 c==> cIN * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f2 c==> cIN f5 * * * part cset_of_edge f0 f1 f2 creal_le cazim f4 f0 f3 f6 cazim f4 f0 f3 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f5 f0 f1 * * * part cset_of_edge f5 f0 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= b0 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 b0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) /\ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f3 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= csigma_fan f5 f0 f1 f3 f6 f2 c==> c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f2 f0 f1 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c/\ c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f5 f2 f3 f6 cazim f5 f2 f3 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((FAN (x , (V , E1))) ==> ((FINITE (((set_of_edge w) V) E1)) /\ ((((w INSERT (v INSERT EMPTY)) IN E1) = (v IN (((set_of_edge w) V) E1))) /\ (((w INSERT (v INSERT EMPTY)) IN E1) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (x = v)) /\ ((~ (w = v)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))))))))))) ==> (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f5 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f6 f3 f2 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN f6 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> cFAN c, f4 c, f0 f5 c/\ cFINITE * * * part cset_of_edge f3 f0 f5 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 cIN f2 * * * part cset_of_edge f3 f0 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ c~ c= f4 f3 c/\ c~ c= f4 f2 c/\ c~ c= f3 f2 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f4 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f2 f0 f1 * * * part cset_of_edge f2 f0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= b0 f6 creal_le cazim f4 f2 f6 f3 cazim f4 f2 f6 b0
+ |- ((\q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))) q')
T * / c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= c= csigma_fan f2 f3 f4 f5 f0 f6 b0 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f2 f3 f4 f5 f0 f6 c==> f1 b0 f7
- (~ ((((((sigma_fan x) V) E) v) u) = u)) |- (~ (u = (((((sigma_fan x) V) E) v) u)))
T c==> c~ c= csigma_fan f0 f1 f2 f3 f4 f4 c~ c= f4 csigma_fan f0 f1 f2 f3 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = u)), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f5 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f5 c==> c= csigma_fan f2 f0 f1 f3 f6 f4 c==> c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f5 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f5 c==> cIN f3 * * * part cset_of_edge f4 f0 f1 c= csigma_fan f2 f0 f5 f4 f3 f6
+ |- ((\E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w)))))) E1)
T * / ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 c/\ cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= b3 b2 ! c==> c/\ cIN b4 * * * part cset_of_edge b1 f0 b0 c~ c= b4 b2 creal_le cazim f1 b1 b2 b3 cazim f1 b1 b2 b4 c= csigma_fan f1 f0 b0 b1 b2 b3 f2
+ |- ((\E. (!E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c= b1 * * part cUNION b0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b1 cNUMERAL cBIT1 c_0 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f4 f5 c==> c~ c= f2 f5 c==> c~ c= f6 f2 c==> c~ c= f6 f5 c==> cFAN c, f6 c, f0 f1 c==> cFAN c, f6 c, f0 f3 c==> cfan80 c, f6 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f6 f0 f1 f4 f5 f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cIN f5 * * * part cset_of_edge f2 f0 f3 c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c> cCARD * * * part cset_of_edge f2 f0 f3 cNUMERAL cBIT1 c_0 c= csigma_fan f6 f0 f3 f2 f4 f5
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- |- ((!v'. ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v') V) E1) x) = (x = u)))))) = ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (!v. (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))))
T c= ! c\/ ! c= cset_of_edge f0 f1 f2 b1 c= b1 f3 c~ ! c= cset_of_edge b0 f1 f2 b1 c= b1 f3 c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 ! c~ ! c= cset_of_edge b0 f1 f2 b1 c= b1 f3
+ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))) |- ((\w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))) w1)
T c==> ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 * / c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 f5
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) /\ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c> cCARD * * * part cset_of_edge f6 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 c/\ c> cCARD * * * part cset_of_edge f6 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (FAN (x , (V , E))), (u IN (((set_of_edge v) V) E)) |- (((((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> cFAN c, f4 c, f1 f2 c==> cIN f3 * * * part cset_of_edge f0 f1 f2 c= c==> c/\ cIN csigma_fan f4 f1 f2 f0 f3 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f4 f1 f2 f0 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 creal_le cazim f4 f0 f3 f5 cazim f4 f0 f3 f6 c==> c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f4 c, f1 f2 cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN csigma_fan f4 f1 f2 f0 f3 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f4 f1 f2 f0 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 creal_le cazim f4 f0 f3 f5 cazim f4 f0 f3 f6
+ |- ((!x. ((((((set_of_edge v) V) E1) x) \/ (~ (x = u))) /\ ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))) = ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))))
T c= ! c/\ c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((~ ((((set_of_edge v) V) E1) u)) ==> ((((set_of_edge v) V) E1) u))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c~ cset_of_edge f0 f1 f2 f4 cset_of_edge f0 f1 f2 f4
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- ((w1 = u) = F)
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= c= f0 f5 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((w1 IN (((set_of_edge v) V) E)) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f6 f0 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (w1 = w) |- ((w1 = w) /\ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> c= f0 f1 c/\ c= f0 f1 creal_le cazim f2 f3 f4 f1 cazim f2 f3 f4 f0
+ |- (((!v. (!u. (!w. (((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))) ==> ((\v. (!u. (!w. (((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))) v)) = ((\v. (!u. (!w. (((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))) v))
T c= c==> ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 c/\ cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= b2 b1 ! c==> c/\ cIN b3 * * * part cset_of_edge b0 f0 f1 c~ c= b3 b1 creal_le cazim f2 b0 b1 b2 cazim f2 b0 b1 b3 c= csigma_fan f2 f0 f1 b0 b1 b2 * / ! ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 c/\ cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= b2 b1 ! c==> c/\ cIN b3 * * * part cset_of_edge b0 f0 f1 c~ c= b3 b1 creal_le cazim f2 b0 b1 b2 cazim f2 b0 b1 b3 c= csigma_fan f2 f0 f1 b0 b1 b2 f3 * / ! ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 c/\ cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= b2 b1 ! c==> c/\ cIN b3 * * * part cset_of_edge b0 f0 f1 c~ c= b3 b1 creal_le cazim f2 b0 b1 b2 cazim f2 b0 b1 b3 c= csigma_fan f2 f0 f1 b0 b1 b2 f3
+ (w IN V) |- ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> cIN f0 f1 c= c==> c/\ cIN f2 * * part cUNION * * * part cset_of_edge f3 f1 f4 * * * part cset_of_edge f3 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= f2 f5 creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2 c==> c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2
+ ((((set_of_edge v) V) E1) = (u INSERT EMPTY)) |- (((((set_of_edge v) V) E1) = (u INSERT EMPTY)) /\ (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5
+ |- (((!t'. (!e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2 * / ! c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY b0 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b1 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 b0 b1 f2
- |- ((\A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) A)
T * / c==> c~ c==> * b0 f0 c\/ * b0 f0 * f1 f0 cF f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ |- (((!p'. (!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 b1 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> b0 b1 * / ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 b1 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> b0 b1 f5 * / ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 b1 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> b0 b1 f5
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cCARD * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> creal_le cazim f2 f5 f3 csigma_fan f2 f0 f1 f5 f3 cazim f2 f5 f3 f6 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6
+ |- ((\s. ((FINITE s) ==> ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))) s)
T * / c==> cFINITE b0 c= cCARD * * part cINSERT f0 b0 cCOND cIN f0 b0 cCARD b0 cSUC cCARD b0 f1
+ |- ((!V. (!E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))))))) = T)
T c= ! ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cFAN c, f0 c, b0 b2 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ cIN * * part cINSERT b4 * * part cINSERT b5 part cEMPTY b1 c/\ c~ cIN * * part cINSERT b5 * * part cINSERT b3 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b4 b5 b3 c/\ cfan80 c, f0 c, b0 b1 c/\ ! c==> cIN b6 b0 c> cCARD * * * part cset_of_edge b6 b0 b1 cNUMERAL cBIT1 c_0 c= * * part cUNION b1 * * part cINSERT * * part cINSERT b3 * * part cINSERT b5 part cEMPTY part cEMPTY b2 c= csigma_fan f0 b0 b2 b3 b4 b5 cT
+ |- ((\v. (!V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2))))))) v)
T * / ! ! ! c= * * * part cset_of_edge b0 b1 * * part cUNION b2 b3 * * part cUNION * * * part cset_of_edge b0 b1 b2 * * * part cset_of_edge b0 b1 b3 f0
+ |- ((((\x. (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))))) x) ==> F) = T)
T c= c==> * / c/\ c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b1 c~ c= b1 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b1 c= b1 f3 f4 cF cT
- |- ((FINITE (x INSERT s)) = (FINITE s))
T c= cFINITE * * part cINSERT f0 f1 cFINITE f1
+ (~ ((A x) \/ (B x))), (A x) |- F
T c==> c~ c\/ * f0 f1 * f2 f1 c==> * f0 f1 cF
- |- (((!x. (!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))) ==> ((\x. (!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))) x)) = ((\x. (!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))) x))
T c= c==> ! ! ! c==> c~ c==> * b2 b0 c\/ * b2 b0 * b1 b0 cF * / ! ! c==> c~ c==> * b2 b0 c\/ * b2 b0 * b1 b0 cF f0 * / ! ! c==> c~ c==> * b2 b0 c\/ * b2 b0 * b1 b0 cF f0
+ (v IN V) |- ((((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> cIN f0 f1 c= c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 f6 c==> c==> cIN f0 f1 c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f3 f0 f4 f5 cazim f3 f0 f4 f6
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> c/\ cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c/\ cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c= csigma_fan f2 f0 f3 f4 f6 f5
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c\/ cIN f2 * * * part cset_of_edge f6 f0 f1 c= f2 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f6 f0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ |- (((!x. (~ (x IN EMPTY))) ==> ((\x. (~ (x IN EMPTY))) x)) = ((\x. (~ (x IN EMPTY))) x))
T c= c==> ! c~ cIN b0 part cEMPTY * / c~ cIN b0 part cEMPTY f0 * / c~ cIN b0 part cEMPTY f0
- |- ((!A. (((A \/ F) /\ (~ F)) = (A /\ (~ F)))) = ((((T \/ F) /\ (~ F)) = (T /\ (~ F))) /\ (((F \/ F) /\ (~ F)) = (F /\ (~ F)))))
T c= ! c= c/\ c\/ b0 cF c~ cF c/\ b0 c~ cF c/\ c= c/\ c\/ cT cF c~ cF c/\ cT c~ cF c= c/\ c\/ cF cF c~ cF c/\ cF c~ cF
- |- ((!x'. ((~ ((((set_of_edge v) V) E1) x)) \/ (x' = u))) = ((~ ((((set_of_edge v) V) E1) x)) \/ (!x. (x = u))))
T c= ! c\/ c~ cset_of_edge f0 f1 f2 f3 c= b0 f4 c\/ c~ cset_of_edge f0 f1 f2 f3 ! c= b0 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((w1 = w) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))), ((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c==> c= f2 f5 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2 c==> c\/ cIN f2 * * * part cset_of_edge f6 f0 f1 c= f2 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f6 f0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
- (_3071052 = _3071056), (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- (((((((set_of_edge _3071050) _3071051) _3071052) _3071053) = ((((set_of_edge _3071054) _3071055) _3071056) _3071057)) ==> (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))) = (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c= c==> c= cset_of_edge f4 f2 f0 f6 cset_of_edge f5 f3 f1 f7 c\/ cset_of_edge f5 f3 f1 f7 c~ cset_of_edge f4 f2 f0 f6 c\/ cset_of_edge f5 f3 f1 f7 c~ cset_of_edge f4 f2 f0 f6
+ |- (((!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))))) ==> ((\w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))))) w)) = ((\w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))))) w))
T c= c==> ! ! ! c==> c= * * part cUNION b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY b2 c/\ cIN * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 * / ! ! c==> c= * * part cUNION b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY b2 c/\ cIN * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1 * / ! ! c==> c= * * part cUNION b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY b2 c/\ cIN * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- ((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f3 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= csigma_fan f5 f0 f1 f3 f6 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f2 f0 f1 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c/\ c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f5 f2 f3 f6 cazim f5 f2 f3 f4
- (~ ((A x) ==> ((A x) \/ (B x)))) |- F
T c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- (((!V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ cfan80 c, f0 c, b0 b1 ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ cfan80 c, f0 c, b0 b1 ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 f1 * / ! ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b1 c/\ c= csigma_fan f0 b0 b1 b3 b4 b2 c/\ cfan80 c, f0 c, b0 b1 ! c==> cIN b5 b0 c> cCARD * * * part cset_of_edge b5 b0 b1 cNUMERAL cBIT1 c_0 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 csigma_fan f0 b0 b1 b2 b3 f1
+ (~ F) |- ((~ F) /\ ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0))))
T c==> c~ cF c/\ c~ cF c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0
+ |- ((\w. (((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))) w)
T * / c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f4 c, f1 f2 c/\ cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= b0 f3 ! c==> c/\ cIN b1 * * * part cset_of_edge f0 f1 f2 c~ c= b1 f3 creal_le cazim f4 f0 f3 b0 cazim f4 f0 f3 b1 c= csigma_fan f4 f1 f2 f0 f3 b0 f5
+ |- (((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((((((sigma_fan x) V) E1) v) u) = w) = ((((((sigma_fan x) V) E1) v) u) = w))) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))) = ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))
T c= c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 c= csigma_fan f0 f1 f2 f3 f4 f5 c= c==> c> cCARD * * part cINSERT f4 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c= c==> c> cCARD * * part cINSERT f4 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) |- ((((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 c= csigma_fan f3 f0 f1 f2 f4 f5 c= csigma_fan f3 f0 f1 f2 f4 f5
+ |- (((!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))) ==> ((\u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))) u)) = ((\u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))) u))
T c= c==> ! c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT b0 part cEMPTY c/\ cFAN c, f3 c, f1 f2 cIN b0 * * * part cset_of_edge f0 f1 f2 c/\ cIN csigma_fan f3 f1 f2 f0 b0 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f3 f1 f2 f0 b0 b0 ! c==> c/\ cIN b1 * * * part cset_of_edge f0 f1 f2 c~ c= b1 b0 creal_le cazim f3 f0 b0 csigma_fan f3 f1 f2 f0 b0 cazim f3 f0 b0 b1 * / c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT b0 part cEMPTY c/\ cFAN c, f3 c, f1 f2 cIN b0 * * * part cset_of_edge f0 f1 f2 c/\ cIN csigma_fan f3 f1 f2 f0 b0 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f3 f1 f2 f0 b0 b0 ! c==> c/\ cIN b1 * * * part cset_of_edge f0 f1 f2 c~ c= b1 b0 creal_le cazim f3 f0 b0 csigma_fan f3 f1 f2 f0 b0 cazim f3 f0 b0 b1 f4 * / c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT b0 part cEMPTY c/\ cFAN c, f3 c, f1 f2 cIN b0 * * * part cset_of_edge f0 f1 f2 c/\ cIN csigma_fan f3 f1 f2 f0 b0 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= csigma_fan f3 f1 f2 f0 b0 b0 ! c==> c/\ cIN b1 * * * part cset_of_edge f0 f1 f2 c~ c= b1 b0 creal_le cazim f3 f0 b0 csigma_fan f3 f1 f2 f0 b0 cazim f3 f0 b0 b1 f4
+ |- ((\E1. (((FAN (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (E1 = (E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY))))) ==> (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))))) E1)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c= b0 * * part cUNION f2 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 f5
+ ((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) /\ (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4
+ |- ((!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))) = T)
T c= ! ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b2 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 b0 b1 b2 cT
+ |- ((!q'. ((p = p') ==> ((p' ==> (q = q')) ==> ((p ==> q) = (p' ==> q'))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 b0 c= c==> f0 f2 c==> f1 b0 cT
+ |- (((?x. (((((set_of_edge v) V) E1) x) /\ (~ (x = u)))) \/ (?x. ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)))) = (?x. ((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)))))
T c= c\/ c? / c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c? / c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c? / c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4
+ |- (((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c= c==> c> cCARD * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c= c==> c> cCARD * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4
- (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) |- ((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) /\ (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)))
T c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c/\ c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
+ |- ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = u)), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f5 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f5 c==> c= csigma_fan f2 f0 f1 f3 f6 f4 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f5 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f5 c==> cIN f3 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c= csigma_fan f2 f0 f5 f4 f3 f6
+ |- (((!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))) ==> ((\E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))) E)) = ((\E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))) E))
T c= c==> ! ! c==> c= * * part cUNION b0 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY b1 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b1 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 * / ! c==> c= * * part cUNION b0 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY b1 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b1 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 f2 * / ! c==> c= * * part cUNION b0 * * part cINSERT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY part cEMPTY b1 c/\ cIN * * part cINSERT f1 * * part cINSERT f0 part cEMPTY b1 cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 f2
+ |- (((!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) ==> ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v)) = ((\v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))) v))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
+ (fan80 (x , (V , E))) |- ((fan80 (x , (V , E))) = T)
T c==> cfan80 c, f0 c, f1 f2 c= cfan80 c, f0 c, f1 f2 cT
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- (((FINITE (((set_of_edge w) V) E1)) /\ ((v IN (((set_of_edge w) V) E1)) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY)))))))))))) ==> (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c==> c/\ cFINITE * * * part cset_of_edge f4 f0 f6 c/\ cIN f5 * * * part cset_of_edge f4 f0 f6 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f5 f0 f1 * * * part cset_of_edge f5 f0 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= b0 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 b0
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) /\ F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c/\ c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 cF
+ |- ((\w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY))))) w)
T * / ! c==> cIN b0 b1 c= * * * part cset_of_edge f0 b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY * * part cINSERT b0 part cEMPTY f1
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ |- (((!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))) ==> ((\E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))) E2)) = ((\E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))) E2))
T c= c==> ! c= * * * part cset_of_edge f0 f1 * * part cUNION f2 b0 * * part cUNION * * * part cset_of_edge f0 f1 f2 * * * part cset_of_edge f0 f1 b0 * / c= * * * part cset_of_edge f0 f1 * * part cUNION f2 b0 * * part cUNION * * * part cset_of_edge f0 f1 f2 * * * part cset_of_edge f0 f1 b0 f3 * / c= * * * part cset_of_edge f0 f1 * * part cUNION f2 b0 * * part cUNION * * * part cset_of_edge f0 f1 f2 * * * part cset_of_edge f0 f1 b0 f3
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))
T c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 f5 c= c==> c> cCARD * * part cINSERT f2 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f5
+ |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
- |- (((real_div x) (real_of_num (NUMERAL (BIT1 _0)))) = x)
T c= creal_div f0 creal_of_num cNUMERAL cBIT1 c_0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f5 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY part cEMPTY f5 c==> c= csigma_fan f2 f0 f1 f6 f4 f3 c==> c/\ c~ c= f6 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ cIN f6 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f5 c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f5 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c= csigma_fan f2 f0 f5 f3 f6 f4
- (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ F) ==> F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c==> c~ cF cF
- |- ((!v'. ((!x. (((((set_of_edge v') V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) = ((!v. (!x. (((((set_of_edge v) V) E1) x) = (x = u)))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u))))))
T c= ! c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge f3 f0 f1 b1 c= b1 f2 c\/ ! ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge f3 f0 f1 b0 c= b0 f2
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x. ((P x) \/ Q)) = ((!x. (P x)) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cCARD * * part cINSERT f4 part cEMPTY cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5
- |- ((!v. ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) = T)
T c= ! c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- ((((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f3 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= csigma_fan f5 f0 f1 f3 f6 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f2 f0 f1 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> c==> c/\ c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f5 c, f0 f1 cIN f3 * * * part cset_of_edge f2 f0 f1 c/\ cIN csigma_fan f5 f0 f1 f2 f3 * * * part cset_of_edge f2 f0 f1 c/\ c~ c= csigma_fan f5 f0 f1 f2 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f2 f0 f1 c~ c= b0 f3 creal_le cazim f5 f2 f3 csigma_fan f5 f0 f1 f2 f3 cazim f5 f2 f3 b0 creal_le cazim f5 f2 f3 f6 cazim f5 f2 f3 f4
+ (FAN (x , (V , E))), (FAN (x , (V , E1))), ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> c/\ c~ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f6 f4 f5 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY part cEMPTY f3 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c= csigma_fan f0 f1 f3 f5 f6 f4
+ |- ((\v. (!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))))) v)
T * / ! ! ! c==> c= * * part cUNION b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0
- |- (((!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) ==> ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n)) = ((\n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n)))) n))
T c= c==> ! c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1 * / c= cHAS_SIZE f0 b0 c/\ cFINITE f0 c= cCARD f0 b0 f1
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f3 f1 f7 f5 c~ cset_of_edge f2 f0 f6 f4
+ (~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) |- ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) /\ F)
T c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((\w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) w)
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c= csigma_fan f2 f0 f3 f4 f6 f5
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (~ ((w INSERT (v INSERT EMPTY)) IN E)) |- (((w INSERT (v INSERT EMPTY)) IN E) = F)
T c==> c~ cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0)))
T creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0
- |- (((!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))) ==> ((\B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))) B)) = ((\B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))) B))
T c= c==> ! ! c==> c~ c==> * b1 f0 c\/ * b1 f0 * b0 f0 cF * / ! c==> c~ c==> * b1 f0 c\/ * b1 f0 * b0 f0 cF f1 * / ! c==> c~ c==> * b1 f0 c\/ * b1 f0 * b0 f0 cF f1
- (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- ((_3071051 = _3071055) /\ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c\/ c~ c= f6 f7 c\/ cset_of_edge f3 f1 f7 f5 c~ cset_of_edge f2 f0 f6 f4
+ |- (((u = u) ==> ((((set_of_edge v) V) E1) u)) = ((((set_of_edge v) V) E1) u))
T c= c==> c= f0 f0 cset_of_edge f1 f2 f3 f0 cset_of_edge f1 f2 f3 f0
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ ((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) ==> (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5 c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f4 f1 f2 f0 f3 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (w1 IN (((set_of_edge v) V) E)) |- ((((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 c==> c/\ cIN csigma_fan f4 f0 f1 f6 f3 * * * part cset_of_edge f6 f0 f1 c/\ c~ c= csigma_fan f4 f0 f1 f6 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f6 f0 f1 c~ c= b0 f3 creal_le cazim f4 f6 f3 csigma_fan f4 f0 f1 f6 f3 cazim f4 f6 f3 b0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ |- (((~ ((A x) \/ (B x))) ==> F) = ((A x) \/ (B x)))
T c= c==> c~ c\/ * f0 f1 * f2 f1 cF c\/ * f0 f1 * f2 f1
- (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> cfan80 c, f0 c, f1 f2 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> c= * * part cUNION f2 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f6 f4 f5
+ |- ((!E. (!E1. (!v. (!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))))))) = T)
T c= ! ! ! ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cFAN c, f0 c, f1 b1 c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b0 c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b0 c/\ c~ cIN * * part cINSERT b4 * * part cINSERT b2 part cEMPTY b0 c/\ c= csigma_fan f0 f1 b0 b3 b4 b2 c/\ cfan80 c, f0 c, f1 b0 c/\ ! c==> cIN b5 f1 c> cCARD * * * part cset_of_edge b5 f1 b0 cNUMERAL cBIT1 c_0 c= * * part cUNION b0 * * part cINSERT * * part cINSERT b2 * * part cINSERT b4 part cEMPTY part cEMPTY b1 c= csigma_fan f0 f1 b1 b2 b3 b4 cT
- ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) |- ((((((set_of_edge v) V) E1) _3071032) \/ (~ (_3071032 = u))) = (((((set_of_edge v) V) E1) _3071032) \/ (~ (_3071032 = u))))
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c= c\/ cset_of_edge f0 f1 f2 f5 c~ c= f5 f4 c\/ cset_of_edge f0 f1 f2 f5 c~ c= f5 f4
- (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- ((_3071052 = _3071056) ==> (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ cset_of_edge f3 f1 f7 f5 c~ cset_of_edge f2 f0 f6 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f4 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY part cEMPTY f4 c==> c= csigma_fan f2 f0 f1 f6 f5 f3 c==> c/\ c~ c= f2 f6 c/\ c~ c= f3 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 c= csigma_fan f2 f0 f4 f3 f6 f5
+ (~ ((A x) \/ (B x))) |- (~ (A x))
T c==> c~ c\/ * f0 f1 * f2 f1 c~ * f0 f1
+ |- (((!V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))))) ==> ((\V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))))) V)) = ((\V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))))) V))
T c= c==> ! ! ! c= * * * part cset_of_edge f0 b0 * * part cUNION b1 b2 * * part cUNION * * * part cset_of_edge f0 b0 b1 * * * part cset_of_edge f0 b0 b2 * / ! ! c= * * * part cset_of_edge f0 b0 * * part cUNION b1 b2 * * part cUNION * * * part cset_of_edge f0 b0 b1 * * * part cset_of_edge f0 b0 b2 f1 * / ! ! c= * * * part cset_of_edge f0 b0 * * part cUNION b1 b2 * * part cUNION * * * part cset_of_edge f0 b0 b1 * * * part cset_of_edge f0 b0 b2 f1
- (~ F), (~ ((A x) \/ (B x))), (A x) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ c\/ * f0 f1 * f2 f1 c==> * f0 f1 c/\ c~ cF cF
+ |- ((\e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))) e')
T * / c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY b0 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 b0 f3
- (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) |- (~ ((u INSERT EMPTY) = (((set_of_edge v) V) E)))
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c~ c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2
+ |- (((~ (x IN EMPTY)) ==> ((x IN EMPTY) = F)) = ((x IN EMPTY) = F))
T c= c==> c~ cIN f0 part cEMPTY c= cIN f0 part cEMPTY cF c= cIN f0 part cEMPTY cF
+ |- (((real_add (real_neg (real_of_num m))) (real_of_num m)) = (real_of_num (NUMERAL _0)))
T c= creal_add creal_neg creal_of_num f0 creal_of_num f0 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c= csigma_fan f5 f0 f6 f4 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V), (w1 IN (((set_of_edge v) V) E)) |- (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f6 f0 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 c==> c==> cIN f6 f0 c> cCARD * * * part cset_of_edge f6 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ (~ (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) |- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0)))))
T c==> c~ c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c==> creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 f5 c/\ creal_ge creal_add cazim f0 f1 f2 f5 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f5 creal_of_num cNUMERAL c_0
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- (((FINITE (((set_of_edge u) V) E)) /\ ((w IN (((set_of_edge u) V) E)) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY)))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f4 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY part cEMPTY f4 c==> c= csigma_fan f2 f0 f1 f6 f5 f3 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> c/\ cFINITE * * * part cset_of_edge f6 f0 f1 c/\ cIN f5 * * * part cset_of_edge f6 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c/\ c~ c= f2 f5 c/\ c~ c= f6 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ cIN f6 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c= csigma_fan f2 f0 f4 f3 f6 f5
+ |- (((!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))) ==> ((\v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))) v)) = ((\v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))))))) v))
T c= c==> ! ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN csigma_fan f2 f0 f1 b0 b1 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= csigma_fan f2 f0 f1 b0 b1 b1 ! c==> c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c~ c= b2 b1 creal_le cazim f2 b0 b1 csigma_fan f2 f0 f1 b0 b1 cazim f2 b0 b1 b2 * / ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN csigma_fan f2 f0 f1 b0 b1 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= csigma_fan f2 f0 f1 b0 b1 b1 ! c==> c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c~ c= b2 b1 creal_le cazim f2 b0 b1 csigma_fan f2 f0 f1 b0 b1 cazim f2 b0 b1 b2 f3 * / ! c==> c/\ c~ c= * * * part cset_of_edge b0 f0 f1 * * part cINSERT b1 part cEMPTY c/\ cFAN c, f2 c, f0 f1 cIN b1 * * * part cset_of_edge b0 f0 f1 c/\ cIN csigma_fan f2 f0 f1 b0 b1 * * * part cset_of_edge b0 f0 f1 c/\ c~ c= csigma_fan f2 f0 f1 b0 b1 b1 ! c==> c/\ cIN b2 * * * part cset_of_edge b0 f0 f1 c~ c= b2 b1 creal_le cazim f2 b0 b1 csigma_fan f2 f0 f1 b0 b1 cazim f2 b0 b1 b2 f3
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((_3071032 = u) ==> ((((set_of_edge v) V) E1) _3071032))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c= f5 f4 cset_of_edge f0 f1 f2 f5
+ |- ((\x. (!V. (!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))))) x)
T * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b3 b1 b2 * * part cINSERT b4 part cEMPTY c/\ cFAN c, b0 c, b1 b2 cIN b4 * * * part cset_of_edge b3 b1 b2 c/\ cIN csigma_fan b0 b1 b2 b3 b4 * * * part cset_of_edge b3 b1 b2 c/\ c~ c= csigma_fan b0 b1 b2 b3 b4 b4 ! c==> c/\ cIN b5 * * * part cset_of_edge b3 b1 b2 c~ c= b5 b4 creal_le cazim b0 b3 b4 csigma_fan b0 b1 b2 b3 b4 cazim b0 b3 b4 b5 f0
+ |- ((\x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))))) x)
T * / ! ! c= cIN b0 * * part cINSERT b1 b2 c\/ c= b0 b1 cIN b0 b2 f0
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 f5 f6
- |- ((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) = ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c= c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ |- ((x IN A) ==> ((x IN (A UNION B)) = T))
T c==> cIN f0 f1 c= cIN f0 * * part cUNION f1 f2 cT
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))) = (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- (_3071052 = _3071056), (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c\/ cset_of_edge f5 f3 f1 f7 c~ cset_of_edge f4 f2 f0 f6
+ (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> cfan80 c, f0 c, f1 f2 c==> c= csigma_fan f0 f1 f2 f4 f5 f6 c==> c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c= csigma_fan f0 f1 f3 f6 f4 f5
- (~ F) |- ((F = F) = T)
T c==> c~ cF c= c= cF cF cT
- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))), ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) |- (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) /\ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 c==> creal_le cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 cazim f0 f1 f2 f6 c/\ creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f6
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) = T))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c= c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 cT
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = u)), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f5 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f5 c==> c= csigma_fan f2 f0 f1 f3 f6 f4 c==> c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f5 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f5 c==> cIN f3 * * * part cset_of_edge f4 f0 f1 c= csigma_fan f2 f0 f5 f4 f3 f6
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f3 c==> cIN * * part cINSERT f5 * * part cINSERT f4 part cEMPTY f3 c==> c==> cFAN c, f2 c, f0 f1 c/\ cFINITE * * * part cset_of_edge f4 f0 f1 c/\ c= cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 cIN f6 * * * part cset_of_edge f4 f0 f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ c= f2 f4 c/\ c~ c= f2 f6 c/\ c~ c= f4 f6 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c/\ c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ cIN f4 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f4 * * part cINSERT f6 part cEMPTY c~ cIN f6 * part caff * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c= csigma_fan f2 f0 f3 f4 f6 f5
+ |- (((!s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) ==> ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s)) = ((\s. (!t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x))))))) s))
T c= c==> ! ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0 * / ! c= * * part cUNION b0 b1 * part cGSPEC / c? / cSETSPEC b2 c\/ cIN b3 b0 cIN b3 b1 b3 f0
- (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ (x = u)) ==> (x = u))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c==> c~ c= f3 f4 c= f3 f4
- |- (((!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) ==> ((\A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) A)) = ((\A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) A))
T c= c==> ! c==> c~ c= c/\ c\/ b0 f0 c~ f0 c/\ b0 c~ f0 cF * / c==> c~ c= c/\ c\/ b0 f0 c~ f0 c/\ b0 c~ f0 cF f1 * / c==> c~ c= c/\ c\/ b0 f0 c~ f0 c/\ b0 c~ f0 cF f1
- |- ((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) = ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c= c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- ((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- ((\x. (!y. ((x IN (y INSERT EMPTY)) = (x = y)))) x)
T * / ! c= cIN b0 * * part cINSERT b1 part cEMPTY c= b0 b1 f0
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ (~ (w1 = u)), (w1 IN (((set_of_edge v) V) E)) |- ((((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c~ c= f0 f1 c==> cIN f0 * * * part cset_of_edge f2 f3 f4 c= c==> creal_le cazim f5 f2 f1 csigma_fan f5 f3 f4 f2 f1 cazim f5 f2 f1 f0 creal_le cazim f5 f2 f1 f6 cazim f5 f2 f1 f0 c==> c==> c/\ cIN f0 * * * part cset_of_edge f2 f3 f4 c~ c= f0 f1 creal_le cazim f5 f2 f1 csigma_fan f5 f3 f4 f2 f1 cazim f5 f2 f1 f0 creal_le cazim f5 f2 f1 f6 cazim f5 f2 f1 f0
- (~ ((A x) ==> ((A x) \/ (B x)))) |- ((~ ((A x) ==> ((A x) \/ (B x)))) /\ F)
T c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 c/\ c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) = (((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0)))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- (~ F), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cF cF
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0)))) ==> ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))) = ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((\y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))) y)
T * / ! c= cIN f0 * * part cINSERT b0 b1 c\/ c= f0 b0 cIN f0 b1 f1
+ |- (((!p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) ==> ((\p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')) = ((\p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p'))
T c= c==> ! ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> b0 b1 * / ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> b0 b1 f5 * / ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4 c==> b0 b1 f5
- (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) |- ((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) /\ (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))
T c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c/\ c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- (((!E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))) ==> ((\E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))) E)) = ((\E. (!v. (!u. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ (u IN (((set_of_edge v) V) E)))) ==> (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) /\ ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))))))))) E))
T c= c==> ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN csigma_fan f1 f0 b0 b1 b2 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= csigma_fan f1 f0 b0 b1 b2 b2 ! c==> c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c~ c= b3 b2 creal_le cazim f1 b1 b2 csigma_fan f1 f0 b0 b1 b2 cazim f1 b1 b2 b3 * / ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN csigma_fan f1 f0 b0 b1 b2 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= csigma_fan f1 f0 b0 b1 b2 b2 ! c==> c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c~ c= b3 b2 creal_le cazim f1 b1 b2 csigma_fan f1 f0 b0 b1 b2 cazim f1 b1 b2 b3 f2 * / ! ! c==> c/\ c~ c= * * * part cset_of_edge b1 f0 b0 * * part cINSERT b2 part cEMPTY c/\ cFAN c, f1 c, f0 b0 cIN b2 * * * part cset_of_edge b1 f0 b0 c/\ cIN csigma_fan f1 f0 b0 b1 b2 * * * part cset_of_edge b1 f0 b0 c/\ c~ c= csigma_fan f1 f0 b0 b1 b2 b2 ! c==> c/\ cIN b3 * * * part cset_of_edge b1 f0 b0 c~ c= b3 b2 creal_le cazim f1 b1 b2 csigma_fan f1 f0 b0 b1 b2 cazim f1 b1 b2 b3 f2
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- (_3071050 = _3071054) |- ((_3071050 = _3071054) /\ ((~ (_3071053 = _3071057)) \/ ((~ (_3071051 = _3071055)) \/ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
- |- ((\p'. (!q'. (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c/\ c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c= csigma_fan f2 f0 f3 f4 f6 f5
- F |- (F = T)
T c==> cF c= cF cT
+ (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (FAN (x , (V , E1))), (w IN (((set_of_edge v) V) E1)) |- (((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f3 f4 c==> cFAN c, f5 c, f1 f2 c==> cIN f4 * * * part cset_of_edge f0 f1 f2 c= c==> c==> c/\ cIN f3 * * * part cset_of_edge f0 f1 f2 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f5 f0 f3 f4 cazim f5 f0 f3 b0 c= csigma_fan f5 f1 f2 f0 f3 f4 c= csigma_fan f5 f1 f2 f0 f3 f4 c==> c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f5 c, f1 f2 c/\ cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN f4 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= f4 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f5 f0 f3 f4 cazim f5 f0 f3 b0 c= csigma_fan f5 f1 f2 f0 f3 f4 c= csigma_fan f5 f1 f2 f0 f3 f4
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c> cCARD * * * part cset_of_edge f4 f0 f6 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ c> cCARD * * * part cset_of_edge f4 f0 f6 cNUMERAL cBIT1 c_0 c= csigma_fan f5 f0 f6 f4 f2 f3
- |- ((!V. (!v. ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u))))))) = T)
T c= ! ! c\/ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 c~ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 cT
+ |- ((((FAN (x , (V , E1))) ==> ((FINITE (((set_of_edge w) V) E1)) /\ ((((w INSERT (v INSERT EMPTY)) IN E1) = (v IN (((set_of_edge w) V) E1))) /\ (((w INSERT (v INSERT EMPTY)) IN E1) ==> ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) /\ ((~ (x = w)) /\ ((~ (x = v)) /\ ((~ (w = v)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (w INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (w INSERT EMPTY))))) /\ ((w IN V) /\ ((~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (w INSERT EMPTY))))))))))))))))))) ==> (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f4 f1 f5 * * * part cset_of_edge f4 f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= b0 f6 creal_le cazim f0 f4 f6 f3 cazim f0 f4 f6 b0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f4 f1 f5 * * * part cset_of_edge f4 f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= b0 f6 creal_le cazim f0 f4 f6 f3 cazim f0 f4 f6 b0
- ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F), (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) |- (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) /\ ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c/\ c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- |- (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (~ (x = v)), (~ (x = w)), (FAN (x , (V , E1))), ((v INSERT (w INSERT EMPTY)) IN E1), (v IN V) |- ((((FINITE (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((FAN (x , (V , E1))) ==> ((FINITE (((set_of_edge v) V) E1)) /\ ((((v INSERT (w INSERT EMPTY)) IN E1) = (w IN (((set_of_edge v) V) E1))) /\ (((v INSERT (w INSERT EMPTY)) IN E1) ==> ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = w)) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c~ c= f0 f1 c==> c~ c= f0 f2 c==> cFAN c, f0 c, f3 f4 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> cIN f1 f3 c= c==> c/\ cFINITE * * * part cset_of_edge f1 f3 f4 c/\ cIN f2 * * * part cset_of_edge f1 f3 f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= csigma_fan f0 f3 f4 f1 f5 f2 c==> c==> cFAN c, f0 c, f3 f4 c/\ cFINITE * * * part cset_of_edge f1 f3 f4 c/\ c= cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 cIN f2 * * * part cset_of_edge f1 f3 f4 c==> cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ c= f0 f1 c/\ c~ c= f0 f2 c/\ c~ c= f1 f2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f2 part cEMPTY * * part cINSERT f1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ cIN f1 f3 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cIN f2 * part caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c= csigma_fan f0 f3 f4 f1 f5 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f3 f2 f4 f5 cazim f3 f2 f4 f6 creal_le cazim f3 f2 f4 f5 cazim f3 f2 f4 f6
+ |- ((\V. (!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2)))))) V)
T * / ! ! c= * * * part cset_of_edge f0 b0 * * part cUNION b1 b2 * * part cUNION * * * part cset_of_edge f0 b0 b1 * * * part cset_of_edge f0 b0 b2 f1
+ |- (((!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) ==> ((\w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) w)) = ((\w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) w))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4 f5 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 b0 f3 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 f3 f4 b0 cazim f0 f3 f4 csigma_fan f0 f1 f2 f3 f4 f5
- (~ F), ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((~ F) /\ F)
T c==> c~ cF c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c/\ c~ cF cF
- |- (((!B. (!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))) ==> ((\B. (!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))) B)) = ((\B. (!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))) B))
T c= c==> ! ! c==> c~ c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 cF * / ! c==> c~ c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 cF f0 * / ! c==> c~ c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 cF f0
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((((((set_of_edge v) V) E1) u) ==> F) = F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c= c==> cset_of_edge f0 f1 f2 f4 cF cF
+ ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0))) |- F
T c==> creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0 cF
- |- ((!u. (!E1. (!V. (!v. ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u))))))))) = (!u. (!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))))))
T c= ! ! ! ! c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 ! ! ! ! c==> c~ c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f6 cNUMERAL cBIT1 c_0 c= csigma_fan f5 f0 f6 f4 f2 f3
- |- ((((real_gt x) (real_of_num (NUMERAL _0))) /\ ((real_gt y) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul x) y)) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_gt f0 creal_of_num cNUMERAL c_0 creal_gt f1 creal_of_num cNUMERAL c_0 creal_gt creal_mul f0 f1 creal_of_num cNUMERAL c_0
+ |- ((p \/ q) = (q \/ p))
T c= c\/ f0 f1 c\/ f1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
+ (v IN V) |- ((((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((v IN V) ==> ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0)))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> cIN f0 f1 c= c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f3 f1 f2 f0 f4 f5 c==> c==> cIN f0 f1 c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= csigma_fan f3 f1 f2 f0 f4 f5
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((_3071031 = u) \/ (~ ((((set_of_edge v) V) E1) _3071031)))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c\/ c= f5 f4 c~ cset_of_edge f0 f1 f2 f5
+ (~ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c~ creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((~ ((((((sigma_fan x) V) E) v) u) = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (w1 IN (((set_of_edge v) V) E)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c/\ c~ c= csigma_fan f4 f0 f1 f6 f3 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f6 f0 f1 c~ c= b0 f3 creal_le cazim f4 f6 f3 csigma_fan f4 f0 f1 f6 f3 cazim f4 f6 f3 b0 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c= csigma_fan f5 f0 f6 f4 f2 f3
+ |- ((\p'. (!q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')
T * / ! c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 b0 c==> c==> b0 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 b1 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> b0 b1 f7
- (_3071050 = _3071054) |- ((_3071053 = _3071057) ==> ((~ (_3071051 = _3071055)) \/ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
+ (~ (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) |- ((~ (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) /\ F)
T c==> c~ c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c==> creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 f5 c/\ c~ c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c==> creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 f5 cF
+ ((\x. (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))))) x) |- (((\x. (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))))) x) /\ F)
T c==> * / c/\ c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b1 c~ c= b1 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b1 c= b1 f3 f4 c/\ * / c/\ c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b1 c~ c= b1 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b1 c= b1 f3 f4 cF
+ |- ((!u. (!w. (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT b0 part cEMPTY f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ c~ cIN * * part cINSERT b1 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b0 b1 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT b1 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 b0 b1 cT
- |- ((\V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))) V)
T * / ! c==> c~ c\/ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 c~ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 cF f2
+ |- (((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4
+ |- (((A x) ==> ((A x) \/ (B x))) = ((x IN A) ==> (x IN (A UNION B))))
T c= c==> * f0 f1 c\/ * f0 f1 * f2 f1 c==> cIN f1 f0 cIN f1 * * part cUNION f0 f2
- |- (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) = (((A \/ B) /\ (~ B)) = (A /\ (~ B))))
T c= c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- ((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) ==> (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 c==> c~ c= * * * part cset_of_edge f6 f0 f1 * * part cINSERT f3 part cEMPTY c==> c> cCARD * * * part cset_of_edge f6 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
+ |- (((F ==> ((CARD EMPTY) = (NUMERAL _0))) ==> (((~ F) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND F) (NUMERAL _0)) e')))) = (((~ F) ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND F) (NUMERAL _0)) e'))))
T c= c==> c==> cF c= cCARD part cEMPTY cNUMERAL c_0 c==> c==> c~ cF c= cSUC cCARD part cEMPTY f0 c= cCOND cIN f1 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cF cNUMERAL c_0 f0 c==> c==> c~ cF c= cSUC cCARD part cEMPTY f0 c= cCOND cIN f1 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND cF cNUMERAL c_0 f0
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q'))))
T c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0 c==> c==> f0 c= c= csigma_fan f1 f2 f3 f4 f5 f6 f7 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f1 f2 f3 f4 f5 f6 c==> f0 f7
+ |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((FINITE (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) /\ ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY)))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f5 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f6 c==> cfan80 c, f4 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f4 f0 f1 f2 f3 f5 c==> c/\ cFINITE * * * part cset_of_edge f5 f0 f6 c/\ cIN f3 * * * part cset_of_edge f5 f0 f6 c/\ c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ c= f5 f3 c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f4 part cEMPTY * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f5 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f4 * * part cINSERT f5 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c= csigma_fan f4 f0 f6 f5 f2 f3
+ |- ((?x. ((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)))) = ((?x. (((((set_of_edge v) V) E1) x) /\ (~ (x = u)))) \/ (?x. ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)))))
T c= c? / c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c\/ c? / c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c? / c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f3 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= csigma_fan f5 f0 f1 f3 f6 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f2 f0 f1 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 creal_le cazim f5 f2 f3 f6 cazim f5 f2 f3 f4
- |- ((!x. (!B. (!A. ((A x) ==> ((A x) \/ (B x)))))) = (!x. (!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))))
T c= ! ! ! c==> * b2 b0 c\/ * b2 b0 * b1 b0 ! ! ! c==> c~ c==> * b2 b0 c\/ * b2 b0 * b1 b0 cF
- ((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))), (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) |- (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c/\ c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5
- ((((((sigma_fan x) V) E) v) u) = u) |- (u = (((((sigma_fan x) V) E) v) u))
T c==> c= csigma_fan f0 f1 f2 f3 f4 f4 c= f4 csigma_fan f0 f1 f2 f3 f4
+ |- (!g'. (!t'. (!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))))))
T c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ |- (((!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) ==> ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)) = ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s))
T c= c==> ! c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2 * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
+ |- ((\p'. (!q'. ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (p' ==> q')))))) p')
T * / ! c==> c= c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 b1 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> b0 b1 f6
- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))), ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 c==> creal_le cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 cazim f0 f1 f2 f6 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f6
+ (~ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w))) |- ((~ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w))) /\ F)
T c==> c~ creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3 c/\ c~ creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3 cF
+ |- (!x. (((\x. (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u)))))) x) ==> F))
T c==> * / c/\ c\/ c/\ cset_of_edge f0 f1 f2 b0 c~ c= b0 f3 c/\ c~ cset_of_edge f0 f1 f2 b0 c= b0 f3 c/\ ! c\/ cset_of_edge f0 f1 f2 b1 c~ c= b1 f3 ! c\/ c~ cset_of_edge f0 f1 f2 b1 c= b1 f3 f4 cF
+ (FAN (x , (V , E))), (FAN (x , (V , E1))), (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1)))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> cFAN c, f0 c, f1 f2 c==> cFAN c, f0 c, f1 f3 c==> c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f4 f5 f6 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c= csigma_fan f0 f1 f3 f6 f4 f5
+ |- (((!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY))))) ==> ((\w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY))))) w)) = ((\w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY))))) w))
T c= c==> ! ! c==> cIN b0 b1 c= * * * part cset_of_edge f0 b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY * * part cINSERT b0 part cEMPTY * / ! c==> cIN b0 b1 c= * * * part cset_of_edge f0 b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY * * part cINSERT b0 part cEMPTY f1 * / ! c==> cIN b0 b1 c= * * * part cset_of_edge f0 b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY * * part cINSERT b0 part cEMPTY f1
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- ((\x. (!B. (!A. ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))) x)
T * / ! ! c==> c~ c==> * b2 b0 c\/ * b2 b0 * b1 b0 cF f0
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- (((x = u) ==> F) = F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c= c==> c= f3 f4 cF cF
+ |- ((\x. (~ (x IN EMPTY))) x)
T * / c~ cIN b0 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c> cCARD * * * part cset_of_edge f4 f0 f6 cNUMERAL cBIT1 c_0 c= csigma_fan f5 f0 f6 f4 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f5 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f6 f3 f2 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN f6 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f2 f0 f1 * * * part cset_of_edge f2 f0 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY c~ c= b0 f6 creal_le cazim f4 f2 f6 f3 cazim f4 f2 f6 b0
- |- ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- |- ((~ (_3071050 = _3071054)) \/ ((~ (_3071053 = _3071057)) \/ ((~ (_3071051 = _3071055)) \/ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053)))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
- |- (((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
+ |- ((\y. ((x IN (y INSERT EMPTY)) = (x = y))) y)
T * / c= cIN f0 * * part cINSERT b0 part cEMPTY c= f0 b0 f1
+ ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) |- (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c==> creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 creal_le cazim f0 f1 f2 f6 cazim f0 f1 f2 f5
+ |- (((((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((((sigma_fan x) V) E1) v) u) = w))
T c= c==> c==> c/\ c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c/\ cFAN c, f4 c, f1 f2 c/\ cIN f3 * * * part cset_of_edge f0 f1 f2 c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c/\ c~ c= f5 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 f5 cazim f4 f0 f3 b0 c= csigma_fan f4 f1 f2 f0 f3 f5 c= csigma_fan f4 f1 f2 f0 f3 f5 c= csigma_fan f4 f1 f2 f0 f3 f5
- |- (((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0)))))
T c= creal_gt creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f4 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f4 creal_of_num cNUMERAL c_0
+ |- ((\V. (!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w))))))) V)
T * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 c/\ cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= b4 b3 ! c==> c/\ cIN b5 * * * part cset_of_edge b2 b0 b1 c~ c= b5 b3 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 b5 c= csigma_fan f0 b0 b1 b2 b3 b4 f1
- ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) |- (((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)) = T)
T c==> creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 c= creal_le cazim f0 f1 f2 csigma_fan f0 f3 f4 f1 f2 cazim f0 f1 f2 f5 cT
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) |- (((((set_of_edge v) V) E) = (u INSERT EMPTY)) = F)
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c= c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY cF
- |- ((\E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))) E1)
T * / ! ! c==> c~ c\/ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 c~ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 cF f1
- ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F), (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) |- ((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) /\ ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c/\ c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
+ |- ((\p'. (!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q')))))) p')
T * / ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 b0 c==> c==> b0 c= creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 b1 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f1 f2 f0 f3 cazim f1 f2 f0 f4 c==> b0 b1 f5
- |- (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> q')))
T c==> c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f7
+ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) |- (((((set_of_edge v) V) E1) u) ==> F)
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c==> cset_of_edge f0 f1 f2 f4 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (x = v)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((~ (x = w)) /\ ((~ (u = w)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (u INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (u INSERT EMPTY))))) /\ ((u IN V) /\ ((~ (collinear (x INSERT (u INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (u INSERT EMPTY))))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((v INSERT (w INSERT EMPTY)) IN E1), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f4 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f5 part cEMPTY part cEMPTY f4 c==> c= csigma_fan f2 f0 f1 f6 f5 f3 c==> c/\ c~ c= f2 f5 c/\ c~ c= f6 f5 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f6 part cEMPTY * * part cINSERT f5 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY * * part cINSERT f6 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c/\ c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c/\ cIN f6 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f6 * * part cINSERT f5 part cEMPTY c~ cIN f5 * part caff * * part cINSERT f2 * * part cINSERT f6 part cEMPTY c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f4 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f4 c==> cIN f6 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c= csigma_fan f2 f0 f4 f3 f6 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((((~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E1))) /\ ((u IN (((set_of_edge v) V) E1)) /\ ((w IN (((set_of_edge v) V) E1)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f4 f5 c==> c~ c= f2 f5 c==> c~ c= f6 f2 c==> c~ c= f6 f5 c==> cFAN c, f6 c, f0 f1 c==> cFAN c, f6 c, f0 f3 c==> cfan80 c, f6 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f6 f0 f1 f4 f5 f2 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cIN f5 * * * part cset_of_edge f2 f0 f3 c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c==> c==> c/\ c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c/\ cFAN c, f6 c, f0 f3 c/\ cIN f4 * * * part cset_of_edge f2 f0 f3 c/\ cIN f5 * * * part cset_of_edge f2 f0 f3 c/\ c~ c= f5 f4 ! c==> c/\ cIN b0 * * * part cset_of_edge f2 f0 f3 c~ c= b0 f4 creal_le cazim f6 f2 f4 f5 cazim f6 f2 f4 b0 c= csigma_fan f6 f0 f3 f2 f4 f5 c= csigma_fan f6 f0 f3 f2 f4 f5
- (~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) |- ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) /\ F)
T c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 c/\ c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
+ (w IN V) |- ((!w1. ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) = (!w1. (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c==> cIN f0 f1 c= ! c==> c/\ c\/ cIN b0 * * * part cset_of_edge f2 f1 f3 c= b0 f0 c~ c= b0 f4 creal_le cazim f5 f2 f4 f0 cazim f5 f2 f4 b0 ! c==> c/\ cIN b0 * * part cUNION * * * part cset_of_edge f2 f1 f3 * * * part cset_of_edge f2 f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= b0 f4 creal_le cazim f5 f2 f4 f0 cazim f5 f2 f4 b0
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ |- (((!q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) ==> ((\q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q')) = ((\q'. ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((CARD (u INSERT EMPTY)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 b0 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 c==> f1 b0 * / c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 b0 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 c==> f1 b0 f6 * / c==> c= c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 f1 c==> c==> f1 c= creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 b0 c= c==> c> cCARD * * part cINSERT f0 part cEMPTY cNUMERAL cBIT1 c_0 creal_le cazim f2 f3 f0 f4 cazim f2 f3 f0 f5 c==> f1 b0 f6
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c/\ ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c= csigma_fan f2 f0 f3 f6 f4 f5
+ |- ((\g'. (!t'. (!e'. (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= cIN f0 part cEMPTY b0 c==> c==> b0 c= cCARD part cEMPTY b1 c==> c==> c~ b0 c= cSUC cCARD part cEMPTY b2 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND b0 b1 b2 f1
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c> cCARD * * * part cset_of_edge f4 f0 f6 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c= csigma_fan f5 f0 f6 f4 f2 f3
+ F |- (F /\ ((CARD EMPTY) = (NUMERAL _0)))
T c==> cF c/\ cF c= cCARD part cEMPTY cNUMERAL c_0
+ |- (((!x. ((x IN (((set_of_edge v) V) E1)) = (x IN (u INSERT EMPTY)))) \/ (~ (!x. ((x IN (((set_of_edge v) V) E1)) = (x IN (u INSERT EMPTY)))))) = (((((set_of_edge v) V) E1) = (u INSERT EMPTY)) \/ (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY)))))
T c= c\/ ! c= cIN b0 * * * part cset_of_edge f0 f1 f2 cIN b0 * * part cINSERT f3 part cEMPTY c~ ! c= cIN b0 * * * part cset_of_edge f0 f1 f2 cIN b0 * * part cINSERT f3 part cEMPTY c\/ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- (((~ (u = w1)) ==> ((u = w1) = F)) = ((u = w1) = F))
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= c==> c~ c= f5 f0 c= c= f5 f0 cF c= c= f5 f0 cF
- |- ((\B. (!A. ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))) B)
T * / ! c==> c~ c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 cF f0
- ((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c= csigma_fan f4 f2 f3 f1 f0 f5
+ |- ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))
T c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 f8 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 f8
- |- ((!x'. (((((set_of_edge v) V) E1) x') \/ (~ (x = u)))) = ((!x. ((((set_of_edge v) V) E1) x)) \/ (~ (x = u))))
T c= ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= f3 f4 c\/ ! cset_of_edge f0 f1 f2 b0 c~ c= f3 f4
+ |- (((!q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) ==> ((\q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q')) = ((\q'. ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = p') ==> ((p' ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (p' ==> q'))))) q'))
T c= c==> ! c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 * / c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8 * / c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f6 c==> c==> f6 c= creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 b0 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f7 f1 f5 f4 cazim f7 f1 f5 f0 c==> f6 b0 f8
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_add ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_add ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- F
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 cF
+ |- ((((COND F) t1) t2) = t2)
T c= cCOND cF f0 f1 f1
- (u = (((((sigma_fan x) V) E) v) u)) |- ((((((sigma_fan x) V) E) v) u) = u)
T c==> c= f0 csigma_fan f1 f2 f3 f4 f0 c= csigma_fan f1 f2 f3 f4 f0 f0
- |- ((!A. (((A \/ T) /\ (~ T)) = (A /\ (~ T)))) = ((((T \/ T) /\ (~ T)) = (T /\ (~ T))) /\ (((F \/ T) /\ (~ T)) = (F /\ (~ T)))))
T c= ! c= c/\ c\/ b0 cT c~ cT c/\ b0 c~ cT c/\ c= c/\ c\/ cT cT c~ cT c/\ cT c~ cT c= c/\ c\/ cF cT c~ cT c/\ cF c~ cT
+ |- (((u IN EMPTY) = g') ==> ((g' ==> ((CARD EMPTY) = t')) ==> (((~ g') ==> ((SUC (CARD EMPTY)) = e')) ==> ((((COND (u IN EMPTY)) (CARD EMPTY)) (SUC (CARD EMPTY))) = (((COND g') t') e')))))
T c==> c= cIN f0 part cEMPTY f1 c==> c==> f1 c= cCARD part cEMPTY f2 c==> c==> c~ f1 c= cSUC cCARD part cEMPTY f3 c= cCOND cIN f0 part cEMPTY cCARD part cEMPTY cSUC cCARD part cEMPTY cCOND f1 f2 f3
+ |- ((\v. (!u. (!w. (((FAN (x , (V , E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))))))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))))) v)
T * / ! ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 b1 b2 b0 c/\ cfan80 c, f0 c, f1 f2 ! c==> cIN b3 f1 c> cCARD * * * part cset_of_edge b3 f1 f2 cNUMERAL cBIT1 c_0 creal_le cazim f0 b0 b1 b2 cazim f0 b0 b1 csigma_fan f0 f1 f2 b0 b1 f3
- |- ((!x'. (((((set_of_edge v) V) E1) x) \/ (~ (x' = u)))) = (((((set_of_edge v) V) E1) x) \/ (!x. (~ (x = u)))))
T c= ! c\/ cset_of_edge f0 f1 f2 f3 c~ c= b0 f4 c\/ cset_of_edge f0 f1 f2 f3 ! c~ c= b0 f4
- |- (((NUMERAL (BIT1 _0)) * (NUMERAL (BIT1 _0))) = (NUMERAL (BIT1 _0)))
T c= c* cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0 cNUMERAL cBIT1 c_0
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_add ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_add creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) /\ (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c/\ c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
+ (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_gt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL c_0
- (~ (A x)), (A x) |- ((~ (A x)) /\ (A x))
T c==> c~ * f0 f1 c==> * f0 f1 c/\ c~ * f0 f1 * f0 f1
+ |- (((!v. (!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))))) ==> ((\v. (!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))))) v)) = ((\v. (!w. (!V. ((w IN V) ==> ((((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = (w INSERT EMPTY)))))) v))
T c= c==> ! ! ! c==> cIN b1 b2 c= * * * part cset_of_edge b0 b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * * part cINSERT b1 part cEMPTY * / ! ! c==> cIN b1 b2 c= * * * part cset_of_edge b0 b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * * part cINSERT b1 part cEMPTY f0 * / ! ! c==> cIN b1 b2 c= * * * part cset_of_edge b0 b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY * * part cINSERT b1 part cEMPTY f0
- (~ (v IN (aff (x INSERT (w INSERT EMPTY))))) |- ((v IN (aff (x INSERT (w INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> cFAN c, f4 c, f0 f1 c==> cFAN c, f4 c, f0 f5 c==> cfan80 c, f4 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY part cEMPTY f5 c==> c= csigma_fan f4 f0 f1 f6 f3 f2 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f2 part cEMPTY f5 c==> cIN f6 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f2 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY * * part cINSERT f2 part cEMPTY c= c==> c/\ cIN f6 * * * part cset_of_edge f2 f0 f5 ! c==> c/\ cIN b0 * * * part cset_of_edge f2 f0 f5 c~ c= b0 f6 creal_le cazim f4 f2 f6 f3 cazim f4 f2 f6 b0 c= csigma_fan f4 f0 f5 f2 f6 f3 c= csigma_fan f4 f0 f5 f2 f6 f3
- (~ (collinear (x INSERT (w INSERT (v INSERT EMPTY))))) |- ((collinear (x INSERT (w INSERT (v INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))) |- (((((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 c= c==> c==> c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c~ c= f5 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 f5 creal_le cazim f4 f0 f3 f6 cazim f4 f0 f3 f5 creal_le cazim f4 f0 f3 f6 cazim f4 f0 f3 f5
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- ((u = w1) = F)
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= c= f5 f0 cF
- |- (((!s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) ==> ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)) = ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s))
T c= c==> ! ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0 * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- |- (F = (~ T))
T c= cF c~ cT
+ |- ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> (((((((sigma_fan x) V) E1) v) u) = w) = q')) ==> ((((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> q')))
T c==> c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 f6 c= c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= csigma_fan f0 f1 f2 f3 f4 f5 c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 f6
+ |- (((!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))) ==> ((\E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))) E1)) = ((\E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))) E1))
T c= c==> ! c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY b0 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 * / c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY b0 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3 * / c==> c= * * part cUNION f0 * * part cINSERT * * part cINSERT f1 * * part cINSERT f2 part cEMPTY part cEMPTY b0 c/\ cIN * * part cINSERT f2 * * part cINSERT f1 part cEMPTY b0 cIN * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 f3
+ |- ((\t. ((s UNION t) = (GSPEC (\GEN%PVAR%0. (?x. (((SETSPEC GEN%PVAR%0) ((x IN s) \/ (x IN t))) x)))))) t)
T * / c= * * part cUNION f0 b0 * part cGSPEC / c? / cSETSPEC b1 c\/ cIN b2 f0 cIN b2 b0 b2 f1
+ (w IN V) |- (((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u)))) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> q')))) = (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> q'))))
T c==> cIN f0 f1 c= c==> c= c/\ cIN f2 * * part cUNION * * * part cset_of_edge f3 f1 f4 * * * part cset_of_edge f3 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= f2 f5 c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 c==> c==> c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 c= creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2 f7 c= c==> c/\ cIN f2 * * part cUNION * * * part cset_of_edge f3 f1 f4 * * * part cset_of_edge f3 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= f2 f5 creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2 c==> c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 f7 c==> c==> c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 c= creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2 f7 c= c==> c/\ cIN f2 * * part cUNION * * * part cset_of_edge f3 f1 f4 * * * part cset_of_edge f3 f1 * * part cINSERT * * part cINSERT f3 * * part cINSERT f0 part cEMPTY part cEMPTY c~ c= f2 f5 creal_le cazim f6 f3 f5 f0 cazim f6 f3 f5 f2 c==> c/\ c\/ cIN f2 * * * part cset_of_edge f3 f1 f4 c= f2 f0 c~ c= f2 f5 f7
- |- ((\v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) v)
T * / c==> c~ c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 cF f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (v IN V) |- (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f5 f0 f1 c==> cIN f5 f0 c= c==> c/\ c\/ cIN f6 * * * part cset_of_edge f5 f0 f1 c= f6 f4 c~ c= f6 f3 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6 cT
- |- ((T \/ t) = T)
T c= c\/ cT f0 cT
+ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- (((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)) /\ F)
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c/\ c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f3 c==> cFAN c, f5 c, f0 f1 c==> cfan80 c, f5 c, f0 f1 c==> c= csigma_fan f5 f0 f1 f3 f6 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f6 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f2 f0 f1 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 creal_le cazim f5 f2 f3 f6 cazim f5 f2 f3 f4
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) /\ F)
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 cF
- |- ((!x. (P \/ (Q x))) = (P \/ (!x. (Q x))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- ((u = w1) = F)
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= c= f5 f0 cF
+ |- ((F ==> t) = T)
T c= c==> cF f0 cT
+ ((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) |- (((FAN (x , (V , E))) /\ ((FAN (x , (V , E1))) /\ (((v INSERT (u INSERT EMPTY)) IN E) /\ (((u INSERT (w INSERT EMPTY)) IN E) /\ ((~ ((w INSERT (v INSERT EMPTY)) IN E)) /\ (((((((sigma_fan x) V) E) u) w) = v) /\ ((fan80 (x , (V , E))) /\ ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1))))))))) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c/\ c/\ cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f3 c/\ cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f2 c/\ cIN * * part cINSERT f5 * * part cINSERT f6 part cEMPTY f2 c/\ c~ cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f2 c/\ c= csigma_fan f0 f1 f2 f5 f6 f4 c/\ cfan80 c, f0 c, f1 f2 c/\ ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c= * * part cUNION f2 * * part cINSERT * * part cINSERT f4 * * part cINSERT f6 part cEMPTY part cEMPTY f3 c= csigma_fan f0 f1 f3 f4 f5 f6
+ |- ((((~ ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w))) ==> F) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w))) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w)))
T c= c==> c==> c~ creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3 cF creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f2 f0 f1 f6 f5 f4 c==> cIN * * part cINSERT f6 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f6 part cEMPTY f1 c= csigma_fan f2 f0 f3 f4 f6 f5
+ (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- (!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u))))
T c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ ((((set_of_edge v) V) E1) = (u INSERT EMPTY))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)), ((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)), ((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) |- (((CARD (((set_of_edge v) V) E1)) > (NUMERAL (BIT1 _0))) /\ ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= * * * part cset_of_edge f2 f0 f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f4 f5 c==> c~ c= f2 f5 c==> c~ c= f6 f2 c==> c~ c= f6 f5 c==> cFAN c, f6 c, f0 f1 c==> cFAN c, f6 c, f0 f3 c==> cfan80 c, f6 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f2 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c==> c= csigma_fan f6 f0 f1 f4 f5 f2 c==> c> cCARD * * * part cset_of_edge f2 f0 f3 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f2 part cEMPTY f3 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> cIN f5 * * * part cset_of_edge f2 f0 f3 c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f2 part cEMPTY * * part cINSERT f5 part cEMPTY c==> cDISJOINT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ c> cCARD * * * part cset_of_edge f2 f0 f3 cNUMERAL cBIT1 c_0 c= csigma_fan f6 f0 f3 f2 f4 f5
+ ((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) /\ (((((((sigma_fan x) V) E1) v) u) = w) = ((((((sigma_fan x) V) E1) v) u) = w)))
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= c= csigma_fan f0 f1 f2 f3 f4 f5 c= csigma_fan f0 f1 f2 f3 f4 f5
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ |- (((!V. (!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w))))))) ==> ((\V. (!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w))))))) V)) = ((\V. (!E. (!v. (!u. (!w. (((~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) /\ ((FAN (x , (V , E))) /\ ((u IN (((set_of_edge v) V) E)) /\ ((w IN (((set_of_edge v) V) E)) /\ ((~ (w = u)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))))))) ==> ((((((sigma_fan x) V) E) v) u) = w))))))) V))
T c= c==> ! ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 c/\ cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= b4 b3 ! c==> c/\ cIN b5 * * * part cset_of_edge b2 b0 b1 c~ c= b5 b3 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 b5 c= csigma_fan f0 b0 b1 b2 b3 b4 * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 c/\ cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= b4 b3 ! c==> c/\ cIN b5 * * * part cset_of_edge b2 b0 b1 c~ c= b5 b3 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 b5 c= csigma_fan f0 b0 b1 b2 b3 b4 f1 * / ! ! ! ! c==> c/\ c~ c= * * * part cset_of_edge b2 b0 b1 * * part cINSERT b3 part cEMPTY c/\ cFAN c, f0 c, b0 b1 c/\ cIN b3 * * * part cset_of_edge b2 b0 b1 c/\ cIN b4 * * * part cset_of_edge b2 b0 b1 c/\ c~ c= b4 b3 ! c==> c/\ cIN b5 * * * part cset_of_edge b2 b0 b1 c~ c= b5 b3 creal_le cazim f0 b2 b3 b4 cazim f0 b2 b3 b5 c= csigma_fan f0 b0 b1 b2 b3 b4 f1
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))) ==> ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0)))) = ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c= c==> c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
+ |- ((~ F) ==> ((SUC (CARD EMPTY)) = (SUC (NUMERAL _0))))
T c==> c~ cF c= cSUC cCARD part cEMPTY cSUC cNUMERAL c_0
+ |- ((\s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s)))) s)
T * / c= cIN f0 * * part cINSERT f1 b0 c\/ c= f0 f1 cIN f0 b0 f2
- ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) |- ((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
+ |- (((!E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2))))) ==> ((\E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2))))) E1)) = ((\E1. (!E2. ((((set_of_edge v) V) (E1 UNION E2)) = ((((set_of_edge v) V) E1) UNION (((set_of_edge v) V) E2))))) E1))
T c= c==> ! ! c= * * * part cset_of_edge f0 f1 * * part cUNION b0 b1 * * part cUNION * * * part cset_of_edge f0 f1 b0 * * * part cset_of_edge f0 f1 b1 * / ! c= * * * part cset_of_edge f0 f1 * * part cUNION b0 b1 * * part cUNION * * * part cset_of_edge f0 f1 b0 * * * part cset_of_edge f0 f1 b1 f2 * / ! c= * * * part cset_of_edge f0 f1 * * part cUNION b0 b1 * * part cUNION * * * part cset_of_edge f0 f1 b0 * * * part cset_of_edge f0 f1 b1 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (u = w)), (~ (v = w)), (~ (x = v)), (~ (x = w)), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1), ((((((sigma_fan x) V) E) u) w) = v), ((~ (v = w)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (w INSERT EMPTY)) /\ (((DISJOINT (x INSERT (w INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))) /\ ((~ (w IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) = (~ (w IN (aff (x INSERT (v INSERT EMPTY))))))))))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), ((w INSERT (v INSERT EMPTY)) IN E1), (u IN (((set_of_edge v) V) E)), (v IN V), (w IN (((set_of_edge v) V) E1)) |- ((((((sigma_fan x) V) E1) v) u) = w)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> c~ c= f4 f3 c==> c~ c= f5 f4 c==> c~ c= f5 f3 c==> cFAN c, f5 c, f0 f1 c==> cFAN c, f5 c, f0 f6 c==> cfan80 c, f5 c, f0 f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f4 * * part cINSERT f3 part cEMPTY part cEMPTY f6 c==> c= csigma_fan f5 f0 f1 f2 f3 f4 c==> c/\ c~ c= f4 f3 c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f5 part cEMPTY * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c= c~ ccollinear * * part cINSERT f5 * * part cINSERT f4 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f5 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f1 c==> cIN * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f6 c==> cIN f2 * * * part cset_of_edge f4 f0 f1 c==> cIN f4 f0 c==> cIN f3 * * * part cset_of_edge f4 f0 f6 c= csigma_fan f5 f0 f6 f4 f2 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f3 f4 f5 c==> creal_le cazim f2 f5 f3 csigma_fan f2 f0 f1 f5 f3 cazim f2 f5 f3 f6 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN * * part cINSERT f5 * * part cINSERT f3 part cEMPTY f1 creal_le cazim f2 f5 f3 f4 cazim f2 f5 f3 f6
+ |- (((SUC (NUMERAL _0)) > (NUMERAL (BIT1 _0))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))
T c==> c> cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0 creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 f4
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
+ (u IN (((set_of_edge v) V) E)) |- ((u IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY cT
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- |- ((F /\ t) = F)
T c= c/\ cF f0 cF
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (FAN (x , (V , E1))) |- ((FAN (x , (V , E1))) = T)
T c==> cFAN c, f0 c, f1 f2 c= cFAN c, f0 c, f1 f2 cT
+ |- ((\w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1)))))) w)
T * / ! ! c==> c= * * part cUNION b1 * * part cINSERT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY part cEMPTY b2 c/\ cIN * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY b2 f1
+ |- ((!e'. ((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e')))))) = T)
T c= ! c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 b0 c= cCOND f0 f2 f4 cCOND f1 f3 b0 cT
+ |- (((!v. (!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))))) ==> ((\v. (!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))))) v)) = ((\v. (!w. (!E. (!E1. (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> (((w INSERT (v INSERT EMPTY)) IN E1) /\ ((v INSERT (w INSERT EMPTY)) IN E1))))))) v))
T c= c==> ! ! ! ! c==> c= * * part cUNION b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 * / ! ! ! c==> c= * * part cUNION b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0 * / ! ! ! c==> c= * * part cUNION b2 * * part cINSERT * * part cINSERT b0 * * part cINSERT b1 part cEMPTY part cEMPTY b3 c/\ cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY b3 f0
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- (((~ (w1 = u)) ==> ((w1 = u) = F)) = ((w1 = u) = F))
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= c==> c~ c= f0 f5 c= c= f0 f5 cF c= c= f0 f5 cF
+ (x IN A) |- (x IN (A UNION B))
T c==> cIN f0 f1 cIN f0 * * part cUNION f1 f2
- |- (((!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) ==> ((\v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) v)) = ((\v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) v))
T c= c==> ! c==> c~ c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 cF * / c==> c~ c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 cF f3 * / c==> c~ c\/ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 c~ ! c= cset_of_edge b0 f0 f1 b1 c= b1 f2 cF f3
- (u IN (((set_of_edge v) V) E)) |- (T = (u IN (((set_of_edge v) V) E)))
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cT cIN f0 * * * part cset_of_edge f1 f2 f3
- ((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) |- (((((((sigma_fan x) V) E) v) u) IN (((set_of_edge v) V) E)) = T)
T c==> cIN csigma_fan f0 f1 f2 f3 f4 * * * part cset_of_edge f3 f1 f2 c= cIN csigma_fan f0 f1 f2 f3 f4 * * * part cset_of_edge f3 f1 f2 cT
- (~ ((A x) \/ (B x))), (A x) |- ((~ F) ==> F)
T c==> c~ c\/ * f0 f1 * f2 f1 c==> * f0 f1 c==> c~ cF cF
- |- (((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) ==> (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))) = (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)))
T c= c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- (~ ((((set_of_edge v) V) E) = (u INSERT EMPTY))) |- (((u INSERT EMPTY) = (((set_of_edge v) V) E)) = F)
T c==> c~ c= * * * part cset_of_edge f0 f1 f2 * * part cINSERT f3 part cEMPTY c= c= * * part cINSERT f3 part cEMPTY * * * part cset_of_edge f0 f1 f2 cF
- |- (((!u. (!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))))) ==> ((\u. (!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))))) u)) = ((\u. (!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))))) u))
T c= c==> ! ! ! ! c==> c~ c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 cF * / ! ! ! c==> c~ c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 cF f0 * / ! ! ! c==> c~ c\/ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 c~ ! c= cset_of_edge b3 b2 b1 b4 c= b4 b0 cF f0
- (_3071050 = _3071054), (_3071053 = _3071057) |- ((_3071053 = _3071057) /\ ((~ (_3071051 = _3071055)) \/ ((~ (_3071052 = _3071056)) \/ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c~ c= f4 f5 c\/ c~ c= f6 f7 c\/ cset_of_edge f1 f5 f7 f3 c~ cset_of_edge f0 f4 f6 f2
- |- ((real_of_num (NUMERAL _0)) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((~ T) = F)
T c= c~ cT cF
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (FINITE s) |- ((FINITE s) /\ ((CARD (x INSERT s)) = (((COND (x IN s)) (CARD s)) (SUC (CARD s)))))
T c==> cFINITE f0 c/\ cFINITE f0 c= cCARD * * part cINSERT f1 f0 cCOND cIN f1 f0 cCARD f0 cSUC cCARD f0
- (~ F) |- (F = F)
T c==> c~ cF c= cF cF
- (_3071052 = _3071056), (_3071051 = _3071055), (_3071050 = _3071054), (_3071053 = _3071057) |- ((_3071052 = _3071056) /\ (((((set_of_edge _3071054) _3071055) _3071056) _3071057) \/ (~ ((((set_of_edge _3071050) _3071051) _3071052) _3071053))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c==> c= f6 f7 c/\ c= f0 f1 c\/ cset_of_edge f5 f3 f1 f7 c~ cset_of_edge f4 f2 f0 f6
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
- ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) |- ((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))
T c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
- |- ((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) ==> (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)))
T c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- |- ((?x'. ((~ ((((set_of_edge v) V) E1) x)) /\ (x' = u))) = ((~ ((((set_of_edge v) V) E1) x)) /\ (?x. (x = u))))
T c= c? / c/\ c~ cset_of_edge f0 f1 f2 f3 c= b0 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c? / c= b0 f4
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> ((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?x'. ((~ ((((set_of_edge v) V) E1) x')) /\ (x = u))) = ((?x. (~ ((((set_of_edge v) V) E1) x))) /\ (x = u)))
T c= c? / c/\ c~ cset_of_edge f0 f1 f2 b0 c= f3 f4 c/\ c? / c~ cset_of_edge f0 f1 f2 b0 c= f3 f4
- (~ ((((set_of_edge v) V) E1) x)), (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ ((((set_of_edge v) V) E1) x)) /\ ((((set_of_edge v) V) E1) x))
T c==> c~ cset_of_edge f0 f1 f2 f3 c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 cset_of_edge f0 f1 f2 f3
- |- ((F \/ t) = t)
T c= c\/ cF f0 f0
- |- (((!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))) ==> ((\V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))) V)) = ((\V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))) V))
T c= c==> ! ! c==> c~ c\/ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 c~ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 cF * / ! c==> c~ c\/ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 c~ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 cF f2 * / ! c==> c~ c\/ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 c~ ! c= cset_of_edge b1 b0 f0 b2 c= b2 f1 cF f2
- |- ((!B. (!A. (((A \/ B) /\ (~ B)) = (A /\ (~ B))))) = ((!A. (((A \/ T) /\ (~ T)) = (A /\ (~ T)))) /\ (!A. (((A \/ F) /\ (~ F)) = (A /\ (~ F))))))
T c= ! ! c= c/\ c\/ b1 b0 c~ b0 c/\ b1 c~ b0 c/\ ! c= c/\ c\/ b0 cT c~ cT c/\ b0 c~ cT ! c= c/\ c\/ b0 cF c~ cF c/\ b0 c~ cF
- ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) |- (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) /\ ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c/\ c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- |- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) = (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))))
T c= creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
- |- (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!E1. (P E1)) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)
T * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
- |- (T = ((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= cT creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) |- ((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) /\ (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))
T c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c/\ c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- |- (((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) = ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u)))) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> q')))) = ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> ((((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> q'))))
T c= c==> c= c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c==> c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f7 c==> c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 f7
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) ==> (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))
T c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- |- ((?x'. (((((set_of_edge v) V) E1) x') /\ (~ (x = u)))) = ((?x. ((((set_of_edge v) V) E1) x)) /\ (~ (x = u))))
T c= c? / c/\ cset_of_edge f0 f1 f2 b0 c~ c= f3 f4 c/\ c? / cset_of_edge f0 f1 f2 b0 c~ c= f3 f4
- |- (((((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)) ==> (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F))) = (((~ ((A x) ==> ((A x) \/ (B x)))) ==> F) ==> ((~ ((A x) ==> ((A x) \/ (B x)))) ==> F)))
T c= c==> c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF c==> c~ c==> * f0 f1 c\/ * f0 f1 * f2 f1 cF
- |- (((NUMERAL _0) < (NUMERAL (BIT1 _0))) = T)
T c= c< cNUMERAL c_0 cNUMERAL cBIT1 c_0 cT
- (A x) |- ((~ (A x)) ==> (A x))
T c==> * f0 f1 c==> c~ * f0 f1 * f0 f1
- (((((set_of_edge v) V) E1) x) /\ (~ (x = u))) |- ((~ ((((set_of_edge v) V) E1) x)) ==> ((((set_of_edge v) V) E1) x))
T c==> c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c==> c~ cset_of_edge f0 f1 f2 f3 cset_of_edge f0 f1 f2 f3
- ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F), (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) |- ((((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) /\ ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c/\ c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) |- (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) = T)
T c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 cT
- |- ((\s. (!n. ((s HAS_SIZE n) = ((FINITE s) /\ ((CARD s) = n))))) s)
T * / ! c= cHAS_SIZE b0 b1 c/\ cFINITE b0 c= cCARD b0 b1 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((?x. (P /\ (Q x))) = (P /\ (?x. (Q x))))
T c= c? / c/\ f0 * f1 b0 c/\ f0 c? / * f1 b0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (v IN V) |- ((v IN V) /\ (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) = T))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c/\ cIN f2 f0 c= c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 cT
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (w1 = u)), (FAN (x , (V , E))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E), (u IN (((set_of_edge v) V) E)), (w1 IN (((set_of_edge v) V) E)) |- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ c= f2 f3 c==> cFAN c, f4 c, f0 f1 c==> cfan80 c, f4 c, f0 f1 c==> c= csigma_fan f4 f0 f1 f3 f5 f6 c==> c> cCARD * * * part cset_of_edge f6 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN * * part cINSERT f3 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f3 part cEMPTY f1 c==> cIN f3 * * * part cset_of_edge f6 f0 f1 c==> cIN f2 * * * part cset_of_edge f6 f0 f1 creal_le cazim f4 f6 f3 f5 cazim f4 f6 f3 f2
- (~ ((((((sigma_fan x) V) E) v) u) = u)) |- (((((((sigma_fan x) V) E) v) u) = u) = F)
T c==> c~ c= csigma_fan f0 f1 f2 f3 f4 f4 c= c= csigma_fan f0 f1 f2 f3 f4 f4 cF
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- (((real_gt (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 c/\ creal_gt creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- ((u INSERT EMPTY) = (((set_of_edge v) V) E)) |- ((((set_of_edge v) V) E) = (u INSERT EMPTY))
T c==> c= * * part cINSERT f0 part cEMPTY * * * part cset_of_edge f1 f2 f3 c= * * * part cset_of_edge f1 f2 f3 * * part cINSERT f0 part cEMPTY
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_ge ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_ge creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0
- |- (((A x) ==> ((A x) \/ (B x))) = T)
T c= c==> * f0 f1 c\/ * f0 f1 * f2 f1 cT
- (~ (u = u)) |- ((~ (u = u)) /\ (u = u))
T c==> c~ c= f0 f0 c/\ c~ c= f0 f0 c= f0 f0
- ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) |- ((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u)), (((((((set_of_edge v) V) E1) x) /\ (~ (x = u))) \/ ((~ ((((set_of_edge v) V) E1) x)) /\ (x = u))) /\ ((!x. (((((set_of_edge v) V) E1) x) \/ (~ (x = u)))) /\ (!x. ((~ ((((set_of_edge v) V) E1) x)) \/ (x = u))))) |- ((~ F) ==> F)
T c==> c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c==> c/\ c\/ c/\ cset_of_edge f0 f1 f2 f3 c~ c= f3 f4 c/\ c~ cset_of_edge f0 f1 f2 f3 c= f3 f4 c/\ ! c\/ cset_of_edge f0 f1 f2 b0 c~ c= b0 f4 ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= b0 f4 c==> c~ cF cF
- (((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) |- ((((u IN (((set_of_edge v) V) E1)) /\ (!w1. (((w1 IN (((set_of_edge v) V) E1)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) ==> ((((((sigma_fan x) V) E1) v) u) = w)) = T)
T c==> c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 c= c==> c/\ cIN f0 * * * part cset_of_edge f1 f2 f3 ! c==> c/\ cIN b0 * * * part cset_of_edge f1 f2 f3 c~ c= b0 f0 creal_le cazim f4 f1 f0 f5 cazim f4 f1 f0 b0 c= csigma_fan f4 f2 f3 f1 f0 f5 cT
- |- (((real_mul (real_of_num (NUMERAL _0))) (real_of_num x)) = (real_of_num (NUMERAL _0)))
T c= creal_mul creal_of_num cNUMERAL c_0 creal_of_num f0 creal_of_num cNUMERAL c_0
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (FAN (x , (V , E1))), (fan80 (x , (V , E))), ((((((sigma_fan x) V) E) u) w) = v), ((u INSERT (w INSERT EMPTY)) IN E), ((v INSERT (u INSERT EMPTY)) IN E) |- (((E UNION ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)) = E1) ==> ((((((sigma_fan x) V) E1) v) u) = w))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cFAN c, f2 c, f0 f3 c==> cfan80 c, f2 c, f0 f1 c==> c= csigma_fan f2 f0 f1 f4 f5 f6 c==> cIN * * part cINSERT f4 * * part cINSERT f5 part cEMPTY f1 c==> cIN * * part cINSERT f6 * * part cINSERT f4 part cEMPTY f1 c==> c= * * part cUNION f1 * * part cINSERT * * part cINSERT f6 * * part cINSERT f5 part cEMPTY part cEMPTY f3 c= csigma_fan f2 f0 f3 f6 f4 f5
- (((real_ge ((real_add ((((azim x) v) u) w1)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))))) (real_of_num (NUMERAL _0))) /\ (((real_ge ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w))) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u)))) (real_of_num (NUMERAL _0))) /\ ((real_gt ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1)))) (real_of_num (NUMERAL _0))))) |- ((real_gt ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) ((real_add ((((azim x) v) u) w)) ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) ((((azim x) v) u) w1))))) (real_of_num (NUMERAL _0)))
T c==> c/\ creal_ge creal_add cazim f0 f1 f2 f3 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 c/\ creal_ge creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f6 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 creal_of_num cNUMERAL c_0 creal_gt creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0 creal_gt creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_add cazim f0 f1 f2 f6 creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 cazim f0 f1 f2 f3 creal_of_num cNUMERAL c_0
- |- ((real_of_num x) = ((real_div (real_of_num x)) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_of_num f0 creal_div creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) |- (((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))) = T)
T c==> c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 c= c> cCARD * * * part cset_of_edge f0 f1 f2 cNUMERAL cBIT1 c_0 cT
- ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F), (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) |- ((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) /\ ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c/\ c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- |- (((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
- |- (((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u))))) = T)
T c= c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cT
- |- (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))) ==> ((\E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))) E1)) = ((\E1. (!V. (!v. ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)))) E1))
T c= c==> ! ! ! c==> c~ c\/ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 c~ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 cF * / ! ! c==> c~ c\/ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 c~ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 cF f1 * / ! ! c==> c~ c\/ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 c~ ! c= cset_of_edge b2 b1 b0 b3 c= b3 f0 cF f1
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (!w1. (((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1)))) |- ((((w1 IN (((set_of_edge v) V) E)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) ((((azim x) v) u) w1))) = T)
T c==> ! c==> c/\ cIN b0 * * * part cset_of_edge f0 f1 f2 c~ c= b0 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 b0 c= c==> c/\ cIN f5 * * * part cset_of_edge f0 f1 f2 c~ c= f5 f3 creal_le cazim f4 f0 f3 csigma_fan f4 f1 f2 f0 f3 cazim f4 f0 f3 f5 cT
- |- ((\s. (!x. ((FINITE (x INSERT s)) = (FINITE s)))) s)
T * / ! c= cFINITE * * part cINSERT b1 b0 cFINITE b0 f0
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- |- ((!x'. ((~ ((((set_of_edge v) V) E1) x')) \/ (x = u))) = ((!x. (~ ((((set_of_edge v) V) E1) x))) \/ (x = u)))
T c= ! c\/ c~ cset_of_edge f0 f1 f2 b0 c= f3 f4 c\/ ! c~ cset_of_edge f0 f1 f2 b0 c= f3 f4
- |- (((real_mul (real_neg (real_of_num m))) (real_of_num n)) = (real_neg (real_of_num (m * n))))
T c= creal_mul creal_neg creal_of_num f0 creal_of_num f1 creal_neg creal_of_num c* f0 f1
- |- (((((real_mul ((real_add ((real_mul (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) (real_of_num (NUMERAL (BIT1 _0)))) = ((real_mul (real_of_num (NUMERAL _0))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))) ==> (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))) = (((real_add ((real_div (real_neg (real_of_num (NUMERAL (BIT1 _0))))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))
T c= c==> c= creal_mul creal_add creal_mul creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_add creal_div creal_neg creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) |- (((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) /\ ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c/\ c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- |- (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL (BIT1 _0)))) (real_of_num (NUMERAL (BIT1 _0)))))))
T c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL cBIT1 c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- ((!B. (!A. ((A x) ==> ((A x) \/ (B x))))) = T)
T c= ! ! c==> * b1 f0 c\/ * b1 f0 * b0 f0 cT
- (FINITE (((set_of_edge w) V) E1)) |- ((FINITE (((set_of_edge w) V) E1)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- |- (((!x. ((FINITE (x INSERT s)) = (FINITE s))) ==> ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x)) = ((\x. ((FINITE (x INSERT s)) = (FINITE s))) x))
T c= c==> ! c= cFINITE * * part cINSERT b0 f0 cFINITE f0 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1 * / c= cFINITE * * part cINSERT b0 f0 cFINITE f0 f1
- |- (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))
T c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
- |- ((((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F) ==> ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F)) = ((~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) ==> F))
T c= c==> c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- |- (~ (~ T))
T c~ c~ cT
- (~ (((A \/ B) /\ (~ B)) = (A /\ (~ B)))) |- F
T c==> c~ c= c/\ c\/ f0 f1 c~ f1 c/\ f0 c~ f1 cF
- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) /\ (~ (w1 = u))) |- ((w1 IN ((((set_of_edge v) V) E) UNION (((set_of_edge v) V) ((v INSERT (w INSERT EMPTY)) INSERT EMPTY)))) = T)
T c==> c/\ cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY c~ c= f0 f5 c= cIN f0 * * part cUNION * * * part cset_of_edge f1 f2 f3 * * * part cset_of_edge f1 f2 * * part cINSERT * * part cINSERT f1 * * part cINSERT f4 part cEMPTY part cEMPTY cT
- |- ((?x. ((P x) /\ Q)) = ((?x. (P x)) /\ Q))
T c= c? / c/\ * f0 b0 f1 c/\ c? / * f0 b0 f1
- |- ((real_neg (real_of_num x)) = ((real_div (real_neg (real_of_num x))) (real_of_num (NUMERAL (BIT1 _0)))))
T c= creal_neg creal_of_num f0 creal_div creal_neg creal_of_num f0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F), (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F)) |- (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) /\ ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c/\ c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
- ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) |- (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) (((((sigma_fan x) V) E) v) u))) = T)
T c==> creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 c= creal_le cazim f0 f1 f2 f3 cazim f0 f1 f2 csigma_fan f0 f4 f5 f1 f2 cT
- |- ((((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) = (((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u)))) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> q')))) = (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = q')) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> q'))))
T c= c==> c= c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c==> c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f7 c==> c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 f7 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 f7
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- |- ((((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> (((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)) = ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))) ==> (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))))) = (((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1))) = ((((w1 IN (((set_of_edge v) V) E)) \/ (w1 = w)) /\ (~ (w1 = u))) ==> ((real_le ((((azim x) v) u) w)) ((((azim x) v) u) w1)))))
T c= c==> c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 c= creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c= c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0 c==> c/\ c\/ cIN f0 * * * part cset_of_edge f1 f2 f3 c= f0 f4 c~ c= f0 f5 creal_le cazim f6 f1 f5 f4 cazim f6 f1 f5 f0
- |- ((((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))))))) = (((real_lt (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0)))) ==> (((real_lt ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_div (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) = ((real_lt ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))) ((real_mul (real_of_num (NUMERAL _0))) (real_of_num (NUMERAL (BIT1 _0))))))))
T c= c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c==> creal_lt creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 c= creal_lt creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_div creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_lt creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0 creal_mul creal_of_num cNUMERAL c_0 creal_of_num cNUMERAL cBIT1 c_0
- |- (((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F) ==> ((~ ((!x. (((((set_of_edge v) V) E1) x) = (x = u))) \/ (~ (!x. (((((set_of_edge v) V) E1) x) = (x = u)))))) ==> F))
T c==> c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF c==> c~ c\/ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 c~ ! c= cset_of_edge f0 f1 f2 b0 c= b0 f3 cF
