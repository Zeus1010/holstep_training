N Planarity.v_subset_xfan
C |- (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (V SUBSET (xfan (x , (V , E))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 cSUBSET f1 * part cxfan c, f0 c, f1 f2
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D I_THM
A |- (!x. ((I x) = x))
T c= cI f0 f0
D IN
A |- (!P. (!x. ((x IN P) = (P x))))
T c= cIN f0 f1 * f1 f0
D EXTENSION
A |- (!s. (!t. ((s = t) = (!x. ((x IN s) = (x IN t))))))
T c= c= f0 f1 ! c= cIN b0 f0 cIN b0 f1
D Hypermap_iso.inE
A |- ((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) /\ ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))))
T c/\ ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
D SUBSET
A |- (!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))))
T c= cSUBSET f0 f1 ! c==> cIN b0 f0 cIN b0 f1
D DISJOINT
A |- (!s. (!t. (((DISJOINT s) t) = ((s INTER t) = EMPTY))))
T c= cDISJOINT f0 f1 c= * * part cINTER f0 f1 part cEMPTY
D NOT_IN_EMPTY
A |- (!x. (~ (x IN EMPTY)))
T c~ cIN f0 part cEMPTY
D IN_INTER
A |- (!s. (!t. (!x. ((x IN (s INTER t)) = ((x IN s) /\ (x IN t))))))
T c= cIN f0 * * part cINTER f1 f2 c/\ cIN f0 f1 cIN f0 f2
D IN_INSERT
A |- (!x. (!y. (!s. ((x IN (y INSERT s)) = ((x = y) \/ (x IN s))))))
T c= cIN f0 * * part cINSERT f1 f2 c\/ c= f0 f1 cIN f0 f2
D Fan.remark1_fan
A |- (!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY
D Fan.xfan
A |- (!V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))))))
T c= * part cxfan c, f0 c, f1 f2 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ * f2 b2 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 b1
D Planarity.point_in_aff_ge
A |- (!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))))
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
D Planarity.exists_edge_fully_surround_fan
A |- (!x. (!V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))))))
T c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 cIN b0 f1
+ |- ((\w. ((~ (collinear (x INSERT (x' INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))))))) v)
T * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- ((((FAN (x , (V , E))) /\ ((x' IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN f3 f0 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) |- (((~ (_3017555 = x)) \/ (~ (_3017555 = x'))) /\ ((~ (_3017555 = v)) \/ (~ (_3017555 = x'))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ |- ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)
T * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
+ |- ((t = F) = (~ t))
T c= c= f0 cF c~ f0
+ |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ (E (x' INSERT (v INSERT EMPTY))) |- ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((t \/ F) = t)
T c= c\/ f0 cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = x')), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((~ (_3017647 = _3017648)) \/ ((CARD _3017647) = (CARD _3017648)))
T c\/ c~ c= f0 f1 c= cCARD f0 cCARD f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((!s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) ==> ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)) = ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s))
T c= c==> ! ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0 * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
- |- ((!x'''. ((~ (x'' = x)) \/ ((~ (x''' = x')) /\ (~ (x''' = v))))) = ((~ (x'' = x)) \/ (!x''. ((~ (x'' = x')) /\ (~ (x'' = v))))))
T c= ! c\/ c~ c= f0 f1 c/\ c~ c= b0 f2 c~ c= b0 f3 c\/ c~ c= f0 f1 ! c/\ c~ c= b0 f2 c~ c= b0 f3
- (~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) |- ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) /\ F)
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)), (x' IN V) |- ((((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)) /\ (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cIN f4 f0 c==> cIN f3 f0 c/\ c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cIN f4 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- (_3017609 = _3017612), (_3017611 = _3017614) |- ((_3017609 = _3017612) /\ ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611)))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- |- ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)
T * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
- |- ((\x. ((x IN (\y. (p y))) = (p x))) x)
T * / c= cIN b0 / * f0 b1 * f0 b0 f1
+ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))), (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> F), (((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> F) |- F
T c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c==> c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF c==> c==> c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cF cF
- |- ((~ (_3017649 = _3017650)) \/ ((BIT1 _3017649) = (BIT1 _3017650)))
T c\/ c~ c= f0 f1 c= cBIT1 f0 cBIT1 f1
+ |- ((((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))) = T)
T c= c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 ! c==> cIN b0 f1 c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1 cT
- |- ((_3017657 = _3017659) ==> ((~ (_3017658 = _3017660)) \/ ((_3017657 , _3017658) = (_3017659 , _3017660))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ |- ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) x')
T * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))), (FAN (x , (V , E))), (x' IN V) |- ((?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) /\ (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c==> cFAN c, f3 c, f0 f1 c==> cIN f2 f0 c/\ c? / c/\ cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY b0
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = x)) \/ (~ (x'' = v))))) _3017556)
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3
+ |- ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> * f0 f2 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * f0 f3 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cset_of_edge f2 f0 f1 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f2 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x)))))
T c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))), (((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> F) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF cF
- |- ((!x'''. (((~ (x''' = x)) /\ (~ (x''' = v))) \/ (~ (x'' = x')))) = ((!x''. ((~ (x'' = x)) /\ (~ (x'' = v)))) \/ (~ (x'' = x'))))
T c= ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3 c\/ ! c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= f2 f3
+ |- ((\x. (!V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))))))) x)
T * / ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 c/\ cIN b3 b1 ! c==> cIN b4 b1 c> cCARD * * * part cset_of_edge b4 b1 b2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b3 * * part cINSERT b4 part cEMPTY b2 cIN b4 b1 f0
+ |- ((!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))))))) = (!x. (!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (V SUBSET (xfan (x , (V , E)))))))))
T c= ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 ! c==> cIN b3 b1 c? / c/\ * b2 b4 cIN b3 * * part caff_ge * * part cINSERT b0 part cEMPTY b4 ! ! ! c==> c/\ cFAN c, b0 c, b1 b2 ! c==> cIN b3 b1 c> cCARD * * * part cset_of_edge b3 b1 b2 cNUMERAL cBIT1 c_0 cSUBSET b1 * part cxfan c, b0 c, b1 b2
- |- ((_3017647 = _3017648) ==> ((CARD _3017647) = (CARD _3017648)))
T c==> c= f0 f1 c= cCARD f0 cCARD f1
- (_3017631 = _3017633), (_3017632 = _3017634) |- ((_3017632 = _3017634) /\ ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f2 f3 c\/ c> f1 f3 c~ c> f0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)
T * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) /\ ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c/\ cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (E (x' INSERT (v INSERT EMPTY)))) |- (((I E) (x' INSERT (v INSERT EMPTY))) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ ((x' INSERT (v INSERT EMPTY)) IN E) |- (((x' INSERT (v INSERT EMPTY)) IN E) = T)
T c==> cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c= cIN * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 cT
+ (E (x' INSERT (v INSERT EMPTY))) |- ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (x' INSERT (v INSERT EMPTY))), ((((set_of_edge x') V) E) v) |- (((((set_of_edge x') V) E) v) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c/\ cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)
T * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
+ |- (((!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) ==> ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v)) = ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v))
T c= c==> ! ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3 * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
- (_3017631 = _3017633) |- ((_3017632 = _3017634) ==> ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c> f1 f3 c~ c> f0 f2
+ (E (x' INSERT (v INSERT EMPTY))) |- (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- ((~ (E (x' INSERT (v INSERT EMPTY)))) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((~ (_3017621 = _3017622)) \/ ((FINITE _3017622) \/ (~ (FINITE _3017621))))
T c\/ c~ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
- |- ((t \/ t) = t)
T c= c\/ f0 f0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- (((?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))) = ((((FAN (x , (V , E))) /\ ((x' IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c= c==> c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 c==> c==> c/\ cFAN c, f2 c, f0 f1 c/\ cIN f3 f0 ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- (_3017627 = _3017629), (_3017628 = _3017630) |- (((((I _3017627) _3017628) = ((I _3017629) _3017630)) ==> (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628)))) = (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= cI f0 f2 cI f1 f3 c\/ cI f1 f3 c~ cI f0 f2 c\/ cI f1 f3 c~ cI f0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_3017631 = _3017633) |- ((_3017631 = _3017633) /\ ((~ (_3017632 = _3017634)) \/ ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c> f1 f3 c~ c> f0 f2
- |- ((!V. ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) = T)
T c= ! c==> cFAN c, f0 c, b0 f1 c==> ! c==> * b0 b1 c> cCARD * * * part cset_of_edge b1 b0 f1 cNUMERAL cBIT1 c_0 c==> * b0 f2 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * b0 f3 c==> cFINITE * * * part cset_of_edge f2 b0 f1 c==> cset_of_edge f2 b0 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f2 c= b1 f3 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f3 c= b1 f2 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cT
- |- ((\v. (!x'. (!E. (!x. (!V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F)))))) v)
T * / ! ! ! ! c==> c~ c==> cFAN c, b3 c, b4 b2 c==> ! c==> * b4 b5 c> cCARD * * * part cset_of_edge b5 b4 b2 cNUMERAL cBIT1 c_0 c==> * b4 b1 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> * b4 b0 c==> cFINITE * * * part cset_of_edge b1 b4 b2 c==> cset_of_edge b1 b4 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b1 c= b5 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b0 c= b5 b1 c==> ! c~ c/\ c= b5 b3 c\/ c= b5 b1 c= b5 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V), ((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) v) |- (((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) v) /\ (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c==> * / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 f4 c/\ * / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 f4 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- |- ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)
T * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> c/\ cIN f4 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f4 c/\ c~ c= f2 f4 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c/\ * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> c~ c= f3 f2 c==> c~ c= f3 f4 c==> c~ c= f2 f4 c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- (((!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))))) ==> ((\E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))))) E)) = ((\E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))))) E))
T c= c==> ! ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 f1 ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 cIN b2 f1 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 f1 ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 cIN b2 f1 f2 * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 f1 ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 cIN b2 f1 f2
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))), (((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') |- ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') /\ ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) ==> ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V)) = ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V))
T c= c==> ! ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0 * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0
- |- (((~ p) ==> p) = p)
T c= c==> c~ f0 f0 f0
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((_3017611 = _3017614) ==> ((~ (_3017609 = _3017612)) \/ ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (FAN (x , (V , E))) |- ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))
T c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((~ (_3017635 = _3017636)) \/ ((FAN _3017636) \/ (~ (FAN _3017635))))
T c\/ c~ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
- |- ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ |- ((f x) = ((I f) x))
T c= * f0 f1 cI f0 f1
- |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- |- ((~ (_3017628 = _3017630)) \/ ((~ (_3017627 = _3017629)) \/ (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- ((((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) = ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c= c==> c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((((FAN (x , (V , E))) /\ ((x' IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))) = (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c= c==> c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN f3 f1 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f2 cIN b0 f1 c? / c/\ * f2 b0 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY b0 c? / c/\ * f2 b0 cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY b0
+ |- (((~ (E (x' INSERT (v INSERT EMPTY)))) ==> F) = (E (x' INSERT (v INSERT EMPTY))))
T c= c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3017641 = _3017644)) \/ ((~ (_3017642 = _3017645)) \/ ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (p = ((~ p) ==> F))
T c= f0 c==> c~ f0 cF
- |- ((?e. t) = t)
T c= c? / f0 f0
- |- ((_3017616 = _3017618) ==> ((~ (_3017615 = _3017617)) \/ (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
+ (E (x' INSERT (v INSERT EMPTY))) |- ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3017616 = _3017618) |- ((_3017616 = _3017618) /\ ((~ (_3017615 = _3017617)) \/ (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- |- ((_3017621 = _3017622) ==> ((FINITE _3017622) \/ (~ (FINITE _3017621))))
T c==> c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ |- ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)
T * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- (((~ (_3017556 = x)) \/ (~ (_3017556 = x'))) /\ ((~ (_3017556 = x)) \/ (~ (_3017556 = v))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c/\ c\/ c~ c= f3 f0 c~ c= f3 f1 c\/ c~ c= f3 f0 c~ c= f3 f2
- |- ((~ (_3017657 = _3017659)) \/ ((~ (_3017658 = _3017660)) \/ ((_3017657 , _3017658) = (_3017659 , _3017660))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f0 * * part cINSERT f2 part cEMPTY cT
+ |- (((!x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) ==> ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x)) = ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x))
T c= c==> ! ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0 * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
- |- ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))
T c= c\/ f0 c\/ f1 f2 c\/ c\/ f0 f1 f2
+ (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (x' IN V) |- ((((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) = (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge x') V) E)) /\ ((((x' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge x') V) E))) /\ (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((x' IN V) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))))
T c==> cFAN c, f0 c, f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f3 f1 c= c==> c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ cIN f4 * * * part cset_of_edge f3 f1 f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))), (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) /\ ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f2 c= b0 f1 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f1 part cEMPTY f1 * f3 * * part cINSERT f2 * * part cINSERT f1 part cEMPTY
+ ((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) v) |- (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))
T c==> * / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 cIN b0 f2 f3 c/\ cIN * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 cIN f3 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- F
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
- (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (!v. ((~ (V v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 ! c\/ c~ * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- (((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c==> c/\ cFINITE * * * part cset_of_edge f3 f0 f1 c/\ cIN f4 * * * part cset_of_edge f3 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((\E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))))) E)
T * / ! c= * part cxfan c, b1 c, f0 b0 * part cGSPEC / c? / cSETSPEC b2 c? / c/\ * b0 b4 cIN b3 * * part caff_ge * * part cINSERT b1 part cEMPTY b4 b3 f1
+ (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))), (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) /\ ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_3017642 = _3017645), (_3017641 = _3017644) |- ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- ((~ (E (x' INSERT (v INSERT EMPTY)))) ==> F)
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
- (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((\v. ((~ ((I V) v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) _3017553)
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 * / c\/ c~ cI f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
+ |- ((\s. (!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t)))))) s)
T * / ! c= cSUBSET b0 b1 ! c==> cIN b2 b0 cIN b2 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> c/\ cIN f4 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f4 c/\ c~ c= f2 f4 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f2 f0 c/\ * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ |- ((!P. (!x. ((x IN P) = (P x)))) ==> ((FAN (x , (V , E))) ==> ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- ((~ (_3017556 = x)) \/ (~ (_3017556 = v)))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- (((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))) /\ ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cFINITE * * * part cset_of_edge f3 f0 f1 c/\ cIN f4 * * * part cset_of_edge f3 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c/\ c/\ cFINITE * * * part cset_of_edge f3 f0 f1 c/\ cIN f4 * * * part cset_of_edge f3 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> c/\ cFINITE * * * part cset_of_edge f2 f0 f1 c/\ cIN f4 * * * part cset_of_edge f2 f0 f1 c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f4 c/\ c~ c= f2 f4 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f2 f0 c/\ * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- (~ (x' = v)) |- (((~ (v = x')) ==> ((v = x') = F)) = ((v = x') = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))), (FAN (x , (V , E))), (x' IN V) |- (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c? / c/\ cIN * * part cINSERT f2 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c==> cFAN c, f3 c, f0 f1 c==> cIN f2 f0 c? / c/\ * f1 b0 cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY b0
+ |- ((\E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)))))) E)
T * / ! c==> c/\ cFAN c, f0 c, f1 b0 c/\ cIN b1 f1 ! c==> cIN b2 f1 c> cCARD * * * part cset_of_edge b2 f1 b0 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b1 * * part cINSERT b2 part cEMPTY b0 cIN b2 f1 f2
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ |- (((!v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) ==> ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) x')) = ((\v'. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v') V) E)) /\ ((((v' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge v') V) E))) /\ (((v' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) /\ ((~ (x = v')) /\ ((~ (x = v)) /\ ((~ (v' = v)) /\ (((DISJOINT (x INSERT (v' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (v' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (v' INSERT EMPTY))))) /\ ((v' IN V) /\ ((~ (collinear (x INSERT (v' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (v' INSERT EMPTY)))))))))))))))))))) x'))
T c= c==> ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4 * / c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b0 f1 f2 c/\ c= cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 cIN f3 * * * part cset_of_edge b0 f1 f2 c==> cIN * * part cINSERT b0 * * part cINSERT f3 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ c= f0 b0 c/\ c~ c= f0 f3 c/\ c~ c= b0 f3 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c/\ c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY c/\ cIN b0 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT f3 part cEMPTY c~ cIN f3 * part caff * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f4
- (~ (x' = v)) |- ((x' = v) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- (_3017641 = _3017644) |- ((_3017641 = _3017644) /\ ((~ (_3017642 = _3017645)) \/ ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
+ |- ((\V. (!E. (!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))))) V)
T * / ! ! c= * part cxfan c, b2 c, b0 b1 * part cGSPEC / c? / cSETSPEC b3 c? / c/\ * b1 b5 cIN b4 * * part caff_ge * * part cINSERT b2 part cEMPTY b5 b4 f0
- (_3017611 = _3017614) |- ((_3017611 = _3017614) /\ ((~ (_3017609 = _3017612)) \/ ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((\e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))) (x' INSERT (v INSERT EMPTY)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 * / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)
T * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x''. ((P x'') \/ Q)) = ((!x''. (P x'')) \/ Q))
T c= ! c\/ * f0 b0 f1 c\/ ! * f0 b0 f1
- (_3017635 = _3017636) |- ((_3017635 = _3017636) /\ ((FAN _3017636) \/ (~ (FAN _3017635))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFAN f1 c~ cFAN f0
+ (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((~ (_3017611 = _3017614)) \/ ((~ (_3017609 = _3017612)) \/ ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
- (_3017635 = _3017636) |- ((((FAN _3017635) = (FAN _3017636)) ==> ((FAN _3017636) \/ (~ (FAN _3017635)))) = ((FAN _3017636) \/ (~ (FAN _3017635))))
T c==> c= f0 f1 c= c==> c= cFAN f0 cFAN f1 c\/ cFAN f1 c~ cFAN f0 c\/ cFAN f1 c~ cFAN f0
- |- ((!x. (!V. ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))) = T)
T c= ! ! c==> cFAN c, b0 c, b1 f0 c==> ! c==> * b1 b2 c> cCARD * * * part cset_of_edge b2 b1 f0 cNUMERAL cBIT1 c_0 c==> * b1 f1 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * b1 f2 c==> cFINITE * * * part cset_of_edge f1 b1 f0 c==> cset_of_edge f1 b1 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b2 b0 c= b2 f1 c= b2 f2 c==> ! c~ c/\ c\/ c= b2 b0 c= b2 f2 c= b2 f1 c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
+ |- (((!P. (!x. ((x IN P) = (P x)))) ==> ((FAN (x , (V , E))) ==> ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) = ((FAN (x , (V , E))) ==> ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))
T c= c==> ! ! c= cIN b1 b0 * b0 b1 c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!v. (!x'. (!E. (!x. (!V. ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))))))) = (!v. (!x'. (!E. (!x. (!V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F)))))))
T c= ! ! ! ! ! c==> cFAN c, b3 c, b4 b2 c==> ! c==> * b4 b5 c> cCARD * * * part cset_of_edge b5 b4 b2 cNUMERAL cBIT1 c_0 c==> * b4 b1 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> * b4 b0 c==> cFINITE * * * part cset_of_edge b1 b4 b2 c==> cset_of_edge b1 b4 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b1 c= b5 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b0 c= b5 b1 c==> ! c~ c/\ c= b5 b3 c\/ c= b5 b1 c= b5 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY ! ! ! ! ! c==> c~ c==> cFAN c, b3 c, b4 b2 c==> ! c==> * b4 b5 c> cCARD * * * part cset_of_edge b5 b4 b2 cNUMERAL cBIT1 c_0 c==> * b4 b1 c==> * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> * b4 b0 c==> cFINITE * * * part cset_of_edge b1 b4 b2 c==> cset_of_edge b1 b4 b2 b0 c==> c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c==> c~ c= b3 b1 c==> c~ c= b3 b0 c==> c~ c= b1 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b1 c= b5 b0 c==> ! c~ c/\ c\/ c= b5 b3 c= b5 b0 c= b5 b1 c==> ! c~ c/\ c= b5 b3 c\/ c= b5 b1 c= b5 b0 c==> c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> c= c~ ccollinear * * part cINSERT b3 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ caff * * part cINSERT b3 * * part cINSERT b1 part cEMPTY b0 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b3 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b1 c==> caff_ge * * part cINSERT b3 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY b0 * b2 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY cF
- |- ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)
T * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- (((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
+ (FAN (x , (V , E))), ((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) |- (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))
T c==> cFAN c, f0 c, f1 f2 c==> c/\ cFAN c, f0 c, f1 f2 ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 ! c==> cIN b0 f1 c? / c/\ * f2 b1 cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY b1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (E (x' INSERT (v INSERT EMPTY))), (V v) |- ((V v) /\ ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f2 c/\ * f3 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3017621 = _3017622) |- ((_3017621 = _3017622) /\ ((FINITE _3017622) \/ (~ (FINITE _3017621))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ cFINITE f1 c~ cFINITE f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- (!v. (((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) v) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 ! c==> * / c/\ cIN * * part cINSERT f3 * * part cINSERT b1 part cEMPTY f1 cIN b1 f0 b0 c? / c/\ * f1 b1 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b1
+ |- (((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))) = ((\e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))) (x' INSERT (v INSERT EMPTY))))
T c= c/\ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cIN f1 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY * / c/\ * f0 b0 cIN f1 * * part caff_ge * * part cINSERT f3 part cEMPTY b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- (((!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) ==> ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2)) = ((\t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3)))) t2))
T c= c==> ! ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1 * / ! c= c\/ f0 c\/ b0 b1 c\/ c\/ f0 b0 b1 f1
- |- ((!x'''. (((~ (x'' = x)) /\ (~ (x'' = v))) \/ (~ (x''' = x')))) = (((~ (x'' = x)) /\ (~ (x'' = v))) \/ (!x''. (~ (x'' = x')))))
T c= ! c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 c~ c= b0 f3 c\/ c/\ c~ c= f0 f1 c~ c= f0 f2 ! c~ c= b0 f3
- |- ((!P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) /\ ((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) /\ (!p. (!x. ((x IN (\y. (p y))) = (p x))))))
T c/\ ! ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 c/\ ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 ! ! c= cIN b1 / * b0 b2 * b0 b1
- (_3017651 = _3017652) |- ((_3017651 = _3017652) /\ ((NUMERAL _3017651) = (NUMERAL _3017652)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((!v. ((~ ((I V) v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((\v. ((~ ((I V) v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) _3017553)) = ((\v. ((~ ((I V) v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) _3017553))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> ! c\/ c~ cI f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 * / c\/ c~ cI f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 f2 * / c\/ c~ cI f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 f2
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- (!x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = x)) \/ (~ (x'' = v)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c/\ cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_3017649 = _3017650) |- ((_3017649 = _3017650) /\ ((BIT1 _3017649) = (BIT1 _3017650)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((!v'. ((~ (V v)) \/ ((CARD (((set_of_edge v') V) E)) > (NUMERAL (BIT1 _0))))) = ((~ (V v)) \/ (!v. ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))
T c= ! c\/ c~ * f0 f1 c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0 c\/ c~ * f0 f1 ! c> cCARD * * * part cset_of_edge b0 f0 f2 cNUMERAL cBIT1 c_0
- |- ((~ (_3017651 = _3017652)) \/ ((NUMERAL _3017651) = (NUMERAL _3017652)))
T c\/ c~ c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- (((!x''. (((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) x'') ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))) ==> ((?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))) = ((?v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c= c==> ! c==> * / c/\ cIN * * part cINSERT f3 * * part cINSERT b1 part cEMPTY f1 cIN b1 f0 b0 c? / c/\ * f1 b1 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b1 c==> c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0 c==> c? / c/\ cIN * * part cINSERT f3 * * part cINSERT b0 part cEMPTY f1 cIN b0 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- |- ((_3017637 = _3017639) ==> ((~ (_3017638 = _3017640)) \/ ((_3017637 INSERT _3017638) = (_3017639 INSERT _3017640))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) |- (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) = T)
T c==> cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- (_3017638 = _3017640), (_3017637 = _3017639) |- ((_3017638 = _3017640) /\ ((_3017637 INSERT _3017638) = (_3017639 INSERT _3017640)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= * * part cINSERT f2 f0 * * part cINSERT f3 f1
- (_3017641 = _3017644) |- ((_3017642 = _3017645) ==> ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
- |- (((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))) = T)
T c= c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cT
+ (!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))), (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) /\ ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((x = x) = T)
T c= c= f0 f0 cT
- (_3017642 = _3017645), (_3017641 = _3017644) |- ((_3017643 = _3017646) ==> ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
- (_3017627 = _3017629), (_3017628 = _3017630) |- ((_3017627 = _3017629) /\ (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ cI f1 f3 c~ cI f0 f2
+ (~ (x = v)), (E (x' INSERT (v INSERT EMPTY))) |- ((~ (x = v)) /\ ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 f1 c==> c~ c= f3 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f1 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f1 * f2 * * part cINSERT f3 * * part cINSERT f1 part cEMPTY
+ |- (((!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V)) = ((\V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))))) V))
T c= c==> ! ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1 * / ! ! ! c==> cFAN c, f0 c, b0 b1 c/\ cFINITE * * * part cset_of_edge b3 b0 b1 c/\ c= cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 cIN b2 * * * part cset_of_edge b3 b0 b1 c==> cIN * * part cINSERT b3 * * part cINSERT b2 part cEMPTY b1 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ c= f0 b3 c/\ c~ c= f0 b2 c/\ c~ c= b3 b2 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b3 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c/\ c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY c/\ cIN b3 b0 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b3 * * part cINSERT b2 part cEMPTY c~ cIN b2 * part caff * * part cINSERT f0 * * part cINSERT b3 part cEMPTY f1
- |- ((\E. (!x. (!V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F)))) E)
T * / ! ! c==> c~ c==> cFAN c, b1 c, b2 b0 c==> ! c==> * b2 b3 c> cCARD * * * part cset_of_edge b3 b2 b0 cNUMERAL cBIT1 c_0 c==> * b2 f0 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * b2 f1 c==> cFINITE * * * part cset_of_edge f0 b2 b0 c==> cset_of_edge f0 b2 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b3 b1 c= b3 f0 c= b3 f1 c==> ! c~ c/\ c\/ c= b3 b1 c= b3 f1 c= b3 f0 c==> ! c~ c/\ c= b3 b1 c\/ c= b3 f0 c= b3 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cF f2
- (_3017643 = _3017646), (_3017642 = _3017645), (_3017641 = _3017644) |- ((_3017643 = _3017646) /\ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f0 f1 c= * * * part cset_of_edge f4 f2 f0 * * * part cset_of_edge f5 f3 f1
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))), (((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) |- ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) /\ ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((!V. (!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))))) = T)
T c= ! ! c==> c/\ cFAN c, f0 c, b0 b1 ! c==> cIN b2 b0 c> cCARD * * * part cset_of_edge b2 b0 b1 cNUMERAL cBIT1 c_0 ! c==> cIN b2 b0 c? / c/\ * b1 b3 cIN b2 * * part caff_ge * * part cINSERT f0 part cEMPTY b3 cT
- (v = x') |- (x' = v)
T c==> c= f0 f1 c= f1 f0
- |- ((a ==> b) = ((~ a) \/ b))
T c= c==> f0 f1 c\/ c~ f0 f1
- |- (((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F) ==> ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F))
T c==> c==> c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF c==> c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF
- (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((~ ((I V) _3017553)) \/ ((CARD (((set_of_edge _3017553) V) E)) > (NUMERAL (BIT1 _0))))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c\/ c~ cI f0 f2 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0
- |- ((_3017651 = _3017652) ==> ((NUMERAL _3017651) = (NUMERAL _3017652)))
T c==> c= f0 f1 c= cNUMERAL f0 cNUMERAL f1
- |- ((_3017641 = _3017644) ==> ((~ (_3017642 = _3017645)) \/ ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f0 f2 f4 * * * part cset_of_edge f1 f3 f5
- |- ((\V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F)) V)
T * / c==> c~ c==> cFAN c, f0 c, b0 f1 c==> ! c==> * b0 b1 c> cCARD * * * part cset_of_edge b1 b0 f1 cNUMERAL cBIT1 c_0 c==> * b0 f2 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * b0 f3 c==> cFINITE * * * part cset_of_edge f2 b0 f1 c==> cset_of_edge f2 b0 f1 f3 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f0 f2 c==> c~ c= f0 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f2 c= b1 f3 c==> ! c~ c/\ c\/ c= b1 f0 c= b1 f3 c= b1 f2 c==> ! c~ c/\ c= b1 f0 c\/ c= b1 f2 c= b1 f3 c==> c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY cF f4
+ (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))), ((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)) |- (((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)) /\ F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c/\ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 cF
- |- ((~ (_3017637 = _3017639)) \/ ((~ (_3017638 = _3017640)) \/ ((_3017637 INSERT _3017638) = (_3017639 INSERT _3017640))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- (_3017611 = _3017614) |- ((_3017609 = _3017612) ==> ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611)))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f3 f5 f1 c~ caff_ge f2 f4 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (E (x' INSERT (v INSERT EMPTY)))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (~ (E (x' INSERT (v INSERT EMPTY)))) |- (~ ((I E) (x' INSERT (v INSERT EMPTY))))
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) |- ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cT
- (_3017658 = _3017660), (_3017657 = _3017659) |- ((_3017658 = _3017660) /\ ((_3017657 , _3017658) = (_3017659 , _3017660)))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c= c, f2 f0 c, f3 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))) = T)
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c= c==> cIN f2 f0 c> cCARD * * * part cset_of_edge f2 f0 f1 cNUMERAL cBIT1 c_0 cT
- (_3017615 = _3017617), (_3017616 = _3017618) |- (((((aff _3017615) _3017616) = ((aff _3017617) _3017618)) ==> (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616)))) = (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= caff f0 f2 caff f1 f3 c\/ caff f1 f3 c~ caff f0 f2 c\/ caff f1 f3 c~ caff f0 f2
- (_3017628 = _3017630) |- ((_3017628 = _3017630) /\ ((~ (_3017627 = _3017629)) \/ (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628)))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3017631 = _3017633) ==> ((~ (_3017632 = _3017634)) \/ ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ c> f1 f3 c~ c> f0 f2
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- ((~ (_3017556 = x)) \/ (~ (_3017556 = x')))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f1
- (_3017647 = _3017648) |- ((_3017647 = _3017648) /\ ((CARD _3017647) = (CARD _3017648)))
T c==> c= f0 f1 c/\ c= f0 f1 c= cCARD f0 cCARD f1
+ (~ (x' = v)), (E (x' INSERT (v INSERT EMPTY))) |- ((~ (x' = v)) /\ ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))
T c==> c~ c= f0 f1 c==> * f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c/\ c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f0 c= b0 f1 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f0 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f0 c= b0 f1 c==> c~ caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY f1 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 * f2 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY
+ |- (((!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) ==> ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x)) = ((\x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1 * / c= cIN b0 * part cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 * f0 b0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- (!v. ((~ ((I V) v)) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 ! c\/ c~ cI f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0
- |- (((!p. (!x. ((x IN (\y. (p y))) = (p x)))) ==> ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)) = ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 / * b0 b2 * b0 b1 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0 * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (v IN (((set_of_edge x') V) E)) |- ((v IN (((set_of_edge x') V) E)) = T)
T c==> cIN f0 * * * part cset_of_edge f1 f2 f3 c= cIN f0 * * * part cset_of_edge f1 f2 f3 cT
+ (E (x' INSERT (v INSERT EMPTY))) |- ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f3 f1 c==> c~ c= f3 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))))) V)
T * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 b0 ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 cIN b3 b0 f1
- |- ((_3017649 = _3017650) ==> ((BIT1 _3017649) = (BIT1 _3017650)))
T c==> c= f0 f1 c= cBIT1 f0 cBIT1 f1
- |- ((!x'''. ((~ (x''' = x)) \/ ((~ (x'' = x')) /\ (~ (x'' = v))))) = ((!x''. (~ (x'' = x))) \/ ((~ (x'' = x')) /\ (~ (x'' = v)))))
T c= ! c\/ c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3 c\/ ! c~ c= b0 f0 c/\ c~ c= f1 f2 c~ c= f1 f3
- |- (((t1 \/ t2) \/ t3) = (t1 \/ (t2 \/ t3)))
T c= c\/ c\/ f0 f1 f2 c\/ f0 c\/ f1 f2
- (!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) |- ((~ (_3017554 = x')) \/ (~ (_3017554 = v)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f1 c~ c= f3 f2
+ |- ((\x. (!v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))))))))) x)
T * / ! ! c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY c/\ cIN b1 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT b1 * * part cINSERT b2 part cEMPTY f0
- (~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) |- F
T c==> c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF
- |- (((!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cIN b0 * part cGSPEC / * f0 * part cSETSPEC b1 * f0 / / c/\ b1 c= b0 b2 f1
- |- (((!P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) ==> ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P)) = ((\P. (!x. ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t)))))))) P))
T c= c==> ! ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0 * / ! c= cIN b1 * part cGSPEC / * b0 * part cSETSPEC b2 * b0 / / c/\ b2 c= b1 b3 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((!x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) ==> ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)) = ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x))
T c= c==> ! ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0 * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))) |- (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 ! c==> cIN b0 f0 c? / c/\ * f1 b1 cIN b0 * * part caff_ge * * part cINSERT f2 part cEMPTY b1
+ |- ((x' IN (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v))))) = (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c= cIN f0 * part cGSPEC / c? / cSETSPEC b0 c? / c/\ * f1 b2 cIN b1 * * part caff_ge * * part cINSERT f2 part cEMPTY b2 b1 c? / c/\ * f1 b0 cIN f0 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) /\ ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c/\ c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = x')), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> c~ c= f2 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((~ (_3017619 = _3017620)) \/ ((collinear _3017620) \/ (~ (collinear _3017619))))
T c\/ c~ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_3017615 = _3017617), (_3017616 = _3017618) |- ((_3017615 = _3017617) /\ (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ caff f1 f3 c~ caff f0 f2
- (_3017609 = _3017612), (_3017610 = _3017613), (_3017611 = _3017614) |- ((_3017610 = _3017613) /\ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c/\ c= f2 f3 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
- |- ((\x'. (!E. (!x. (!V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F))))) x')
T * / ! ! ! c==> c~ c==> cFAN c, b2 c, b3 b1 c==> ! c==> * b3 b4 c> cCARD * * * part cset_of_edge b4 b3 b1 cNUMERAL cBIT1 c_0 c==> * b3 b0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> * b3 f0 c==> cFINITE * * * part cset_of_edge b0 b3 b1 c==> cset_of_edge b0 b3 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b4 b2 c= b4 b0 c= b4 f0 c==> ! c~ c/\ c\/ c= b4 b2 c= b4 f0 c= b4 b0 c==> ! c~ c/\ c= b4 b2 c\/ c= b4 b0 c= b4 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cF f1
+ (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) |- ((v IN (aff (x INSERT (x' INSERT EMPTY)))) = F)
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) |- (((!x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = v)) \/ (~ (x'' = x'))))) ==> ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = v)) \/ (~ (x'' = x'))))) _3017555)) = ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = v)) \/ (~ (x'' = x'))))) _3017555))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3
- (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) |- ((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) = F)
T c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF
- |- ((x IN (GSPEC (\v. (P (SETSPEC v))))) = (P (\p. (\t. (p /\ (x = t))))))
T c= cIN f0 * part cGSPEC / * f1 * part cSETSPEC b0 * f1 / / c/\ b0 c= f0 b1
- (_3017637 = _3017639) |- ((_3017638 = _3017640) ==> ((_3017637 INSERT _3017638) = (_3017639 INSERT _3017640)))
T c==> c= f0 f1 c==> c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
+ |- ((!E. (((FAN (x , (V , E))) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))) ==> (!x'. ((x' IN V) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))))) = T)
T c= ! c==> c/\ cFAN c, f0 c, f1 b0 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 b0 cNUMERAL cBIT1 c_0 ! c==> cIN b1 f1 c? / c/\ * b0 b2 cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY b2 cT
- |- ((~ (_3017631 = _3017633)) \/ ((~ (_3017632 = _3017634)) \/ ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ c> f1 f3 c~ c> f0 f2
+ |- ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))
T c==> * f0 f1 c==> * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> * f0 f3 c==> cFINITE * * * part cset_of_edge f1 f0 f2 c==> cset_of_edge f1 f0 f2 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f3 c==> c~ c= f1 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f3 * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
- |- ((!x''. (P \/ (Q x''))) = (P \/ (!x''. (Q x''))))
T c= ! c\/ f0 * f1 b0 c\/ f0 ! * f1 b0
- |- (((!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) ==> ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3)) = ((\t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))) t3))
T c= c==> ! c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2 * / c= c\/ f0 c\/ f1 b0 c\/ c\/ f0 f1 b0 f2
+ (E (x' INSERT (v INSERT EMPTY))) |- ((((I E) (x' INSERT (v INSERT EMPTY))) ==> F) = F)
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF cF
+ |- ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)
T * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- (((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge x') V) E)) /\ ((((x' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge x') V) E))) /\ (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((x' IN V) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c==> c==> cFAN c, f2 c, f0 f1 c/\ cFINITE * * * part cset_of_edge f3 f0 f1 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f0 c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge x') V) E)) /\ ((((x' INSERT (v INSERT EMPTY)) IN E) = (v IN (((set_of_edge x') V) E))) /\ (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((x' IN V) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))))))))))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) = ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))
T c= c==> c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge f3 f1 f2 c/\ c= cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 cIN f4 * * * part cset_of_edge f3 f1 f2 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f0 f3 c/\ c~ c= f0 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ cIN f3 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c/\ * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\x. (!V. ((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F))) x)
T * / ! c==> c~ c==> cFAN c, b0 c, b1 f0 c==> ! c==> * b1 b2 c> cCARD * * * part cset_of_edge b2 b1 f0 cNUMERAL cBIT1 c_0 c==> * b1 f1 c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * b1 f2 c==> cFINITE * * * part cset_of_edge f1 b1 f0 c==> cset_of_edge f1 b1 f0 f2 c==> c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= b0 f1 c==> c~ c= b0 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b2 b0 c= b2 f1 c= b2 f2 c==> ! c~ c/\ c\/ c= b2 b0 c= b2 f2 c= b2 f1 c==> ! c~ c/\ c= b2 b0 c\/ c= b2 f1 c= b2 f2 c==> c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT b0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT b0 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY b0 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT b0 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cF f3
- (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) |- (!x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = v)) \/ (~ (x'' = x')))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (E (x' INSERT (v INSERT EMPTY))) |- ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f3 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- ((((set_of_edge x') V) E) v) |- ((I (((set_of_edge x') V) E)) v)
T c==> cset_of_edge f0 f1 f2 f3 cI * * * part cset_of_edge f0 f1 f2 f3
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f2 f0 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> c~ c= f3 f2 c==> c~ c= f3 f4 c==> c~ c= f2 f4 c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c==> cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((a = b) ==> (b \/ (~ a)))
T c==> c= f0 f1 c\/ f1 c~ f0
+ (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) |- ((((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))) = (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))))))) ==> ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))))
T c==> c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c~ cIN f0 * part caff * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c= c==> c/\ cIN f1 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ * f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c==> c==> c~ ccollinear * * part cINSERT f1 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ cIN f2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c/\ * f3 * * part cINSERT f2 * * part cINSERT f0 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY
+ (FAN (x , (V , E))) |- ((FAN (x , (V , E))) = T)
T c==> cFAN c, f0 c, f1 f2 c= cFAN c, f0 c, f1 f2 cT
- (_3017627 = _3017629), (_3017628 = _3017630) |- (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f1 f3 c~ cI f0 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (x' IN V) |- ((((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN f3 f0 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cIN f4 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
+ |- (((!t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) ==> ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t)) = ((\t. ((s SUBSET t) = (!x. ((x IN s) ==> (x IN t))))) t))
T c= c==> ! c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1 * / c= cSUBSET f0 b0 ! c==> cIN b1 f0 cIN b1 b0 f1
+ (E (x' INSERT (v INSERT EMPTY))) |- ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> ! c~ c/\ c= b0 f3 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((_3017619 = _3017620) ==> ((collinear _3017620) \/ (~ (collinear _3017619))))
T c==> c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (V v) |- ((I V) v)
T c==> * f0 f1 cI f0 f1
+ (E (x' INSERT (v INSERT EMPTY))) |- ((I E) (x' INSERT (v INSERT EMPTY)))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))), (((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) |- ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) /\ (E (x' INSERT (v INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 c/\ caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- ((\v. (!w. ((~ (collinear (x INSERT (v INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ ((v IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (v INSERT (w INSERT EMPTY))))))))) x')
T * / ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY c/\ cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY cIN b1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f1
- (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) |- (!x''. (((~ (x'' = x)) /\ (~ (x'' = v))) \/ (~ (x'' = x'))))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 ! c\/ c/\ c~ c= b0 f0 c~ c= b0 f1 c~ c= b0 f2
- (_3017657 = _3017659) |- ((_3017657 = _3017659) /\ ((~ (_3017658 = _3017660)) \/ ((_3017657 , _3017658) = (_3017659 , _3017660))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= c, f0 f2 c, f1 f3
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (~ (x' = v)) |- (~ (v = x'))
T c==> c~ c= f0 f1 c~ c= f1 f0
- |- ((_3017635 = _3017636) ==> ((FAN _3017636) \/ (~ (FAN _3017635))))
T c==> c= f0 f1 c\/ cFAN f1 c~ cFAN f0
- |- (((!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) ==> ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x)) = ((\x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))) x))
T c= c==> ! c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1 * / c= cGSPEC / * f0 * part cSETSPEC b1 b0 * f0 / / c/\ b1 c= b0 b2 f1
- (_3017631 = _3017633), (_3017632 = _3017634) |- ((((_3017631 > _3017632) = (_3017633 > _3017634)) ==> ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632)))) = ((_3017633 > _3017634) \/ (~ (_3017631 > _3017632))))
T c==> c= f0 f1 c==> c= f2 f3 c= c==> c= c> f0 f2 c> f1 f3 c\/ c> f1 f3 c~ c> f0 f2 c\/ c> f1 f3 c~ c> f0 f2
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cFAN c, f3 c, f0 f1 c==> c/\ c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ c= f3 f2 c/\ c~ c= f3 f4 c/\ c~ c= f2 f4 c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f2 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * * part cINSERT f2 part cEMPTY c/\ cDISJOINT * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f3 * * part cINSERT f2 part cEMPTY c==> cIN * * part cINSERT f2 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f2 f0 f1 c==> cIN f2 f0 c/\ * f1 * * part cINSERT f2 * * part cINSERT f4 part cEMPTY cIN f2 * * part caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f2 * * part cINSERT f4 part cEMPTY
- (_3017615 = _3017617), (_3017616 = _3017618) |- (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616)))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f1 f3 c~ caff f0 f2
- (_3017609 = _3017612), (_3017611 = _3017614) |- ((~ (_3017610 = _3017613)) \/ ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ c~ c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- (_3017609 = _3017612), (_3017610 = _3017613), (_3017611 = _3017614) |- ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611)))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
+ ((\v. (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))) v) |- (((((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)) ==> (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))) = (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e)))))
T c==> * / c/\ cIN * * part cINSERT f0 * * part cINSERT b0 part cEMPTY f1 cIN b0 f2 f3 c= c==> c/\ cIN * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f1 cIN f3 f2 c? / c/\ * f1 b0 cIN f0 * * part caff_ge * * part cINSERT f4 part cEMPTY b0 c? / c/\ * f1 b0 cIN f0 * * part caff_ge * * part cINSERT f4 part cEMPTY b0
- |- (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))
T c= cGSPEC / c? / cSETSPEC b0 * f0 b1 b1 f1 * f0 f1
+ |- (((!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) ==> ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E)) = ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E))
T c= c==> ! ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2 * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2
+ |- ((\x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))) x)
T * / c= * part cxfan c, b0 c, f0 f1 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ * f1 b3 cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY b3 b2 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) /\ (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c/\ cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((\p. (!x. ((x IN (\y. (p y))) = (p x)))) p)
T * / ! c= cIN b1 / * b0 b2 * b0 b1 f0
+ |- (((!V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))))) ==> ((\V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))))) V)) = ((\V. (!E. (!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))))) V))
T c= c==> ! ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 b0 ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 cIN b3 b0 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 b0 ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 cIN b3 b0 f1 * / ! ! c==> c/\ cFAN c, f0 c, b0 b1 c/\ cIN b2 b0 ! c==> cIN b3 b0 c> cCARD * * * part cset_of_edge b3 b0 b1 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b2 * * part cINSERT b3 part cEMPTY b1 cIN b3 b0 f1
- (~ (x' = v)) |- ((v = x') = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
+ |- ((x IN EMPTY) = F)
T c= cIN f0 part cEMPTY cF
- |- ((_3017628 = _3017630) ==> ((~ (_3017627 = _3017629)) \/ (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628)))))
T c==> c= f0 f1 c\/ c~ c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
+ |- ((\w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))) x')
T * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 f1 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 f3
+ |- ((!P. (!x. ((x IN P) = (P x)))) ==> ((FAN (x , (V , E))) ==> ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. ((x'' IN ((x INSERT (x' INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x'' IN EMPTY))) ==> ((!x''. ((x'' IN ((x INSERT (v INSERT EMPTY)) INTER (x' INSERT EMPTY))) = (x'' IN EMPTY))) ==> ((!x''. ((x'' IN ((x INSERT EMPTY) INTER (x' INSERT (v INSERT EMPTY)))) = (x'' IN EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))
T c==> ! ! c= cIN b1 b0 * b0 b1 c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (_3017609 = _3017612), (_3017610 = _3017613), (_3017611 = _3017614) |- ((((((aff_ge _3017609) _3017610) _3017611) = (((aff_ge _3017612) _3017613) _3017614)) ==> ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611)))) = ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c= c==> c= caff_ge f0 f2 f4 caff_ge f1 f3 f5 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4 c\/ caff_ge f1 f3 f5 c~ caff_ge f0 f2 f4
+ (E (x' INSERT (v INSERT EMPTY))) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f3 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) \/ ((collinear (x INSERT (x' INSERT (v INSERT EMPTY)))) /\ ((aff (x INSERT (x' INSERT EMPTY))) v)))
T c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c\/ c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2 c/\ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY caff * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f2
+ (V x') |- ((V x') /\ ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))
T c==> * f0 f1 c/\ * f0 f1 c==> * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> * f0 f3 c==> cFINITE * * * part cset_of_edge f1 f0 f2 c==> cset_of_edge f1 f0 f2 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f3 c==> c~ c= f1 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f3 part cEMPTY f3 * f2 * * part cINSERT f1 * * part cINSERT f3 part cEMPTY
+ |- ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3017619 = _3017620) |- ((((collinear _3017619) = (collinear _3017620)) ==> ((collinear _3017620) \/ (~ (collinear _3017619)))) = ((collinear _3017620) \/ (~ (collinear _3017619))))
T c==> c= f0 f1 c= c==> c= ccollinear f0 ccollinear f1 c\/ ccollinear f1 c~ ccollinear f0 c\/ ccollinear f1 c~ ccollinear f0
- |- ((~ (_3017616 = _3017618)) \/ ((~ (_3017615 = _3017617)) \/ (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616)))))
T c\/ c~ c= f0 f1 c\/ c~ c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- (!x''. ((~ (x'' = x)) \/ ((~ (x'' = x')) /\ (~ (x'' = v)))))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 ! c\/ c~ c= b0 f0 c/\ c~ c= b0 f1 c~ c= b0 f2
+ |- ((~ F) = T)
T c= c~ cF cT
- |- (((!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) ==> ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x)) = ((\x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x))) x))
T c= c==> ! c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1 * / c= cGSPEC / c? / cSETSPEC b1 * f0 b2 b2 b0 * f0 b0 f1
+ (E (x' INSERT (v INSERT EMPTY))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) |- (E (x' INSERT (v INSERT EMPTY)))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f3 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f3 * * part cINSERT f1 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- (_3017628 = _3017630) |- ((_3017627 = _3017629) ==> (((I _3017629) _3017630) \/ (~ ((I _3017627) _3017628))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ cI f3 f1 c~ cI f2 f0
- |- ((!x''. (P x'')) = ((P T) /\ (P F)))
T c= ! * f0 b0 c/\ * f0 cT * f0 cF
- |- ((x IN (\y. (p y))) = (p x))
T c= cIN f0 / * f1 b0 * f1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (x' IN V) |- ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f3 f0 c==> cIN f4 f0 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- (((!t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) ==> ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1)) = ((\t1. (!t2. (!t3. ((t1 \/ (t2 \/ t3)) = ((t1 \/ t2) \/ t3))))) t1))
T c= c==> ! ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0 * / ! ! c= c\/ b0 c\/ b1 b2 c\/ c\/ b0 b1 b2 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
- ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) |- (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) = T)
T c==> cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY c= cDISJOINT * * part cINSERT f0 * * part cINSERT f1 part cEMPTY * * part cINSERT f2 part cEMPTY cT
- (_3017637 = _3017639) |- ((_3017637 = _3017639) /\ ((~ (_3017638 = _3017640)) \/ ((_3017637 INSERT _3017638) = (_3017639 INSERT _3017640))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ c~ c= f2 f3 c= * * part cINSERT f0 f2 * * part cINSERT f1 f3
- |- ((~ (~ t)) = t)
T c= c~ c~ f0 f0
- (!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) |- ((~ (_3017554 = x)) \/ (~ (_3017554 = v)))
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 c\/ c~ c= f3 f0 c~ c= f3 f2
- (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- ((~ F) ==> F)
T c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cF cF
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- ((\E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))) E)
T * / ! ! c==> cFAN c, f0 c, f1 b0 c/\ cFINITE * * * part cset_of_edge b2 f1 b0 c/\ c= cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 cIN b1 * * * part cset_of_edge b2 f1 b0 c==> cIN * * part cINSERT b2 * * part cINSERT b1 part cEMPTY b0 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ c= f0 b2 c/\ c~ c= f0 b1 c/\ c~ c= b2 b1 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b2 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b2 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c/\ c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY c/\ cIN b2 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b2 * * part cINSERT b1 part cEMPTY c~ cIN b1 * part caff * * part cINSERT f0 * * part cINSERT b2 part cEMPTY f2
+ |- ((\x. (!V. (!E. (!u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY)))))))))))))))))))))))) x)
T * / ! ! ! ! c==> cFAN c, b0 c, b1 b2 c/\ cFINITE * * * part cset_of_edge b4 b1 b2 c/\ c= cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 cIN b3 * * * part cset_of_edge b4 b1 b2 c==> cIN * * part cINSERT b4 * * part cINSERT b3 part cEMPTY b2 c/\ c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ c= b0 b4 c/\ c~ c= b0 b3 c/\ c~ c= b4 b3 c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b4 part cEMPTY * * part cINSERT b3 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 * * part cINSERT b3 part cEMPTY * * part cINSERT b4 part cEMPTY c/\ cDISJOINT * * part cINSERT b0 part cEMPTY * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c/\ c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY c/\ cIN b4 b1 c= c~ ccollinear * * part cINSERT b0 * * part cINSERT b4 * * part cINSERT b3 part cEMPTY c~ cIN b3 * part caff * * part cINSERT b0 * * part cINSERT b4 part cEMPTY f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) |- ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = v)) \/ (~ (x'' = x'))))) _3017555)
T c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f1 c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f2 c\/ c~ c= b0 f1 c~ c= b0 f2 f3
+ |- (((!p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) ==> ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p)) = ((\p. (!x. ((x IN (GSPEC (\v. (?y. (((SETSPEC v) (p y)) y))))) = (p x)))) p))
T c= c==> ! ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0 * / ! c= cIN b1 * part cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 * b0 b1 f0
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V) |- ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) ==> (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) ==> (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> c~ c= f2 f3 c==> c~ c= f2 f4 c==> c~ c= f3 f4 c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- |- ((!x'. (!E. (!x. (!V. ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))))) = T)
T c= ! ! ! ! c==> cFAN c, b2 c, b3 b1 c==> ! c==> * b3 b4 c> cCARD * * * part cset_of_edge b4 b3 b1 cNUMERAL cBIT1 c_0 c==> * b3 b0 c==> * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> * b3 f0 c==> cFINITE * * * part cset_of_edge b0 b3 b1 c==> cset_of_edge b0 b3 b1 f0 c==> c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c==> c~ c= b2 b0 c==> c~ c= b2 f0 c==> c~ c= b0 f0 c==> ! c~ c/\ c\/ c= b4 b2 c= b4 b0 c= b4 f0 c==> ! c~ c/\ c\/ c= b4 b2 c= b4 f0 c= b4 b0 c==> ! c~ c/\ c= b4 b2 c\/ c= b4 b0 c= b4 f0 c==> c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> c= c~ ccollinear * * part cINSERT b2 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY c~ caff * * part cINSERT b2 * * part cINSERT b0 part cEMPTY f0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b2 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY b0 c==> caff_ge * * part cINSERT b2 part cEMPTY * * part cINSERT b0 * * part cINSERT f0 part cEMPTY f0 * b1 * * part cINSERT b0 * * part cINSERT f0 part cEMPTY cT
+ |- (((!x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))) ==> ((\x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))) x)) = ((\x. ((xfan (x , (V , E))) = (GSPEC (\GEN%PVAR%5468. (?v. (((SETSPEC GEN%PVAR%5468) (?e. ((E e) /\ (v IN ((aff_ge (x INSERT EMPTY)) e))))) v)))))) x))
T c= c==> ! c= * part cxfan c, b0 c, f0 f1 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ * f1 b3 cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY b3 b2 * / c= * part cxfan c, b0 c, f0 f1 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ * f1 b3 cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY b3 b2 f2 * / c= * part cxfan c, b0 c, f0 f1 * part cGSPEC / c? / cSETSPEC b1 c? / c/\ * f1 b3 cIN b2 * * part caff_ge * * part cINSERT b0 part cEMPTY b3 b2 f2
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))), (~ (x = v)), (~ (x = x')), (~ (x' = v)), (FINITE (((set_of_edge x') V) E)), (FAN (x , (V , E))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (v IN (((set_of_edge x') V) E)), (x' IN V), ((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))), ((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)), ((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) |- ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f2 f4 c==> c~ c= f2 f3 c==> c~ c= f3 f4 c==> cFINITE * * * part cset_of_edge f3 f0 f1 c==> cFAN c, f2 c, f0 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f4 * * * part cset_of_edge f3 f0 f1 c==> cIN f3 f0 c==> cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c==> cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN f2 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
- (E (x' INSERT (v INSERT EMPTY))) |- ((~ ((I E) (x' INSERT (v INSERT EMPTY)))) ==> ((I E) (x' INSERT (v INSERT EMPTY))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!w. ((~ (collinear (x INSERT (x' INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))))))) ==> ((\w. ((~ (collinear (x INSERT (x' INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))))))) v)) = ((\w. ((~ (collinear (x INSERT (x' INSERT (w INSERT EMPTY))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))) /\ (w IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (w INSERT EMPTY)))))))) v))
T c= c==> ! c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2 * / c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY c/\ cIN f1 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY cIN b0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f1 * * part cINSERT b0 part cEMPTY f2
- (_3017621 = _3017622) |- ((((FINITE _3017621) = (FINITE _3017622)) ==> ((FINITE _3017622) \/ (~ (FINITE _3017621)))) = ((FINITE _3017622) \/ (~ (FINITE _3017621))))
T c==> c= f0 f1 c= c==> c= cFINITE f0 cFINITE f1 c\/ cFINITE f1 c~ cFINITE f0 c\/ cFINITE f1 c~ cFINITE f0
+ |- ((T = t) = t)
T c= c= cT f0 f0
+ |- ((\u. (!v. ((FAN (x , (V , E))) ==> ((FINITE (((set_of_edge v) V) E)) /\ ((((v INSERT (u INSERT EMPTY)) IN E) = (u IN (((set_of_edge v) V) E))) /\ (((v INSERT (u INSERT EMPTY)) IN E) ==> ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) /\ ((~ (x = v)) /\ ((~ (x = u)) /\ ((~ (v = u)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (u INSERT EMPTY)) /\ (((DISJOINT (x INSERT (u INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (v INSERT (u INSERT EMPTY))) /\ ((~ (u IN (aff (x INSERT (v INSERT EMPTY))))) /\ ((v IN V) /\ ((~ (collinear (x INSERT (v INSERT (u INSERT EMPTY))))) = (~ (u IN (aff (x INSERT (v INSERT EMPTY))))))))))))))))))))) v)
T * / ! c==> cFAN c, f0 c, f1 f2 c/\ cFINITE * * * part cset_of_edge b1 f1 f2 c/\ c= cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 cIN b0 * * * part cset_of_edge b1 f1 f2 c==> cIN * * part cINSERT b1 * * part cINSERT b0 part cEMPTY f2 c/\ c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ c= f0 b1 c/\ c~ c= f0 b0 c/\ c~ c= b1 b0 c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b1 part cEMPTY * * part cINSERT b0 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 * * part cINSERT b0 part cEMPTY * * part cINSERT b1 part cEMPTY c/\ cDISJOINT * * part cINSERT f0 part cEMPTY * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c/\ c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY c/\ cIN b1 f1 c= c~ ccollinear * * part cINSERT f0 * * part cINSERT b1 * * part cINSERT b0 part cEMPTY c~ cIN b0 * part caff * * part cINSERT f0 * * part cINSERT b1 part cEMPTY f3
+ (E (x' INSERT (v INSERT EMPTY))) |- ((E (x' INSERT (v INSERT EMPTY))) /\ ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))
T c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f3 f2 c==> cFINITE * * * part cset_of_edge f1 f3 f0 c==> cset_of_edge f1 f3 f0 f2 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> c~ c= f4 f1 c==> c~ c= f4 f2 c==> c~ c= f1 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f1 c= b0 f2 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f1 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f1 c= b0 f2 c==> c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f1 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f1 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f1 * * part cINSERT f2 part cEMPTY f2 * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
+ |- (((!w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))) ==> ((\w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))) x')) = ((\w. (((FAN (x , (V , E))) /\ ((w IN V) /\ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))))) ==> (?v. (((w INSERT (v INSERT EMPTY)) IN E) /\ (v IN V))))) x'))
T c= c==> ! c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 f1 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 f1 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 f3 * / c==> c/\ cFAN c, f0 c, f1 f2 c/\ cIN b0 f1 ! c==> cIN b1 f1 c> cCARD * * * part cset_of_edge b1 f1 f2 cNUMERAL cBIT1 c_0 c? / c/\ cIN * * part cINSERT b0 * * part cINSERT b1 part cEMPTY f2 cIN b1 f1 f3
- |- (((~ ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))) ==> F) = ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))))
T c= c==> c~ c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cF c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), ((FINITE (((set_of_edge x') V) E)) /\ ((v IN (((set_of_edge x') V) E)) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) /\ ((~ (x = x')) /\ ((~ (x = v)) /\ ((~ (x' = v)) /\ (((DISJOINT (x INSERT (x' INSERT EMPTY))) (v INSERT EMPTY)) /\ (((DISJOINT (x INSERT (v INSERT EMPTY))) (x' INSERT EMPTY)) /\ (((DISJOINT (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) /\ ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) /\ ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))))))))))))), ((x' INSERT (v INSERT EMPTY)) IN E), (v IN V), (x' IN V) |- ((E (x' INSERT (v INSERT EMPTY))) /\ (x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cFINITE * * * part cset_of_edge f3 f0 f1 c/\ cIN f4 * * * part cset_of_edge f3 f0 f1 c/\ c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ c= f2 f3 c/\ c~ c= f2 f4 c/\ c~ c= f3 f4 c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY c/\ cDISJOINT * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c/\ c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c= c~ ccollinear * * part cINSERT f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 c==> cIN f4 f0 c==> cIN f3 f0 c/\ * f1 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ |- (((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))) = ((!P. (!x. ((x IN P) = (P x)))) ==> ((FAN (x , (V , E))) ==> ((!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((x' IN V) ==> (((x' INSERT (v INSERT EMPTY)) IN E) ==> ((v IN V) ==> ((FINITE (((set_of_edge x') V) E)) ==> ((v IN (((set_of_edge x') V) E)) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. ((x'' IN ((x INSERT (x' INSERT EMPTY)) INTER (v INSERT EMPTY))) = (x'' IN EMPTY))) ==> ((!x''. ((x'' IN ((x INSERT (v INSERT EMPTY)) INTER (x' INSERT EMPTY))) = (x'' IN EMPTY))) ==> ((!x''. ((x'' IN ((x INSERT EMPTY) INTER (x' INSERT (v INSERT EMPTY)))) = (x'' IN EMPTY))) ==> ((~ (v IN (aff (x INSERT (x' INSERT EMPTY))))) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ (v IN (aff (x INSERT (x' INSERT EMPTY)))))) ==> ((x IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((x' IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))))
T c= c==> cFAN c, f0 c, f1 f2 c==> ! c==> * f1 b0 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> * f1 f3 c==> * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> * f1 f4 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cset_of_edge f3 f1 f2 f4 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f3 c= b0 f4 c==> ! c~ c/\ c\/ c= b0 f0 c= b0 f4 c= b0 f3 c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f3 c= b0 f4 c==> c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f0 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f3 c==> caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f4 * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> ! ! c= cIN b1 b0 * b0 b1 c==> cFAN c, f0 c, f1 f2 c==> ! c==> cIN b0 f1 c> cCARD * * * part cset_of_edge b0 f1 f2 cNUMERAL cBIT1 c_0 c==> cIN f3 f1 c==> cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f2 c==> cIN f4 f1 c==> cFINITE * * * part cset_of_edge f3 f1 f2 c==> cIN f4 * * * part cset_of_edge f3 f1 f2 c==> c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> c~ c= f0 f3 c==> c~ c= f0 f4 c==> c~ c= f3 f4 c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f3 part cEMPTY * * part cINSERT f4 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 * * part cINSERT f4 part cEMPTY * * part cINSERT f3 part cEMPTY cIN b0 part cEMPTY c==> ! c= cIN b0 * * part cINTER * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY cIN b0 part cEMPTY c==> c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> c= c~ ccollinear * * part cINSERT f0 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c~ cIN f4 * part caff * * part cINSERT f0 * * part cINSERT f3 part cEMPTY c==> cIN f0 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f3 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY c==> cIN f4 * * part caff_ge * * part cINSERT f0 part cEMPTY * * part cINSERT f3 * * part cINSERT f4 part cEMPTY * f2 * * part cINSERT f3 * * part cINSERT f4 part cEMPTY
+ (!v. ((v IN V) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))), (FAN (x , (V , E))), (((x' INSERT (v INSERT EMPTY)) IN E) /\ (v IN V)), (x' IN V) |- (?e. ((E e) /\ (x' IN ((aff_ge (x INSERT EMPTY)) e))))
T c==> ! c==> cIN b0 f0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> cFAN c, f2 c, f0 f1 c==> c/\ cIN * * part cINSERT f3 * * part cINSERT f4 part cEMPTY f1 cIN f4 f0 c==> cIN f3 f0 c? / c/\ * f1 b0 cIN f3 * * part caff_ge * * part cINSERT f2 part cEMPTY b0
+ (!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) |- ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) /\ ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY)))))))))))))))))))))
T c==> ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c/\ ! c==> * f0 b0 c> cCARD * * * part cset_of_edge b0 f0 f1 cNUMERAL cBIT1 c_0 c==> * f0 f2 c==> * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> * f0 f3 c==> cFINITE * * * part cset_of_edge f2 f0 f1 c==> cset_of_edge f2 f0 f1 f3 c==> c~ ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c==> c~ c= f4 f2 c==> c~ c= f4 f3 c==> c~ c= f2 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f2 c= b0 f3 c==> ! c~ c/\ c\/ c= b0 f4 c= b0 f3 c= b0 f2 c==> ! c~ c/\ c= b0 f4 c\/ c= b0 f2 c= b0 f3 c==> c~ caff * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c==> c= c~ ccollinear * * part cINSERT f4 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY c~ caff * * part cINSERT f4 * * part cINSERT f2 part cEMPTY f3 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f4 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f2 c==> caff_ge * * part cINSERT f4 part cEMPTY * * part cINSERT f2 * * part cINSERT f3 part cEMPTY f3 * f1 * * part cINSERT f2 * * part cINSERT f3 part cEMPTY
- (_3017609 = _3017612), (_3017611 = _3017614) |- ((_3017610 = _3017613) ==> ((((aff_ge _3017612) _3017613) _3017614) \/ (~ (((aff_ge _3017609) _3017610) _3017611))))
T c==> c= f0 f1 c==> c= f2 f3 c==> c= f4 f5 c\/ caff_ge f1 f5 f3 c~ caff_ge f0 f4 f2
- (_3017619 = _3017620) |- ((_3017619 = _3017620) /\ ((collinear _3017620) \/ (~ (collinear _3017619))))
T c==> c= f0 f1 c/\ c= f0 f1 c\/ ccollinear f1 c~ ccollinear f0
- (_3017642 = _3017645), (_3017641 = _3017644) |- ((_3017642 = _3017645) /\ ((~ (_3017643 = _3017646)) \/ ((((set_of_edge _3017641) _3017642) _3017643) = (((set_of_edge _3017644) _3017645) _3017646))))
T c==> c= f0 f1 c==> c= f2 f3 c/\ c= f0 f1 c\/ c~ c= f4 f5 c= * * * part cset_of_edge f2 f0 f4 * * * part cset_of_edge f3 f1 f5
- |- (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t))))))
T c= cGSPEC / * f0 * part cSETSPEC b0 f1 * f0 / / c/\ b0 c= f1 b1
- (v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) |- ((v IN ((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY)))) = T)
T c==> cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY c= cIN f0 * * part caff_ge * * part cINSERT f1 part cEMPTY * * part cINSERT f2 * * part cINSERT f0 part cEMPTY cT
- |- (((!p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) ==> ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)) = ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p))
T c= c==> ! ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0 * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (_3017616 = _3017618) |- ((_3017615 = _3017617) ==> (((aff _3017617) _3017618) \/ (~ ((aff _3017615) _3017616))))
T c==> c= f0 f1 c==> c= f2 f3 c\/ caff f3 f1 c~ caff f2 f0
- (_3017657 = _3017659) |- ((_3017658 = _3017660) ==> ((_3017657 , _3017658) = (_3017659 , _3017660)))
T c==> c= f0 f1 c==> c= f2 f3 c= c, f0 f2 c, f1 f3
- (!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) |- (((!x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = x)) \/ (~ (x'' = v))))) ==> ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = x)) \/ (~ (x'' = v))))) _3017556)) = ((\x''. (((~ (x'' = x)) \/ (~ (x'' = x'))) /\ ((~ (x'' = x)) \/ (~ (x'' = v))))) _3017556))
T c==> ! c~ c/\ c= b0 f0 c\/ c= b0 f1 c= b0 f2 c= c==> ! c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3 * / c/\ c\/ c~ c= b0 f0 c~ c= b0 f1 c\/ c~ c= b0 f0 c~ c= b0 f2 f3
- |- ((!E. (!x. (!V. ((FAN (x , (V , E))) ==> ((!v. ((V v) ==> ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) ==> ((V x') ==> ((E (x' INSERT (v INSERT EMPTY))) ==> ((V v) ==> ((FINITE (((set_of_edge x') V) E)) ==> (((((set_of_edge x') V) E) v) ==> ((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) ==> ((~ (x = x')) ==> ((~ (x = v)) ==> ((~ (x' = v)) ==> ((!x''. (~ (((x'' = x) \/ (x'' = x')) /\ (x'' = v)))) ==> ((!x''. (~ (((x'' = x) \/ (x'' = v)) /\ (x'' = x')))) ==> ((!x''. (~ ((x'' = x) /\ ((x'' = x') \/ (x'' = v))))) ==> ((~ ((aff (x INSERT (x' INSERT EMPTY))) v)) ==> (((~ (collinear (x INSERT (x' INSERT (v INSERT EMPTY))))) = (~ ((aff (x INSERT (x' INSERT EMPTY))) v))) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x) ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) x') ==> ((((aff_ge (x INSERT EMPTY)) (x' INSERT (v INSERT EMPTY))) v) ==> (E (x' INSERT (v INSERT EMPTY))))))))))))))))))))))))) = T)
T c= ! ! ! c==> cFAN c, b1 c, b2 b0 c==> ! c==> * b2 b3 c> cCARD * * * part cset_of_edge b3 b2 b0 cNUMERAL cBIT1 c_0 c==> * b2 f0 c==> * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> * b2 f1 c==> cFINITE * * * part cset_of_edge f0 b2 b0 c==> cset_of_edge f0 b2 b0 f1 c==> c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c==> c~ c= b1 f0 c==> c~ c= b1 f1 c==> c~ c= f0 f1 c==> ! c~ c/\ c\/ c= b3 b1 c= b3 f0 c= b3 f1 c==> ! c~ c/\ c\/ c= b3 b1 c= b3 f1 c= b3 f0 c==> ! c~ c/\ c= b3 b1 c\/ c= b3 f0 c= b3 f1 c==> c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> c= c~ ccollinear * * part cINSERT b1 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY c~ caff * * part cINSERT b1 * * part cINSERT f0 part cEMPTY f1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY b1 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f0 c==> caff_ge * * part cINSERT b1 part cEMPTY * * part cINSERT f0 * * part cINSERT f1 part cEMPTY f1 * b0 * * part cINSERT f0 * * part cINSERT f1 part cEMPTY cT
- |- ((\p. (!x. (((GSPEC (\v. (?y. (((SETSPEC v) (p y)) y)))) x) = (p x)))) p)
T * / ! c= cGSPEC / c? / cSETSPEC b2 * b0 b3 b3 b1 * b0 b1 f0
- (FINITE (((set_of_edge x') V) E)) |- ((FINITE (((set_of_edge x') V) E)) = T)
T c==> cFINITE * * * part cset_of_edge f0 f1 f2 c= cFINITE * * * part cset_of_edge f0 f1 f2 cT
- (~ ((I E) (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- ((~ ((I E) (x' INSERT (v INSERT EMPTY)))) /\ ((I E) (x' INSERT (v INSERT EMPTY))))
T c==> c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY cI f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY
- |- ((!v'. ((~ (V v')) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0))))) = ((!v. (~ (V v))) \/ ((CARD (((set_of_edge v) V) E)) > (NUMERAL (BIT1 _0)))))
T c= ! c\/ c~ * f0 b0 c> cCARD * * * part cset_of_edge f1 f0 f2 cNUMERAL cBIT1 c_0 c\/ ! c~ * f0 b0 c> cCARD * * * part cset_of_edge f1 f0 f2 cNUMERAL cBIT1 c_0
- |- (((!x. ((x IN (\y. (p y))) = (p x))) ==> ((\x. ((x IN (\y. (p y))) = (p x))) x)) = ((\x. ((x IN (\y. (p y))) = (p x))) x))
T c= c==> ! c= cIN b0 / * f0 b1 * f0 b0 * / c= cIN b0 / * f0 b1 * f0 b0 f1 * / c= cIN b0 / * f0 b1 * f0 b0 f1
- |- ((\P. (!x. (((GSPEC (\v. (P (SETSPEC v)))) x) = (P (\p. (\t. (p /\ (x = t)))))))) P)
T * / ! c= cGSPEC / * b0 * part cSETSPEC b2 b1 * b0 / / c/\ b2 c= b1 b3 f0
- (~ F), (~ (E (x' INSERT (v INSERT EMPTY)))), (E (x' INSERT (v INSERT EMPTY))) |- ((~ F) /\ F)
T c==> c~ cF c==> c~ * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c==> * f0 * * part cINSERT f1 * * part cINSERT f2 part cEMPTY c/\ c~ cF cF
