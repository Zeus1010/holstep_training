N Reduction3.dest_triple0_step_rcons
C |- (!f. (!s. (!u. (!v. (!n. ((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))))))))
T c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= cdest_triple0_step f1 f0 c, f2 c, f3 f4 crcons f0 cdest_triple0_rcons f1 f0 c, f2 c, f3 f4
D TRUTH
A |- T
T cT
D BOOL_CASES_AX
A |- (!t. ((t = T) \/ (t = F)))
T c\/ c= f0 cT c= f0 cF
D COND_CLAUSES
A |- (!t1. (!t2. (((((COND T) t1) t2) = t1) /\ ((((COND F) t1) t2) = t2))))
T c/\ c= cCOND cT f0 f1 f0 c= cCOND cF f0 f1 f1
D COND_ELIM_THM
A |- ((P (((COND c) x) y)) = ((c ==> (P x)) /\ ((~ c) ==> (P y))))
T c= * f0 cCOND f1 f2 f3 c/\ c==> f1 * f0 f2 c==> c~ f1 * f0 f3
D LET_DEF
A |- (!f. (!x. (((LET f) x) = (f x))))
T c= cLET f0 f1 * f0 f1
D LET_END_DEF
A |- (!t. ((LET_END t) = t))
T c= cLET_END f0 f0
D Seq.rcons
A |- (!x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z)))))))
T c/\ c= crcons cNIL f0 cCONS f0 cNIL c= crcons cCONS f1 f2 f0 cCONS f1 crcons f2 f0
D Reduction3.dest_triple0_step
A |- (!v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))))
T c= cdest_triple0_step f0 f1 c, f2 c, f3 f4 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b1 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cLAST f1 cnseq f4 cNONE
D Reduction3.dest_triple0_rcons
A |- (!v. (!f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))))
T c= cdest_triple0_rcons f0 f1 c, f2 c, f3 f4 cLET / cLET_END cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b1 f2 cthe cLAST cLAST f1 cnseq f4 cNONE
- |- ((((((next_el f) u0) = u) = (((next_el f) u0) = u)) ==> (((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) t') e'))))) = (((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) t') e')))))
T c= c==> c= c= cnext_el f0 f1 f2 c= cnext_el f0 f1 f2 c==> c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f8 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f6 f8 c==> c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f8 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f6 f8
+ |- ((u0 = (the (LAST (LAST s)))) ==> (?u0. (u0 = (the (LAST (LAST s))))))
T c==> c= f0 cthe cLAST cLAST f1 c? / c= b0 cthe cLAST cLAST f1
+ ((\ns. (ns = ((nseq n) NONE))) ns) |- (ns = ((nseq n) NONE))
T c==> * / c= b0 cnseq f0 cNONE f1 c= f1 cnseq f0 cNONE
- |- ((u0 = u) ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))
T c==> c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL
+ |- ((!s. (!u. (!v. (!n. ((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))))))) = T)
T c= ! ! ! ! c==> c==> c= cflatten b0 cNIL c= b0 cNIL c= cdest_triple0_step f0 b0 c, b1 c, b2 b3 crcons b0 cdest_triple0_rcons f0 b0 c, b1 c, b2 b3 cT
- |- (((!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 b0 b1 f8 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 b0 b1 f8
+ |- (T ==> (?u0. (u0 = (the (LAST (LAST s))))))
T c==> cT c? / c= b0 cthe cLAST cLAST f0
+ |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (b = ((MAP SOME) (((betwn f) u0) u))) |- (((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) b)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))) = ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cCOND c= cflatten f4 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f2 f3 crcons f4 cflatten cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f1 f2 f3 crcons f4 cflatten cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f0 crcons f4 cdest_triple0_rcons f1 f4 c, f3 c, f6 f7 c= cCOND c= cflatten f4 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f2 f3 crcons f4 cflatten cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f1 f2 f3 crcons f4 cflatten cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f1 f2 f3 crcons f4 cdest_triple0_rcons f1 f4 c, f3 c, f6 f7
+ (u0 = (the (LAST (LAST s)))), (ns = ((nseq n) NONE)) |- (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e')))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cnseq f3 cNONE c==> c==> c~ c= cnext_el f4 f0 f5 c= cflatten cCONS cMAP part cSOME cbetwn f4 cthe cLAST cLAST f1 f5 cCONS cCONS cSOME f5 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL f7 c= cCOND c= cnext_el f4 cthe cLAST cLAST f1 f5 cflatten cCONS cCONS cSOME f5 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f4 cthe cLAST cLAST f1 f5 cCONS cCONS cSOME f5 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f4 f0 f5 cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL f7
- |- ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f2 c= cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f9 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 f6 f9
- (((next_el f) u0) = u) |- ((((next_el f) u0) = u) /\ (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- (((!g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b2 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b2 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND b0 b1 b2 f6 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b2 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND b0 b1 b2 f6
+ |- ((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
+ |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (~ ((flatten s) = NIL)), (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)) |- ((~ ((flatten s) = NIL)) /\ ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c==> c~ c= cflatten f0 cNIL c==> c= f1 cthe cLAST cLAST f0 c==> c= f2 cMAP part cSOME cbetwn f3 f1 f4 c==> c= f5 cnseq f6 cNONE c/\ c~ c= cflatten f0 cNIL c= cCOND c= f1 f4 crcons f0 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f1 f4 crcons f0 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f0 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f0 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f0 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)) |- (((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND F) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c= c= cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cCOND c= f0 f4 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL c= cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cCOND cF cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL
- |- (((((next_el f) u0) = u) ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) t') e'))))
T c==> c==> c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f5 f7
+ |- ((\g'. (!t'. (!e'. (((((next_el f) (the (LAST (LAST s)))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cnext_el f0 cthe cLAST cLAST f1 f2 b0 c==> c==> b0 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= cnext_el f0 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f5
- |- ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 b0 b1 f8
- (~ (u0 = u)) |- ((~ (u0 = u)) /\ ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- ((u0 = (the (LAST (LAST s)))) = ((\u0. (u0 = (the (LAST (LAST s))))) u0))
T c= c= f0 cthe cLAST cLAST f1 * / c= b0 cthe cLAST cLAST f1 f0
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)) |- ((~ (u0 = u)) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c~ c= f0 f4 c= cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL
+ (ns = ((nseq n) NONE)) |- ((((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))) = (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ns) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cnseq f1 cNONE c= c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 cnseq f1 cNONE crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f1 c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 f0 crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f1
+ |- ((T ==> (?ns. (ns = ((nseq n) NONE)))) = (?ns. (ns = ((nseq n) NONE))))
T c= c==> cT c? / c= b0 cnseq f0 cNONE c? / c= b0 cnseq f0 cNONE
- |- (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z)))
T c= crcons cCONS f0 f1 f2 cCONS f0 crcons f1 f2
+ (~ ((flatten s) = NIL)) |- (((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND F) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) = ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c==> c~ c= cflatten f0 cNIL c= c= cCOND c= f1 f2 crcons f0 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f1 f2 crcons f0 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cCOND cF cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f2 cflatten cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL c= cCOND c= f1 f2 crcons f0 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f1 f2 crcons f0 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f2 cflatten cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL
+ |- ((((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) /\ ((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) = ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c= c/\ c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)) |- ((~ ((flatten s) = NIL)) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c~ c= cflatten f1 cNIL c= cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL
- |- (((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) t') e'))))
T c==> c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f8 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 f5 f8
+ |- ((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
+ |- (((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) /\ ((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c/\ c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- ((T ==> (?b. (b = ((MAP SOME) (((betwn f) u0) u))))) = (?b. (b = ((MAP SOME) (((betwn f) u0) u)))))
T c= c==> cT c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2 c? / c= b0 cMAP part cSOME cbetwn f0 f1 f2
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cNIL cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL
+ (u0 = (the (LAST (LAST s)))) |- (((u0 = u) ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) t') e'))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c==> c= f0 f2 c= cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= f0 f2 c= cCOND c= cnext_el f6 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= cthe cLAST cLAST f1 f2 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f2 f5 f7
+ (((flatten s) = NIL) ==> (s = NIL)) |- ((((\ns. (ns = ((nseq n) NONE))) ns) ==> (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))) = T)
T c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= c==> * / c= b0 cnseq f1 cNONE f2 c= cLET / cLET_END cCOND c= cflatten f0 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f0 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f0 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f0 cnseq f1 cNONE crcons f0 cdest_triple0_rcons f5 f0 c, f3 c, f4 f1 cT
+ |- (T ==> (?ns. (ns = ((nseq n) NONE))))
T c==> cT c? / c= b0 cnseq f0 cNONE
- |- ((((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) = ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c= c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ (~ ((flatten s) = NIL)) |- (((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) = ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND F) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c==> c~ c= cflatten f0 cNIL c= c= cCOND c= f1 f2 crcons f0 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f1 f2 crcons f0 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f2 cflatten cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL c= cCOND c= f1 f2 crcons f0 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f1 f2 crcons f0 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f0 cCOND cF cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f2 cflatten cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f7 cNONE cCONS cCONS cSOME f4 cNIL cNIL
+ |- (((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND F) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c= c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND cF cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- (((!e'. (((((next_el f) (the (LAST (LAST s)))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) ==> ((\e'. (((((next_el f) (the (LAST (LAST s)))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((next_el f) (the (LAST (LAST s)))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cnext_el f0 cthe cLAST cLAST f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 * / c==> c= c= cnext_el f0 cthe cLAST cLAST f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 f7 * / c==> c= c= cnext_el f0 cthe cLAST cLAST f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 cthe cLAST cLAST f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f0 cthe cLAST cLAST f1 f2 cCONS cCONS cSOME f2 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 f7
- |- ((((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c= c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
+ |- ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)
T * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
+ ((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) |- (((b = ((MAP SOME) (((betwn f) u0) u))) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))) = ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> * / c= b0 cMAP part cSOME cbetwn f0 f1 f2 f3 c= c==> c= f3 cMAP part cSOME cbetwn f0 f1 f2 c= cCOND c= cflatten f4 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f1 f2 crcons f4 cflatten cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f0 f1 f2 crcons f4 cdest_triple0_rcons f0 f4 c, f2 c, f6 f7 c= cCOND c= cflatten f4 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f1 f2 crcons f4 cflatten cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS b0 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f0 f1 f2 crcons f4 cdest_triple0_rcons f0 f4 c, f2 c, f6 f7
- |- ((((((next_el f) u0) = u) = (((next_el f) u0) = u)) ==> (((((next_el f) u0) = u) ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) t') e'))))) = (((((next_el f) u0) = u) ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) t') e')))))
T c= c==> c= c= cnext_el f0 f1 f2 c= cnext_el f0 f1 f2 c==> c==> c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f5 f7 c==> c==> c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f5 f7
- (u0 = u) |- ((u0 = u) /\ (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))
T c==> c= f0 f1 c/\ c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f7
- (((next_el f) u0) = u) |- ((((next_el f) u0) = u) /\ ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
+ (~ ((flatten s) = NIL)) |- (((flatten s) = NIL) = F)
T c==> c~ c= cflatten f0 cNIL c= c= cflatten f0 cNIL cF
- |- ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 f7 b0 f9
+ ((flatten s) = NIL), (((flatten s) = NIL) ==> (s = NIL)) |- (s = NIL)
T c==> c= cflatten f0 cNIL c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= f0 cNIL
+ (((next_el f) u0) = u) |- ((((next_el f) u0) = u) /\ (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
- |- ((\e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f2 c= cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 f6 b0 f9
+ |- ((\g'. (!t'. (!e'. ((((the (LAST (LAST s))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cthe cLAST cLAST f0 f1 b0 c==> c==> b0 c= cflatten cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f4 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f4 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL b2 c= cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f4 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f2 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND b0 b1 b2 f5
+ |- (((!f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) ==> ((\f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)) = ((\f. (!u. (!s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f))
T c= c==> ! ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE * / ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1 * / ! ! ! c= cdest_triple0_rcons b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
+ |- (((!e'. ((((the (LAST (LAST s))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) ==> ((\e'. ((((the (LAST (LAST s))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e')) = ((\e'. ((((the (LAST (LAST s))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cthe cLAST cLAST f0 f1 f2 c==> c==> f2 c= cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 * / c==> c= c= cthe cLAST cLAST f0 f1 f2 c==> c==> f2 c= cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 f7 * / c==> c= c= cthe cLAST cLAST f0 f1 f2 c==> c==> f2 c= cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 f7
- (b = ((MAP SOME) (((betwn f) u0) u))) |- (((the (LAST (LAST s))) = u0) = ((the (LAST (LAST s))) = u0))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cthe cLAST cLAST f4 f2 c= cthe cLAST cLAST f4 f2
+ ((\ns. (ns = ((nseq n) NONE))) ns) |- (((ns = ((nseq n) NONE)) ==> (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))) = (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> * / c= b0 cnseq f0 cNONE f1 c= c==> c= f1 cnseq f0 cNONE c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 cnseq f0 cNONE crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f0 c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 cnseq f0 cNONE crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f0
- |- (((!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) ==> ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 f7 b0 * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 f7 b0 f9 * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 f7 b0 f9
+ |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- (((!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) ==> ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)) = ((\s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s))
T c= c==> ! ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3 * / ! c= cdest_triple0_step f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 crcons b0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 crcons b0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL crcons b0 cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
- (u0 = u) |- ((u0 = u) /\ ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))
T c==> c= f0 f1 c/\ c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL
- (~ (((next_el f) u0) = u)) |- (((~ (u = ((next_el f) u0))) ==> ((u = ((next_el f) u0)) = F)) = ((u = ((next_el f) u0)) = F))
T c==> c~ c= cnext_el f0 f1 f2 c= c==> c~ c= f2 cnext_el f0 f1 c= c= f2 cnext_el f0 f1 cF c= c= f2 cnext_el f0 f1 cF
- |- ((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))
T c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f8 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 f8
+ (((flatten s) = NIL) ==> (s = NIL)) |- ((?ns. (ns = ((nseq n) NONE))) ==> (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c==> c= cflatten f0 cNIL c= f0 cNIL c==> c? / c= b0 cnseq f1 cNONE c= cLET / cLET_END cCOND c= cflatten f0 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 crcons f0 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 b1 f2 crcons f0 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f4 b1 f2 cthe cLAST cLAST f0 cnseq f1 cNONE crcons f0 cdest_triple0_rcons f4 f0 c, f2 c, f3 f1
+ |- (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = (((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) /\ ((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c= c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c/\ c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
- |- ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c==> c==> c~ b0 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND b0 b1 b2 f7
+ (ns = ((nseq n) NONE)) |- ((\ns. (ns = ((nseq n) NONE))) ns)
T c==> c= f0 cnseq f1 cNONE * / c= b0 cnseq f1 cNONE f0
- (~ ((flatten s) = NIL)) |- ((NIL = (flatten s)) = F)
T c==> c~ c= cflatten f0 cNIL c= c= cNIL cflatten f0 cF
+ |- ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)
T * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
- |- ((((((next_el f) u0) = u) ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ==> (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e')))) = (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e'))))
T c= c==> c==> c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6 c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6
+ |- ((!u. (!v. (!n. ((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))))) = T)
T c= ! ! ! c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= cdest_triple0_step f1 f0 c, b0 c, b1 b2 crcons f0 cdest_triple0_rcons f1 f0 c, b0 c, b1 b2 cT
- (~ ((flatten s) = NIL)) |- (F = ((flatten s) = NIL))
T c==> c~ c= cflatten f0 cNIL c= cF c= cflatten f0 cNIL
+ (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((u0 = (the (LAST (LAST s)))) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s))))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cnseq f1 cNONE c==> c==> c= cflatten f2 cNIL c= f2 cNIL c==> c= f3 cthe cLAST cLAST f2 c= cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b0 f4 crcons f2 cflatten cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 b0 f4 crcons f2 cflatten cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL crcons f2 cflatten cCONS b1 cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cMAP part cSOME cbetwn f6 b0 f4 cthe cLAST cLAST f2 crcons f2 cdest_triple0_rcons f6 f2 c, f4 c, f5 f1
+ (u0 = (the (LAST (LAST s)))) |- ((the (LAST (LAST s))) = u0)
T c==> c= f0 cthe cLAST cLAST f1 c= cthe cLAST cLAST f1 f0
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cNIL cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cdest_triple0_rcons f3 f1 c, f4 c, f7 f6
+ |- ((\s. (!n. ((((dest_triple0_rcons f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))) s)
T * / ! c= cdest_triple0_rcons f0 b0 c, f1 c, f2 b1 cLET / cLET_END cCOND c= cflatten b0 cNIL cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b3 f1 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cCOND c= cnext_el f0 b3 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cflatten cCONS b4 cCONS cCONS cSOME f1 cNIL cCONS b2 cCONS cCONS cSOME f2 cNIL cNIL cMAP part cSOME cbetwn f0 b3 f1 cthe cLAST cLAST b0 cnseq b1 cNONE f3
+ (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- (((~ ((flatten s) = NIL)) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) = ((((flatten s) = NIL) ==> (((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) /\ ((~ ((flatten s) = NIL)) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))))
T c==> c= f0 cnseq f1 cNONE c==> c==> c= cflatten f2 cNIL c= f2 cNIL c= c==> c~ c= cflatten f2 cNIL c= cCOND c= f3 f4 crcons f2 cflatten cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f3 f4 crcons f2 cflatten cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL crcons f2 cCOND c= cflatten f2 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cthe cLAST cLAST f2 f4 cflatten cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f2 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f2 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL c/\ c==> c= cflatten f2 cNIL c= cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cNIL crcons f2 cCOND c= cflatten f2 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cthe cLAST cLAST f2 f4 cflatten cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f2 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f2 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL c==> c~ c= cflatten f2 cNIL c= cCOND c= f3 f4 crcons f2 cflatten cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f3 f4 crcons f2 cflatten cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f4 cNIL cCONS f0 cCONS cCONS cSOME f5 cNIL cNIL crcons f2 cCOND c= cflatten f2 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cthe cLAST cLAST f2 f4 cflatten cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 cthe cLAST cLAST f2 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f6 cthe cLAST cLAST f2 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f1 cNONE cCONS cCONS cSOME f5 cNIL cNIL
+ |- (((rcons NIL) z) = ((CONS z) NIL))
T c= crcons cNIL f0 cCONS f0 cNIL
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)) |- ((((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c= c==> c==> c~ c= cnext_el f3 f0 f4 c= cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL c= cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL c= cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL
- (((next_el f) u0) = u) |- (u = ((next_el f) u0))
T c==> c= cnext_el f0 f1 f2 c= f2 cnext_el f0 f1
- ((flatten s) = NIL) |- (NIL = (flatten s))
T c==> c= cflatten f0 cNIL c= cNIL cflatten f0
+ |- ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND F) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND cF cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- (NIL = (flatten s)) |- ((flatten s) = NIL)
T c==> c= cNIL cflatten f0 c= cflatten f0 cNIL
+ |- ((!n. ((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))) = T)
T c= ! c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= cdest_triple0_step f1 f0 c, f2 c, f3 b0 crcons f0 cdest_triple0_rcons f1 f0 c, f2 c, f3 b0 cT
+ (((next_el f) u0) = u) |- ((((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND T) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c= cnext_el f0 f1 f2 c= c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND cT cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c= cnseq f4 cNONE f5 c= cnseq f4 cNONE f5
+ |- ((((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))) /\ ((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) = ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c= c/\ c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
+ |- ((ns = ((nseq n) NONE)) ==> (?ns. (ns = ((nseq n) NONE))))
T c==> c= f0 cnseq f1 cNONE c? / c= b0 cnseq f1 cNONE
+ (((next_el f) u0) = u) |- ((((next_el f) u0) = u) = T)
T c==> c= cnext_el f0 f1 f2 c= c= cnext_el f0 f1 f2 cT
+ (u0 = u) |- ((u0 = u) = T)
T c==> c= f0 f1 c= c= f0 f1 cT
- |- ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))
T c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
+ |- ((\x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))))) x)
T * / ! ! c/\ c= crcons cNIL b2 cCONS b2 cNIL c= crcons cCONS b0 b1 b2 cCONS b0 crcons b1 b2 f0
+ |- ((\t'. (!e'. ((((the (LAST (LAST s))) = u) = g') ==> ((g' ==> ((flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cthe cLAST cLAST f0 f1 f2 c==> c==> f2 c= cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f5 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL b1 c= cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 b0 b1 f6
+ (~ (((next_el f) u0) = u)) |- ((((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND F) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= cnext_el f0 f1 f2 c= c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND cF cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
+ (u0 = (the (LAST (LAST s)))) |- ((\u0. (u0 = (the (LAST (LAST s))))) u0)
T c==> c= f0 cthe cLAST cLAST f1 * / c= b0 cthe cLAST cLAST f1 f0
+ |- (((((flatten s) = NIL) ==> (((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) /\ ((~ ((flatten s) = NIL)) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))) = ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))))
T c= c/\ c==> c= cflatten f0 cNIL c= cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL c==> c~ c= cflatten f0 cNIL c= cCOND c= f6 f1 crcons f0 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 f6 f1 crcons f0 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL c= cCOND c= cflatten f0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cNIL cCOND c= f6 f1 crcons f0 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 f6 f1 crcons f0 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cCOND c= cflatten f0 cNIL cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cthe cLAST cLAST f0 f1 cflatten cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f0 f1 cCONS cCONS cSOME f1 cNIL cCONS cnseq f4 cNONE cCONS cCONS cSOME f3 cNIL cNIL
- |- (((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) t') e'))))
T c==> c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f8 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 f6 f8
+ |- (((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))) = T)
T c= c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= cdest_triple0_step f1 f0 c, f2 c, f3 f4 crcons f0 cdest_triple0_rcons f1 f0 c, f2 c, f3 f4 cT
- (~ (u0 = u)) |- (((~ (u = u0)) ==> ((u = u0) = F)) = ((u = u0) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
- (b = ((MAP SOME) (((betwn f) u0) u))) |- ((((flatten s) = NIL) ==> (s = NIL)) = (((flatten s) = NIL) ==> (s = NIL)))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= c==> c= cflatten f4 cNIL c= f4 cNIL c==> c= cflatten f4 cNIL c= f4 cNIL
+ (~ (((next_el f) u0) = u)) |- ((~ (((next_el f) u0) = u)) /\ (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= cnext_el f0 f1 f2 c/\ c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
+ |- (((!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) ==> ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f)) = ((\f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE))))))) f))
T c= c==> ! ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1 * / ! ! ! c= cdest_triple0_step b0 b2 c, b1 c, f0 b3 cLET / cLET_END cCOND c= cflatten b2 cNIL cCONS cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b5 b1 crcons b2 cflatten cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cCOND c= cnext_el b0 b5 b1 crcons b2 cflatten cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL crcons b2 cflatten cCONS b6 cCONS cCONS cSOME b1 cNIL cCONS b4 cCONS cCONS cSOME f0 cNIL cNIL cMAP part cSOME cbetwn b0 b5 b1 cthe cLAST cLAST b2 cnseq b3 cNONE f1
+ (~ (u0 = u)) |- ((u0 = u) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
- |- (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))
T c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f9 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f8 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 f7 f9
+ |- ((\n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))) n)
T * / c= cdest_triple0_step f0 f1 c, f2 c, f3 b0 cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b2 f2 crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f0 b2 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b3 cCONS cCONS cSOME f2 cNIL cCONS b1 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f0 b2 f2 cthe cLAST cLAST f1 cnseq b0 cNONE f4
+ |- (((g = g') ==> ((g' ==> (t = t')) ==> (((~ g') ==> (e = e')) ==> ((((COND g) t) e) = (((COND g') t') e'))))) = T)
T c= c==> c= f0 f1 c==> c==> f1 c= f2 f3 c==> c==> c~ f1 c= f4 f5 c= cCOND f0 f2 f4 cCOND f1 f3 f5 cT
+ (~ (u0 = u)) |- (((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND F) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c~ c= f0 f1 c= c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= f0 f1 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND cF cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 b0 b1 f7
+ (((next_el f) u0) = u) |- ((((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (((COND T) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c= cnext_el f0 f1 f2 c= c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND cT cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- ((!v. (!n. ((((flatten s) = NIL) ==> (s = NIL)) ==> ((((dest_triple0_step f) s) (u , (v , n))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))))) = T)
T c= ! ! c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= cdest_triple0_step f1 f0 c, f2 c, b0 b1 crcons f0 cdest_triple0_rcons f1 f0 c, f2 c, b0 b1 cT
- |- ((((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c= c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ (u0 = u) |- ((((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (((COND T) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c= f0 f1 c= c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND cT cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
+ (u0 = (the (LAST (LAST s)))), (ns = ((nseq n) NONE)) |- (((~ (u0 = u)) ==> ((((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) e')))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cnseq f3 cNONE c==> c==> c~ c= f0 f4 c= cCOND c= cnext_el f5 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL f7 c= cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f5 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f5 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f3 cNONE cCONS cCONS cSOME f6 cNIL cNIL cCOND c= f0 f4 cflatten cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL f7
+ (b = ((MAP SOME) (((betwn f) u0) u))) |- ((b = ((MAP SOME) (((betwn f) u0) u))) /\ (?b. (b = ((MAP SOME) (((betwn f) u0) u)))))
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c/\ c= f0 cMAP part cSOME cbetwn f1 f2 f3 c? / c= b0 cMAP part cSOME cbetwn f1 f2 f3
+ |- (((!x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))))) ==> ((\x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))))) x)) = ((\x. (!t. (!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))))) x))
T c= c==> ! ! ! c/\ c= crcons cNIL b2 cCONS b2 cNIL c= crcons cCONS b0 b1 b2 cCONS b0 crcons b1 b2 * / ! ! c/\ c= crcons cNIL b2 cCONS b2 cNIL c= crcons cCONS b0 b1 b2 cCONS b0 crcons b1 b2 f0 * / ! ! c/\ c= crcons cNIL b2 cCONS b2 cNIL c= crcons cCONS b0 b1 b2 cCONS b0 crcons b1 b2 f0
- |- ((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- ((\v. (!f. (!u. (!s. (!n. ((((dest_triple0_step f) s) (u , (v , n))) = ((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)))))))) v)
T * / ! ! ! ! c= cdest_triple0_step b1 b3 c, b2 c, b0 b4 cLET / cLET_END cCOND c= cflatten b3 cNIL cCONS cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b6 b2 crcons b3 cflatten cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cCOND c= cnext_el b1 b6 b2 crcons b3 cflatten cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL crcons b3 cflatten cCONS b7 cCONS cCONS cSOME b2 cNIL cCONS b5 cCONS cCONS cSOME b0 cNIL cNIL cMAP part cSOME cbetwn b1 b6 b2 cthe cLAST cLAST b3 cnseq b4 cNONE f0
+ (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((?u0. (u0 = (the (LAST (LAST s))))) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s))))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cnseq f1 cNONE c==> c==> c= cflatten f2 cNIL c= f2 cNIL c==> c? / c= b0 cthe cLAST cLAST f2 c= cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b0 f3 crcons f2 cflatten cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b0 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b1 cCONS cCONS cSOME f3 cNIL cCONS f0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b0 f3 cthe cLAST cLAST f2 crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f1
+ (~ (((next_el f) u0) = u)) |- ((((next_el f) u0) = u) = F)
T c==> c~ c= cnext_el f0 f1 f2 c= c= cnext_el f0 f1 f2 cF
+ (u0 = (the (LAST (LAST s)))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- (((!x. (((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) x) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))) ==> ((?b. (b = ((MAP SOME) (((betwn f) u0) u)))) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))) = ((?b. (b = ((MAP SOME) (((betwn f) u0) u)))) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cnseq f3 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c= c==> ! c==> * / c= b1 cMAP part cSOME cbetwn f4 f0 f5 b0 c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f0 f5 crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f4 f0 f5 crcons f1 cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL crcons f1 cflatten cCONS b1 cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f4 f0 f5 crcons f1 cdest_triple0_rcons f4 f1 c, f5 c, f6 f3 c==> c? / c= b0 cMAP part cSOME cbetwn f4 f0 f5 c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f0 f5 crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f4 f0 f5 crcons f1 cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f4 f0 f5 crcons f1 cdest_triple0_rcons f4 f1 c, f5 c, f6 f3 c==> c? / c= b0 cMAP part cSOME cbetwn f4 f0 f5 c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cNIL cLET / cLET_END cCOND c= f0 f5 crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f4 f0 f5 crcons f1 cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f6 cNIL cNIL cMAP part cSOME cbetwn f4 f0 f5 crcons f1 cdest_triple0_rcons f4 f1 c, f5 c, f6 f3
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) b)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cNIL cLET / cLET_END cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL f2 crcons f1 cdest_triple0_rcons f3 f1 c, f4 c, f7 f6
+ (u0 = (the (LAST (LAST s)))), (b = ((MAP SOME) (((betwn f) u0) u))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- ((((flatten s) = NIL) ==> (((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) /\ ((~ ((flatten s) = NIL)) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = ((rcons s) (((COND ((flatten s) = NIL)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND ((the (LAST (LAST s))) = u)) (flatten ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) (the (LAST (LAST s)))) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS ((MAP SOME) (((betwn f) (the (LAST (LAST s)))) u))) ((CONS ((CONS (SOME u)) NIL)) ((CONS ((nseq n) NONE)) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cMAP part cSOME cbetwn f3 f0 f4 c==> c= f5 cnseq f6 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c/\ c==> c= cflatten f1 cNIL c= cCONS cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cNIL crcons f1 cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL c==> c~ c= cflatten f1 cNIL c= cCOND c= f0 f4 crcons f1 cflatten cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 f0 f4 crcons f1 cflatten cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f4 cNIL cCONS f5 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cCOND c= cflatten f1 cNIL cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cthe cLAST cLAST f1 f4 cflatten cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f3 cthe cLAST cLAST f1 f4 cflatten cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL cflatten cCONS cMAP part cSOME cbetwn f3 cthe cLAST cLAST f1 f4 cCONS cCONS cSOME f4 cNIL cCONS cnseq f6 cNONE cCONS cCONS cSOME f7 cNIL cNIL
- |- (((!g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f7 * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f7
+ |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
+ (u0 = (the (LAST (LAST s)))), (ns = ((nseq n) NONE)), (((flatten s) = NIL) ==> (s = NIL)) |- (((\b. (b = ((MAP SOME) (((betwn f) u0) u)))) b) ==> ((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cthe cLAST cLAST f1 c==> c= f2 cnseq f3 cNONE c==> c==> c= cflatten f1 cNIL c= f1 cNIL c==> * / c= b0 cMAP part cSOME cbetwn f4 f0 f5 f6 c= cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f7 cNIL cNIL cNIL cLET / cLET_END cCOND c= f0 f5 crcons f1 cflatten cCONS f2 cCONS cCONS cSOME f7 cNIL cNIL cCOND c= cnext_el f4 f0 f5 crcons f1 cflatten cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f7 cNIL cNIL crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f5 cNIL cCONS f2 cCONS cCONS cSOME f7 cNIL cNIL cMAP part cSOME cbetwn f4 f0 f5 crcons f1 cdest_triple0_rcons f4 f1 c, f5 c, f7 f3
+ (~ (((next_el f) u0) = u)) |- ((((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (((COND F) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c==> c~ c= cnext_el f0 f1 f2 c= c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cCOND cF cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
+ (ns = ((nseq n) NONE)) |- ((((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ns) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))) = (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c==> c= f0 cnseq f1 cNONE c= c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 f0 crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f1 c= cLET / cLET_END cCOND c= cflatten f2 cNIL cCONS cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f3 crcons f2 cflatten cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 b1 f3 crcons f2 cflatten cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS b2 cCONS cCONS cSOME f3 cNIL cCONS b0 cCONS cCONS cSOME f4 cNIL cNIL cMAP part cSOME cbetwn f5 b1 f3 cthe cLAST cLAST f2 cnseq f1 cNONE crcons f2 cdest_triple0_rcons f5 f2 c, f3 c, f4 f1
- |- ((((u0 = u) ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) e')))) = (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) e'))))
T c= c==> c==> c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f6 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f6 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f6 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f6
+ (b = ((MAP SOME) (((betwn f) u0) u))) |- (((MAP SOME) (((betwn f) u0) u)) = b)
T c==> c= f0 cMAP part cSOME cbetwn f1 f2 f3 c= cMAP part cSOME cbetwn f1 f2 f3 f0
+ |- (((?ns. (ns = ((nseq n) NONE))) ==> (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n)))))) = (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ((nseq n) NONE)) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c= c==> c? / c= b0 cnseq f0 cNONE c= cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 b1 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f4 b1 f2 cthe cLAST cLAST f1 cnseq f0 cNONE crcons f1 cdest_triple0_rcons f4 f1 c, f2 c, f3 f0 c= cLET / cLET_END cCOND c= cflatten f1 cNIL cCONS cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f2 crcons f1 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 b1 f2 crcons f1 cflatten cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f1 cflatten cCONS b2 cCONS cCONS cSOME f2 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f4 b1 f2 cthe cLAST cLAST f1 cnseq f0 cNONE crcons f1 cdest_triple0_rcons f4 f1 c, f2 c, f3 f0
+ |- (?u0. (u0 = (the (LAST (LAST s)))))
T c? / c= b0 cthe cLAST cLAST f0
+ |- ((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= f0 f1 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
+ |- (((!z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))) ==> ((\z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))) z)) = ((\z. ((((rcons NIL) z) = ((CONS z) NIL)) /\ (((rcons ((CONS x) t)) z) = ((CONS x) ((rcons t) z))))) z))
T c= c==> ! c/\ c= crcons cNIL b0 cCONS b0 cNIL c= crcons cCONS f0 f1 b0 cCONS f0 crcons f1 b0 * / c/\ c= crcons cNIL b0 cCONS b0 cNIL c= crcons cCONS f0 f1 b0 cCONS f0 crcons f1 b0 f2 * / c/\ c= crcons cNIL b0 cCONS b0 cNIL c= crcons cCONS f0 f1 b0 cCONS f0 crcons f1 b0 f2
+ |- (((((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s))))) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))) = (((LET (\ns. (LET_END (((COND ((flatten s) = NIL)) ((CONS (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) NIL)) ((LET (\u0. (LET_END ((LET (\b. (LET_END (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))) ((MAP SOME) (((betwn f) u0) u)))))) (the (LAST (LAST s)))))))) ns) = ((rcons s) (((dest_triple0_rcons f) s) (u , (v , n))))))
T c= c= cCOND c= cflatten f0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b0 f1 crcons f0 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 b0 f1 crcons f0 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cflatten cCONS b1 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f4 b0 f1 cthe cLAST cLAST f0 crcons f0 cdest_triple0_rcons f4 f0 c, f1 c, f3 f5 c= cLET / cLET_END cCOND c= cflatten f0 cNIL cCONS cflatten cCONS cCONS cSOME f1 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cNIL cLET / cLET_END cLET / cLET_END cCOND c= b1 f1 crcons f0 cflatten cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 b1 f1 crcons f0 cflatten cCONS cCONS cSOME f1 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL crcons f0 cflatten cCONS b2 cCONS cCONS cSOME f1 cNIL cCONS b0 cCONS cCONS cSOME f3 cNIL cNIL cMAP part cSOME cbetwn f4 b1 f1 cthe cLAST cLAST f0 f2 crcons f0 cdest_triple0_rcons f4 f0 c, f1 c, f3 f5
- |- ((((COND (x = x)) y) z) = y)
T c= cCOND c= f0 f0 f1 f2 f1
+ (~ (u0 = u)) |- ((~ (u0 = u)) /\ ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = ((rcons s) (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cCOND c= f0 f1 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- (((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e')))
T c==> c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6
- (u = u0) |- (u0 = u)
T c==> c= f0 f1 c= f1 f0
- |- ((((next_el f) u0) = u) ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))
T c==> c= cnext_el f0 f1 f2 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- ((~ (((next_el f) u0) = u)) ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))
T c==> c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 f8
- |- (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e')))
T c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f2 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7
- |- ((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))
T c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- (((!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 b0 b1 * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 b0 b1 f8 * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b0 c==> c==> c~ f3 c= crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 crcons f4 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f4 cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND f3 b0 b1 f8
- ((flatten s) = NIL), (((flatten s) = NIL) ==> (s = NIL)) |- (((flatten s) = NIL) /\ (s = NIL))
T c==> c= cflatten f0 cNIL c==> c==> c= cflatten f0 cNIL c= f0 cNIL c/\ c= cflatten f0 cNIL c= f0 cNIL
- |- (((!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f3 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 b0 b1 * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f3 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 b0 b1 f7 * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f3 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 b0 b1 f7
- |- (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))
T c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f8 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 f8
- (u = ((next_el f) u0)) |- (((next_el f) u0) = u)
T c==> c= f0 cnext_el f1 f2 c= cnext_el f1 f2 f0
- |- ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 b0 b1 f8
- |- (((!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) ==> ((\e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e')) = ((\e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 f8 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 f8
- |- ((\g'. (!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= f0 f1 b0 c==> c==> b0 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b1 c==> c==> c~ b0 c= cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL b2 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND b0 b1 b2 f6
- |- ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- ((flatten s) = NIL) |- (T = ((flatten s) = NIL))
T c==> c= cflatten f0 cNIL c= cT c= cflatten f0 cNIL
- |- (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) e')))
T c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL f7
- |- ((((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e')))) = (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) e'))))
T c= c==> c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f7
- (~ (((next_el f) u0) = u)) |- ((~ (((next_el f) u0) = u)) /\ ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))
T c==> c~ c= cnext_el f0 f1 f2 c/\ c~ c= cnext_el f0 f1 f2 c= cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f3 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- (((flatten s) = NIL) ==> (s = NIL)) |- ((((flatten s) = NIL) ==> (s = NIL)) = T)
T c==> c==> c= cflatten f0 cNIL c= f0 cNIL c= c==> c= cflatten f0 cNIL c= f0 cNIL cT
- (u0 = (the (LAST (LAST s)))) |- ((((flatten s) = NIL) ==> (s = NIL)) = (((flatten s) = NIL) ==> (s = NIL)))
T c==> c= f0 cthe cLAST cLAST f1 c= c==> c= cflatten f1 cNIL c= f1 cNIL c==> c= cflatten f1 cNIL c= f1 cNIL
- |- (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) e')))
T c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f6
- (~ (u0 = u)) |- (~ (u = u0))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ (u0 = u)) |- ((~ (u0 = u)) /\ ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c~ c= f0 f1 c/\ c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- ((\e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))) e')
T * / c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ f2 c= cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 f5 b0 f8
- (u0 = (the (LAST (LAST s)))) |- ((((nseq n) NONE) = ns) = (((nseq n) NONE) = ns))
T c==> c= f0 cthe cLAST cLAST f1 c= c= cnseq f2 cNONE f3 c= cnseq f2 cNONE f3
- (~ (((next_el f) u0) = u)) |- ((~ (((next_el f) u0) = u)) /\ (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c~ c= cnext_el f0 f1 f2 c/\ c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
- |- ((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f2 cNIL cCONS f5 cCONS cCONS cSOME f6 cNIL cNIL
- |- ((((u0 = u) = (u0 = u)) ==> (((u0 = u) ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) t') e'))))) = (((u0 = u) ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f4 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f7 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 f4 f7 c==> c==> c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f4 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f7 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 f4 f7
- (~ (u0 = u)) |- ((u = u0) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- |- ((\t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e'))))))) t')
T * / ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c==> c==> c~ f3 c= cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 b0 b1 f7
- |- (((!t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) ==> ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t')) = ((\t'. (!e'. (((u0 = u) = g') ==> ((g' ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e'))))))) t'))
T c= c==> ! ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 b0 b1 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 b0 b1 f7 * / ! c==> c= c= f0 f1 f2 c==> c==> f2 c= cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b0 c==> c==> c~ f2 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND f2 b0 b1 f7
- |- (((!g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f6 * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f6
- |- ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))))) g')
T * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b1 c==> c==> c~ b0 c= cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f2 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND b0 b1 b2 f6
- (~ (((next_el f) u0) = u)) |- (~ (u = ((next_el f) u0)))
T c==> c~ c= cnext_el f0 f1 f2 c~ c= f2 cnext_el f0 f1
- (~ (((next_el f) u0) = u)) |- ((u = ((next_el f) u0)) = F)
T c==> c~ c= cnext_el f0 f1 f2 c= c= f2 cnext_el f0 f1 cF
- |- (((u0 = u) ==> ((flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) t') e'))))
T c==> c==> c= f0 f1 c= cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f4 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL f7 c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f5 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f6 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 f4 f7
- (~ ((flatten s) = NIL)) |- (((~ (NIL = (flatten s))) ==> ((NIL = (flatten s)) = F)) = ((NIL = (flatten s)) = F))
T c==> c~ c= cflatten f0 cNIL c= c==> c~ c= cNIL cflatten f0 c= c= cNIL cflatten f0 cF c= c= cNIL cflatten f0 cF
- |- (((!e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))) ==> ((\e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))) e')) = ((\e'. (((u0 = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f2 c= cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 f6 b0 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f2 c= cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 f6 b0 f9 * / c==> c= c= f0 f1 f2 c==> c==> f2 c= crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f2 c= cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= f0 f1 crcons f3 cflatten cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f7 f0 f1 crcons f3 cflatten cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f8 cCONS cCONS cSOME f1 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f2 f6 b0 f9
- (~ ((flatten s) = NIL)) |- (~ (NIL = (flatten s)))
T c==> c~ c= cflatten f0 cNIL c~ c= cNIL cflatten f0
- |- (((\b. (f b)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- ((((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) ==> ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))) = ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))))
T c= c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL c= cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f2 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL
- |- ((((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (u0 = u)) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) (((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))))
T c= cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= f0 f1 cflatten cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cCOND c= cnext_el f4 f0 f1 cflatten cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL cflatten cCONS f5 cCONS cCONS cSOME f1 cNIL cCONS f2 cCONS cCONS cSOME f3 cNIL cNIL
- |- (((!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) ==> ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) e')) = ((\e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> ((flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ g') ==> ((flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = e')) ==> ((((COND (((next_el f) u0) = u)) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = (((COND g') t') e')))))) e'))
T c= c==> ! c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 f8 * / c==> c= c= cnext_el f0 f1 f2 f3 c==> c==> f3 c= cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f6 c==> c==> c~ f3 c= cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b0 c= cCOND c= cnext_el f0 f1 f2 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cflatten cCONS f7 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND f3 f6 b0 f8
- |- ((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))
T c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL
- |- ((((((next_el f) u0) = u) ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) ==> (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) e')))) = (((~ (((next_el f) u0) = u)) ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) e'))))
T c= c==> c==> c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7 c==> c==> c~ c= cnext_el f0 f1 f2 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL f7
- |- (((!g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) ==> ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g')) = ((\g'. (!t'. (!e'. (((((next_el f) u0) = u) = g') ==> ((g' ==> (((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) = t')) ==> (((~ g') ==> (((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) = e')) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = (((COND g') t') e')))))))) g'))
T c= c==> ! ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c==> c==> c~ b0 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND b0 b1 b2 * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c==> c==> c~ b0 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND b0 b1 b2 f7 * / ! ! c==> c= c= cnext_el f0 f1 f2 b0 c==> c==> b0 c= crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b1 c==> c==> c~ b0 c= crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL b2 c= cCOND c= cnext_el f0 f1 f2 crcons f3 cflatten cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL crcons f3 cflatten cCONS f6 cCONS cCONS cSOME f2 cNIL cCONS f4 cCONS cCONS cSOME f5 cNIL cNIL cCOND b0 b1 b2 f7
- (ns = ((nseq n) NONE)) |- ((((flatten s) = NIL) ==> (s = NIL)) = (((flatten s) = NIL) ==> (s = NIL)))
T c==> c= f0 cnseq f1 cNONE c= c==> c= cflatten f2 cNIL c= f2 cNIL c==> c= cflatten f2 cNIL c= f2 cNIL
- |- ((((u0 = u) = (u0 = u)) ==> (((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) t') e'))))) = (((u0 = u) ==> (((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))) = t')) ==> (((~ (u0 = u)) ==> ((((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))))) = e')) ==> ((((COND (u0 = u)) ((rcons s) (flatten ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL))))) (((COND (((next_el f) u0) = u)) ((rcons s) (flatten ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))) ((rcons s) (flatten ((CONS b) ((CONS ((CONS (SOME u)) NIL)) ((CONS ns) ((CONS ((CONS (SOME v)) NIL)) NIL)))))))) = (((COND (u0 = u)) t') e')))))
T c= c==> c= c= f0 f1 c= f0 f1 c==> c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f8 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 f5 f8 c==> c==> c= f0 f1 c= crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f5 c==> c==> c~ c= f0 f1 c= cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL f8 c= cCOND c= f0 f1 crcons f2 cflatten cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= cnext_el f6 f0 f1 crcons f2 cflatten cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL crcons f2 cflatten cCONS f7 cCONS cCONS cSOME f1 cNIL cCONS f3 cCONS cCONS cSOME f4 cNIL cNIL cCOND c= f0 f1 f5 f8
