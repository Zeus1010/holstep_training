N Aq8.last_parts_z1_not_y1
C |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))))))) ==> (~ ((LAST p) = y1)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cnext_el f2 f4 f6 c/\ c= cprev_el f2 f5 f7 c/\ cMEM f8 cparts f0 f2 cMEM f7 f8 c~ c= cLAST f8 f6
D TRUTH
A |- T
T cT
D NOT_CLAUSES
A |- ((!t. ((~ (~ t)) = t)) /\ (((~ T) = F) /\ ((~ F) = T)))
T c/\ ! c= c~ c~ b0 b0 c/\ c= c~ cT cF c= c~ cF cT
D o_DEF
A |- (!f. (!g. ((f o g) = (\x. (f (g x))))))
T c= * * part co f0 f1 / * f0 * f1 b0
D I_DEF
A |- (I = (\x. x))
T c= part cI / b0
D FST
A |- (!x. (!y. ((FST (x , y)) = x)))
T c= cFST c, f0 f1 f0
D SND
A |- (!x. (!y. ((SND (x , y)) = y)))
T c= cSND c, f0 f1 f1
D Fan.POWER
A |- ((!f. (((POWER f) (NUMERAL _0)) = I)) /\ (!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))))
T c/\ ! c= * * part cPOWER b0 cNUMERAL c_0 part cI ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0
D Fan.POWER_0
A |- (!f. (((POWER f) (NUMERAL _0)) = I))
T c= * * part cPOWER f0 cNUMERAL c_0 part cI
D Seq2.next_prev_id
A |- (!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x))))
T c==> cuniq f0 c= cnext_el f0 cprev_el f0 f1 f1
D List_hypermap.dart_in_face
A |- (!d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d)))))
T c= cMEM f0 clist_of_darts f1 cMEM f0 cfind_face f1 f0
D List_hypermap.uniq_find_face
A |- (!d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d)))))
T c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1
D List_hypermap.mem_find_face_imp_faces_eq
A |- (!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2))))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 cfind_face f0 f2 c= cfind_face f0 f1 cfind_face f0 f2
D Tame_defs2.good_list
A |- (!L. ((good_list L) = ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))))))
T c= cgood_list f0 c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0
D Tame_defs2.normal_list
A |- (!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))))))
T c= cnormal_list f0 f1 c/\ cuniq cflatten f1 c/\ call / c~ c= b0 cNIL f1 c/\ call * part cf_last f0 f1 c/\ call * part cloop_list f0 f1 ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1
D Tame_defs2.ntrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= cntrans f0 f1 f2 f3 f4 cFST cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.rtrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))))
T c= crtrans f0 f1 f2 f3 f4 cSND cPOWER * * part ctransform_list f0 f3 f4 c, f1 f2
D Tame_defs2.ytrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))))
T c= cytrans f0 f1 f2 f3 f4 cl'y f0 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.ztrans
A |- (!L. (!N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))))
T c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
D Tame_defs2.marked_list
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))))))
T c= cmarked_list f0 f1 f2 f3 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM f3 f2 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ c= cnext_el f2 f3 cf_list f0 f3 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 f3
D Tame_list.MEM_LAST
A |- (!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s)))
T c==> c~ c= f0 cNIL cMEM cLAST f0 f0
D Tame_list.uniq_flatten_uniq
A |- (!L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s))))
T c==> c/\ cuniq cflatten f0 cMEM f1 f0 cuniq f1
D Tame_list.parts_uniq_nonnil
A |- (!L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2
D Tame_list.parts_fst
A |- (!L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p)))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM f4 f3 c= cFST f4 cFST cHD f3
D Tame_list.normal_list_parts_next_last
A |- (!L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p))))))))
T c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c= cnext_el f2 cLAST f3 cf_list f0 cLAST f3
D Tame_list.QRDYXYJ_list
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x)))))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c/\ c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c/\ c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c/\ c~ c= cFST cl'y f0 f2 f3 cFST f3 c~ c= cFST cl'y f0 f2 f3 cFST cl'z f0 f1 f2 f3
D Pwssrat.f_list_power_next_el
A |- (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 f2 f1 cPOWER * part cnext_el cfind_face f0 f1 f2 f1
D Pplhulj.marked_list_of_dart
A |- (!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))))
T c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0
D Hojodcm.ytrans_mem_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.mem_ztrans_rtrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
D Hojodcm.z_not_eq_ytrans_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0
D Hojodcm.PPLHULJ_v0
A |- (!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= f4 cfind_face f0 f3 c= f5 cnext_el f4 f3 c/\ cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 c/\ cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f4 c< cindexf f5 cytrans f0 f1 f2 f3 cNUMERAL c_0 f4 cindexf f5 cztrans f0 f1 f2 f3 cNUMERAL c_0 f4
D Aq1.FST_EQ_PREV_ZTRANS_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 f3 f4 c= cprev_el f2 f4 f5 c= cFST f5 cFST f4
D Aq1.FST_EQ_NEXT_YTRANS_v0
A |- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c= cl'y f0 f2 f3 f4 c= cFST cnext_el f2 f4 cFST f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f7 f1 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f7 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ |- ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)
T * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
+ |- ((\d. (!L. (((MEM d) (list_of_darts L)) = ((MEM d) ((find_face L) d))))) d)
T * / ! c= cMEM b0 clist_of_darts b1 cMEM b0 cfind_face b1 b0 f0
+ |- (((!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) ==> ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i)) = ((\i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))) i))
T c= c==> ! c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4 * / c= cntrans f0 f1 f2 f3 b0 cFST cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c= cl'y f0 b0 b1 f2 c= cFST cnext_el b0 f2 cFST f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c~ c= cLAST f8 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ c= f4 cNIL c==> c~ c= f5 cNIL c==> c~ cfinal_list f1 f5 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq f5 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f6 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f4 f7 c==> c= cnext_el f5 f6 cf_list f1 f6 c==> c= cnext_el f5 f3 f7 c==> c= cnext_el f5 cLAST f4 cf_list f1 cLAST f4 c==> c= cnext_el f5 cprev_el f5 cztrans f1 f0 f5 f6 cNUMERAL c_0 cztrans f1 f0 f5 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f6 f6 f8 c==> c= cprev_el f5 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f5 f6 f3 c==> c= cl'z f1 f0 f5 f6 f2 c==> c= cfind_face f1 f6 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f6 f5 c==> cMEM f6 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f5 c==> cMEM f2 f10 c==> cMEM f2 f5 c==> cMEM f9 f4 c==> cMEM f4 cparts f1 f5 c==> cMEM f5 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f5 f6 c==> cmarked_list f1 f0 f5 f6 c==> ! c==> cMEM b0 f4 cMEM b0 f5 c==> c= cFST f9 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f4 cFST f2 c==> c< cl'm f1 f5 f6 cl'q f1 f0 f5 f6 c==> c< cl'q f1 f0 f5 f6 csizel cparts f1 f5 c==> c< cSUC cl'm f1 f5 f6 c+ cl'p f1 f0 f5 f6 cl'q f1 f0 f5 f6 c==> c~ c= cFST f3 cFST f6 c==> c~ c= cFST f3 cFST f2 cF
+ |- (((!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))) ==> ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))) x)) = ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))) x))
T c= c==> ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c= cprev_el f2 f3 f4 c= cFST f4 cFST f3 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c= cprev_el f2 f3 f4 c= cFST f4 cFST f3 f5 * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= cl'z f0 f1 f2 b0 f3 c= cprev_el f2 f3 f4 c= cFST f4 cFST f3 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c~ c= cLAST f8 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f6 f7 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f6 c==> cMEM f6 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cnext_el f4 cLAST f6 cf_list f1 cLAST f6 c==> c~ c= f4 cNIL c==> cuniq f6 c==> c~ c= f6 cNIL c==> ! c==> cMEM b0 f6 cMEM b0 f4 c==> c= cFST f9 cFST cHD f6 c==> cMEM cLAST f6 f6 c==> c= cFST cLAST f6 cFST cHD f6 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f6 cFST f2 c==> c< cl'm f1 f4 f5 cl'q f1 f0 f4 f5 c==> c< cl'q f1 f0 f4 f5 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f5 c+ cl'p f1 f0 f4 f5 cl'q f1 f0 f4 f5 c==> c~ c= cFST f3 cFST f5 c==> c~ c= cFST f3 cFST f2 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- |- ((t /\ T) = t)
T c= c/\ f0 cT f0
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'z f0 f1 b0 b1 f2 c= cprev_el b0 f2 f3 c= cFST f3 cFST f2 f4
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 c~ c= cLAST f4 f5 c~ c= cLAST f4 f5
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (LAST p)) p) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> cMEM cLAST f0 f0 c~ c= cLAST f0 f8
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f2 c==> c= cl'z f0 f5 f1 f4 f6 c==> c/\ c= cnext_el f1 f2 f3 c/\ c= cprev_el f1 f6 f7 c/\ cMEM f8 cparts f0 f1 cMEM f7 f8 c==> cmarked_list f0 f5 f1 f4 c~ c= cLAST f8 f3
- |- (((!x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) ==> ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)) = ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x))
T c= c==> ! ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ c= f4 cNIL c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f5 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f6 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f5 f7 c==> c= cnext_el f4 f6 cf_list f1 f6 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cLAST f5 cf_list f1 cLAST f5 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f6 cNUMERAL c_0 cztrans f1 f0 f4 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f6 f6 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f6 f3 c==> c= cl'z f1 f0 f4 f6 f2 c==> c= cfind_face f1 f6 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f6 f4 c==> cMEM f6 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f5 c==> cMEM f5 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f6 c==> cmarked_list f1 f0 f4 f6 c==> c~ c= f5 cNIL c==> ! c==> cMEM b0 f5 cMEM b0 f4 c==> c= cFST f9 cFST cHD f5 c==> cMEM cLAST f5 f5 c==> c= cFST cLAST f5 cFST cHD f5 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f5 cFST f2 c==> c< cl'm f1 f4 f6 cl'q f1 f0 f4 f6 c==> c< cl'q f1 f0 f4 f6 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f6 c+ cl'p f1 f0 f4 f6 cl'q f1 f0 f4 f6 c==> c~ c= cFST f3 cFST f6 c==> c~ c= cFST f3 cFST f2 cF
- |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0
- |- ((((~ (~ F)) = F) ==> (F ==> (~ (~ F)))) = (F ==> (~ (~ F))))
T c= c==> c= c~ c~ cF cF c==> cF c~ c~ cF c==> cF c~ c~ cF
+ |- (((!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) ==> ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N)) = ((\N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))))) N))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1 * / ! ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c/\ c= b3 cfind_face f0 b2 c= b4 cnext_el b3 b2 c/\ cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 c/\ cMEM cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 c< cindexf b4 cytrans f0 b0 b1 b2 cNUMERAL c_0 b3 cindexf b4 cztrans f0 b0 b1 b2 cNUMERAL c_0 b3 f1
- |- (((!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) ==> ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)) = ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r))
T c= c==> ! c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1 * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
- |- ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)
T * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
+ ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) /\ ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c/\ c< cindexf f0 f1 f2 cindexf f0 f3 f2 c==> c= cfind_face f4 f1 f2 c==> c= cf_list f4 f1 cnext_el f2 f1 c==> c= cnext_el f5 f6 cf_list f4 f6 c==> c~ c= f5 cNIL c==> cuniq f7 c==> c~ c= f7 cNIL c==> ! c==> cMEM b0 f7 cMEM b0 f5 c==> c= cFST f8 cFST cHD f7 c==> cMEM f6 f7 c==> c= cFST f6 cFST cHD f7 c==> c= cFST f6 cFST f1 c==> c= cFST cHD f7 cFST f3 c==> c< cl'm f4 f5 f9 cl'q f4 f10 f5 f9 c==> c< cl'q f4 f10 f5 f9 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f9 c+ cl'p f4 f10 f5 f9 cl'q f4 f10 f5 f9 c==> c~ c= cFST f1 cFST f9 c= cFST f1 cFST f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f2 c~ c= cLAST f8 f4
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f6 f7 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f6 c==> cMEM f6 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> c= cfind_face f1 f3 f10 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cnext_el f4 cLAST f6 cf_list f1 cLAST f6 c==> c~ c= f4 cNIL c==> cuniq f6 c==> c~ c= f6 cNIL c==> ! c==> cMEM b0 f6 cMEM b0 f4 c==> c= cFST f9 cFST cHD f6 c==> cMEM cLAST f6 f6 c==> c= cFST cLAST f6 cFST cHD f6 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f6 cFST f2 c==> c< cl'm f1 f4 f5 cl'q f1 f0 f4 f5 c==> c< cl'q f1 f0 f4 f5 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f5 c+ cl'p f1 f0 f4 f5 cl'q f1 f0 f4 f5 c==> c~ c= cFST f3 cFST f5 c==> c~ c= cFST f3 cFST f2 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- |- ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L)
T * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0
- |- (((!L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) ==> ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)) = ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L))
T c= c==> ! ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0 * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
- (~ (p = NIL)) |- ((NIL = p) = F)
T c==> c~ c= f0 cNIL c= c= cNIL f0 cF
+ |- ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))
T c==> c= cfind_face f0 f1 f2 c==> c= cf_list f0 f1 cnext_el f2 f1 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c~ c= f3 cNIL c==> cuniq f5 c==> c~ c= f5 cNIL c==> ! c==> cMEM b0 f5 cMEM b0 f3 c==> c= cFST f6 cFST cHD f5 c==> cMEM f4 f5 c==> c= cFST f4 cFST cHD f5 c==> c= cFST f4 cFST f1 c==> c= cFST cHD f5 cFST f7 c==> c< cl'm f0 f3 f8 cl'q f0 f9 f3 f8 c==> c< cl'q f0 f9 f3 f8 csizel cparts f0 f3 c==> c< cSUC cl'm f0 f3 f8 c+ cl'p f0 f9 f3 f8 cl'q f0 f9 f3 f8 c==> c~ c= cFST f1 cFST f8 c= cFST f1 cFST f7
- (~ ((FST y) = (FST z))) |- (((~ ((FST z) = (FST y))) ==> (((FST z) = (FST y)) = F)) = (((FST z) = (FST y)) = F))
T c==> c~ c= cFST f0 cFST f1 c= c==> c~ c= cFST f1 cFST f0 c= c= cFST f1 cFST f0 cF c= c= cFST f1 cFST f0 cF
- |- ((\x. (((LET f) x) = (f x))) x)
T * / c= cLET f0 b0 * f0 b0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f6 f5 c==> c= cprev_el f1 f7 f8 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f7 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f4 c==> cMEM f4 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f2 f1 f3 cNUMERAL c_0 cztrans f0 f2 f1 f3 cNUMERAL c_0 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c~ c= f7 f6 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f0 f3 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f0 f6 f9 c==> c= cf_list f0 f6 cnext_el f9 f6 c==> c= cnext_el f1 cLAST f4 cf_list f0 cLAST f4 c==> c~ c= f1 cNIL c==> cuniq f4 c==> c~ c= f4 cNIL c==> ! c==> cMEM b0 f4 cMEM b0 f1 c==> c= cFST f8 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f5 cFST f6 c==> c= cFST cHD f4 cFST f7 c==> c< cl'm f0 f1 f3 cl'q f0 f2 f1 f3 c==> c< cl'q f0 f2 f1 f3 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f3 c+ cl'p f0 f2 f1 f3 cl'q f0 f2 f1 f3 c==> c~ c= cFST f6 cFST f3 c==> c~ c= cFST f6 cFST f7 cF
- |- ((\z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))) z)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 b0 c= cprev_el b3 b0 f0 c= cFST f0 cFST b0 f1
+ |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
+ ((FST y1) = (FST (HD p))) |- ((((FST (HD p)) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))) = (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))
T c==> c= cFST f0 cFST cHD f1 c= c==> c= cFST cHD f1 cFST f2 c==> c= cFST cHD f1 cFST f3 c==> c< cl'm f4 f5 f6 cl'q f4 f7 f5 f6 c==> c< cl'q f4 f7 f5 f6 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f6 c+ cl'p f4 f7 f5 f6 cl'q f4 f7 f5 f6 c==> c~ c= cFST f2 cFST f6 c= cFST f2 cFST f3 c==> c= cFST f0 cFST f2 c==> c= cFST cHD f1 cFST f3 c==> c< cl'm f4 f5 f6 cl'q f4 f7 f5 f6 c==> c< cl'q f4 f7 f5 f6 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f6 c+ cl'p f4 f7 f5 f6 cl'q f4 f7 f5 f6 c==> c~ c= cFST f2 cFST f6 c= cFST f2 cFST f3
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c= cprev_el b2 f0 f1 c= cFST f1 cFST f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c= cprev_el b2 f0 f1 c= cFST f1 cFST f0 f2 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c= cprev_el b2 f0 f1 c= cFST f1 cFST f0 f2
+ ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))
T c==> cs_flag_list f0 f1 f2 f3 c/\ cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
+ |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f1 c==> c= cnext_el f0 f2 cf_list f3 f2 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f1 ce_list f2 c==> cs_flag_list f3 f1 f0 f2 c==> cuniq clist_of_darts f3 c==> call / c~ c= b0 cNIL f3 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> cuniq f4 c==> cMEM f2 clist_of_darts f3 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f3 f1 c==> call * part cloop_list f3 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f1 c==> cuniq f0 c==> c= cnext_el f0 cprev_el f0 cztrans f3 f1 f0 f2 cNUMERAL c_0 cztrans f3 f1 f0 f2 cNUMERAL c_0 c==> cMEM f5 f0 c==> cMEM f6 f0 c==> c~ c= f5 f6 c==> c= cnext_el f4 f2 f7 c==> c= cfind_face f3 f2 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f3 f6 f4 c==> c= cf_list f3 f6 cnext_el f4 f6 c==> c= cnext_el f0 f8 cf_list f3 f8 c==> c~ c= f0 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f0 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f3 f0 f2 cl'q f3 f1 f0 f2 c==> c< cl'q f3 f1 f0 f2 csizel cparts f3 f0 c==> c< cSUC cl'm f3 f0 f2 c+ cl'p f3 f1 f0 f2 cl'q f3 f1 f0 f2 c==> c~ c= cFST f6 cFST f2 c= cFST f6 cFST f5
- (((all a) s) = (!x. (((MEM x) s) ==> (a x)))) |- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s))
T c==> c= call f0 f1 ! c==> cMEM b0 f1 * f0 b0 c= ! c==> cMEM b0 f1 * f0 b0 call f0 f1
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c~ c= cLAST f0 f1 c~ c= cLAST f0 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c~ c= cLAST f8 f4
+ |- ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)
T * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))))) L))
T c= c==> ! ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0 * / ! ! ! c= cmarked_list b0 b1 b2 b3 c/\ cis_restricted chypermap_of_list b0 c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 c/\ cMEM b3 b2 c/\ cLET / cLET_END c/\ call part cuniq b4 call / c> csizel cfilter * part cMEM b5 b4 cNUMERAL cBIT1 c_0 cflatten b4 cquotient_list b0 b1 c/\ c= cnext_el b2 b3 cf_list b0 b3 c/\ cLET / cLET_END cfinal_list b0 b4 cfind_list b1 ce_list b3 c/\ c==> cfinal_list b0 b2 cflag_list b0 b1 c==> c~ cfinal_list b0 b2 cs_flag_list b0 b1 b2 b3 f0
- |- ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)
T * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) = T)
T c==> cmarked_list f0 f1 f2 f3 c= cmarked_list f0 f1 f2 f3 cT
+ |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))))
T c==> c= cnext_el f0 f1 cf_list f2 f1 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f3 ce_list f1 c==> cs_flag_list f2 f3 f0 f1 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cuniq f4 c==> cMEM f1 clist_of_darts f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f2 f3 c==> call * part cloop_list f2 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten f3 c==> cuniq f0 c==> c= cnext_el f0 cprev_el f0 cztrans f2 f3 f0 f1 cNUMERAL c_0 cztrans f2 f3 f0 f1 cNUMERAL c_0 c==> cMEM f5 f0 c==> cMEM f6 f0 c==> c~ c= f5 f6 c==> c= cnext_el f4 f1 f7 c==> c= cfind_face f2 f1 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f2 f6 f4 c==> c= cf_list f2 f6 cnext_el f4 f6 c==> c= cnext_el f0 f8 cf_list f2 f8 c==> c~ c= f0 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f0 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f2 f0 f1 cl'q f2 f3 f0 f1 c==> c< cl'q f2 f3 f0 f1 csizel cparts f2 f0 c==> c< cSUC cl'm f2 f0 f1 c+ cl'p f2 f3 f0 f1 cl'q f2 f3 f0 f1 c==> c~ c= cFST f6 cFST f1 c= cFST f6 cFST f5
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- |- ((((find_face L) x) = f) = ((\f. (((find_face L) x) = f)) f))
T c= c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- |- (((!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) ==> ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)) = ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2))
T c= c==> ! c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST y) = (FST x))) /\ (~ ((FST y) = (FST z))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST y) = (FST x))) /\ (~ ((FST y) = (FST z))))))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> c/\ c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c/\ c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c/\ c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c/\ c~ c= cFST f5 cFST f6 c~ c= cFST f5 cFST f4 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c/\ c/\ c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c/\ c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c/\ c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c/\ c~ c= cFST f5 cFST f6 c~ c= cFST f5 cFST f4 c~ c= cLAST f0 f7
- |- (((!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) ==> ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s)) = ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s))
T c= c==> ! c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1 * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((\w. (((next_el ((find_face L) x)) x) = w)) w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c/\ * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) = T)
T c==> cis_restricted chypermap_of_list f0 c= cis_restricted chypermap_of_list f0 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- (((!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p))))) ==> ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p))))) p)) = ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p))))) p))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c= cnext_el f2 cLAST b0 cf_list f0 cLAST b0 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c= cnext_el f2 cLAST b0 cf_list f0 cLAST b0 f3 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c= cnext_el f2 cLAST b0 cf_list f0 cLAST b0 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f4 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f6 c==> c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ c= cLAST f8 f5
- |- (((!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) ==> ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)) = ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x))
T c= c==> ! c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3 * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
- |- (((!x. (((LET f) x) = (f x))) ==> ((\x. (((LET f) x) = (f x))) x)) = ((\x. (((LET f) x) = (f x))) x))
T c= c==> ! c= cLET f0 b0 * f0 b0 * / c= cLET f0 b0 * f0 b0 f1 * / c= cLET f0 b0 * f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (~ ((LAST p) = y1))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 ! c==> * / c= cfind_face f1 f5 b1 b0 c~ c= cLAST f9 f6
+ |- ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p)
T * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0
- ((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) |- (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) = T)
T c==> c< cSUC cl'm f0 f1 f2 c+ cl'p f0 f3 f1 f2 cl'q f0 f3 f1 f2 c= c< cSUC cl'm f0 f1 f2 c+ cl'p f0 f3 f1 f2 cl'q f0 f3 f1 f2 cT
- |- (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))
T c= cf_last f0 f1 c= cnext_el f1 cLAST f1 cf_list f0 cLAST f1
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST (LAST p)) = (FST (HD p))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c= cFST cLAST f0 cFST cHD f0 c~ c= cLAST f0 f8
+ |- ((\r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))) r)
T * / ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 cMEM b1 cparts f0 b0 c/\ cuniq b0 c/\ c~ c= b0 cNIL c/\ cuniq b1 c/\ c~ c= b1 cNIL ! c==> cMEM b2 b1 cMEM b2 b0 f2
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ (((next_el r) y) = y1) |- ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c==> c= cprev_el f0 f3 f4 c==> cMEM f5 cparts f6 f0 c==> cMEM f4 f5 c==> cis_restricted chypermap_of_list f6 c==> cnormal_list f6 f7 c==> cMEM f0 f7 c==> cMEM f8 f0 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f6 f7 c==> c= cnext_el f0 f8 cf_list f6 f8 c==> cLET / cLET_END cfinal_list f6 b0 cfind_list f7 ce_list f8 c==> cs_flag_list f6 f7 f0 f8 c==> cuniq clist_of_darts f6 c==> call / c~ c= b0 cNIL f6 c==> ! c==> cMEM b0 clist_of_darts f6 cMEM c, cSND b0 cFST b0 clist_of_darts f6 c==> cuniq f9 c==> cMEM f8 clist_of_darts f6 c==> cuniq cflatten f7 c==> call / c~ c= b0 cNIL f7 c==> call * part cf_last f6 f7 c==> call * part cloop_list f6 f7 c==> ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f6 b0 * part cset_of_list cflatten f7 c==> cuniq f0 c==> c= cnext_el f0 cprev_el f0 cztrans f6 f7 f0 f8 cNUMERAL c_0 cztrans f6 f7 f0 f8 cNUMERAL c_0 c==> cMEM f3 f0 c==> cMEM f1 f0 c==> c~ c= f3 f1 c==> c= cnext_el f9 f8 f10 c==> c= cfind_face f6 f8 f9 c==> cMEM f1 f9 c==> cMEM f3 f9 c==> c< cindexf f10 f1 f9 cindexf f10 f3 f9 c==> c= cfind_face f6 f1 f9 c==> c= cf_list f6 f1 cnext_el f9 f1 c==> c= cnext_el f0 f2 cf_list f6 f2 c==> c~ c= f0 cNIL c==> cuniq f5 c==> c~ c= f5 cNIL c==> ! c==> cMEM b0 f5 cMEM b0 f0 c==> c= cFST f4 cFST cHD f5 c==> cMEM f2 f5 c==> c= cFST f2 cFST cHD f5 c==> c= cFST f2 cFST f1 c==> c= cFST cHD f5 cFST f3 c==> c< cl'm f6 f0 f8 cl'q f6 f7 f0 f8 c==> c< cl'q f6 f7 f0 f8 csizel cparts f6 f0 c==> c< cSUC cl'm f6 f0 f8 c+ cl'p f6 f7 f0 f8 cl'q f6 f7 f0 f8 c==> c~ c= cFST f1 cFST f8 c= cFST f1 cFST f3
+ |- (((!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) ==> ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)) = ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c~ c= cLAST f8 f5
+ |- ((\d. (!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) d))))) x)
T * / ! c==> cuniq clist_of_darts b1 cuniq cfind_face b1 b0 f0
- |- (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))
T c= cMEM f0 ccat f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c~ c= cztrans f0 f1 b0 b1 cNUMERAL c_0 cytrans f0 f1 b0 b1 cNUMERAL c_0
+ ((MEM (LAST p)) p) |- (((MEM (LAST p)) p) = T)
T c==> cMEM cLAST f0 f0 c= cMEM cLAST f0 f0 cT
+ |- (((!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) ==> ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r)) = ((\r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))) r))
T c= c==> ! ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2 * / ! ! c= crtrans f0 f1 b0 b1 b2 cSND cPOWER * * part ctransform_list f0 b1 b2 c, f1 b0 f2
+ ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
+ |- (((!L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) ==> ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)) = ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L))
T c= c==> ! ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0 * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p))))))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ cfinal_list f0 f1 c/\ c= cl'y f0 f1 f2 f3 c/\ c= cl'z f0 f4 f1 f2 f5 c/\ c= cnext_el f1 f3 f6 c/\ c= cprev_el f1 f5 f7 c/\ cMEM f8 cparts f0 f1 cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c~ c= cLAST f8 f6
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST (LAST p)) = (FST (HD p))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c/\ c= cFST cLAST f0 cFST cHD f0 c~ c= cLAST f0 f8
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((?f. (((find_face L) x) = f)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c? / c= cfind_face f1 f5 b0 c~ c= cLAST f9 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c/\ c~ c= f4 cNIL c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c~ c= cLAST f7 f6
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cmarked_list f0 f7 f1 f6 c/\ c= cprev_el f1 f4 f5 c==> cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> c= cLAST f8 f3 cF
+ (((find_face L) y) = f) |- ((\x. (((POWER (next_el ((find_face L) y))) (NUMERAL _0)) ((next_el ((find_face L) y)) x))) = (\x. ((next_el f) x)))
T c==> c= cfind_face f0 f1 f2 c= / cPOWER * part cnext_el cfind_face f0 f1 cNUMERAL c_0 cnext_el cfind_face f0 f1 b0 / cnext_el f2 b0
+ (~ ((final_list L) r)) |- ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c/\ c~ cfinal_list f0 f1 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f0 f4 c==> call * part cloop_list f0 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f4 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f4 f1 f2 cNUMERAL c_0 cztrans f0 f4 f1 f2 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f3 f1 c==> c~ c= f5 f3 c==> c= cnext_el f9 f2 f10 c==> c= cfind_face f0 f2 f9 c==> cMEM f3 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f3 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f3 f9 c==> c= cf_list f0 f3 cnext_el f9 f3 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> c~ c= f1 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f1 c==> c= cFST f7 cFST cHD f8 c==> cMEM f6 f8 c==> c= cFST f6 cFST cHD f8 c==> c= cFST f6 cFST f3 c==> c= cFST cHD f8 cFST f5 c==> c< cl'm f0 f1 f2 cl'q f0 f4 f1 f2 c==> c< cl'q f0 f4 f1 f2 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f2 c+ cl'p f0 f4 f1 f2 cl'q f0 f4 f1 f2 c==> c~ c= cFST f3 cFST f2 c= cFST f3 cFST f5
- |- ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)
T * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c~ c= cLAST f8 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
+ (uniq (flatten N)) |- ((uniq (flatten N)) = T)
T c==> cuniq cflatten f0 c= cuniq cflatten f0 cT
+ |- ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))
T c==> cuniq f0 c==> cMEM f1 clist_of_darts f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f2 f3 c==> call * part cloop_list f2 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 cprev_el f4 cztrans f2 f3 f4 f1 cNUMERAL c_0 cztrans f2 f3 f4 f1 cNUMERAL c_0 c==> cMEM f5 f4 c==> cMEM f6 f4 c==> c~ c= f5 f6 c==> c= cnext_el f0 f1 f7 c==> c= cfind_face f2 f1 f0 c==> cMEM f6 f0 c==> cMEM f5 f0 c==> c< cindexf f7 f6 f0 cindexf f7 f5 f0 c==> c= cfind_face f2 f6 f0 c==> c= cf_list f2 f6 cnext_el f0 f6 c==> c= cnext_el f4 f8 cf_list f2 f8 c==> c~ c= f4 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f4 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f2 f4 f1 cl'q f2 f3 f4 f1 c==> c< cl'q f2 f3 f4 f1 csizel cparts f2 f4 c==> c< cSUC cl'm f2 f4 f1 c+ cl'p f2 f3 f4 f1 cl'q f2 f3 f4 f1 c==> c~ c= cFST f6 cFST f1 c= cFST f6 cFST f5
+ |- (((!L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) ==> ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L)) = ((\L. (!y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))))) L))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b0 cMEM b1 clist_of_darts b0 c= cPOWER * part cf_list b0 b2 b1 cPOWER * part cnext_el cfind_face b0 b1 b2 b1 f0
+ |- ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)
T * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'y f0 f2 f3 f4 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cnext_el f2 f4 f6 c==> c= cprev_el f2 f5 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c~ c= cLAST f8 f6
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((FST y) = (FST x))), (~ ((FST y) = (FST z))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), (((((l'q L) N) r) x) < (sizel ((parts L) r))), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= cFST f4 cFST f5 c==> c~ c= cFST f4 cFST f6 c==> c~ c= f6 f4 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f5 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f4 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f6 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f5 cf_list f3 f5 c==> c= cnext_el f1 f4 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f5 cNUMERAL c_0 cztrans f3 f2 f1 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f5 f5 f9 c==> c= cprev_el f1 f6 f8 c==> c= cf_list f3 f4 cnext_el f10 f4 c==> c= cl'y f3 f1 f5 f4 c==> c= cl'z f3 f2 f1 f5 f6 c==> c= cfind_face f3 f5 f10 c==> c= cfind_face f3 f4 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cSUC cl'm f3 f1 f5 c+ cl'p f3 f2 f1 f5 cl'q f3 f2 f1 f5 c==> c< cindexf f9 f4 f10 cindexf f9 f6 f10 c==> c< cl'm f3 f1 f5 cl'q f3 f2 f1 f5 c==> c< cl'q f3 f2 f1 f5 csizel cparts f3 f1 c==> cMEM f5 f1 c==> cMEM f5 clist_of_darts f3 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f6 f10 c==> cMEM f6 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f5 c==> cmarked_list f3 f2 f1 f5 c~ c= cLAST f0 f7
- |- (((!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) ==> ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)) = ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1))
T c= c==> ! ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- |- ((\r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))) r)
T * / c= ccore f0 b0 cMAP * * part co part cFST part cHD cparts f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cf_list f1 f3 cnext_el f9 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cnext_el f4 cLAST f10 cf_list f1 cLAST f10 c~ c= cLAST f10 f6
+ |- ((\s. (((uniq (flatten N)) /\ ((MEM s) N)) ==> (uniq s))) r)
T * / c==> c/\ cuniq cflatten f0 cMEM b0 f0 cuniq b0 f1
+ |- ((t ==> T) = T)
T c= c==> f0 cT cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (z = y)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c~ c= f6 f4 c~ c= cLAST f8 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))))) /\ (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f7 c/\ cMEM f1 f7 c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f7 c/\ cMEM f1 f7 c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- (((!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) ==> ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x)) = ((\d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) d2))) ==> (((find_face L) y) = ((find_face L) d2))))) x))
T c= c==> ! ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1 * / ! c==> c/\ cuniq clist_of_darts b1 cMEM f0 cfind_face b1 b0 c= cfind_face b1 f0 cfind_face b1 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> c= cLAST f8 f3 cF
+ |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))
T c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f1 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 cprev_el f4 cztrans f0 f3 f4 f2 cNUMERAL c_0 cztrans f0 f3 f4 f2 cNUMERAL c_0 c==> cMEM f5 f4 c==> cMEM f6 f4 c==> c~ c= f5 f6 c==> c= cnext_el f1 f2 f7 c==> c= cfind_face f0 f2 f1 c==> cMEM f6 f1 c==> cMEM f5 f1 c==> c< cindexf f7 f6 f1 cindexf f7 f5 f1 c==> c= cfind_face f0 f6 f1 c==> c= cf_list f0 f6 cnext_el f1 f6 c==> c= cnext_el f4 f8 cf_list f0 f8 c==> c~ c= f4 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f4 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f4 f2 cl'q f0 f3 f4 f2 c==> c< cl'q f0 f3 f4 f2 csizel cparts f0 f4 c==> c< cSUC cl'm f0 f4 f2 c+ cl'p f0 f3 f4 f2 cl'q f0 f3 f4 f2 c==> c~ c= cFST f6 cFST f2 c= cFST f6 cFST f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cf_list f1 f3 cnext_el f9 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cnormal_list f1 f0 c/\ cMEM f4 f0 cMEM f10 cparts f1 f4 c= cnext_el f4 cLAST f10 cf_list f1 cLAST f10 c~ c= cLAST f10 f6
+ |- ((\L. (!s. (((uniq (flatten L)) /\ ((MEM s) L)) ==> (uniq s)))) N)
T * / ! c==> c/\ cuniq cflatten b0 cMEM b1 b0 cuniq b1 f0
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((FST y) = (FST x))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), (((((l'q L) N) r) x) < (sizel ((parts L) r))), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((FST y) = (FST z))) ==> F)
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= cFST f4 cFST f5 c==> c~ c= f6 f4 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f5 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f4 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f6 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f5 cf_list f3 f5 c==> c= cnext_el f1 f4 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f5 cNUMERAL c_0 cztrans f3 f2 f1 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f5 f5 f9 c==> c= cprev_el f1 f6 f8 c==> c= cf_list f3 f4 cnext_el f10 f4 c==> c= cl'y f3 f1 f5 f4 c==> c= cl'z f3 f2 f1 f5 f6 c==> c= cfind_face f3 f5 f10 c==> c= cfind_face f3 f4 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cSUC cl'm f3 f1 f5 c+ cl'p f3 f2 f1 f5 cl'q f3 f2 f1 f5 c==> c< cindexf f9 f4 f10 cindexf f9 f6 f10 c==> c< cl'm f3 f1 f5 cl'q f3 f2 f1 f5 c==> c< cl'q f3 f2 f1 f5 csizel cparts f3 f1 c==> cMEM f5 f1 c==> cMEM f5 clist_of_darts f3 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f6 f10 c==> cMEM f6 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f5 c==> cmarked_list f3 f2 f1 f5 c==> c~ c= cFST f4 cFST f6 cF
+ |- ((\N. (!r. (!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cztrans f0 b0 b1 b2 b3 cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 f1
+ (~ (r = NIL)) |- ((~ (r = NIL)) /\ ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))
T c==> c~ c= f0 cNIL c/\ c~ c= f0 cNIL c==> cuniq f1 c==> c~ c= f1 cNIL c==> ! c==> cMEM b0 f1 cMEM b0 f0 c==> c= cFST f2 cFST cHD f1 c==> cMEM f3 f1 c==> c= cFST f3 cFST cHD f1 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f1 cFST f5 c==> c< cl'm f6 f0 f7 cl'q f6 f8 f0 f7 c==> c< cl'q f6 f8 f0 f7 csizel cparts f6 f0 c==> c< cSUC cl'm f6 f0 f7 c+ cl'p f6 f8 f0 f7 cl'q f6 f8 f0 f7 c==> c~ c= cFST f4 cFST f7 c= cFST f4 cFST f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c~ c= cLAST f8 f6
+ |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c/\ c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c/\ c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c/\ c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c/\ c~ c= cFST cl'y f0 f2 f3 cFST f3 c~ c= cFST cl'y f0 f2 f3 cFST cl'z f0 f1 f2 f3 c~ c= cLAST f4 f5 c~ c= cLAST f4 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c/\ cMEM f3 f9 c/\ cMEM f2 f9 c< cindexf f7 f3 f9 cindexf f7 f2 f9 c~ c= cLAST f10 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f6 f1 f4 f7 c==> cmarked_list f0 f6 f1 f4 c==> c= cnext_el f1 f5 f3 c==> c= cprev_el f1 f7 f8 c==> cMEM f2 cparts f0 f1 c==> cMEM f8 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f6 c==> cMEM f1 f6 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f6 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f6 ce_list f4 c==> cs_flag_list f0 f6 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f6 c==> call / c~ c= b0 cNIL f6 c==> call * part cf_last f0 f6 c==> call * part cloop_list f0 f6 c==> ! c==> cMEM b0 cflatten f6 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f6 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f6 f1 f4 cNUMERAL c_0 cztrans f0 f6 f1 f4 cNUMERAL c_0 c==> cMEM f7 f1 c==> cMEM f5 f1 c==> c~ c= f7 f5 c==> c= cnext_el f9 f4 f10 c==> c= cfind_face f0 f4 f9 c==> cMEM f5 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f5 f9 cindexf f10 f7 f9 c==> c= cfind_face f0 f5 f9 c==> c= cf_list f0 f5 cnext_el f9 f5 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f8 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f5 c==> c= cFST cHD f2 cFST f7 c==> c< cl'm f0 f1 f4 cl'q f0 f6 f1 f4 c==> c< cl'q f0 f6 f1 f4 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f4 c+ cl'p f0 f6 f1 f4 cl'q f0 f6 f1 f4 c==> c~ c= cFST f5 cFST f4 c==> c~ c= cFST f5 cFST f7 cF
+ |- (((!x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) ==> ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0)))) = ((\x. (!s. ((uniq s) ==> (((next_el s) ((prev_el s) x)) = x)))) (((((ztrans L) N) r) x) (NUMERAL _0))))
T c= c==> ! ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0 * / ! c==> cuniq b1 c= cnext_el b1 cprev_el b1 b0 b0 cztrans f0 f1 f2 f3 cNUMERAL c_0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- |- (((!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) ==> ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)) = ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s))
T c= c==> ! c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1 * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> cuniq cfind_face f0 f2 c~ c= cLAST f8 f4
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c~ c= cLAST f0 f8
- |- (((!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) ==> ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)) = ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i))
T c= c==> ! c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4 * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
+ |- ((((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) ==> (~ ((LAST p) = y1))) = ((good_list L) ==> (~ ((LAST p) = y1))))
T c= c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c~ c= cLAST f1 f2 c==> cgood_list f0 c~ c= cLAST f1 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cnext_el f1 f5 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f8 f1 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f4 f1 c==> cMEM f7 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f4 c==> cmarked_list f0 f8 f1 f4 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f4 cNUMERAL c_0 cztrans f0 f8 f1 f4 cNUMERAL c_0 c==> cMEM f6 f1 c==> cMEM f5 f1 c==> c~ c= f6 f5 c==> c= cnext_el f9 f4 f10 c==> c= cfind_face f0 f4 f9 c==> cMEM f5 f9 c==> cMEM f6 f9 c==> c< cindexf f10 f5 f9 cindexf f10 f6 f9 c==> c= cfind_face f0 f5 f9 c==> c= cf_list f0 f5 cnext_el f9 f5 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f7 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f5 c==> c= cFST cHD f2 cFST f6 c==> c< cl'm f0 f1 f4 cl'q f0 f8 f1 f4 c==> c< cl'q f0 f8 f1 f4 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f4 c+ cl'p f0 f8 f1 f4 cl'q f0 f8 f1 f4 c==> c~ c= cFST f5 cFST f4 c==> c~ c= cFST f5 cFST f6 cF
- |- ((t ==> t) = T)
T c= c==> f0 f0 cT
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f8 c==> c= cprev_el f1 f4 f9 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f8 f5 f10 cindexf f8 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f9 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c= cFST f9 cFST cHD f0 c==> cMEM cLAST f0 f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cFST f7 cFST f5 c==> c= cFST cHD f0 cFST f4 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))) r))
T c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ c< cl'm f0 b0 b1 cl'q f0 f1 b0 b1 c/\ c< cl'q f0 f1 b0 b1 csizel cparts f0 b0 c/\ c< cSUC cl'm f0 b0 b1 c+ cl'p f0 f1 b0 b1 cl'q f0 f1 b0 b1 c/\ c~ c= cFST cl'y f0 b0 b1 cFST b1 c~ c= cFST cl'y f0 b0 b1 cFST cl'z f0 f1 b0 b1 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ c< cl'm f0 b0 b1 cl'q f0 f1 b0 b1 c/\ c< cl'q f0 f1 b0 b1 csizel cparts f0 b0 c/\ c< cSUC cl'm f0 b0 b1 c+ cl'p f0 f1 b0 b1 cl'q f0 f1 b0 b1 c/\ c~ c= cFST cl'y f0 b0 b1 cFST b1 c~ c= cFST cl'y f0 b0 b1 cFST cl'z f0 f1 b0 b1 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ c< cl'm f0 b0 b1 cl'q f0 f1 b0 b1 c/\ c< cl'q f0 f1 b0 b1 csizel cparts f0 b0 c/\ c< cSUC cl'm f0 b0 b1 c+ cl'p f0 f1 b0 b1 cl'q f0 f1 b0 b1 c/\ c~ c= cFST cl'y f0 b0 b1 cFST b1 c~ c= cFST cl'y f0 b0 b1 cFST cl'z f0 f1 b0 b1 f2
+ |- (((!f. (!g. ((f o g) = (\x. (f (g x)))))) ==> ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)) = ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f))
T c= c==> ! ! c= * * part co b0 b1 / * b0 * b1 b2 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0 * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
- |- (((!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) ==> ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1)) = ((\s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2))))) s1))
T c= c==> ! ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1 * / ! c= cMEM f0 ccat b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
- (((find_face L) x) = f) |- ((((find_face L) x) = f) /\ (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c/\ c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0
+ ((MEM p) ((parts L) r)) |- (((MEM p) ((parts L) r)) /\ (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cMEM f0 cparts f1 f2 c/\ cMEM f0 cparts f1 f2 c==> cMEM f3 f0 c==> cis_restricted chypermap_of_list f1 c==> cnormal_list f1 f4 c==> cMEM f2 f4 c==> cMEM f5 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f4 c==> c= cnext_el f2 f5 cf_list f1 f5 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f4 ce_list f5 c==> cs_flag_list f1 f4 f2 f5 c==> cuniq clist_of_darts f1 c==> call / c~ c= b0 cNIL f1 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> cuniq f6 c==> cMEM f5 clist_of_darts f1 c==> cuniq cflatten f4 c==> call / c~ c= b0 cNIL f4 c==> call * part cf_last f1 f4 c==> call * part cloop_list f1 f4 c==> ! c==> cMEM b0 cflatten f4 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f4 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f4 f2 f5 cNUMERAL c_0 cztrans f1 f4 f2 f5 cNUMERAL c_0 c==> cMEM f7 f2 c==> cMEM f8 f2 c==> c~ c= f7 f8 c==> c= cnext_el f6 f5 f9 c==> c= cfind_face f1 f5 f6 c==> cMEM f8 f6 c==> cMEM f7 f6 c==> c< cindexf f9 f8 f6 cindexf f9 f7 f6 c==> c= cfind_face f1 f8 f6 c==> c= cf_list f1 f8 cnext_el f6 f8 c==> c= cnext_el f2 f10 cf_list f1 f10 c==> c~ c= f2 cNIL c==> cuniq f0 c==> c~ c= f0 cNIL c==> ! c==> cMEM b0 f0 cMEM b0 f2 c==> c= cFST f3 cFST cHD f0 c==> cMEM f10 f0 c==> c= cFST f10 cFST cHD f0 c==> c= cFST f10 cFST f8 c==> c= cFST cHD f0 cFST f7 c==> c< cl'm f1 f2 f5 cl'q f1 f4 f2 f5 c==> c< cl'q f1 f4 f2 f5 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f5 c+ cl'p f1 f4 f2 f5 cl'q f1 f4 f2 f5 c==> c~ c= cFST f8 cFST f5 c= cFST f8 cFST f7
+ |- (((!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) ==> ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N)) = ((\N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L)))))) N))
T c= c==> ! ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1 * / ! ! c==> cmarked_list f0 b0 b1 b2 cMEM b2 clist_of_darts f0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c==> cs_flag_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = y1) ==> F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c= cLAST f8 f3 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))
T c==> cuniq cflatten f0 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f1 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f1 f5 f6 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cnext_el f2 f8 cf_list f1 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f1 f2 f3 cl'q f1 f0 f2 f3 c==> c< cl'q f1 f0 f2 f3 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f3 c+ cl'p f1 f0 f2 f3 cl'q f1 f0 f2 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c==> c/\ cgood_list f3 c/\ cgood_list_nodes f3 c/\ cmarked_list f3 f2 f1 f6 c/\ c~ cfinal_list f3 f1 c/\ c= cl'z f3 f2 f1 f6 f4 c= cprev_el f1 f4 f8 c= cFST f8 cFST f4 c~ c= cLAST f0 f7
+ |- (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))
T c==> cMEM f0 f1 c==> c= cFST f0 cFST cHD f1 c==> c= cFST f0 cFST f2 c==> c= cFST cHD f1 cFST f3 c==> c< cl'm f4 f5 f6 cl'q f4 f7 f5 f6 c==> c< cl'q f4 f7 f5 f6 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f6 c+ cl'p f4 f7 f5 f6 cl'q f4 f7 f5 f6 c==> c~ c= cFST f2 cFST f6 c= cFST f2 cFST f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ cs_flag_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f5 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)) |- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x))
T c==> c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4 c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- (((!f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) ==> ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f)) = ((\f. (!n. (((POWER f) (SUC n)) = (((POWER f) n) o f)))) f))
T c= c==> ! ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0 * / ! c= * * part cPOWER b0 cSUC b1 * * part co * * part cPOWER b0 b1 b0 f0
- |- (((!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ==> ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)) = ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1))
T c= c==> ! ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3 * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c/\ c= cl'y f0 f1 f2 f3 c/\ c= cl'z f0 f4 f1 f2 f5 c/\ c= cnext_el f1 f3 f6 c/\ c= cprev_el f1 f5 f7 c/\ cMEM f8 cparts f0 f1 cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c~ c= cLAST f8 f6
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))))) /\ (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ c/\ cuniq clist_of_darts f0 c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c~ c= cLAST f8 f4
+ |- ((((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 c~ c= cLAST f2 f3 c~ c= cLAST f2 f3
- |- ((((~ (~ F)) = F) ==> ((~ (~ F)) ==> F)) = ((~ (~ F)) ==> F))
T c= c==> c= c~ c~ cF cF c==> c~ c~ cF cF c==> c~ c~ cF cF
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c= c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0 cT
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c~ c= cLAST f8 f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cnext_el f1 f5 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f8 f1 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f4 f1 c==> cMEM f7 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f8 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f4 c==> cmarked_list f0 f8 f1 f4 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f4 cNUMERAL c_0 cztrans f0 f8 f1 f4 cNUMERAL c_0 c==> cMEM f6 f1 c==> cMEM f5 f1 c==> c~ c= f6 f5 c==> c= cnext_el f9 f4 f10 c==> c= cfind_face f0 f4 f9 c==> cMEM f5 f9 c==> cMEM f6 f9 c==> c< cindexf f10 f5 f9 cindexf f10 f6 f9 c==> c= cfind_face f0 f5 f9 c==> c= cf_list f0 f5 cnext_el f9 f5 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f7 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f5 c==> c= cFST cHD f2 cFST f6 c==> c< cl'm f0 f1 f4 cl'q f0 f8 f1 f4 c==> c< cl'q f0 f8 f1 f4 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f4 c+ cl'p f0 f8 f1 f4 cl'q f0 f8 f1 f4 c==> c~ c= cFST f5 cFST f4 c==> c~ c= cFST f5 cFST f6 cF
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cLAST f0 f8 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> cMEM cLAST f0 f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f0 cFST f4 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)))))), ((MEM z1) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cMEM f1 f7 c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- (((!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) ==> ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r)) = ((\r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))) r))
T c= c==> ! ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2 * / ! c==> cmarked_list f0 f1 b0 b1 cMEM b1 clist_of_darts f0 f2
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cLAST f0 f8 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f0 cFST f4 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f4 f2 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f2 f3 c~ cfinal_list f1 f2 c~ c= cztrans f1 f0 f2 f3 cNUMERAL c_0 cytrans f1 f0 f2 f3 cNUMERAL c_0 c~ c= cLAST f8 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c~ c= cLAST f8 f5
- |- (((LET f) x) = (f x))
T c= cLET f0 f1 * f0 f1
+ ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c~ c= cLAST f3 f4 c~ c= cLAST f3 f4
- |- (((x = x) ==> p) = p)
T c= c==> c= f0 f0 f1 f1
+ |- ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))
T c==> cuniq f0 c==> c~ c= f0 cNIL c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> c= cFST f2 cFST cHD f0 c==> cMEM f3 f0 c==> c= cFST f3 cFST cHD f0 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f0 cFST f5 c==> c< cl'm f6 f1 f7 cl'q f6 f8 f1 f7 c==> c< cl'q f6 f8 f1 f7 csizel cparts f6 f1 c==> c< cSUC cl'm f6 f1 f7 c+ cl'p f6 f8 f1 f7 cl'q f6 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c= cFST f4 cFST f5
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((all (\l. (~ (l = NIL)))) L) /\ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ call / c~ c= b0 cNIL f0 ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- |- ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)
T * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
- |- (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))
T c= cMEM f0 cMAP f1 f2 c? / c/\ cMEM b0 f2 c= f0 * f1 b0
- |- ((!d. t) = t)
T c= ! f0 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L))) = T)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c= c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0 cT
+ |- ((\x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))) x)
T * / ! c= crtrans f0 f1 f2 b0 b1 cSND cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ |- ((\r. (!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x))))))))))))) r)
T * / ! c= cmarked_list f0 f1 b0 b1 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 c/\ cMEM b1 b0 c/\ cLET / cLET_END c/\ call part cuniq b2 call / c> csizel cfilter * part cMEM b3 b2 cNUMERAL cBIT1 c_0 cflatten b2 cquotient_list f0 f1 c/\ c= cnext_el b0 b1 cf_list f0 b1 c/\ cLET / cLET_END cfinal_list f0 b2 cfind_list f1 ce_list b1 c/\ c==> cfinal_list f0 b0 cflag_list f0 f1 c==> c~ cfinal_list f0 b0 cs_flag_list f0 f1 b0 b1 f2
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2 c~ c= cLAST f4 f5 c~ c= cLAST f4 f5
- |- ((\f. (!x. (((LET f) x) = (f x)))) f)
T * / ! c= cLET b0 b1 * b0 b1 f0
+ (((next_el ((find_face L) x)) x) = w), (((find_face L) x) = f) |- (((next_el f) x) = w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c==> c= cfind_face f0 f1 f3 c= cnext_el f3 f1 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\f. (((find_face L) x) = f)) f) ==> (~ ((LAST p) = y1))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> * / c= cfind_face f1 f5 b0 f10 c~ c= cLAST f9 f6 cT
+ |- (((!L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) ==> ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)) = ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0 * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f2 f3 c~ cfinal_list f1 f2 cMEM cytrans f1 f0 f2 f3 cNUMERAL c_0 f2 c~ c= cLAST f8 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f6 f7 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f6 c==> cMEM f6 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cnext_el f4 cLAST f6 cf_list f1 cLAST f6 c==> c~ c= f4 cNIL c==> cuniq f6 c==> c~ c= f6 cNIL c==> ! c==> cMEM b0 f6 cMEM b0 f4 c==> c= cFST f9 cFST cHD f6 c==> cMEM cLAST f6 f6 c==> c= cFST cLAST f6 cFST cHD f6 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f6 cFST f2 c==> c< cl'm f1 f4 f5 cl'q f1 f0 f4 f5 c==> c< cl'q f1 f0 f4 f5 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f5 c+ cl'p f1 f0 f4 f5 cl'q f1 f0 f4 f5 c==> c~ c= cFST f3 cFST f5 c==> c~ c= cFST f3 cFST f2 cF
+ |- (((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> cmarked_list f0 f1 f2 f3 cMEM f3 clist_of_darts f0 c~ c= cLAST f4 f5 c~ c= cLAST f4 f5
- |- (((!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) ==> ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)) = ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N))
T c= c==> ! ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1 * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
+ |- (((!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) ==> ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N)) = ((\N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r)))))))) N))
T c= c==> ! ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1 * / ! ! ! c= crtrans f0 b0 b1 b2 b3 cSND cPOWER * * part ctransform_list f0 b2 b3 c, b0 b1 f1
+ |- ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)
T * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((normal_list L) N) /\ (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 f3 cNUMERAL c_0 f2 cT
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
+ |- ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p)
T * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3
- |- ((\x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))) x)
T * / c= ctransform_list f0 b0 c, f1 f2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f2 c, f1 f2 c, b6 cSND b5 cAPPEND creplace f2 cCONS cSND b5 cNIL f1 cCONS cFST b5 cNIL csplit_normal_list f0 f2 b4 b1 b3 cfind_face f0 b1 cprev_el f2 b2 cl'z f0 f1 f2 b0 cl'y f0 f2 b0 f3
+ |- ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))
T c==> c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0 c==> cMEM f4 f0 c==> cMEM f5 f0 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f1 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f1 f5 f6 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cnext_el f0 f8 cf_list f1 f8 c==> c~ c= f0 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f0 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f1 f0 f3 cl'q f1 f2 f0 f3 c==> c< cl'q f1 f2 f0 f3 csizel cparts f1 f0 c==> c< cSUC cl'm f1 f0 f3 c+ cl'p f1 f2 f0 f3 cl'q f1 f2 f0 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c~ c= cLAST f8 f5
+ ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c==> cs_flag_list f0 f1 f3 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f2 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f3 c==> c= cnext_el f3 cprev_el f3 cztrans f0 f1 f3 f2 cNUMERAL c_0 cztrans f0 f1 f3 f2 cNUMERAL c_0 c==> cMEM f5 f3 c==> cMEM f6 f3 c==> c~ c= f5 f6 c==> c= cnext_el f4 f2 f7 c==> c= cfind_face f0 f2 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f3 f8 cf_list f0 f8 c==> c~ c= f3 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f3 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f3 f2 cl'q f0 f1 f3 f2 c==> c< cl'q f0 f1 f3 f2 csizel cparts f0 f3 c==> c< cSUC cl'm f0 f3 f2 c+ cl'p f0 f1 f3 f2 cl'q f0 f1 f3 f2 c==> c~ c= cFST f6 cFST f2 c= cFST f6 cFST f5
+ |- ((\m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y)))) (SUC (NUMERAL _0)))
T * / c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 b0 f1 cPOWER * part cnext_el cfind_face f0 f1 b0 f1 cSUC cNUMERAL c_0
+ |- ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)
T * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM x) (list_of_darts L)) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- |- (((!t. ((LET_END t) = t)) ==> ((\t. ((LET_END t) = t)) t)) = ((\t. ((LET_END t) = t)) t))
T c= c==> ! c= cLET_END b0 b0 * / c= cLET_END b0 b0 f0 * / c= cLET_END b0 b0 f0
+ |- ((((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM (LAST p)) p))))) ==> ((FST (LAST p)) = (FST (HD p)))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM cLAST f3 f3 c= cFST cLAST f3 cFST cHD f3 c~ c= cLAST f3 f4 c~ c= cLAST f3 f4
- |- ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))
T c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ |- ((t ==> F) = (~ t))
T c= c==> f0 cF c~ f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
+ |- ((\y. (!m. (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) m) y) = (((POWER (next_el ((find_face L) y))) m) y))))) y)
T * / ! c==> c/\ cuniq clist_of_darts f0 cMEM b0 clist_of_darts f0 c= cPOWER * part cf_list f0 b1 b0 cPOWER * part cnext_el cfind_face f0 b0 b1 b0 f1
+ |- (((!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) ==> ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i)) = ((\i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))) i))
T c= c==> ! c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4 * / c= cytrans f0 f1 f2 f3 b0 cl'y f0 crtrans f0 f1 f2 f3 b0 f3 f4
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x)))))))))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x)))))))))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x)))))))))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ c< cl'm f0 b1 b2 cl'q f0 b0 b1 b2 c/\ c< cl'q f0 b0 b1 b2 csizel cparts f0 b1 c/\ c< cSUC cl'm f0 b1 b2 c+ cl'p f0 b0 b1 b2 cl'q f0 b0 b1 b2 c/\ c~ c= cFST cl'y f0 b1 b2 cFST b2 c~ c= cFST cl'y f0 b1 b2 cFST cl'z f0 b0 b1 b2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ c< cl'm f0 b1 b2 cl'q f0 b0 b1 b2 c/\ c< cl'q f0 b0 b1 b2 csizel cparts f0 b1 c/\ c< cSUC cl'm f0 b1 b2 c+ cl'p f0 b0 b1 b2 cl'q f0 b0 b1 b2 c/\ c~ c= cFST cl'y f0 b1 b2 cFST b2 c~ c= cFST cl'y f0 b1 b2 cFST cl'z f0 b0 b1 b2 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 c/\ c< cl'm f0 b1 b2 cl'q f0 b0 b1 b2 c/\ c< cl'q f0 b0 b1 b2 csizel cparts f0 b1 c/\ c< cSUC cl'm f0 b1 b2 c+ cl'p f0 b0 b1 b2 cl'q f0 b0 b1 b2 c/\ c~ c= cFST cl'y f0 b1 b2 cFST b2 c~ c= cFST cl'y f0 b1 b2 cFST cl'z f0 b0 b1 b2 f1
+ |- ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))
T c==> c= cf_list f0 f1 cnext_el f2 f1 c==> c= cnext_el f3 f4 cf_list f0 f4 c==> c~ c= f3 cNIL c==> cuniq f5 c==> c~ c= f5 cNIL c==> ! c==> cMEM b0 f5 cMEM b0 f3 c==> c= cFST f6 cFST cHD f5 c==> cMEM f4 f5 c==> c= cFST f4 cFST cHD f5 c==> c= cFST f4 cFST f1 c==> c= cFST cHD f5 cFST f7 c==> c< cl'm f0 f3 f8 cl'q f0 f9 f3 f8 c==> c< cl'q f0 f9 f3 f8 csizel cparts f0 f3 c==> c< cSUC cl'm f0 f3 f8 c+ cl'p f0 f9 f3 f8 cl'q f0 f9 f3 f8 c==> c~ c= cFST f1 cFST f8 c= cFST f1 cFST f7
- |- (F ==> (~ (~ F)))
T c==> cF c~ c~ cF
- |- ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)
T * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
+ |- ((((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (~ ((LAST p) = y1))) = (((normal_list L) N) ==> (~ ((LAST p) = y1))))
T c= c==> c/\ cuniq cflatten f0 c/\ call / c~ c= b0 cNIL f0 c/\ call * part cf_last f1 f0 c/\ call * part cloop_list f1 f0 ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c~ c= cLAST f2 f3 c==> cnormal_list f1 f0 c~ c= cLAST f2 f3
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((MEM p) ((parts L) r)) /\ ((MEM z1) p)), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cMEM f8 cparts f0 f1 cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f5 c==> c= cnext_el f1 f4 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c~ c= cLAST f8 f6
+ |- (((!s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) ==> ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p)) = ((\s. ((~ (s = NIL)) ==> ((MEM (LAST s)) s))) p))
T c= c==> ! c==> c~ c= b0 cNIL cMEM cLAST b0 b0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0 * / c==> c~ c= b0 cNIL cMEM cLAST b0 b0 f0
+ |- (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> c~ c= f2 f0 c==> c= cnext_el f3 f4 f5 c==> c= cfind_face f6 f4 f3 c==> cMEM f0 f3 c==> cMEM f2 f3 c==> c< cindexf f5 f0 f3 cindexf f5 f2 f3 c==> c= cfind_face f6 f0 f3 c==> c= cf_list f6 f0 cnext_el f3 f0 c==> c= cnext_el f1 f7 cf_list f6 f7 c==> c~ c= f1 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f1 c==> c= cFST f9 cFST cHD f8 c==> cMEM f7 f8 c==> c= cFST f7 cFST cHD f8 c==> c= cFST f7 cFST f0 c==> c= cFST cHD f8 cFST f2 c==> c< cl'm f6 f1 f4 cl'q f6 f10 f1 f4 c==> c< cl'q f6 f10 f1 f4 csizel cparts f6 f1 c==> c< cSUC cl'm f6 f1 f4 c+ cl'p f6 f10 f1 f4 cl'q f6 f10 f1 f4 c==> c~ c= cFST f0 cFST f4 c= cFST f0 cFST f2
+ (uniq r) |- (((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (~ ((LAST p) = y1))) = (((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> (~ ((LAST p) = y1))))
T c==> cuniq f0 c= c==> c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0 c~ c= cLAST f4 f5 c==> c==> cuniq f0 c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0 c~ c= cLAST f4 f5
+ |- ((\r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x))))) r)
T * / ! ! c= cytrans f0 f1 b0 b1 b2 cl'y f0 crtrans f0 f1 b0 b1 b2 b1 f2
+ |- ((\f. (((find_face L) x) = f)) ((find_face L) x))
T * / c= cfind_face f0 f1 b0 cfind_face f0 f1
+ |- ((\L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))))))) L)
T * / ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c= cnext_el b2 cLAST b3 cf_list b0 cLAST b3 f0
+ |- (((!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) ==> ((\x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) (LAST p))) = ((\x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) (LAST p)))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 cLAST f3 * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 cLAST f3
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))) N))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c~ cfinal_list f0 b1 cMEM cytrans f0 b0 b1 b2 cNUMERAL c_0 b1 f1
+ |- (((!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) ==> ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r)) = ((\r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))) r))
T c= c==> ! ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2 * / ! ! c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM b0 f1 c/\ cMEM b1 cparts f0 b0 cMEM b2 b1 c= cFST b2 cFST cHD b1 f2
+ ((((marked_list L) N) r) x) |- (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cmarked_list f0 f1 f2 f3 c/\ cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'y f0 f2 f3 f4 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cnext_el f2 f4 f6 c==> c= cprev_el f2 f5 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f4 f2 c==> c~ c= f5 f4 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f0 f3 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f2 f6 cf_list f0 f6 c==> c~ c= f2 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f2 c==> c= cFST f7 cFST cHD f8 c==> cMEM f6 f8 c==> c= cFST f6 cFST cHD f8 c==> c= cFST f6 cFST f4 c==> c= cFST cHD f8 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f4 cFST f3 c= cFST f4 cFST f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cuniq clist_of_darts f1 cMEM f3 clist_of_darts f1 c= cPOWER * part cf_list f1 cSUC cNUMERAL c_0 f3 cPOWER * part cnext_el cfind_face f1 f3 cSUC cNUMERAL c_0 f3 c~ c= cLAST f10 f6
- |- ((\s. (((all a) s) = (!x. (((MEM x) s) ==> (a x))))) s)
T * / c= call f0 b0 ! c==> cMEM b1 b0 * f0 b1 f1
- |- ((\i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))) i)
T * / c= cl'z f0 cntrans f0 f1 f2 f3 b0 crtrans f0 f1 f2 f3 b0 f3 cztrans f0 f1 f2 f3 b0 f4
- |- ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)
T * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- ((all (loop_list L)) N) |- (((all (loop_list L)) N) = T)
T c==> call * part cloop_list f0 f1 c= call * part cloop_list f0 f1 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x))))), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 cs_flag_list f0 f7 f1 f6 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)
T * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f6 f5 c==> c= cprev_el f1 f7 f8 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f7 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f4 c==> cMEM f4 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f2 f1 f3 cNUMERAL c_0 cztrans f0 f2 f1 f3 cNUMERAL c_0 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c~ c= f7 f6 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f0 f3 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f0 f6 f9 c==> c= cf_list f0 f6 cnext_el f9 f6 c==> c= cnext_el f1 cLAST f4 cf_list f0 cLAST f4 c==> c~ c= f1 cNIL c==> cuniq f4 c==> c~ c= f4 cNIL c==> ! c==> cMEM b0 f4 cMEM b0 f1 c==> c= cFST f8 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f5 cFST f6 c==> c= cFST cHD f4 cFST f7 c==> c< cl'm f0 f1 f3 cl'q f0 f2 f1 f3 c==> c< cl'q f0 f2 f1 f3 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f3 c+ cl'p f0 f2 f1 f3 cl'q f0 f2 f1 f3 c==> c~ c= cFST f6 cFST f3 c==> c~ c= cFST f6 cFST f7 cF
+ |- (((!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) ==> ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x)) = ((\x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r)))))) x))
T c= c==> ! ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3 * / ! c= cntrans f0 f1 f2 b0 b1 cFST cPOWER * * part ctransform_list f0 b0 b1 c, f1 f2 f3
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST y1) = (FST y)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c= cFST f8 cFST f5 c~ c= cLAST f0 f8
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 b0 cNUMERAL c_0 cytrans f0 f1 f2 b0 cNUMERAL c_0
+ |- (((FST (HD p)) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))
T c==> c= cFST cHD f0 cFST f1 c==> c= cFST cHD f0 cFST f2 c==> c< cl'm f3 f4 f5 cl'q f3 f6 f4 f5 c==> c< cl'q f3 f6 f4 f5 csizel cparts f3 f4 c==> c< cSUC cl'm f3 f4 f5 c+ cl'p f3 f6 f4 f5 cl'q f3 f6 f4 f5 c==> c~ c= cFST f1 cFST f5 c= cFST f1 cFST f2
- ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) = T)
T c==> call / c~ c= b0 cNIL f0 c= call / c~ c= b0 cNIL f0 cT
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
+ ((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))))))) /\ (~ ((LAST p) = y1)))
T c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cnext_el f2 f4 f6 c/\ c= cprev_el f2 f5 f7 c/\ cMEM f8 cparts f0 f2 cMEM f7 f8 c/\ c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cnext_el f2 f4 f6 c/\ c= cprev_el f2 f5 f7 c/\ cMEM f8 cparts f0 f2 cMEM f7 f8 c~ c= cLAST f8 f6
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c~ c= cLAST f8 f5
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST z1) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((FST z1) = (FST (HD p))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f8 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f7 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f7 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c/\ c= cFST f7 cFST cHD f0 c~ c= cLAST f0 f8
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cfind_face f1 f5 f9 c~ c= cLAST f10 f6
+ |- (((!L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) ==> ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L)) = ((\L. ((uniq (list_of_darts L)) ==> (uniq ((find_face L) x)))) L))
T c= c==> ! c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1 * / c==> cuniq clist_of_darts b0 cuniq cfind_face b0 f0 f1
+ (good_list L), (good_list_nodes L), ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p))))))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ c~ cfinal_list f0 f1 c/\ c= cl'y f0 f1 f2 f3 c/\ c= cl'z f0 f4 f1 f2 f5 c/\ c= cnext_el f1 f3 f6 c/\ c= cprev_el f1 f5 f7 c/\ cMEM f8 cparts f0 f1 cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c~ c= cLAST f8 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (~ ((LAST p) = y1)))) ==> ((?f. (((find_face L) x) = f)) ==> (~ ((LAST p) = y1)))) = ((?f. (((find_face L) x) = f)) ==> (~ ((LAST p) = y1))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> ! c==> * / c= cfind_face f1 f5 b1 b0 c~ c= cLAST f9 f6 c==> c? / c= cfind_face f1 f5 b0 c~ c= cLAST f9 f6 c==> c? / c= cfind_face f1 f5 b0 c~ c= cLAST f9 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f6 f7 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f9 f6 c==> cMEM f6 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> cMEM f2 f10 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> c= cfind_face f1 f3 f10 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cnext_el f4 cLAST f6 cf_list f1 cLAST f6 c==> c~ c= f4 cNIL c==> cuniq f6 c==> c~ c= f6 cNIL c==> ! c==> cMEM b0 f6 cMEM b0 f4 c==> c= cFST f9 cFST cHD f6 c==> cMEM cLAST f6 f6 c==> c= cFST cLAST f6 cFST cHD f6 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f6 cFST f2 c==> c< cl'm f1 f4 f5 cl'q f1 f0 f4 f5 c==> c< cl'q f1 f0 f4 f5 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f5 c+ cl'p f1 f0 f4 f5 cl'q f1 f0 f4 f5 c==> c~ c= cFST f3 cFST f5 c==> c~ c= cFST f3 cFST f2 cF
+ ((all (\s. (~ (s = NIL)))) N) |- (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))
T c==> call / c~ c= b0 cNIL f0 c/\ call / c~ c= b0 cNIL f0 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f1 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f1 f5 f6 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cnext_el f2 f8 cf_list f1 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f1 f2 f3 cl'q f1 f0 f2 f3 c==> c< cl'q f1 f0 f2 f3 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f3 c+ cl'p f1 f0 f2 f3 cl'q f1 f0 f2 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM z) r) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f6 f2 c~ c= cLAST f8 f5
+ |- (((!x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) ==> ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x)) = ((\x. (((((marked_list L) N) r) x) = ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))))) x))
T c= c==> ! c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3 * / c= cmarked_list f0 f1 f2 b0 c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 c/\ cMEM b0 f2 c/\ cLET / cLET_END c/\ call part cuniq b1 call / c> csizel cfilter * part cMEM b2 b1 cNUMERAL cBIT1 c_0 cflatten b1 cquotient_list f0 f1 c/\ c= cnext_el f2 b0 cf_list f0 b0 c/\ cLET / cLET_END cfinal_list f0 b1 cfind_list f1 ce_list b0 c/\ c==> cfinal_list f0 f2 cflag_list f0 f1 c==> c~ cfinal_list f0 f2 cs_flag_list f0 f1 f2 b0 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cgood_list f1 c/\ cgood_list_nodes f1 c/\ cmarked_list f1 f0 f4 f5 c/\ c~ cfinal_list f1 f4 c/\ c= f9 cfind_face f1 f5 c= f7 cnext_el f9 f5 c/\ cMEM cytrans f1 f0 f4 f5 cNUMERAL c_0 f9 c/\ cMEM cztrans f1 f0 f4 f5 cNUMERAL c_0 f9 c< cindexf f7 cytrans f1 f0 f4 f5 cNUMERAL c_0 f9 cindexf f7 cztrans f1 f0 f4 f5 cNUMERAL c_0 f9 c~ c= cLAST f10 f6
+ ((normal_list L) N) |- (((normal_list L) N) = T)
T c==> cnormal_list f0 f1 c= cnormal_list f0 f1 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cmarked_list f0 f7 f1 f6 c/\ c= cprev_el f1 f4 f5 c==> cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- (((!L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) ==> ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L)) = ((\L. (!N. (!r. (!x. (((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))))))) L))
T c= c==> ! ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0 * / ! ! ! c==> cmarked_list b0 b1 b2 b3 cMEM b3 clist_of_darts b0 f0
+ |- ((\x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f)))))))) x)
T * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c/\ c~ cfinal_list f0 f2 c/\ c= b1 cfind_face f0 b0 c= b2 cnext_el b1 b0 c/\ cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 c/\ cMEM cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 c< cindexf b2 cytrans f0 f1 f2 b0 cNUMERAL c_0 b1 cindexf b2 cztrans f0 f1 f2 b0 cNUMERAL c_0 b1 f3
- |- ((((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))) = T)
T c= c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0 cT
- |- ((\s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s))))) s)
T * / c= cf_last f0 b0 c= cnext_el b0 cLAST b0 cf_list f0 cLAST b0 f1
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) ==> ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r)) = ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c= c==> ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cytrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
- |- ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)
T * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cztrans f0 f2 f1 b0 cNUMERAL c_0 f1
- |- ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)
T * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 cs_flag_list f0 f7 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ c= f4 cNIL c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c~ c= cLAST f7 f6
- ((MEM x) (list_of_darts L)) |- (((MEM x) (list_of_darts L)) = T)
T c==> cMEM f0 clist_of_darts f1 c= cMEM f0 clist_of_darts f1 cT
+ |- ((\L. (((uniq (list_of_darts L)) /\ ((MEM y) ((find_face L) x))) ==> (((find_face L) y) = ((find_face L) x)))) L)
T * / c==> c/\ cuniq clist_of_darts b0 cMEM f0 cfind_face b0 f1 c= cfind_face b0 f0 cfind_face b0 f1 f2
+ |- (((!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))))) ==> ((\r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))))) r)) = ((\r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))))) r))
T c= c==> ! ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 cMEM b1 cparts f0 b0 c= cnext_el b0 cLAST b1 cf_list f0 cLAST b1 * / ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 cMEM b1 cparts f0 b0 c= cnext_el b0 cLAST b1 cf_list f0 cLAST b1 f2 * / ! c==> c/\ cnormal_list f0 f1 c/\ cMEM b0 f1 cMEM b1 cparts f0 b0 c= cnext_el b0 cLAST b1 cf_list f0 cLAST b1 f2
+ |- ((T ==> t) = t)
T c= c==> cT f0 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f6 f7 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f9 f6 c==> cMEM f6 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cfind_face f1 f5 f10 c==> cMEM f3 f10 c==> cMEM f2 f10 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> c= cfind_face f1 f3 f10 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cnext_el f4 cLAST f6 cf_list f1 cLAST f6 c==> c~ c= f4 cNIL c==> cuniq f6 c==> c~ c= f6 cNIL c==> ! c==> cMEM b0 f6 cMEM b0 f4 c==> c= cFST f9 cFST cHD f6 c==> cMEM cLAST f6 f6 c==> c= cFST cLAST f6 cFST cHD f6 c==> c= cFST f7 cFST f3 c==> c= cFST cHD f6 cFST f2 c==> c< cl'm f1 f4 f5 cl'q f1 f0 f4 f5 c==> c< cl'q f1 f0 f4 f5 csizel cparts f1 f4 c==> c< cSUC cl'm f1 f4 f5 c+ cl'p f1 f0 f4 f5 cl'q f1 f0 f4 f5 c==> c~ c= cFST f3 cFST f5 c==> c~ c= cFST f3 cFST f2 cF
+ |- ((\L. (!N. (!r. (!x. (!f. (!w. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((f = ((find_face L) x)) /\ (w = ((next_el f) x))))))) ==> (((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) f) /\ (((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) f) /\ ((((indexf w) (((((ytrans L) N) r) x) (NUMERAL _0))) f) < (((indexf w) (((((ztrans L) N) r) x) (NUMERAL _0))) f))))))))))) L)
T * / ! ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= b4 cfind_face b0 b3 c= b5 cnext_el b4 b3 c/\ cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 c/\ cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 c< cindexf b5 cytrans b0 b1 b2 b3 cNUMERAL c_0 b4 cindexf b5 cztrans b0 b1 b2 b3 cNUMERAL c_0 b4 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c/\ c= cl'z b0 b1 b2 b3 f0 c= cprev_el b2 f0 f1 c= cFST f1 cFST f0 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> c= cnext_el f1 f5 f3 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f4 f5 c==> c= cl'z f0 f8 f1 f4 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> cMEM f4 f1 c==> cMEM f7 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cs_flag_list f0 f8 f1 f4 c==> cmarked_list f0 f8 f1 f4 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f4 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f4 cNUMERAL c_0 cztrans f0 f8 f1 f4 cNUMERAL c_0 c==> cMEM f6 f1 c==> cMEM f5 f1 c==> c~ c= f6 f5 c==> c= cnext_el f9 f4 f10 c==> c= cfind_face f0 f4 f9 c==> cMEM f5 f9 c==> cMEM f6 f9 c==> c< cindexf f10 f5 f9 cindexf f10 f6 f9 c==> c= cfind_face f0 f5 f9 c==> c= cf_list f0 f5 cnext_el f9 f5 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f7 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f5 c==> c= cFST cHD f2 cFST f6 c==> c< cl'm f0 f1 f4 cl'q f0 f8 f1 f4 c==> c< cl'q f0 f8 f1 f4 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f4 c+ cl'p f0 f8 f1 f4 cl'q f0 f8 f1 f4 c==> c~ c= cFST f5 cFST f4 c==> c~ c= cFST f5 cFST f6 cF
+ |- (((!d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) ==> ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y)) = ((\d1. (!d2. (!L. (((uniq (list_of_darts L)) /\ ((MEM d1) ((find_face L) d2))) ==> (((find_face L) d1) = ((find_face L) d2)))))) y))
T c= c==> ! ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0 * / ! ! c==> c/\ cuniq clist_of_darts b2 cMEM b0 cfind_face b2 b1 c= cfind_face b2 b0 cfind_face b2 b1 f0
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f8 c==> c= cprev_el f1 f4 f9 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f8 f5 f10 cindexf f8 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f9 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c~ c= cLAST f0 f7
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f2 c==> cMEM f8 f4 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> cMEM f6 f2 c==> c~ c= f7 f6 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f1 f3 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f1 f6 f9 c==> c= cf_list f1 f6 cnext_el f9 f6 c==> c= cnext_el f2 cLAST f4 cf_list f1 cLAST f4 c==> c~ c= f2 cNIL c==> cuniq f4 c==> c~ c= f4 cNIL c==> ! c==> cMEM b0 f4 cMEM b0 f2 c==> c= cFST f8 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f5 cFST f6 c==> c= cFST cHD f4 cFST f7 c==> c< cl'm f1 f2 f3 cl'q f1 f0 f2 f3 c==> c< cl'q f1 f0 f2 f3 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f3 c+ cl'p f1 f0 f2 f3 cl'q f1 f0 f2 f3 c==> c~ c= cFST f6 cFST f3 c==> c~ c= cFST f6 cFST f7 cF
+ |- (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))
T c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- F
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f8 f1 f7 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el ((find_face L) x)) x) = w) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cnext_el cfind_face f1 f5 f5 f7 c~ c= cLAST f9 f6
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) /\ ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c/\ ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f1 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f1 f5 f6 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cnext_el f2 f8 cf_list f1 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f1 f2 f3 cl'q f1 f0 f2 f3 c==> c< cl'q f1 f0 f2 f3 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f3 c+ cl'p f1 f0 f2 f3 cl'q f1 f0 f2 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c~ c= cLAST f8 f4
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cLAST f4 f5 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f6 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f7 f8 c==> c= cl'y f1 f2 f3 f6 c==> c= cl'z f1 f0 f2 f3 f7 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f7 f2 c==> cMEM f8 f4 c==> cMEM f4 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c==> c~ c= f7 f6 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f1 f3 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f1 f6 f9 c==> c= cf_list f1 f6 cnext_el f9 f6 c==> c= cnext_el f2 cLAST f4 cf_list f1 cLAST f4 c==> c~ c= f2 cNIL c==> cuniq f4 c==> c~ c= f4 cNIL c==> ! c==> cMEM b0 f4 cMEM b0 f2 c==> c= cFST f8 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f5 cFST f6 c==> c= cFST cHD f4 cFST f7 c==> c< cl'm f1 f2 f3 cl'q f1 f0 f2 f3 c==> c< cl'q f1 f0 f2 f3 csizel cparts f1 f2 c==> c< cSUC cl'm f1 f2 f3 c+ cl'p f1 f0 f2 f3 cl'q f1 f0 f2 f3 c==> c~ c= cFST f6 cFST f3 c==> c~ c= cFST f6 cFST f7 cF
+ |- ((\f. (!g. ((f o g) = (\x. (f (g x)))))) f)
T * / ! c= * * part co b0 b1 / * b0 * b1 b2 f0
+ |- ((\x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) (LAST p))
T * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 cLAST f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))) = (\x. (((((marked_list L) N) r) x) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0 / c==> cmarked_list f0 f2 f1 b0 c~ c= cztrans f0 f2 f1 b0 cNUMERAL c_0 cytrans f0 f2 f1 b0 cNUMERAL c_0
- |- ((~ (~ F)) ==> F)
T c==> c~ c~ cF cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((~ (z = y)) ==> (~ ((LAST p) = y1))) = ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) ==> (~ ((LAST p) = y1))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c= c==> c~ c= f5 f3 c~ c= cLAST f6 f7 c==> c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f4 f1 f2 c~ cfinal_list f0 f1 c~ c= cztrans f0 f4 f1 f2 cNUMERAL c_0 cytrans f0 f4 f1 f2 cNUMERAL c_0 c~ c= cLAST f6 f7
- |- ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)
T * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((find_face L) y) = f) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cfind_face f1 f3 f9 c~ c= cLAST f10 f6
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f4 f5 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f6 f5 c==> c= cprev_el f1 f7 f8 c==> c= cl'y f0 f1 f3 f6 c==> c= cl'z f0 f2 f1 f3 f7 c==> c= cfind_face f0 f3 f9 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f8 f4 c==> cMEM f4 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c==> call * part cf_last f0 f2 c==> call * part cloop_list f0 f2 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f2 f1 f3 cNUMERAL c_0 cztrans f0 f2 f1 f3 cNUMERAL c_0 c==> cMEM f7 f1 c==> cMEM f6 f1 c==> c~ c= f7 f6 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f0 f3 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f0 f6 f9 c==> c= cf_list f0 f6 cnext_el f9 f6 c==> c= cnext_el f1 cLAST f4 cf_list f0 cLAST f4 c==> c~ c= f1 cNIL c==> cuniq f4 c==> c~ c= f4 cNIL c==> ! c==> cMEM b0 f4 cMEM b0 f1 c==> c= cFST f8 cFST cHD f4 c==> cMEM cLAST f4 f4 c==> c= cFST cLAST f4 cFST cHD f4 c==> c= cFST f5 cFST f6 c==> c= cFST cHD f4 cFST f7 c==> c< cl'm f0 f1 f3 cl'q f0 f2 f1 f3 c==> c< cl'q f0 f2 f1 f3 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f3 c+ cl'p f0 f2 f1 f3 cl'q f0 f2 f1 f3 c==> c~ c= cFST f6 cFST f3 c==> c~ c= cFST f6 cFST f7 cF
+ |- ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq f3 c/\ c~ c= f3 cNIL ! c==> cMEM b0 f3 cMEM b0 f2 c~ c= cLAST f3 f4 c~ c= cLAST f3 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- ((\L. (!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))))) L)
T * / ! ! ! c= ctransform_list b0 b3 c, b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list b0 b2 c, b1 b2 c, b9 cSND b8 cAPPEND creplace b2 cCONS cSND b8 cNIL b1 cCONS cFST b8 cNIL csplit_normal_list b0 b2 b7 b4 b6 cfind_face b0 b4 cprev_el b2 b5 cl'z b0 b1 b2 b3 cl'y b0 b2 b3 f0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((f_list L) y) = ((next_el f) y)) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c= cfind_face f1 f3 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c= cf_list f1 f3 cnext_el f9 f3 c~ c= cLAST f10 f6
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))) |- (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 cMEM cytrans f0 f1 f2 b0 cNUMERAL c_0 f2
- |- ((\y. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))))) y)
T * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c= cl'y b1 b3 b4 b0 c= cFST cnext_el b3 b0 cFST b0 f0
+ |- (((!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) ==> ((\N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) N)) = ((\N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))))) N))
T c= c==> ! ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 * / ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 f1 * / ! ! c==> c/\ cnormal_list f0 b0 c/\ cMEM b1 b0 cMEM b2 cparts f0 b1 c/\ cuniq b1 c/\ c~ c= b1 cNIL c/\ cuniq b2 c/\ c~ c= b2 cNIL ! c==> cMEM b3 b2 cMEM b3 b1 f1
+ |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
- |- (((!x'. (((\w. (((next_el ((find_face L) x)) x) = w)) x') ==> (?w. (((next_el ((find_face L) x)) x) = w)))) ==> ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))) = ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c= c==> ! c==> * / c= cnext_el cfind_face f0 f1 f1 b1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b1 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0 c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
+ (((((l'z L) N) r) x) = z) |- ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> c= cl'z f0 f1 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f4 c==> c= cnext_el f2 f5 f6 c==> c= cprev_el f2 f4 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c~ c= f4 f5 c==> c= cnext_el f9 f3 f10 c==> c= cfind_face f0 f3 f9 c==> cMEM f5 f9 c==> cMEM f4 f9 c==> c< cindexf f10 f5 f9 cindexf f10 f4 f9 c==> c= cfind_face f0 f5 f9 c==> c= cf_list f0 f5 cnext_el f9 f5 c==> c= cnext_el f2 f6 cf_list f0 f6 c==> c~ c= f2 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f2 c==> c= cFST f7 cFST cHD f8 c==> cMEM f6 f8 c==> c= cFST f6 cFST cHD f8 c==> c= cFST f6 cFST f5 c==> c= cFST cHD f8 cFST f4 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
- |- ((LET_END t) = t)
T c= cLET_END f0 f0
- ((!x. (((MEM x) s) ==> (a x))) = ((all a) s)) |- (((all a) s) = (!x. (((MEM x) s) ==> (a x))))
T c==> c= ! c==> cMEM b0 f0 * f1 b0 call f1 f0 c= call f1 f0 ! c==> cMEM b0 f0 * f1 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((LAST p) = y1) /\ F)
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f8 f1 f7 c/\ c= cLAST f2 f3 cF
- |- ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s)
T * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> c/\ c~ c= f4 cNIL c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c/\ c~ c= f4 cNIL c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c~ c= cLAST f7 f6
- |- (((!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) ==> ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x)) = ((\x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))) x))
T c= c==> ! ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3 * / ! c= cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 cztrans f0 f1 f2 b0 b1 f3
+ (is_restricted (hypermap_of_list L)) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))))))))))))))))))))
T c==> cis_restricted chypermap_of_list f0 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f4 c==> cMEM f3 clist_of_darts f0 c==> cuniq cflatten f1 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f5 f2 c==> cMEM f6 f2 c==> c~ c= f5 f6 c==> c= cnext_el f4 f3 f7 c==> c= cfind_face f0 f3 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f0 f6 f4 c==> c= cf_list f0 f6 cnext_el f4 f6 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f6 cFST f3 c= cFST f6 cFST f5
- |- ((\ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))) ram1)
T * / ! c= csplit_normal_list f0 f1 f2 b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b7 b8 cAPPEND b9 b6 cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b0 cCONS b0 cNIL cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 b1 cCONS b1 cNIL cflatten cmap b5 b6 cbetwn f2 b0 b3 / cmap / cPOWER * part cn_list f0 b6 b5 cupt cNUMERAL cBIT1 c_0 * b4 cFST b5 / csizel cfilter / c= b5 b4 cflatten f0 cnext_el f1 b1 cnext_el f1 b0 f3
- (~ (z = y)) |- (((~ (y = z)) ==> ((y = z) = F)) = ((y = z) = F))
T c==> c~ c= f0 f1 c= c==> c~ c= f1 f0 c= c= f1 f0 cF c= c= f1 f0 cF
+ |- ((\L. (!N. (!r. (!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))))))) L)
T * / ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cMEM b2 b1 cMEM b3 cparts b0 b2 c/\ cuniq b2 c/\ c~ c= b2 cNIL c/\ cuniq b3 c/\ c~ c= b3 cNIL ! c==> cMEM b4 b3 cMEM b4 b2 f0
+ |- ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y))))))) L)
T * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c= cl'y b0 b2 b3 f0 c= cFST cnext_el b2 f0 cFST f0 f1
- |- ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)
T * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f7 c==> cMEM f1 f8 c==> cMEM f7 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c/\ ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c~ c= cLAST f8 f5
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST y) = (FST x))) /\ (~ ((FST y) = (FST z))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> c/\ c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c/\ c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c/\ c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c/\ c~ c= cFST f5 cFST f6 c~ c= cFST f5 cFST f4 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c~ c= cLAST f0 f7
- (~ (z = y)) |- ((z = y) = F)
T c==> c~ c= f0 f1 c= c= f0 f1 cF
+ |- (((!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))) ==> ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))) N)) = ((\N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))) N))
T c= c==> ! ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c= cl'y f0 b1 b2 f1 c= cFST cnext_el b1 f1 cFST f1 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c= cl'y f0 b1 b2 f1 c= cFST cnext_el b1 f1 cFST f1 f2 * / ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 b0 b1 b2 c/\ c~ cfinal_list f0 b1 c= cl'y f0 b1 b2 f1 c= cFST cnext_el b1 f1 cFST f1 f2
+ |- (((!f. (((POWER f) (NUMERAL _0)) = I)) ==> ((\f. (((POWER f) (NUMERAL _0)) = I)) f)) = ((\f. (((POWER f) (NUMERAL _0)) = I)) f))
T c= c==> ! c= * * part cPOWER b0 cNUMERAL c_0 part cI * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0 * / c= * * part cPOWER b0 cNUMERAL c_0 part cI f0
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c/\ c= cnext_el f1 f3 f6 c/\ c= cprev_el f1 f5 f7 c/\ cMEM f8 cparts f0 f1 cMEM f7 f8 c==> cmarked_list f0 f4 f1 f2 c~ c= cLAST f8 f6
- |- ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))
T c= csplit_normal_list f0 f1 f2 f3 f4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b5 b6 cAPPEND b7 b4 cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 f3 cCONS f3 cNIL cAPPEND cCONS b0 cNIL cAPPEND cbetwn f1 b0 f4 cCONS f4 cNIL cflatten cmap b3 b4 cbetwn f2 f3 b1 / cmap / cPOWER * part cn_list f0 b4 b3 cupt cNUMERAL cBIT1 c_0 * b2 cFST b3 / csizel cfilter / c= b3 b2 cflatten f0 cnext_el f1 f4 cnext_el f1 f3
+ |- ((\i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))) i)
T * / c= crtrans f0 f1 f2 f3 b0 cSND cPOWER * * part ctransform_list f0 f3 b0 c, f1 f2 f4
+ |- ((\L. (!N. (((normal_list L) N) = ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))))))))) L)
T * / ! c= cnormal_list b0 b1 c/\ cuniq cflatten b1 c/\ call / c~ c= b2 cNIL b1 c/\ call * part cf_last b0 b1 c/\ call * part cloop_list b0 b1 ! c==> cMEM b2 cflatten b1 cSUBSET * * part cnode chypermap_of_list b0 b2 * part cset_of_list cflatten b1 f0
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST y) = (FST x))) /\ (~ ((FST y) = (FST z))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> c/\ c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c/\ c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c/\ c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c/\ c~ c= cFST f5 cFST f6 c~ c= cFST f5 cFST f4 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c~ c= cLAST f0 f7
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f2 c==> c= cl'z f0 f5 f1 f4 f6 c==> cmarked_list f0 f5 f1 f4 c==> c= cprev_el f1 f6 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f3 cF
- |- ((SUC (NUMERAL _0)) = (NUMERAL (BIT1 _0)))
T c= cSUC cNUMERAL c_0 cNUMERAL cBIT1 c_0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ c= f4 cNIL c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> c/\ c~ c= f4 cNIL c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c~ c= cLAST f7 f6
+ |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))) r)
T * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 c/\ c< cl'm f0 b0 b1 cl'q f0 f1 b0 b1 c/\ c< cl'q f0 f1 b0 b1 csizel cparts f0 b0 c/\ c< cSUC cl'm f0 b0 b1 c+ cl'p f0 f1 b0 b1 cl'q f0 f1 b0 b1 c/\ c~ c= cFST cl'y f0 b0 b1 cFST b1 c~ c= cFST cl'y f0 b0 b1 cFST cl'z f0 f1 b0 b1 f2
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) /\ (((MEM r) N) /\ (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((final_list L) r) ==> ((flag_list L) N)) /\ ((~ ((final_list L) r)) ==> ((((s_flag_list L) N) r) x)))))))))) ==> (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> c/\ cis_restricted chypermap_of_list f0 c/\ cnormal_list f0 f7 c/\ cMEM f1 f7 c/\ cMEM f6 f1 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c/\ c= cnext_el f1 f6 cf_list f0 f6 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c/\ c==> cfinal_list f0 f1 cflag_list f0 f7 c==> c~ cfinal_list f0 f1 cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((\f. (((find_face L) x) = f)) f) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> * / c= cfind_face f1 f5 b0 f10 c~ c= cLAST f9 f6
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f8 f1 f7 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f8 c==> cMEM f1 f8 c==> cMEM f7 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ |- (((!p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) ==> ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p)) = ((\p. ((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r))))))))) p))
T c= c==> ! c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3 * / c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM b0 cparts f0 f2 c/\ cuniq f2 c/\ c~ c= f2 cNIL c/\ cuniq b0 c/\ c~ c= b0 cNIL ! c==> cMEM b1 b0 cMEM b1 f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> ((uniq r) /\ ((~ (r = NIL)) /\ ((uniq p) /\ ((~ (p = NIL)) /\ (!x. (((MEM x) p) ==> ((MEM x) r)))))))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> c==> c/\ cnormal_list f1 f0 c/\ cMEM f4 f0 cMEM f7 cparts f1 f4 c/\ cuniq f4 c/\ c~ c= f4 cNIL c/\ cuniq f7 c/\ c~ c= f7 cNIL ! c==> cMEM b0 f7 cMEM b0 f4 c~ c= cLAST f7 f6
+ ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N) |- (((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> (~ ((LAST p) = y1))) = (((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))) ==> (~ ((LAST p) = y1))))
T c==> cMEM f0 cparts f1 f2 c==> cMEM f2 f3 c==> cnormal_list f1 f3 c= c==> c= cnext_el f2 cLAST f0 cf_list f1 cLAST f0 c~ c= cLAST f0 f4 c==> c==> c/\ cnormal_list f1 f3 c/\ cMEM f2 f3 cMEM f0 cparts f1 f2 c= cnext_el f2 cLAST f0 cf_list f1 cLAST f0 c~ c= cLAST f0 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N)))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f4 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f6 c==> c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ c= cLAST f8 f5
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f4 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f6 c==> c/\ cuniq cflatten f2 c/\ call / c~ c= b0 cNIL f2 c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ c= cLAST f8 f5
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) /\ ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) /\ (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f5 c==> c= cnext_el f1 f4 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
+ |- ((\x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))) z1)
T * / c==> c/\ cnormal_list f0 f1 c/\ cgood_list f0 c/\ cMEM f2 f1 c/\ cMEM f3 cparts f0 f2 cMEM b0 f3 c= cFST b0 cFST cHD f3 f4
+ |- (((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y)))
T c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1
+ (good_list L), (good_list_nodes L), (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))))) |- (~ ((LAST p) = y1))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c/\ cmarked_list f0 f1 f2 f3 c/\ c~ cfinal_list f0 f2 c/\ c= cl'y f0 f2 f3 f4 c/\ c= cl'z f0 f1 f2 f3 f5 c/\ c= cnext_el f2 f4 f6 c/\ c= cprev_el f2 f5 f7 c/\ cMEM f8 cparts f0 f2 cMEM f7 f8 c~ c= cLAST f8 f6
+ |- (((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))))) ==> ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))))) L)) = ((\L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x))))))))))))) L))
T c= c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ c< cl'm b0 b2 b3 cl'q b0 b1 b2 b3 c/\ c< cl'q b0 b1 b2 b3 csizel cparts b0 b2 c/\ c< cSUC cl'm b0 b2 b3 c+ cl'p b0 b1 b2 b3 cl'q b0 b1 b2 b3 c/\ c~ c= cFST cl'y b0 b2 b3 cFST b3 c~ c= cFST cl'y b0 b2 b3 cFST cl'z b0 b1 b2 b3 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ c< cl'm b0 b2 b3 cl'q b0 b1 b2 b3 c/\ c< cl'q b0 b1 b2 b3 csizel cparts b0 b2 c/\ c< cSUC cl'm b0 b2 b3 c+ cl'p b0 b1 b2 b3 cl'q b0 b1 b2 b3 c/\ c~ c= cFST cl'y b0 b2 b3 cFST b3 c~ c= cFST cl'y b0 b2 b3 cFST cl'z b0 b1 b2 b3 f0 * / ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c/\ c< cl'm b0 b2 b3 cl'q b0 b1 b2 b3 c/\ c< cl'q b0 b1 b2 b3 csizel cparts b0 b2 c/\ c< cSUC cl'm b0 b2 b3 c+ cl'p b0 b1 b2 b3 cl'q b0 b1 b2 b3 c/\ c~ c= cFST cl'y b0 b2 b3 cFST b3 c~ c= cFST cl'y b0 b2 b3 cFST cl'z b0 b1 b2 b3 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L) |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))) = (\x. (((((marked_list L) N) r) x) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c= / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f2 f1 b0 c~ cfinal_list f0 f1 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1 / c==> cmarked_list f0 f2 f1 b0 cMEM cytrans f0 f2 f1 b0 cNUMERAL c_0 f1
- ((\w. (((next_el ((find_face L) x)) x) = w)) w) |- (((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c= c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) ==> ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l)) = ((\l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))) l))
T c= c==> ! c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2 * / c= cMEM f0 cMAP f1 b0 c? / c/\ cMEM b1 b0 c= f0 * f1 b1 f2
+ |- (((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c~ c= cLAST f2 f3 c~ c= cLAST f2 f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ytrans L) N) r) x) (NUMERAL _0))) r)))))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cytrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c~ cfinal_list f1 f2 c==> cis_restricted chypermap_of_list f1 c==> cuniq f2 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f3 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f2 f3 cf_list f1 f3 c==> c= cnext_el f2 f4 f5 c==> c= cnext_el f2 cprev_el f2 cztrans f1 f0 f2 f3 cNUMERAL c_0 cztrans f1 f0 f2 f3 cNUMERAL c_0 c==> c= cprev_el f2 f6 f7 c==> c= cl'y f1 f2 f3 f4 c==> c= cl'z f1 f0 f2 f3 f6 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f3 f2 c==> cMEM f3 clist_of_darts f1 c==> cMEM f6 f2 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f2 c==> cMEM f2 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f2 f3 c==> cmarked_list f1 f0 f2 f3 c~ c= cLAST f8 f5
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f8 f1 f7 c==> cMEM f6 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f8 c==> cMEM f1 f8 c==> cMEM f7 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((rtrans L) N) r) x) i) = (SND (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= crtrans b0 b1 b2 b3 b4 cSND cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), (((((l'q L) N) r) x) < (sizel ((parts L) r))), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ (!x. (((MEM x) p) ==> ((MEM x) r))) |- ((!x. (((MEM x) p) ==> ((MEM x) r))) /\ (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c/\ ! c==> cMEM b0 f0 cMEM b0 f1 c==> c= cFST f2 cFST cHD f0 c==> cMEM f3 f0 c==> c= cFST f3 cFST cHD f0 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f0 cFST f5 c==> c< cl'm f6 f1 f7 cl'q f6 f8 f1 f7 c==> c< cl'q f6 f8 f1 f7 csizel cparts f6 f1 c==> c< cSUC cl'm f6 f1 f7 c+ cl'p f6 f8 f1 f7 cl'q f6 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c= cFST f4 cFST f5
+ ((MEM y1) p) |- (((MEM y1) p) /\ (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c==> c= cFST f0 cFST cHD f1 c==> c= cFST f0 cFST f2 c==> c= cFST cHD f1 cFST f3 c==> c< cl'm f4 f5 f6 cl'q f4 f7 f5 f6 c==> c< cl'q f4 f7 f5 f6 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f6 c+ cl'p f4 f7 f5 f6 cl'q f4 f7 f5 f6 c==> c~ c= cFST f2 cFST f6 c= cFST f2 cFST f3
+ |- ((\N. (!r. (!x. (!i. ((((((ytrans L) N) r) x) i) = (((l'y L) (((((rtrans L) N) r) x) i)) x)))))) N)
T * / ! ! ! c= cytrans f0 b0 b1 b2 b3 cl'y f0 crtrans f0 b0 b1 b2 b3 b2 f1
- |- ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)
T * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((((marked_list L) N) r) x) ==> ((MEM x) (list_of_darts L))) ==> (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> c==> cmarked_list f0 f7 f1 f2 cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
+ |- (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))
T c==> call * part cf_last f0 f1 c==> call * part cloop_list f0 f1 c==> ! c==> cMEM b0 cflatten f1 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f1 c==> cuniq f2 c==> c= cnext_el f2 cprev_el f2 cztrans f0 f1 f2 f3 cNUMERAL c_0 cztrans f0 f1 f2 f3 cNUMERAL c_0 c==> cMEM f4 f2 c==> cMEM f5 f2 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f0 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f0 f5 f6 c==> c= cf_list f0 f5 cnext_el f6 f5 c==> c= cnext_el f2 f8 cf_list f0 f8 c==> c~ c= f2 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f2 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f0 f2 f3 cl'q f0 f1 f2 f3 c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c==> c< cSUC cl'm f0 f2 f3 c+ cl'p f0 f1 f2 f3 cl'q f0 f1 f2 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
- (uniq ((find_face L) x)), (((find_face L) x) = f) |- ((uniq f) = T)
T c==> cuniq cfind_face f0 f1 c==> c= cfind_face f0 f1 f2 c= cuniq f2 cT
+ ((FST y1) = (FST (HD p))) |- (((FST y1) = (FST (HD p))) /\ (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))
T c==> c= cFST f0 cFST cHD f1 c/\ c= cFST f0 cFST cHD f1 c==> c= cFST f0 cFST f2 c==> c= cFST cHD f1 cFST f3 c==> c< cl'm f4 f5 f6 cl'q f4 f7 f5 f6 c==> c< cl'q f4 f7 f5 f6 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f6 c+ cl'p f4 f7 f5 f6 cl'q f4 f7 f5 f6 c==> c~ c= cFST f2 cFST f6 c= cFST f2 cFST f3
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((MEM y) f) /\ (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f)))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c/\ cMEM f3 f9 c/\ cMEM f2 f9 c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c/\ cMEM f3 f9 c/\ cMEM f2 f9 c< cindexf f7 f3 f9 cindexf f7 f2 f9 c~ c= cLAST f10 f6
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f7 f1 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cMEM f1 f8 c==> cnormal_list f0 f8 c==> cmarked_list f0 f8 f1 f7 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
- |- ((\l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2))))) l1)
T * / ! c= cMEM f0 cAPPEND b0 b1 c\/ cMEM f0 b0 cMEM f0 b1 f1
+ |- (((!x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) ==> ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x)) = ((\x. (!i. ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)))) x))
T c= c==> ! ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3 * / ! c= cztrans f0 f1 f2 b0 b1 cl'z f0 cntrans f0 f1 f2 b0 b1 crtrans f0 f1 f2 b0 b1 b0 f3
- |- (((!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) ==> ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r)) = ((\r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1))))))) r))
T c= c==> ! ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1 * / ! ! ! c= csplit_normal_list f0 b0 b1 b2 b3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b9 b10 cAPPEND b11 b8 cAPPEND cCONS b5 cNIL cAPPEND cbetwn b0 b5 b2 cCONS b2 cNIL cAPPEND cCONS b4 cNIL cAPPEND cbetwn b0 b4 b3 cCONS b3 cNIL cflatten cmap b7 b8 cbetwn b1 b2 b5 / cmap / cPOWER * part cn_list f0 b8 b7 cupt cNUMERAL cBIT1 c_0 * b6 cFST b7 / csizel cfilter / c= b7 b6 cflatten f0 cnext_el b0 b3 cnext_el b0 b2 f1
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p))), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> c/\ c= cprev_el f1 f4 f5 c/\ cMEM f8 cparts f0 f1 cMEM f5 f8 c==> cmarked_list f0 f7 f1 f6 c~ c= cLAST f8 f3
+ |- ((((((normal_list L) N) /\ (((MEM r) N) /\ ((MEM p) ((parts L) r)))) ==> (((next_el r) (LAST p)) = ((f_list L) (LAST p)))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> c/\ cnormal_list f0 f1 c/\ cMEM f2 f1 cMEM f3 cparts f0 f2 c= cnext_el f2 cLAST f3 cf_list f0 cLAST f3 c~ c= cLAST f3 f4 c~ c= cLAST f3 f4
+ ((FST (HD p)) = (FST y)) |- (((FST (HD p)) = (FST y)) /\ (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))
T c==> c= cFST cHD f0 cFST f1 c/\ c= cFST cHD f0 cFST f1 c==> c= cFST cHD f0 cFST f2 c==> c< cl'm f3 f4 f5 cl'q f3 f6 f4 f5 c==> c< cl'q f3 f6 f4 f5 csizel cparts f3 f4 c==> c< cSUC cl'm f3 f4 f5 c+ cl'p f3 f6 f4 f5 cl'q f3 f6 f4 f5 c==> c~ c= cFST f1 cFST f5 c= cFST f1 cFST f2
- |- (((!f. (!x. (((LET f) x) = (f x)))) ==> ((\f. (!x. (((LET f) x) = (f x)))) f)) = ((\f. (!x. (((LET f) x) = (f x)))) f))
T c= c==> ! ! c= cLET b0 b1 * b0 b1 * / ! c= cLET b0 b1 * b0 b1 f0 * / ! c= cLET b0 b1 * b0 b1 f0
- (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))))))) |- ((((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (~ ((((((ztrans L) N) r) x) (NUMERAL _0)) = (((((ytrans L) N) r) x) (NUMERAL _0))))) = T)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 c~ c= cztrans b0 b1 b2 b3 cNUMERAL c_0 cytrans b0 b1 b2 b3 cNUMERAL c_0 c= c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 c~ c= cztrans f0 f1 f2 f3 cNUMERAL c_0 cytrans f0 f1 f2 f3 cNUMERAL c_0 cT
+ |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))))))))))))))))))))
T c==> cMEM f0 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f2 f3 c==> c= cnext_el f1 f0 cf_list f2 f0 c==> cLET / cLET_END cfinal_list f2 b0 cfind_list f3 ce_list f0 c==> cs_flag_list f2 f3 f1 f0 c==> cuniq clist_of_darts f2 c==> call / c~ c= b0 cNIL f2 c==> ! c==> cMEM b0 clist_of_darts f2 cMEM c, cSND b0 cFST b0 clist_of_darts f2 c==> cuniq f4 c==> cMEM f0 clist_of_darts f2 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f2 f3 c==> call * part cloop_list f2 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f2 b0 * part cset_of_list cflatten f3 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f2 f3 f1 f0 cNUMERAL c_0 cztrans f2 f3 f1 f0 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f6 f1 c==> c~ c= f5 f6 c==> c= cnext_el f4 f0 f7 c==> c= cfind_face f2 f0 f4 c==> cMEM f6 f4 c==> cMEM f5 f4 c==> c< cindexf f7 f6 f4 cindexf f7 f5 f4 c==> c= cfind_face f2 f6 f4 c==> c= cf_list f2 f6 cnext_el f4 f6 c==> c= cnext_el f1 f8 cf_list f2 f8 c==> c~ c= f1 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f1 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f6 c==> c= cFST cHD f9 cFST f5 c==> c< cl'm f2 f1 f0 cl'q f2 f3 f1 f0 c==> c< cl'q f2 f3 f1 f0 csizel cparts f2 f1 c==> c< cSUC cl'm f2 f1 f0 c+ cl'p f2 f3 f1 f0 cl'q f2 f3 f1 f0 c==> c~ c= cFST f6 cFST f0 c= cFST f6 cFST f5
+ (good_list L), (good_list_nodes L), ((LAST p) = y1), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))))))))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f1 f2 c==> cmarked_list f0 f3 f4 f5 c==> c~ cfinal_list f0 f4 c==> c= cl'y f0 f4 f5 f6 c==> c= cl'z f0 f3 f4 f5 f7 c==> c= cnext_el f4 f6 f2 c==> c= cprev_el f4 f7 f8 c==> cMEM f1 cparts f0 f4 c==> cMEM f8 f1 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f3 c==> cMEM f4 f3 c==> cMEM f5 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f3 c==> c= cnext_el f4 f5 cf_list f0 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f3 ce_list f5 c==> cs_flag_list f0 f3 f4 f5 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f5 clist_of_darts f0 c==> cuniq cflatten f3 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f0 f3 c==> call * part cloop_list f0 f3 c==> ! c==> cMEM b0 cflatten f3 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f3 c==> cuniq f4 c==> c= cnext_el f4 cprev_el f4 cztrans f0 f3 f4 f5 cNUMERAL c_0 cztrans f0 f3 f4 f5 cNUMERAL c_0 c==> cMEM f7 f4 c==> cMEM f6 f4 c==> c~ c= f7 f6 c==> c= cnext_el f9 f5 f10 c==> c= cfind_face f0 f5 f9 c==> cMEM f6 f9 c==> cMEM f7 f9 c==> c< cindexf f10 f6 f9 cindexf f10 f7 f9 c==> c= cfind_face f0 f6 f9 c==> c= cf_list f0 f6 cnext_el f9 f6 c==> c= cnext_el f4 cLAST f1 cf_list f0 cLAST f1 c==> c~ c= f4 cNIL c==> cuniq f1 c==> c~ c= f1 cNIL c==> ! c==> cMEM b0 f1 cMEM b0 f4 c==> c= cFST f8 cFST cHD f1 c==> cMEM cLAST f1 f1 c==> c= cFST cLAST f1 cFST cHD f1 c==> c= cFST f2 cFST f6 c==> c= cFST cHD f1 cFST f7 c==> c< cl'm f0 f4 f5 cl'q f0 f3 f4 f5 c==> c< cl'q f0 f3 f4 f5 csizel cparts f0 f4 c==> c< cSUC cl'm f0 f4 f5 c+ cl'p f0 f3 f4 f5 cl'q f0 f3 f4 f5 c==> c~ c= cFST f6 cFST f5 c==> c~ c= cFST f6 cFST f7 cF
- |- ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)
T * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f5 c==> c= cnext_el f1 f4 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f2 c==> cMEM f1 f2 c==> cMEM f3 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cs_flag_list f0 f2 f1 f3 c~ c= cLAST f8 f6
+ |- ((((next_el ((find_face L) x)) x) = ((next_el ((find_face L) x)) x)) = ((\w. (((next_el ((find_face L) x)) x) = w)) ((next_el ((find_face L) x)) x)))
T c= c= cnext_el cfind_face f0 f1 f1 cnext_el cfind_face f0 f1 f1 * / c= cnext_el cfind_face f0 f1 f1 b0 cnext_el cfind_face f0 f1 f1
+ |- (((!L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) ==> ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L)) = ((\L. (!N. (!r. (!x. (!i. ((((((ntrans L) N) r) x) i) = (FST (((POWER ((transform_list L) x)) i) (N , r))))))))) L))
T c= c==> ! ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0 * / ! ! ! ! c= cntrans b0 b1 b2 b3 b4 cFST cPOWER * * part ctransform_list b0 b3 b4 c, b1 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c==> cs_flag_list f0 f7 f1 f2 c~ c= cLAST f8 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ ((((s_flag_list L) N) r) x)), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 cs_flag_list f0 f7 f1 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((good_list L) ==> (~ ((LAST p) = y1)))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> cgood_list f0 c~ c= cLAST f8 f4
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) r)
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 * / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 f2
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x), ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f8 f9 c==> cMEM f9 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c==> * / c= cfind_face f1 f5 b0 f10 c/\ * / c= cfind_face f1 f5 b0 f10 c~ c= cLAST f9 f6
+ |- (((?f. (((find_face L) x) = f)) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c? / c= cfind_face f0 f1 b0 c~ c= cLAST f2 f3 c~ c= cLAST f2 f3
- |- ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)
T * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
+ ((MEM y) r) |- (((MEM y) r) /\ ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))))
T c==> cMEM f0 f1 c/\ cMEM f0 f1 c==> c~ c= f2 f0 c==> c= cnext_el f3 f4 f5 c==> c= cfind_face f6 f4 f3 c==> cMEM f0 f3 c==> cMEM f2 f3 c==> c< cindexf f5 f0 f3 cindexf f5 f2 f3 c==> c= cfind_face f6 f0 f3 c==> c= cf_list f6 f0 cnext_el f3 f0 c==> c= cnext_el f1 f7 cf_list f6 f7 c==> c~ c= f1 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f1 c==> c= cFST f9 cFST cHD f8 c==> cMEM f7 f8 c==> c= cFST f7 cFST cHD f8 c==> c= cFST f7 cFST f0 c==> c= cFST cHD f8 cFST f2 c==> c< cl'm f6 f1 f4 cl'q f6 f10 f1 f4 c==> c< cl'q f6 f10 f1 f4 csizel cparts f6 f1 c==> c< cSUC cl'm f6 f1 f4 c+ cl'p f6 f10 f1 f4 cl'q f6 f10 f1 f4 c==> c~ c= cFST f0 cFST f4 c= cFST f0 cFST f2
+ |- (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))
T c==> cMEM f0 f1 c==> cMEM f2 f1 c==> c< cindexf f3 f0 f1 cindexf f3 f2 f1 c==> c= cfind_face f4 f0 f1 c==> c= cf_list f4 f0 cnext_el f1 f0 c==> c= cnext_el f5 f6 cf_list f4 f6 c==> c~ c= f5 cNIL c==> cuniq f7 c==> c~ c= f7 cNIL c==> ! c==> cMEM b0 f7 cMEM b0 f5 c==> c= cFST f8 cFST cHD f7 c==> cMEM f6 f7 c==> c= cFST f6 cFST cHD f7 c==> c= cFST f6 cFST f0 c==> c= cFST cHD f7 cFST f2 c==> c< cl'm f4 f5 f9 cl'q f4 f10 f5 f9 c==> c< cl'q f4 f10 f5 f9 csizel cparts f4 f5 c==> c< cSUC cl'm f4 f5 f9 c+ cl'p f4 f10 f5 f9 cl'q f4 f10 f5 f9 c==> c~ c= cFST f0 cFST f9 c= cFST f0 cFST f2
+ (((next_el f) x) = w) |- ((((next_el f) x) = w) /\ ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z)))))))))))))))))))))))
T c==> c= cnext_el f0 f1 f2 c/\ c= cnext_el f0 f1 f2 c==> c= cfind_face f3 f1 f0 c==> cMEM f4 f0 c==> cMEM f5 f0 c==> c< cindexf f2 f4 f0 cindexf f2 f5 f0 c==> c= cfind_face f3 f4 f0 c==> c= cf_list f3 f4 cnext_el f0 f4 c==> c= cnext_el f6 f7 cf_list f3 f7 c==> c~ c= f6 cNIL c==> cuniq f8 c==> c~ c= f8 cNIL c==> ! c==> cMEM b0 f8 cMEM b0 f6 c==> c= cFST f9 cFST cHD f8 c==> cMEM f7 f8 c==> c= cFST f7 cFST cHD f8 c==> c= cFST f7 cFST f4 c==> c= cFST cHD f8 cFST f5 c==> c< cl'm f3 f6 f1 cl'q f3 f10 f6 f1 c==> c< cl'q f3 f10 f6 f1 csizel cparts f3 f6 c==> c< cSUC cl'm f3 f6 f1 c+ cl'p f3 f10 f6 f1 cl'q f3 f10 f6 f1 c==> c~ c= cFST f4 cFST f1 c= cFST f4 cFST f5
- (NIL = p) |- (p = NIL)
T c==> c= cNIL f0 c= f0 cNIL
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c~ c= cLAST f8 f6
- (~ ((FST y) = (FST z))) |- (((FST z) = (FST y)) = F)
T c==> c~ c= cFST f0 cFST f1 c= c= cFST f1 cFST f0 cF
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((uniq (flatten N)) /\ (((all (\s. (~ (s = NIL)))) N) /\ (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> c/\ cuniq cflatten f7 c/\ call / c~ c= b0 cNIL f7 c/\ call * part cf_last f0 f7 c/\ call * part cloop_list f0 f7 ! c==> cMEM b0 cflatten f7 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f2 clist_of_darts f0 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c~ c= cLAST f8 f4
+ (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((all (f_last L)) N) /\ (((all (loop_list L)) N) /\ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f3 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f3 cf_list f0 f3 c==> c= cnext_el f1 f4 f5 c==> c= cprev_el f1 f6 f7 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f6 c==> c/\ call * part cf_last f0 f2 c/\ call * part cloop_list f0 f2 ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f2 ce_list f3 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f2 c==> cMEM f3 f1 c==> cMEM f3 clist_of_darts f0 c==> cMEM f7 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f0 c==> call * part cf_last f0 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f0 f2 c==> cs_flag_list f0 f2 f1 f3 c==> cmarked_list f0 f2 f1 f3 c~ c= cLAST f8 f5
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((((indexf w) y) f) < (((indexf w) z) f)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) /\ (~ ((LAST p) = y1)))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f8 c==> c= cprev_el f4 f2 f9 c==> c= cf_list f1 f3 cnext_el f10 f3 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f10 c==> c= cfind_face f1 f3 f10 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> c< cindexf f8 f3 f10 cindexf f8 f2 f10 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f10 c==> cMEM f3 f4 c==> cMEM f2 f10 c==> cMEM f2 f4 c==> cMEM f9 f7 c==> cMEM f7 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c/\ c= cnext_el f4 cLAST f7 cf_list f1 cLAST f7 c~ c= cLAST f7 f6
- |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- |- (((!y. (((MEM x) ((CONS y) NIL)) = (x = y))) ==> ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)) = ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y))
T c= c==> ! c= cMEM f0 cCONS b0 cNIL c= f0 b0 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1 * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) r), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (~ ((LAST p) = y1))) = T)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cprev_el f4 f2 f7 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f4 c==> cMEM f2 f4 c==> cMEM f7 f8 c==> cMEM f8 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c= c==> * / c= cnext_el cfind_face f1 f5 f5 b0 f9 c~ c= cLAST f8 f6 cT
- ((\f. (((find_face L) x) = f)) f) |- (((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f))) = (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c= c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
+ (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((MEM z) f) /\ ((((indexf w) y) f) < (((indexf w) z) f))), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (~ ((LAST p) = y1))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> ! c==> cMEM b0 clist_of_darts f1 cMEM c, cSND b0 cFST b0 clist_of_darts f1 c==> c~ c= f2 f3 c==> c~ cfinal_list f1 f4 c==> cis_restricted chypermap_of_list f1 c==> cuniq f4 c==> cuniq cflatten f0 c==> cuniq clist_of_darts f1 c==> cuniq cfind_face f1 f5 c==> cgood_list f1 c==> cgood_list_nodes f1 c==> c= cnext_el f4 f5 cf_list f1 f5 c==> c= cnext_el f4 f3 f6 c==> c= cnext_el f4 cprev_el f4 cztrans f1 f0 f4 f5 cNUMERAL c_0 cztrans f1 f0 f4 f5 cNUMERAL c_0 c==> c= cnext_el cfind_face f1 f5 f5 f7 c==> c= cprev_el f4 f2 f8 c==> c= cl'y f1 f4 f5 f3 c==> c= cl'z f1 f0 f4 f5 f2 c==> c= cfind_face f1 f5 f9 c==> c/\ cMEM f2 f9 c< cindexf f7 f3 f9 cindexf f7 f2 f9 c==> cLET / cLET_END cfinal_list f1 b0 cfind_list f0 ce_list f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f1 f0 c==> cMEM f5 f4 c==> cMEM f5 clist_of_darts f1 c==> cMEM f3 f9 c==> cMEM f3 f4 c==> cMEM f2 f9 c==> cMEM f2 f4 c==> cMEM f8 f10 c==> cMEM f10 cparts f1 f4 c==> cMEM f4 f0 c==> call / c~ c= b0 cNIL f1 c==> call * part cf_last f1 f0 c==> call * part cloop_list f1 f0 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f1 f0 c==> cs_flag_list f1 f0 f4 f5 c==> cmarked_list f1 f0 f4 f5 c~ c= cLAST f10 f6
+ |- ((((uniq r) ==> (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0)))) ==> (~ ((LAST p) = y1))) = (~ ((LAST p) = y1)))
T c= c==> c==> cuniq f0 c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0 c~ c= cLAST f4 f5 c~ c= cLAST f4 f5
+ (!x. (((MEM x) p) ==> ((MEM x) r))), (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))), (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ (z = y)), (~ (p = NIL)), (~ (r = NIL)), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq p), (uniq r), (uniq (flatten N)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), ((FST y1) = (FST y)), ((FST z1) = (FST (HD p))), ((FST (HD p)) = (FST z)), ((FST (LAST p)) = (FST (HD p))), ((LAST p) = y1), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((next_el r) (LAST p)) = ((f_list L) (LAST p))), (((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))), (((next_el ((find_face L) x)) x) = w), (((prev_el r) z) = z1), (((f_list L) y) = ((next_el f) y)), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), (((find_face L) x) = f), (((find_face L) y) = f), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))), ((((indexf w) y) f) < (((indexf w) z) f)), ((((l'm L) r) x) < ((((l'q L) N) r) x)), (((((l'q L) N) r) x) < (sizel ((parts L) r))), ((MEM x) r), ((MEM x) (list_of_darts L)), ((MEM y) f), ((MEM y) r), ((MEM z) f), ((MEM z) r), ((MEM z1) p), ((MEM (LAST p)) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((all (f_last L)) N), ((all (loop_list L)) N), ((all (\s. (~ (s = NIL)))) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> ! c==> cMEM b0 cflatten f2 cSUBSET * * part cnode chypermap_of_list f3 b0 * part cset_of_list cflatten f2 c==> ! c==> cMEM b0 clist_of_darts f3 cMEM c, cSND b0 cFST b0 clist_of_darts f3 c==> c~ c= f4 f5 c==> c~ c= f0 cNIL c==> c~ c= f1 cNIL c==> c~ cfinal_list f3 f1 c==> cis_restricted chypermap_of_list f3 c==> cuniq f0 c==> cuniq f1 c==> cuniq cflatten f2 c==> cuniq clist_of_darts f3 c==> cuniq cfind_face f3 f6 c==> cgood_list f3 c==> cgood_list_nodes f3 c==> c= cFST f7 cFST f5 c==> c= cFST f8 cFST cHD f0 c==> c= cFST cHD f0 cFST f4 c==> c= cFST cLAST f0 cFST cHD f0 c==> c= cLAST f0 f7 c==> c= cnext_el f1 f6 cf_list f3 f6 c==> c= cnext_el f1 f5 f7 c==> c= cnext_el f1 cLAST f0 cf_list f3 cLAST f0 c==> c= cnext_el f1 cprev_el f1 cztrans f3 f2 f1 f6 cNUMERAL c_0 cztrans f3 f2 f1 f6 cNUMERAL c_0 c==> c= cnext_el cfind_face f3 f6 f6 f9 c==> c= cprev_el f1 f4 f8 c==> c= cf_list f3 f5 cnext_el f10 f5 c==> c= cl'y f3 f1 f6 f5 c==> c= cl'z f3 f2 f1 f6 f4 c==> c= cfind_face f3 f6 f10 c==> c= cfind_face f3 f5 f10 c==> cLET / cLET_END cfinal_list f3 b0 cfind_list f2 ce_list f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f3 f2 c==> c< cSUC cl'm f3 f1 f6 c+ cl'p f3 f2 f1 f6 cl'q f3 f2 f1 f6 c==> c< cindexf f9 f5 f10 cindexf f9 f4 f10 c==> c< cl'm f3 f1 f6 cl'q f3 f2 f1 f6 c==> c< cl'q f3 f2 f1 f6 csizel cparts f3 f1 c==> cMEM f6 f1 c==> cMEM f6 clist_of_darts f3 c==> cMEM f5 f10 c==> cMEM f5 f1 c==> cMEM f4 f10 c==> cMEM f4 f1 c==> cMEM f8 f0 c==> cMEM cLAST f0 f0 c==> cMEM f0 cparts f3 f1 c==> cMEM f1 f2 c==> call / c~ c= b0 cNIL f3 c==> call * part cf_last f3 f2 c==> call * part cloop_list f3 f2 c==> call / c~ c= b0 cNIL f2 c==> cnormal_list f3 f2 c==> cs_flag_list f3 f2 f1 f6 c==> cmarked_list f3 f2 f1 f6 c==> c~ c= cFST f5 cFST f6 c==> c~ c= cFST f5 cFST f4 cF
+ |- ((!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) /\ ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) /\ (((MEM p) ((parts L) r)) /\ ((MEM z1) p)))))))))) ==> (~ ((LAST p) = y1))))) = T)
T c= ! ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c/\ c~ cfinal_list f0 b0 c/\ c= cl'y f0 b0 b1 f2 c/\ c= cl'z f0 f1 b0 b1 f3 c/\ c= cnext_el b0 f2 f4 c/\ c= cprev_el b0 f3 f5 c/\ cMEM f6 cparts f0 b0 cMEM f5 f6 c~ c= cLAST f6 f4 cT
+ (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cMEM f6 f2 c==> cMEM f2 cparts f0 f1 c==> cmarked_list f0 f8 f1 f7 c==> cnormal_list f0 f8 c==> cMEM f1 f8 c==> cMEM f7 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((LAST p) = y1), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq f) ==> (((MEM x) (list_of_darts L)) ==> ((uniq (flatten N)) ==> (((all (\s. (~ (s = NIL)))) N) ==> (((all (f_last L)) N) ==> (((all (loop_list L)) N) ==> ((!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) ==> ((uniq r) ==> ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) (LAST p)) = ((f_list L) (LAST p))) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM (LAST p)) p) ==> (((FST (LAST p)) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((~ ((FST y) = (FST z))) ==> F)))))))))))))))))))))))))))))))))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cLAST f2 f3 c==> c= cnext_el f1 f4 f3 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f7 f4 c==> c= cl'z f0 f8 f1 f7 f5 c==> cmarked_list f0 f8 f1 f7 c==> cMEM f2 cparts f0 f1 c==> cMEM f6 f2 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f8 c==> cMEM f1 f8 c==> cMEM f7 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f8 c==> c= cnext_el f1 f7 cf_list f0 f7 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f8 ce_list f7 c==> cs_flag_list f0 f8 f1 f7 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq f9 c==> cMEM f7 clist_of_darts f0 c==> cuniq cflatten f8 c==> call / c~ c= b0 cNIL f8 c==> call * part cf_last f0 f8 c==> call * part cloop_list f0 f8 c==> ! c==> cMEM b0 cflatten f8 cSUBSET * * part cnode chypermap_of_list f0 b0 * part cset_of_list cflatten f8 c==> cuniq f1 c==> c= cnext_el f1 cprev_el f1 cztrans f0 f8 f1 f7 cNUMERAL c_0 cztrans f0 f8 f1 f7 cNUMERAL c_0 c==> cMEM f5 f1 c==> cMEM f4 f1 c==> c~ c= f5 f4 c==> c= cnext_el f9 f7 f10 c==> c= cfind_face f0 f7 f9 c==> cMEM f4 f9 c==> cMEM f5 f9 c==> c< cindexf f10 f4 f9 cindexf f10 f5 f9 c==> c= cfind_face f0 f4 f9 c==> c= cf_list f0 f4 cnext_el f9 f4 c==> c= cnext_el f1 cLAST f2 cf_list f0 cLAST f2 c==> c~ c= f1 cNIL c==> cuniq f2 c==> c~ c= f2 cNIL c==> ! c==> cMEM b0 f2 cMEM b0 f1 c==> c= cFST f6 cFST cHD f2 c==> cMEM cLAST f2 f2 c==> c= cFST cLAST f2 cFST cHD f2 c==> c= cFST f3 cFST f4 c==> c= cFST cHD f2 cFST f5 c==> c< cl'm f0 f1 f7 cl'q f0 f8 f1 f7 c==> c< cl'q f0 f8 f1 f7 csizel cparts f0 f1 c==> c< cSUC cl'm f0 f1 f7 c+ cl'p f0 f8 f1 f7 cl'q f0 f8 f1 f7 c==> c~ c= cFST f4 cFST f7 c==> c~ c= cFST f4 cFST f5 cF
+ |- ((\x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) /\ ((((((l'q L) N) r) x) < (sizel ((parts L) r))) /\ (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) /\ ((~ ((FST (((l'y L) r) x)) = (FST x))) /\ (~ ((FST (((l'y L) r) x)) = (FST ((((l'z L) N) r) x)))))))))) x)
T * / c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 b0 c~ cfinal_list f0 f2 c/\ c< cl'm f0 f2 b0 cl'q f0 f1 f2 b0 c/\ c< cl'q f0 f1 f2 b0 csizel cparts f0 f2 c/\ c< cSUC cl'm f0 f2 b0 c+ cl'p f0 f1 f2 b0 cl'q f0 f1 f2 b0 c/\ c~ c= cFST cl'y f0 f2 b0 cFST b0 c~ c= cFST cl'y f0 f2 b0 cFST cl'z f0 f1 f2 b0 f3
- |- (((!s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) ==> ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)) = ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s))
T c= c==> ! c= c~ c= b0 cNIL c? / cMEM b1 b0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0 * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- (((!a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) ==> ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)) = ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a))
T c= c==> ! ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0 * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
+ |- ((\L. (!N. (!r. (!p. (!x. ((((normal_list L) N) /\ ((good_list L) /\ (((MEM r) N) /\ (((MEM p) ((parts L) r)) /\ ((MEM x) p))))) ==> ((FST x) = (FST (HD p))))))))) L)
T * / ! ! ! ! c==> c/\ cnormal_list b0 b1 c/\ cgood_list b0 c/\ cMEM b2 b1 c/\ cMEM b3 cparts b0 b2 cMEM b4 b3 c= cFST b4 cFST cHD b3 f0
+ (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))) |- (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r))
T c==> ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c~ cfinal_list b0 b2 cMEM cztrans b0 b1 b2 b3 cNUMERAL c_0 b2 c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 f2 f3 c~ cfinal_list f0 f2 cMEM cztrans f0 f1 f2 f3 cNUMERAL c_0 f2
+ (uniq r) |- ((uniq r) /\ ((((next_el r) ((prev_el r) (((((ztrans L) N) r) x) (NUMERAL _0)))) = (((((ztrans L) N) r) x) (NUMERAL _0))) ==> (((MEM z) r) ==> (((MEM y) r) ==> ((~ (z = y)) ==> ((((next_el f) x) = w) ==> ((((find_face L) x) = f) ==> (((MEM y) f) ==> (((MEM z) f) ==> (((((indexf w) y) f) < (((indexf w) z) f)) ==> ((((find_face L) y) = f) ==> ((((f_list L) y) = ((next_el f) y)) ==> ((((next_el r) y1) = ((f_list L) y1)) ==> ((~ (r = NIL)) ==> ((uniq p) ==> ((~ (p = NIL)) ==> ((!x. (((MEM x) p) ==> ((MEM x) r))) ==> (((FST z1) = (FST (HD p))) ==> (((MEM y1) p) ==> (((FST y1) = (FST (HD p))) ==> (((FST y1) = (FST y)) ==> (((FST (HD p)) = (FST z)) ==> (((((l'm L) r) x) < ((((l'q L) N) r) x)) ==> ((((((l'q L) N) r) x) < (sizel ((parts L) r))) ==> (((SUC (((l'm L) r) x)) < (((((l'p L) N) r) x) + ((((l'q L) N) r) x))) ==> ((~ ((FST y) = (FST x))) ==> ((FST y) = (FST z))))))))))))))))))))))))))))
T c==> cuniq f0 c/\ cuniq f0 c==> c= cnext_el f0 cprev_el f0 cztrans f1 f2 f0 f3 cNUMERAL c_0 cztrans f1 f2 f0 f3 cNUMERAL c_0 c==> cMEM f4 f0 c==> cMEM f5 f0 c==> c~ c= f4 f5 c==> c= cnext_el f6 f3 f7 c==> c= cfind_face f1 f3 f6 c==> cMEM f5 f6 c==> cMEM f4 f6 c==> c< cindexf f7 f5 f6 cindexf f7 f4 f6 c==> c= cfind_face f1 f5 f6 c==> c= cf_list f1 f5 cnext_el f6 f5 c==> c= cnext_el f0 f8 cf_list f1 f8 c==> c~ c= f0 cNIL c==> cuniq f9 c==> c~ c= f9 cNIL c==> ! c==> cMEM b0 f9 cMEM b0 f0 c==> c= cFST f10 cFST cHD f9 c==> cMEM f8 f9 c==> c= cFST f8 cFST cHD f9 c==> c= cFST f8 cFST f5 c==> c= cFST cHD f9 cFST f4 c==> c< cl'm f1 f0 f3 cl'q f1 f2 f0 f3 c==> c< cl'q f1 f2 f0 f3 csizel cparts f1 f0 c==> c< cSUC cl'm f1 f0 f3 c+ cl'p f1 f2 f0 f3 cl'q f1 f2 f0 f3 c==> c~ c= cFST f5 cFST f3 c= cFST f5 cFST f4
+ (good_list_nodes L) |- ((good_list_nodes L) = T)
T c==> cgood_list_nodes f0 c= cgood_list_nodes f0 cT
+ (uniq (list_of_darts L)) |- (((uniq ((find_face L) x)) ==> (~ ((LAST p) = y1))) = (((uniq (list_of_darts L)) ==> (uniq ((find_face L) x))) ==> (~ ((LAST p) = y1))))
T c==> cuniq clist_of_darts f0 c= c==> cuniq cfind_face f0 f1 c~ c= cLAST f2 f3 c==> c==> cuniq clist_of_darts f0 cuniq cfind_face f0 f1 c~ c= cLAST f2 f3
+ (uniq (list_of_darts L)), (((find_face L) y) = f), ((MEM y) f) |- (((((f_list L) y) = ((next_el f) y)) ==> (~ ((LAST p) = y1))) = ((((uniq (list_of_darts L)) /\ ((MEM y) (list_of_darts L))) ==> ((((POWER (f_list L)) (SUC (NUMERAL _0))) y) = (((POWER (next_el ((find_face L) y))) (SUC (NUMERAL _0))) y))) ==> (~ ((LAST p) = y1))))
T c==> cuniq clist_of_darts f0 c==> c= cfind_face f0 f1 f2 c==> cMEM f1 f2 c= c==> c= cf_list f0 f1 cnext_el f2 f1 c~ c= cLAST f3 f4 c==> c==> c/\ cuniq clist_of_darts f0 cMEM f1 clist_of_darts f0 c= cPOWER * part cf_list f0 cSUC cNUMERAL c_0 f1 cPOWER * part cnext_el cfind_face f0 f1 cSUC cNUMERAL c_0 f1 c~ c= cLAST f3 f4
- (~ ((FST y) = (FST z))) |- (~ ((FST z) = (FST y)))
T c==> c~ c= cFST f0 cFST f1 c~ c= cFST f1 cFST f0
- |- ((!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y))))))) = T)
T c= ! ! ! ! c==> c/\ cgood_list b0 c/\ cgood_list_nodes b0 c/\ cmarked_list b0 b1 b2 b3 c/\ c~ cfinal_list b0 b2 c= cl'y b0 b2 b3 f0 c= cFST cnext_el b2 f0 cFST f0 cT
- |- (((!p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) ==> ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p)) = ((\p. (!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q))))) p))
T c= c==> ! ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0 * / ! c= cLAST cAPPEND b0 b1 cCOND c= b1 cNIL cLAST b0 cLAST b1 f0
- (y = z) |- (z = y)
T c==> c= f0 f1 c= f1 f0
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) /\ ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- (!x. (((MEM x) p) ==> ((MEM x) r))) |- ((((MEM x) p) ==> ((MEM x) r)) = T)
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c= c==> cMEM f2 f0 cMEM f2 f1 cT
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- |- (((MEM x) ((CONS y) NIL)) = (x = y))
T c= cMEM f0 cCONS f1 cNIL c= f0 f1
- (~ (p = NIL)) |- (~ (NIL = p))
T c==> c~ c= f0 cNIL c~ c= cNIL f0
- |- (((!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ==> ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)) = ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2))
T c= c==> ! c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4 * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM z1) p) ==> (((LAST p) = y1) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f5 f8 c==> c= cLAST f8 f3 cF
- |- (!f. (((\f. (((find_face L) x) = f)) f) ==> (?f. (((find_face L) x) = f))))
T c==> * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> c= cLAST f8 f3 cF
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) /\ (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c/\ cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- |- (((!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) ==> ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)) = ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2))
T c= c==> ! c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2 * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cMEM f1 clist_of_darts f0 cMEM c, cSND f1 cFST f1 clist_of_darts f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((((s_flag_list L) N) r) x) /\ ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ cs_flag_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))
T c= cMEM f0 cfilter f1 f2 c/\ * f1 f0 cMEM f0 f2
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) /\ (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c/\ c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)
T * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- (~ ((FST y) = (FST z))) |- (((FST y) = (FST z)) = F)
T c==> c~ c= cFST f0 cFST f1 c= c= cFST f0 cFST f1 cF
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) |- ((\d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) d)
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 * / c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 f1
- |- ((\l. (((APPEND l) NIL) = l)) l)
T * / c= cAPPEND b0 cNIL b0 f0
- |- ((\s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))) s2)
T * / c= cMEM f0 ccat f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- (((!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) ==> ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f)) = ((\f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))) f))
T c= c==> ! ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2 * / ! ! c= csplit_normal_list f0 f1 b0 b1 b2 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b8 b9 cAPPEND b10 b7 cAPPEND cCONS b4 cNIL cAPPEND cbetwn f1 b4 b1 cCONS b1 cNIL cAPPEND cCONS b3 cNIL cAPPEND cbetwn f1 b3 b2 cCONS b2 cNIL cflatten cmap b6 b7 cbetwn b0 b1 b4 / cmap / cPOWER * part cn_list f0 b7 b6 cupt cNUMERAL cBIT1 c_0 * b5 cFST b6 / csizel cfilter / c= b6 b5 cflatten f0 cnext_el f1 b2 cnext_el f1 b1 f2
- |- (((!N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) ==> ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)) = ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N))
T c= c==> ! ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1 * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- (!x. (((MEM x) p) ==> ((MEM x) r))) |- ((\x. (((MEM x) p) ==> ((MEM x) r))) x)
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 * / c==> cMEM b0 f0 cMEM b0 f1 f2
- |- (((!x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) ==> ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)) = ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x))
T c= c==> ! ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0 * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- |- (((!L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) ==> ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L)) = ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L))
T c= c==> ! ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0 * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0
- |- (((core L) r) = ((MAP (FST o HD)) ((parts L) r)))
T c= ccore f0 f1 cMAP * * part co part cFST part cHD cparts f0 f1
- |- (((!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) ==> ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s)) = ((\s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))) s))
T c= c==> ! c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2 * / c= cMEM f0 cfilter f1 b0 c/\ * f1 f0 cMEM f0 b0 f2
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- ((\d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) d)
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 * / c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 f2
- |- (((!y. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))))) ==> ((\y. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))))) y)) = ((\y. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((l'y L) r) x) = y))))) ==> ((FST ((next_el r) y)) = (FST y)))))))) y))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c= cl'y b1 b3 b4 b0 c= cFST cnext_el b3 b0 cFST b0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c= cl'y b1 b3 b4 b0 c= cFST cnext_el b3 b0 cFST b0 f0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c= cl'y b1 b3 b4 b0 c= cFST cnext_el b3 b0 cFST b0 f0
- |- (((!a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) ==> ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a)) = ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a))
T c= c==> ! ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0 * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) /\ (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- ((\a. (!s. (((all a) s) = (!x. (((MEM x) s) ==> (a x)))))) a)
T * / ! c= call b0 b1 ! c==> cMEM b2 b1 * b0 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x)
T * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c~ c= cLAST f8 f4
- (((((l'q L) N) r) x) < (sizel ((parts L) r))) |- ((((((l'q L) N) r) x) < (sizel ((parts L) r))) = T)
T c==> c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 c= c< cl'q f0 f1 f2 f3 csizel cparts f0 f2 cT
- ((((s_flag_list L) N) r) x) |- (((((s_flag_list L) N) r) x) = T)
T c==> cs_flag_list f0 f1 f2 f3 c= cs_flag_list f0 f1 f2 f3 cT
- |- (((!L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) ==> ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L)) = ((\L. (!N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))))) L))
T c= c==> ! ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0 * / ! ! ! ! c= cl'z b0 cntrans b0 b1 b2 b3 b4 crtrans b0 b1 b2 b3 b4 b3 cztrans b0 b1 b2 b3 b4 f0
- |- (((!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) ==> ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r)) = ((\r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x))))) r))
T c= c==> ! ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2 * / ! c= ctransform_list f0 b1 c, f1 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b0 c, f1 b0 c, b7 cSND b6 cAPPEND creplace b0 cCONS cSND b6 cNIL f1 cCONS cFST b6 cNIL csplit_normal_list f0 b0 b5 b2 b4 cfind_face f0 b2 cprev_el b0 b3 cl'z f0 f1 b0 b1 cl'y f0 b0 b1 f2
- |- ((((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))) = T)
T c= c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0 cT
- (~ (p = NIL)) |- (((~ (NIL = p)) ==> ((NIL = p) = F)) = ((NIL = p) = F))
T c==> c~ c= f0 cNIL c= c==> c~ c= cNIL f0 c= c= cNIL f0 cF c= c= cNIL f0 cF
- |- ((\z1. (!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))))) z1)
T * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 b1 c= cprev_el b4 b1 b0 c= cFST b0 cFST b1 f0
- |- ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)
T * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c~ c= cLAST f8 f6
- |- (F = (~ T))
T c= cF c~ cT
- |- (((!N. (((quotient_list L) N) = ((MAP (core L)) N))) ==> ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N)) = ((\N. (((quotient_list L) N) = ((MAP (core L)) N))) N))
T c= c==> ! c= cquotient_list f0 b0 cMAP * part ccore f0 b0 * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1 * / c= cquotient_list f0 b0 cMAP * part ccore f0 b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) /\ (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), ((((marked_list L) N) r) x) |- (((((l'y L) r) x) = y) /\ ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> cmarked_list f0 f4 f1 f2 c/\ c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f4 c==> cMEM f1 f4 c==> cMEM f2 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f4 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f4 ce_list f2 c==> cs_flag_list f0 f4 f1 f2 c~ c= cLAST f8 f6
- |- ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)
T * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- |- (((!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) ==> ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x)) = ((\x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s))))) x))
T c= c==> ! ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1 * / ! c= cMEM b0 cfilter f0 b1 c/\ * f0 b0 cMEM b0 b1 f1
- |- ((((find_face L) x) = f) ==> (?f. (((find_face L) x) = f)))
T c==> c= cfind_face f0 f1 f2 c? / c= cfind_face f0 f1 b0
- |- ((\x. (!l1. (!l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))))) x)
T * / ! ! c= cMEM b0 cAPPEND b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM z1) p) /\ (((LAST p) = y1) ==> F))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f5 f8 c==> c= cLAST f8 f3 cF
- (good_list L), (good_list_nodes L) |- ((\r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ (~ ((final_list L) r))))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))) = (\r. (!x. ((((((marked_list L) N) r) x) /\ (~ ((final_list L) r))) ==> ((MEM (((((ztrans L) N) r) x) (NUMERAL _0))) r)))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c= / ! c==> c/\ cgood_list f0 c/\ cgood_list_nodes f0 c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0 / ! c==> c/\ cmarked_list f0 f1 b0 b1 c~ cfinal_list f0 b0 cMEM cztrans f0 f1 b0 b1 cNUMERAL c_0 b0
- |- ((t /\ t) = t)
T c= c/\ f0 f0 f0
- |- ((((~ (~ F)) ==> F) ==> (~ F)) = (~ F))
T c= c==> c==> c~ c~ cF cF c~ cF c~ cF
- ((((l'm L) r) x) < ((((l'q L) N) r) x)) |- (((((l'm L) r) x) < ((((l'q L) N) r) x)) = T)
T c==> c< cl'm f0 f1 f2 cl'q f0 f3 f1 f2 c= c< cl'm f0 f1 f2 cl'q f0 f3 f1 f2 cT
- |- ((\N. (!r. (!x. ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))))) N)
T * / ! ! c= ctransform_list f0 b2 c, b0 b1 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 b1 c, b0 b1 c, b8 cSND b7 cAPPEND creplace b1 cCONS cSND b7 cNIL b0 cCONS cFST b7 cNIL csplit_normal_list f0 b1 b6 b3 b5 cfind_face f0 b3 cprev_el b1 b4 cl'z f0 b0 b1 b2 cl'y f0 b1 b2 f1
- |- (T = ((NUMERAL (BIT1 _0)) = (SUC (NUMERAL _0))))
T c= cT c= cNUMERAL cBIT1 c_0 cSUC cNUMERAL c_0
- |- ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))
T c= cLAST cAPPEND f0 f1 cCOND c= f1 cNIL cLAST f0 cLAST f1
- |- (((!L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) ==> ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L)) = ((\L. (!r. (!f. (!ram1. (!ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))))))) L))
T c= c==> ! ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0 * / ! ! ! ! c= csplit_normal_list b0 b1 b2 b3 b4 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b10 b11 cAPPEND b12 b9 cAPPEND cCONS b6 cNIL cAPPEND cbetwn b1 b6 b3 cCONS b3 cNIL cAPPEND cCONS b5 cNIL cAPPEND cbetwn b1 b5 b4 cCONS b4 cNIL cflatten cmap b8 b9 cbetwn b2 b3 b6 / cmap / cPOWER * part cn_list b0 b9 b8 cupt cNUMERAL cBIT1 c_0 * b7 cFST b8 / csizel cfilter / c= b8 b7 cflatten b0 cnext_el b1 b4 cnext_el b1 b3 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) /\ ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c/\ cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- ((\s. ((~ (s = NIL)) = (?x. ((MEM x) s)))) s)
T * / c= c~ c= b0 cNIL c? / cMEM b1 b0 f0
- |- ((\N. (!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i)))))) N)
T * / ! ! ! c= cl'z f0 cntrans f0 b0 b1 b2 b3 crtrans f0 b0 b1 b2 b3 b2 cztrans f0 b0 b1 b2 b3 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f4 f1 f2 f5 c==> cmarked_list f0 f4 f1 f2 c==> c= cnext_el f1 f3 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- (~ (z = y)) |- (~ (y = z))
T c==> c~ c= f0 f1 c~ c= f1 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
- |- ((~ T) = F)
T c= c~ cT cF
- (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'y f0 f2 f3 f4 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cnext_el f2 f4 f6 c==> c= cprev_el f2 f5 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- (((!f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) ==> ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f)) = ((\f. (!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x)))))))) f))
T c= c==> ! ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0 * / ! ! c= cMEM b1 cMAP b0 b2 c? / c/\ cMEM b3 b2 c= b1 * b0 b3 f0
- |- ((\l2. (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))) l2)
T * / c= cMEM f0 cAPPEND f1 b0 c\/ cMEM f0 f1 cMEM f0 b0 f2
- |- ((\x. (!s1. (!s2. (((MEM x) ((cat s1) s2)) = (((MEM x) s1) \/ ((MEM x) s2)))))) x)
T * / ! ! c= cMEM b0 ccat b1 b2 c\/ cMEM b0 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f2 c==> c= cl'z f0 f5 f1 f4 f6 c==> cmarked_list f0 f5 f1 f4 c/\ c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f6 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f1 f4 c~ c= cLAST f8 f3
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM p) ((parts L) r)) /\ (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f8 cparts f0 f1 c==> cMEM f5 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- ((((next_el ((find_face L) x)) x) = w) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))) = T)
T c= ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 b0 c= cprev_el b3 b0 f0 c= cFST f0 cFST b0 cT
- (~ (z = y)) |- ((y = z) = F)
T c==> c~ c= f0 f1 c= c= f1 f0 cF
- ((FST z) = (FST y)) |- ((FST y) = (FST z))
T c==> c= cFST f0 cFST f1 c= cFST f1 cFST f0
- (!d. (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))) |- (((MEM d) (flatten N)) ==> (((node (hypermap_of_list L)) d) SUBSET (set_of_list (flatten N))))
T c==> ! c==> cMEM b0 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 b0 * part cset_of_list cflatten f0 c==> cMEM f2 cflatten f0 cSUBSET * * part cnode chypermap_of_list f1 f2 * part cset_of_list cflatten f0
- |- (!w. (((\w. (((next_el ((find_face L) x)) x) = w)) w) ==> (?w. (((next_el ((find_face L) x)) x) = w))))
T c==> * / c= cnext_el cfind_face f0 f1 f1 b0 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((!q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) ==> ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q)) = ((\q. ((LAST ((APPEND p) q)) = (((COND (q = NIL)) (LAST p)) (LAST q)))) q))
T c= c==> ! c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1 * / c= cLAST cAPPEND f0 b0 cCOND c= b0 cNIL cLAST f0 cLAST b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f6 c==> cMEM f6 clist_of_darts f0 c~ c= cLAST f8 f3
- |- (((!y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) ==> ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y)) = ((\y. (!l. (((MEM y) ((MAP f) l)) = (?x. (((MEM x) l) /\ (y = (f x))))))) y))
T c= c==> ! ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1 * / ! c= cMEM b0 cMAP f0 b1 c? / c/\ cMEM b2 b1 c= b0 * f0 b2 f1
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f2 c==> c= cl'z f0 f5 f1 f4 f6 c==> cmarked_list f0 f5 f1 f4 c==> c= cprev_el f1 f6 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f5 c==> cMEM f1 f5 c==> cMEM f4 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f5 c==> c= cnext_el f1 f4 cf_list f0 f4 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f5 ce_list f4 c==> cs_flag_list f0 f5 f1 f4 c~ c= cLAST f8 f3
- |- (((MEM x) ((APPEND l1) l2)) = (((MEM x) l1) \/ ((MEM x) l2)))
T c= cMEM f0 cAPPEND f1 f2 c\/ cMEM f0 f1 cMEM f0 f2
- |- (((!L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) ==> ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L)) = ((\L. (!s. (((f_last L) s) = (((next_el s) (LAST s)) = ((f_list L) (LAST s)))))) L))
T c= c==> ! ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0 * / ! c= cf_last b0 b1 c= cnext_el b1 cLAST b1 cf_list b0 cLAST b1 f0
- |- (((!z1. (!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))))) ==> ((\z1. (!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))))) z1)) = ((\z1. (!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z))))))))) z1))
T c= c==> ! ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 b1 c= cprev_el b4 b1 b0 c= cFST b0 cFST b1 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 b1 c= cprev_el b4 b1 b0 c= cFST b0 cFST b1 f0 * / ! ! ! ! ! c==> c/\ cgood_list b2 c/\ cgood_list_nodes b2 c/\ cmarked_list b2 b3 b4 b5 c/\ c~ cfinal_list b2 b4 c/\ c= cl'z b2 b3 b4 b5 b1 c= cprev_el b4 b1 b0 c= cFST b0 cFST b1 f0
- |- (((!l. (((APPEND l) NIL) = l)) ==> ((\l. (((APPEND l) NIL) = l)) l)) = ((\l. (((APPEND l) NIL) = l)) l))
T c= c==> ! c= cAPPEND b0 cNIL b0 * / c= cAPPEND b0 cNIL b0 f0 * / c= cAPPEND b0 cNIL b0 f0
- ((\f. (((find_face L) x) = f)) f) |- (((\f. (((find_face L) x) = f)) f) /\ (?f. (((find_face L) x) = f)))
T c==> * / c= cfind_face f0 f1 b0 f2 c/\ * / c= cfind_face f0 f1 b0 f2 c? / c= cfind_face f0 f1 b0
- |- ((~ (s = NIL)) = (?x. ((MEM x) s)))
T c= c~ c= f0 cNIL c? / cMEM b0 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- (((quotient_list L) N) = ((MAP (core L)) N))
T c= cquotient_list f0 f1 cMAP * part ccore f0 f1
- |- (((!z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))) ==> ((\z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))) z)) = ((\z. (!L. (!N. (!r. (!x. (((good_list L) /\ ((good_list_nodes L) /\ (((((marked_list L) N) r) x) /\ ((~ ((final_list L) r)) /\ ((((((l'z L) N) r) x) = z) /\ (((prev_el r) z) = z1)))))) ==> ((FST z1) = (FST z)))))))) z))
T c= c==> ! ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 b0 c= cprev_el b3 b0 f0 c= cFST f0 cFST b0 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 b0 c= cprev_el b3 b0 f0 c= cFST f0 cFST b0 f1 * / ! ! ! ! c==> c/\ cgood_list b1 c/\ cgood_list_nodes b1 c/\ cmarked_list b1 b2 b3 b4 c/\ c~ cfinal_list b1 b3 c/\ c= cl'z b1 b2 b3 b4 b0 c= cprev_el b3 b0 f0 c= cFST f0 cFST b0 f1
- (good_list L) |- ((good_list_nodes L) ==> (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'y f0 f2 f3 f4 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cnext_el f2 f4 f6 c==> c= cprev_el f2 f5 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c~ c= cLAST f8 f6
- |- ((((next_el ((find_face L) x)) x) = w) = ((\w. (((next_el ((find_face L) x)) x) = w)) w))
T c= c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) = T)
T c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 c= cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f2 cT
- ((((((ztrans L) N) r) x) i) = ((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x)) |- (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))
T c==> c= cztrans f0 f1 f2 f3 f4 cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 c= cl'z f0 cntrans f0 f1 f2 f3 f4 crtrans f0 f1 f2 f3 f4 f3 cztrans f0 f1 f2 f3 f4
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f6 f1 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- (uniq ((find_face L) x)) |- ((uniq ((find_face L) x)) = T)
T c==> cuniq cfind_face f0 f1 c= cuniq cfind_face f0 f1 cT
- ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) |- (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) = T)
T c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c= cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 cT
- |- (((\x. (f x)) y) = (f y))
T c= * / * f0 b0 f1 * f0 f1
- |- (((!r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) ==> ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r)) = ((\r. (!x. (!i. (((((l'z L) (((((ntrans L) N) r) x) i)) (((((rtrans L) N) r) x) i)) x) = (((((ztrans L) N) r) x) i))))) r))
T c= c==> ! ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2 * / ! ! c= cl'z f0 cntrans f0 f1 b0 b1 b2 crtrans f0 f1 b0 b1 b2 b1 cztrans f0 f1 b0 b1 b2 f2
- |- (((!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) ==> ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L)) = ((\L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))) L))
T c= c==> ! c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1 * / c= cMEM f0 cflatten b0 c? / c/\ cMEM b1 b0 cMEM f0 b1 f1
- |- (((!x. (((\f. (((find_face L) x) = f)) x) ==> (?f. (((find_face L) x) = f)))) ==> ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f)))) = ((?f. (((find_face L) x) = f)) ==> (?f. (((find_face L) x) = f))))
T c= c==> ! c==> * / c= cfind_face f0 f1 b1 b0 c? / c= cfind_face f0 f1 b1 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0 c==> c? / c= cfind_face f0 f1 b0 c? / c= cfind_face f0 f1 b0
- (!x. (((MEM x) p) ==> ((MEM x) r))) |- (((MEM x) p) ==> ((MEM x) r))
T c==> ! c==> cMEM b0 f0 cMEM b0 f1 c==> cMEM f2 f0 cMEM f2 f1
- |- ((\ram2. ((((((split_normal_list L) r) f) ram1) ram2) = ((LET (\ram1'. (LET_END ((LET (\ram2'. (LET_END ((LET (\sz. (LET_END ((LET (\nd. (LET_END ((LET (\new2. (LET_END ((LET (\new1. (LET_END ((LET (\f1. (LET_END ((LET (\f2. (LET_END (((APPEND (REVERSE new1)) f1) , ((APPEND f2) new2))))) ((APPEND ((CONS ram2') NIL)) ((APPEND (((betwn r) ram2') ram1)) ((CONS ram1) NIL))))))) ((APPEND ((CONS ram1') NIL)) ((APPEND (((betwn r) ram1') ram2)) ((CONS ram2) NIL))))))) (flatten ((map nd) new2)))))) (((betwn f) ram1) ram2'))))) (\x. ((map (\i. (((POWER (n_list L)) i) x))) ((upt (NUMERAL (BIT1 _0))) (sz (FST x))))))))) (\x. (sizel ((filter (\t. (t = x))) (flatten L)))))))) ((next_el r) ram2))))) ((next_el r) ram1)))) ram2)
T * / c= csplit_normal_list f0 f1 f2 f3 b0 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END c, cAPPEND cREVERSE b6 b7 cAPPEND b8 b5 cAPPEND cCONS b2 cNIL cAPPEND cbetwn f1 b2 f3 cCONS f3 cNIL cAPPEND cCONS b1 cNIL cAPPEND cbetwn f1 b1 b0 cCONS b0 cNIL cflatten cmap b4 b5 cbetwn f2 f3 b2 / cmap / cPOWER * part cn_list f0 b5 b4 cupt cNUMERAL cBIT1 c_0 * b3 cFST b4 / csizel cfilter / c= b4 b3 cflatten f0 cnext_el f1 b0 cnext_el f1 f3 f4
- |- ((\t. ((LET_END t) = t)) t)
T * / c= cLET_END b0 b0 f0
- |- (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l))))
T c= cMEM f0 cflatten f1 c? / c/\ cMEM b0 f1 cMEM f0 b0
- ((all (f_last L)) N) |- (((all (f_last L)) N) = T)
T c==> call * part cf_last f0 f1 c= call * part cf_last f0 f1 cT
- |- ((?w. (((next_el ((find_face L) x)) x) = w)) ==> (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c? / c= cnext_el cfind_face f0 f1 f1 b0 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- (((APPEND l) NIL) = l)
T c= cAPPEND f0 cNIL f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((((marked_list L) N) r) x) |- ((((next_el r) y) = y1) /\ ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F)))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cl'y f0 f1 f4 f2 c==> c= cl'z f0 f5 f1 f4 f6 c==> cmarked_list f0 f5 f1 f4 c/\ c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f6 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f3 cF
- |- ((((transform_list L) x) (N , r)) = ((LET (\y. (LET_END ((LET (\z. (LET_END ((LET (\ram2. (LET_END ((LET (\f. (LET_END ((LET (\split. (LET_END ((LET (\N'. (LET_END (((COND ((final_list L) r)) (N , r)) (N' , (SND split)))))) ((APPEND (((replace r) ((CONS (SND split)) NIL)) N)) ((CONS (FST split)) NIL)))))) (((((split_normal_list L) r) f) y) ram2))))) ((find_face L) y))))) ((prev_el r) z))))) ((((l'z L) N) r) x))))) (((l'y L) r) x)))
T c= ctransform_list f0 f1 c, f2 f3 cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cLET / cLET_END cCOND cfinal_list f0 f3 c, f2 f3 c, b5 cSND b4 cAPPEND creplace f3 cCONS cSND b4 cNIL f2 cCONS cFST b4 cNIL csplit_normal_list f0 f3 b3 b0 b2 cfind_face f0 b0 cprev_el f3 b1 cl'z f0 f2 f3 f1 cl'y f0 f3 f1
- ((((indexf w) y) f) < (((indexf w) z) f)) |- (((((indexf w) y) f) < (((indexf w) z) f)) = T)
T c==> c< cindexf f0 f1 f2 cindexf f0 f3 f2 c= c< cindexf f0 f1 f2 cindexf f0 f3 f2 cT
- (((find_face L) x) = f) |- ((\f. (((find_face L) x) = f)) f)
T c==> c= cfind_face f0 f1 f2 * / c= cfind_face f0 f1 b0 f2
- |- ((\y. (((MEM x) ((CONS y) NIL)) = (x = y))) y)
T * / c= cMEM f0 cCONS b0 cNIL c= f0 b0 f1
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> ((uniq (list_of_darts L)) ==> (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f2 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cs_flag_list f0 f7 f1 f2 c==> cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- (good_list L), (good_list_nodes L) |- ((good_list_nodes L) /\ (((((marked_list L) N) r) x) ==> ((~ ((final_list L) r)) ==> (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))))))))))
T c==> cgood_list f0 c==> cgood_list_nodes f0 c/\ cgood_list_nodes f0 c==> cmarked_list f0 f1 f2 f3 c==> c~ cfinal_list f0 f2 c==> c= cl'y f0 f2 f3 f4 c==> c= cl'z f0 f1 f2 f3 f5 c==> c= cnext_el f2 f4 f6 c==> c= cprev_el f2 f5 f7 c==> cMEM f8 cparts f0 f2 c==> cMEM f7 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f1 c==> cMEM f2 f1 c==> cMEM f3 f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f1 c==> c= cnext_el f2 f3 cf_list f0 f3 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f1 ce_list f3 c==> cs_flag_list f0 f1 f2 f3 c~ c= cLAST f8 f6
- (((next_el ((find_face L) x)) x) = w) |- ((\w. (((next_el ((find_face L) x)) x) = w)) w)
T c==> c= cnext_el cfind_face f0 f1 f1 f2 * / c= cnext_el cfind_face f0 f1 f1 b0 f2
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), ((((marked_list L) N) r) x) |- ((~ ((final_list L) r)) /\ (((((l'y L) r) x) = y) ==> ((((((l'z L) N) r) x) = z) ==> ((((next_el r) y) = y1) ==> ((((prev_el r) z) = z1) ==> (((MEM p) ((parts L) r)) ==> (((MEM z1) p) ==> (((LAST p) = y1) ==> F))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> cmarked_list f0 f2 f1 f3 c/\ c~ cfinal_list f0 f1 c==> c= cl'y f0 f1 f3 f4 c==> c= cl'z f0 f2 f1 f3 f5 c==> c= cnext_el f1 f4 f6 c==> c= cprev_el f1 f5 f7 c==> cMEM f8 cparts f0 f1 c==> cMEM f7 f8 c==> c= cLAST f8 f6 cF
- |- (((!x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) ==> ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x)) = ((\x. (!L. (((MEM x) (flatten L)) = (?l. (((MEM l) L) /\ ((MEM x) l)))))) x))
T c= c==> ! ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0 * / ! c= cMEM b0 cflatten b1 c? / c/\ cMEM b2 b1 cMEM b0 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq (list_of_darts L)) /\ (((all (\l. (~ (l = NIL)))) L) ==> ((!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))) ==> ((uniq ((find_face L) x)) ==> (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1)))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ cuniq clist_of_darts f0 c==> call / c~ c= b0 cNIL f0 c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- ((\L. (!N. (((quotient_list L) N) = ((MAP (core L)) N)))) L)
T * / ! c= cquotient_list b0 b1 cMAP * part ccore b0 b1 f0
- |- ((\a. (!x. (!s. (((MEM x) ((filter a) s)) = ((a x) /\ ((MEM x) s)))))) a)
T * / ! ! c= cMEM b1 cfilter b0 b2 c/\ * b0 b1 cMEM b1 b2 f0
- (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((normal_list L) N), ((((marked_list L) N) r) x) |- (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1))))))))
T c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cnormal_list f0 f7 c==> cmarked_list f0 f7 f1 f6 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
- |- (((!L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) ==> ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L)) = ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L))
T c= c==> ! ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0 * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0
- (p = NIL) |- (NIL = p)
T c==> c= f0 cNIL c= cNIL f0
- |- (~ (~ T))
T c~ c~ cT
- (!d. (((MEM d) (list_of_darts L)) ==> ((MEM ((SND d) , (FST d))) (list_of_darts L)))), (~ ((final_list L) r)), (is_restricted (hypermap_of_list L)), (uniq (list_of_darts L)), (uniq ((find_face L) x)), (good_list L), (good_list_nodes L), (((next_el r) x) = ((f_list L) x)), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))), ((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)), ((MEM x) r), ((MEM z1) p), ((MEM p) ((parts L) r)), ((MEM r) N), ((all (\l. (~ (l = NIL)))) L), ((normal_list L) N), ((((s_flag_list L) N) r) x), ((((marked_list L) N) r) x) |- ((uniq ((find_face L) x)) /\ (((MEM x) (list_of_darts L)) ==> (~ ((LAST p) = y1))))
T c==> ! c==> cMEM b0 clist_of_darts f0 cMEM c, cSND b0 cFST b0 clist_of_darts f0 c==> c~ cfinal_list f0 f1 c==> cis_restricted chypermap_of_list f0 c==> cuniq clist_of_darts f0 c==> cuniq cfind_face f0 f2 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 cf_list f0 f2 c==> c= cnext_el f1 f3 f4 c==> c= cprev_el f1 f5 f6 c==> c= cl'y f0 f1 f2 f3 c==> c= cl'z f0 f7 f1 f2 f5 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f2 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> cMEM f2 f1 c==> cMEM f6 f8 c==> cMEM f8 cparts f0 f1 c==> cMEM f1 f7 c==> call / c~ c= b0 cNIL f0 c==> cnormal_list f0 f7 c==> cs_flag_list f0 f7 f1 f2 c==> cmarked_list f0 f7 f1 f2 c/\ cuniq cfind_face f0 f2 c==> cMEM f2 clist_of_darts f0 c~ c= cLAST f8 f4
- |- (((!x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) ==> ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x)) = ((\x. (!y. (((MEM x) ((CONS y) NIL)) = (x = y)))) x))
T c= c==> ! ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0 * / ! c= cMEM b0 cCONS b1 cNIL c= b0 b1 f0
- (((next_el ((find_face L) x)) x) = w) |- ((((next_el ((find_face L) x)) x) = w) /\ (?w. (((next_el ((find_face L) x)) x) = w)))
T c==> c= cnext_el cfind_face f0 f1 f1 f2 c/\ c= cnext_el cfind_face f0 f1 f1 f2 c? / c= cnext_el cfind_face f0 f1 f1 b0
- |- ((\L. (!r. (((core L) r) = ((MAP (FST o HD)) ((parts L) r))))) L)
T * / ! c= ccore b0 b1 cMAP * * part co part cFST part cHD cparts b0 b1 f0
- (~ ((final_list L) r)), (good_list L), (good_list_nodes L), (((next_el r) y) = y1), (((prev_el r) z) = z1), ((((l'y L) r) x) = y), (((((l'z L) N) r) x) = z), ((MEM z1) p), ((MEM p) ((parts L) r)), ((((marked_list L) N) r) x) |- (((MEM z1) p) /\ ((is_restricted (hypermap_of_list L)) ==> (((normal_list L) N) ==> (((MEM r) N) ==> (((MEM x) r) ==> (((LET (\qs. (LET_END (((all uniq) qs) /\ ((all (\v. ((sizel ((filter (MEM v)) qs)) > (NUMERAL (BIT1 _0))))) (flatten qs)))))) ((quotient_list L) N)) ==> ((((next_el r) x) = ((f_list L) x)) ==> (((LET (\r'. (LET_END ((final_list L) r')))) ((find_list N) (e_list x))) ==> (((((s_flag_list L) N) r) x) ==> (~ ((LAST p) = y1)))))))))))
T c==> c~ cfinal_list f0 f1 c==> cgood_list f0 c==> cgood_list_nodes f0 c==> c= cnext_el f1 f2 f3 c==> c= cprev_el f1 f4 f5 c==> c= cl'y f0 f1 f6 f2 c==> c= cl'z f0 f7 f1 f6 f4 c==> cMEM f5 f8 c==> cMEM f8 cparts f0 f1 c==> cmarked_list f0 f7 f1 f6 c/\ cMEM f5 f8 c==> cis_restricted chypermap_of_list f0 c==> cnormal_list f0 f7 c==> cMEM f1 f7 c==> cMEM f6 f1 c==> cLET / cLET_END c/\ call part cuniq b0 call / c> csizel cfilter * part cMEM b1 b0 cNUMERAL cBIT1 c_0 cflatten b0 cquotient_list f0 f7 c==> c= cnext_el f1 f6 cf_list f0 f6 c==> cLET / cLET_END cfinal_list f0 b0 cfind_list f7 ce_list f6 c==> cs_flag_list f0 f7 f1 f6 c~ c= cLAST f8 f3
