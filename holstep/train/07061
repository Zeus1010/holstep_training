N COMPLEX_POLYFUN_LINEAR_FACTOR
C |- (!a. (!c. (!n. (?b. (!z. (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i)))) = ((vector_add ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))))))))))
T c? / ! c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvector_add ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2
D TRUTH
A |- T
T cT
D EXCLUDED_MIDDLE
A |- (!t. (t \/ (~ t)))
T c\/ f0 c~ f0
D LE_1
A |- ((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) /\ ((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) /\ ((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) /\ (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))))))))
T c/\ ! c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 c/\ ! c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 c/\ ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0
D IN_NUMSEG
A |- (!m. (!n. (!p. ((p IN (m .. n)) = ((m <= p) /\ (p <= n))))))
T c= cIN f0 * * part c.. f1 f2 c/\ c<= f1 f0 c<= f0 f2
D NUMSEG_SING
A |- (!n. ((n .. n) = (n INSERT EMPTY)))
T c= * * part c.. f0 f0 * * part cINSERT f0 part cEMPTY
D VSUM_0
A |- (((vsum s) (\x. (vec (NUMERAL _0)))) = (vec (NUMERAL _0)))
T c= cvsum f0 / cvec cNUMERAL c_0 cvec cNUMERAL c_0
D VSUM_EQ
A |- (!f. (!g. (!s. ((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) f) = ((vsum s) g))))))
T c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 f1 cvsum f0 f2
D VSUM_SING
A |- (!f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x))))
T c= cvsum * * part cINSERT f0 part cEMPTY f1 * f1 f0
D complex_pow
A |- ((((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0))))) /\ (!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))))
T c/\ c= ccomplex_pow f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ! c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0
D COMPLEX_MUL_RZERO
A |- (!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul f0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_MUL_LZERO
A |- (!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_REFL
A |- (!x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0)))))
T c= cvector_sub f0 f0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_EQ_SUB_RADD
A |- (!x. (!y. (!z. ((((vector_sub x) y) = z) = (x = ((vector_add z) y))))))
T c= c= cvector_sub f0 f1 f2 c= f0 cvector_add f2 f1
D COMPLEX_VEC_0
A |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
D COMPLEX_SUB_POLYFUN
A |- (!a. (!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f3 b0 ccomplex_mul cvector_sub f2 f3 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f3 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f2 b0
- ((NUMERAL (BIT1 _0)) <= n) |- ((NUMERAL _0) < n)
T c==> c<= cNUMERAL cBIT1 c_0 f0 c< cNUMERAL c_0 f0
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b x)) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f1 b1 ccomplex_pow f2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f3
- (x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) |- ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = ((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0 ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0
- |- (((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = ((complex_mul (c i)) ((complex_pow a) i)))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0 cT
+ |- ((n = (NUMERAL _0)) \/ (~ (n = (NUMERAL _0))))
T c\/ c= f0 cNUMERAL c_0 c~ c= f0 cNUMERAL c_0
- |- (!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = ((complex_mul (c i)) ((complex_pow a) i)))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0
+ |- (?b. (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))
T c? / ! c= ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b3 ccomplex_pow f0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b2 ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- ((!n. (?b. (!z. (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i)))) = ((vector_add ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))))))) = T)
T c= ! c? / ! c= cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b3 ccomplex_pow b2 b3 cvector_add ccomplex_mul cvector_sub b2 f1 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b1 b3 ccomplex_pow b2 b3 cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b3 ccomplex_pow f1 b3 cT
- |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0)))))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))))) = (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0)))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ |- ((\x. (((vsum (x INSERT EMPTY)) f) = (f x))) x)
T * / c= cvsum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1
+ |- ((\z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))) z)
T * / c= c= f0 cvector_add b0 f1 c= cvector_sub f0 f1 b0 f2
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul (c x)) ((complex_pow a) x)) = ((complex_mul (c x)) ((complex_pow a) x))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul (c x)) ((complex_pow a) x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
- |- (((NUMERAL _0) < n) ==> (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c< cNUMERAL c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT
- (~ (n = (NUMERAL _0))) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- (!z. ((vec (NUMERAL _0)) = ((complex_mul ((vector_sub z) a)) (vec (NUMERAL _0)))))
T c= cvec cNUMERAL c_0 ccomplex_mul cvector_sub f0 f1 cvec cNUMERAL c_0
- |- (((!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0)))))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0))))))) = (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0)))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 * f3 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 f3
- |- (((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0)))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0))))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0)))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
- |- (((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b x)) ((complex_pow z) x)) = ((complex_mul (b x)) ((complex_pow z) x)))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0 cT
- (~ (n = (NUMERAL _0))) |- ((((NUMERAL _0) < n) ==> (((NUMERAL (BIT1 _0)) <= n) = T)) = (((NUMERAL (BIT1 _0)) <= n) = T))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c< cNUMERAL c_0 f0 c= c<= cNUMERAL cBIT1 c_0 f0 cT c= c<= cNUMERAL cBIT1 c_0 f0 cT
- |- ((!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * f0 b0 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 f0
+ |- (T = (!z. ((vec (NUMERAL _0)) = ((complex_mul ((vector_sub z) a)) (vec (NUMERAL _0))))))
T c= cT ! c= cvec cNUMERAL c_0 ccomplex_mul cvector_sub b0 f0 cvec cNUMERAL c_0
+ |- ((!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i))))))) = ((\b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) (\i. (Cx (real_of_num (NUMERAL _0))))))
T c= ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow b0 b1 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub b0 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow b0 b1 * / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 / cCx creal_of_num cNUMERAL c_0
- |- (((((x + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))) = ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = T)
T c= c==> c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 f1 c<= f1 f2 c= ccomplex_mul * f3 f1 ccomplex_pow f4 c- c- f1 f0 cNUMERAL cBIT1 c_0 ccomplex_mul * f3 f1 ccomplex_pow f4 c- c- f1 f0 cNUMERAL cBIT1 c_0 cT
- |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = ((complex_mul (c i)) ((complex_pow a) i))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
+ ((x = ((vector_add z) y)) = (((vector_sub x) y) = z)) |- ((((vector_sub x) y) = z) = (x = ((vector_add z) y)))
T c==> c= c= f0 cvector_add f1 f2 c= cvector_sub f0 f2 f1 c= c= cvector_sub f0 f2 f1 c= f0 cvector_add f1 f2
+ |- (((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) ==> ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n)) = ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n))
T c= c==> ! c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0 * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0
- (x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) |- ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) /\ (((complex_mul (b x)) ((complex_pow z) x)) = ((complex_mul (b x)) ((complex_pow z) x))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c/\ cIN f0 * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0
+ |- (((!x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
- ((NUMERAL _0) < n) |- (((~ (n = (NUMERAL _0))) ==> ((n = (NUMERAL _0)) = F)) = ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL c_0 f0 c= c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF c= c= f0 cNUMERAL c_0 cF
+ |- ((\x. (((complex_mul (Cx (real_of_num (NUMERAL _0)))) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= ccomplex_mul cCx creal_of_num cNUMERAL c_0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))))
T c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2
+ |- ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))
T c= c= f0 cvector_add f1 f2 c= cvector_sub f0 f2 f1
- |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 f0 c= ccomplex_mul * f1 b1 ccomplex_pow f2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f3
- |- (((NUMERAL (BIT1 _0)) <= n) ==> (((NUMERAL _0) < n) = T))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c< cNUMERAL c_0 f0 cT
- |- ((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = (g j)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f4
- |- (((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0 ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0 cT
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ ((n = (NUMERAL _0)) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= c= f0 cNUMERAL c_0 cF
+ |- ((!z. t) = t)
T c= ! f0 f0
- ((NUMERAL (BIT1 _0)) <= n) |- (((NUMERAL (BIT1 _0)) <= n) /\ (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c/\ c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f3 b0 ccomplex_mul cvector_sub f2 f3 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f3 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f2 b0
- |- (((x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))) = ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))))) = T)
T c= c==> cIN f0 * * part c.. c+ f1 cNUMERAL cBIT1 c_0 f2 c= ccomplex_mul * f3 f0 ccomplex_pow f4 c- c- f0 f1 cNUMERAL cBIT1 c_0 ccomplex_mul * f3 f0 ccomplex_pow f4 c- c- f0 f1 cNUMERAL cBIT1 c_0 cT
- ((NUMERAL (BIT1 _0)) <= n) |- (((~ ((NUMERAL _0) = n)) ==> (((NUMERAL _0) = n) = F)) = (((NUMERAL _0) = n) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c==> c~ c= cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF c= c= cNUMERAL c_0 f0 cF
+ |- ((?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) = (?b. (!z. (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i)))) = ((vector_add ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))))))))
T c= c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 c? / ! c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvector_add ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2
- ((NUMERAL (BIT1 _0)) <= n) |- (~ (n = (NUMERAL _0)))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c~ c= f0 cNUMERAL c_0
+ |- (((!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))) ==> ((\z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))) z)) = ((\z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))) z))
T c= c==> ! c= c= f0 cvector_add b0 f1 c= cvector_sub f0 f1 b0 * / c= c= f0 cvector_add b0 f1 c= cvector_sub f0 f1 b0 f2 * / c= c= f0 cvector_add b0 f1 c= cvector_sub f0 f1 b0 f2
- |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 f0
- |- (((!x. ((x IN s) ==> ((f x) = (g x)))) ==> (((vsum s) (\j. (f j))) = ((vsum s) g))) = T)
T c= c==> ! c==> cIN b0 f0 c= * f1 b0 * f2 b0 c= cvsum f0 / * f1 b0 cvsum f0 f2 cT
+ |- ((\f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x)))) f)
T * / ! c= cvsum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0
- |- ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL _0) < n))) n)
T * / c==> c~ c= b0 cNUMERAL c_0 c< cNUMERAL c_0 b0 f0
- |- ((?b. t) = t)
T c= c? / f0 f0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 * f3 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f3
- |- (!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- |- (((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))) = T)
T c= c==> cIN f0 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 cT
- (~ (n = (NUMERAL _0))) |- (~ ((NUMERAL _0) = n))
T c==> c~ c= f0 cNUMERAL c_0 c~ c= cNUMERAL c_0 f0
+ |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
- (~ (n = (NUMERAL _0))) |- (T = (~ (n = (NUMERAL _0))))
T c==> c~ c= f0 cNUMERAL c_0 c= cT c~ c= f0 cNUMERAL c_0
- (((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) |- ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) /\ (((complex_mul (b i)) ((complex_pow z) i)) = ((complex_mul (b i)) ((complex_pow z) i))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0
+ (((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) |- ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 f0 ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL c_0
+ |- (((!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))) ==> ((\y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))) y)) = ((\y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))) y))
T c= c==> ! ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow f1 b2 cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow b0 b2 ccomplex_mul cvector_sub f1 b0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 b1 / ccomplex_mul * f0 b3 ccomplex_pow b0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b2 * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow f1 b2 cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow b0 b2 ccomplex_mul cvector_sub f1 b0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 b1 / ccomplex_mul * f0 b3 ccomplex_pow b0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b2 f2 * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow f1 b2 cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow b0 b2 ccomplex_mul cvector_sub f1 b0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 b1 / ccomplex_mul * f0 b3 ccomplex_pow b0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b2 f2
- |- ((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) /\ (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0)))))))
T c/\ ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0
+ |- (((!x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0 * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0
- |- (((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) ==> ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n)) = ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n))
T c= c==> ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0 * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
+ (~ (n = (NUMERAL _0))) |- ((NUMERAL (BIT1 _0)) <= n)
T c==> c~ c= f0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 f0
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 f0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 b0 f0
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * f1 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f1
+ |- ((~ (n = (NUMERAL _0))) ==> (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))))
T c==> c~ c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
- |- (((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 cT
- (((NUMERAL _0) <= i) /\ (i <= ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) |- ((((NUMERAL _0) <= i) /\ (i <= ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) /\ ((Cx (real_of_num (NUMERAL _0))) = (Cx (real_of_num (NUMERAL _0)))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
- (x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) |- ((x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) = T)
T c==> cIN f0 * * part c.. c+ f1 cNUMERAL cBIT1 c_0 f2 c= cIN f0 * * part c.. c+ f1 cNUMERAL cBIT1 c_0 f2 cT
- (((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) |- ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) /\ (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c/\ c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0 ccomplex_mul cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_pow f4 f0
+ (~ (n = (NUMERAL _0))) |- ((((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))))) = (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))))))
T c==> c~ c= f0 cNUMERAL c_0 c= c==> c<= cNUMERAL cBIT1 c_0 f0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f3 b0 ccomplex_mul cvector_sub f2 f3 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f3 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f2 b0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f3 b0 ccomplex_mul cvector_sub f2 f3 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f3 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f2 b0
- |- ((!x'. ((x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))) = (g x')))) ==> (((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 * f4 b0 c= cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 f4
- |- (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul (c x)) ((complex_pow a) x)))))
T c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
- |- ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f1 b1 ccomplex_pow f2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f3
+ |- ((\x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))))) x)
T * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b2 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b0 b3 cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b1 b3 ccomplex_mul cvector_sub b0 b1 cvsum * * part c.. cNUMERAL c_0 c- b2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b3 cNUMERAL cBIT1 c_0 b2 / ccomplex_mul * f0 b4 ccomplex_pow b1 c- c- b4 b3 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b3 f1
- ((NUMERAL _0) < n) |- (((NUMERAL _0) < n) /\ ((n = (NUMERAL _0)) = F))
T c==> c< cNUMERAL c_0 f0 c/\ c< cNUMERAL c_0 f0 c= c= f0 cNUMERAL c_0 cF
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f4
- |- (((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b x)) ((complex_pow z) x)) = ((complex_mul (b x)) ((complex_pow z) x))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_mul (b x)) ((complex_pow z) x)))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_mul (b x)) ((complex_pow z) x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
- |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 f0
+ (n = (NUMERAL _0)) |- (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))))))
T c==> c= f0 cNUMERAL c_0 ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow b0 b1 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub b0 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow b0 b1
- |- ((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0
- |- (((NUMERAL (BIT1 _0)) <= n) ==> (((NUMERAL _0) = n) = F))
T c==> c<= cNUMERAL cBIT1 c_0 f0 c= c= cNUMERAL c_0 f0 cF
+ ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0)))) |- ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0)))
T c==> c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0
+ |- (((!x. (!y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))))) ==> ((\x. (!y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))))) x)) = ((\x. (!y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))))) x))
T c= c==> ! ! ! c= c= b0 cvector_add b2 b1 c= cvector_sub b0 b1 b2 * / ! ! c= c= b0 cvector_add b2 b1 c= cvector_sub b0 b1 b2 f0 * / ! ! c= c= b0 cvector_add b2 b1 c= cvector_sub b0 b1 b2 f0
- (~ (n = (NUMERAL _0))) |- ((NUMERAL _0) < n)
T c==> c~ c= f0 cNUMERAL c_0 c< cNUMERAL c_0 f0
- |- (!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul (c x)) ((complex_pow a) x)) = ((complex_mul (c x)) ((complex_pow a) x)))))
T c==> cIN f0 * * part c.. cNUMERAL c_0 f1 c= ccomplex_mul * f2 f0 ccomplex_pow f3 f0 ccomplex_mul * f2 f0 ccomplex_pow f3 f0
- |- (((!x'. ((x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))) = ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0)))))))) ==> (((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\x'. ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))))))) = (((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\x'. ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0)))))))))
T c= c==> ! c==> cIN b0 * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 c= cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 c= cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0
- |- ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul (b x)) ((complex_pow z) x)) = ((complex_mul (b x)) ((complex_pow z) x))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_mul (b x)) ((complex_pow z) x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
+ |- ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))) n)
T * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub f1 f2 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b0 / ccomplex_mul * f0 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b1 f3
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul (c x)) ((complex_pow a) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * f1 b1 ccomplex_pow f2 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 cvsum * * part c.. cNUMERAL c_0 f0 b0 f3
- |- ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 * f4 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f4
- |- ((!i. ((((x + (NUMERAL (BIT1 _0))) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))) = ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ==> (((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))))
T c==> ! c==> c/\ c<= c+ f0 cNUMERAL cBIT1 c_0 b0 c<= b0 f1 c= ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 c= cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0
- |- (((!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))) ==> ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))) n)) = ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0))))) n))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 f0 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0 f0
- (((NUMERAL _0) <= i) /\ (i <= n)) |- (((NUMERAL _0) <= i) = T)
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 f1 c= c<= cNUMERAL c_0 f0 cT
- |- ((\n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 f0
- |- (((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0))))))
T c= cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
- (n = (NUMERAL _0)) |- ((NUMERAL _0) = n)
T c==> c= f0 cNUMERAL c_0 c= cNUMERAL c_0 f0
+ ((~ (n = (NUMERAL _0))) ==> (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))), ((n = (NUMERAL _0)) ==> (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))) |- (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))
T c==> c==> c~ c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 c==> c==> c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
- (~ (n = (NUMERAL _0))) |- ((n = (NUMERAL _0)) = F)
T c==> c~ c= f0 cNUMERAL c_0 c= c= f0 cNUMERAL c_0 cF
- |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= n)) ==> (((complex_mul (c i)) ((complex_pow a) i)) = ((complex_mul (c i)) ((complex_pow a) i))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
- |- (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. (Cx (real_of_num (NUMERAL _0))))))
T c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
- |- (((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0
- |- (((!n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) ==> ((\n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) n)) = ((\n. (((complex_pow x) (SUC n)) = ((complex_mul x) ((complex_pow x) n)))) n))
T c= c==> ! c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 * / c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 f1 * / c= ccomplex_pow f0 cSUC b0 ccomplex_mul f0 ccomplex_pow f0 b0 f1
- |- ((!x'. ((x' IN ((x + (NUMERAL (BIT1 _0))) .. n)) ==> (((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0))))) = ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0)))))))) ==> (((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0))))))) = ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\x'. ((complex_mul (c x')) ((complex_pow a) ((x' - x) - (NUMERAL (BIT1 _0)))))))))
T c==> ! c==> cIN b0 * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 c= ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 c= cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0 cvsum * * part c.. c+ f0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b0 ccomplex_pow f3 c- c- b0 f0 cNUMERAL cBIT1 c_0
- |- (((!g. ((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = (g j)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = (g j)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!j. ((((NUMERAL _0) <= j) /\ (j <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)) = (g j)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f4 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f4
- |- ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = ((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\x. ((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x))))))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b0
- |- ((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul (c x)) ((complex_pow a) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) g)))
T c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 * f3 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 f3
- ((NUMERAL _0) < n) |- (((NUMERAL _0) < n) /\ (((NUMERAL _0) = n) = F))
T c==> c< cNUMERAL c_0 f0 c/\ c< cNUMERAL c_0 f0 c= c= cNUMERAL c_0 f0 cF
- |- (((!g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((vsum ((x + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - x) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) x)) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f4 * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f3 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f4
+ |- (((!t. (t \/ (~ t))) ==> ((\t. (t \/ (~ t))) (n = (NUMERAL _0)))) = ((\t. (t \/ (~ t))) (n = (NUMERAL _0))))
T c= c==> ! c\/ b0 c~ b0 * / c\/ b0 c~ b0 c= f0 cNUMERAL c_0 * / c\/ b0 c~ b0 c= f0 cNUMERAL c_0
- |- (((!x. ((x IN ((NUMERAL _0) .. n)) ==> (((complex_mul (c x)) ((complex_pow a) x)) = ((complex_mul (c x)) ((complex_pow a) x))))) ==> (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul (c x)) ((complex_pow a) x)))))) = (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))) = ((vsum ((NUMERAL _0) .. n)) (\x. ((complex_mul (c x)) ((complex_pow a) x))))))
T c= c==> ! c==> cIN b0 * * part c.. cNUMERAL c_0 f0 c= ccomplex_mul * f1 b0 ccomplex_pow f2 b0 ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0
- |- ((\g. ((!x. ((x IN ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) ==> ((Cx (real_of_num (NUMERAL _0))) = (g x)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)
T * / c==> ! c==> cIN b1 * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 c= cCx creal_of_num cNUMERAL c_0 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f1
+ |- ((x = x) = T)
T c= c= f0 f0 cT
+ |- ((!c. (!n. (?b. (!z. (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i)))) = ((vector_add ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))))))))) = T)
T c= ! ! c? / ! c= cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * b0 b4 ccomplex_pow b3 b4 cvector_add ccomplex_mul cvector_sub b3 f0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_mul * b2 b4 ccomplex_pow b3 b4 cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * b0 b4 ccomplex_pow f0 b4 cT
+ |- ((\b. (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) (\j. ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))))
T * / ! c= ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b3 ccomplex_pow f0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b2 ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 / cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b1 ccomplex_pow f0 c- c- b1 b0 cNUMERAL cBIT1 c_0
+ |- ((\y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z)))) y)
T * / ! c= c= f0 cvector_add b1 b0 c= cvector_sub f0 b0 b1 f1
+ |- (((!x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) ==> ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x)) = ((\x. (((complex_mul x) (Cx (real_of_num (NUMERAL _0)))) = (Cx (real_of_num (NUMERAL _0))))) x))
T c= c==> ! c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0 * / c= ccomplex_mul b0 cCx creal_of_num cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (T = (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\j. ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) i)) ((complex_pow z) i))))))))
T c= cT ! c= ccomplex_mul cvector_sub b0 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b2 ccomplex_pow f0 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b1 ccomplex_mul cvector_sub b0 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b3 ccomplex_pow f0 c- c- b3 b2 cNUMERAL cBIT1 c_0 b1 ccomplex_pow b0 b1
+ |- (((!a. (!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))))) ==> ((\a. (!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))))) a)) = ((\a. (!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))))) a))
T c= c==> ! ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b3 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b1 b4 cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b2 b4 ccomplex_mul cvector_sub b1 b2 cvsum * * part c.. cNUMERAL c_0 c- b3 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b4 cNUMERAL cBIT1 c_0 b3 / ccomplex_mul * b0 b5 ccomplex_pow b2 c- c- b5 b4 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b4 * / ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b3 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b1 b4 cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b2 b4 ccomplex_mul cvector_sub b1 b2 cvsum * * part c.. cNUMERAL c_0 c- b3 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b4 cNUMERAL cBIT1 c_0 b3 / ccomplex_mul * b0 b5 ccomplex_pow b2 c- c- b5 b4 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b4 f0 * / ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b3 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b1 b4 cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b2 b4 ccomplex_mul cvector_sub b1 b2 cvsum * * part c.. cNUMERAL c_0 c- b3 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b4 cNUMERAL cBIT1 c_0 b3 / ccomplex_mul * b0 b5 ccomplex_pow b2 c- c- b5 b4 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b4 f0
+ |- (((!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))) ==> ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))) n)) = ((\n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))) n))
T c= c==> ! c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub f1 f2 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b0 / ccomplex_mul * f0 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b1 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub f1 f2 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b0 / ccomplex_mul * f0 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b1 f3 * / c==> c<= cNUMERAL cBIT1 c_0 b0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 b0 / ccomplex_mul * f0 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub f1 f2 cvsum * * part c.. cNUMERAL c_0 c- b0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 b0 / ccomplex_mul * f0 b2 ccomplex_pow f2 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b1 f3
+ |- (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\j. ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) i)) ((complex_pow z) i)))))))
T c= ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b2 ccomplex_pow f1 c- c- b2 b1 cNUMERAL cBIT1 c_0 b0 ccomplex_pow f0 b0
+ |- (((!g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) ==> ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g)) = ((\g. ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))) g))
T c= c==> ! c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2 * / c==> ! c==> c/\ c<= cNUMERAL c_0 b1 c<= b1 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 * b0 b1 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow f1 b1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 b0 f2
+ |- (((!f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x)))) ==> ((\f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x)))) f)) = ((\f. (!x. (((vsum (x INSERT EMPTY)) f) = (f x)))) f))
T c= c==> ! ! c= cvsum * * part cINSERT b1 part cEMPTY b0 * b0 b1 * / ! c= cvsum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0 * / ! c= cvsum * * part cINSERT b1 part cEMPTY b0 * b0 b1 f0
+ (n = (NUMERAL _0)) |- ((n = (NUMERAL _0)) /\ (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))))
T c==> c= f0 cNUMERAL c_0 c/\ c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- (((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (Cx (real_of_num (NUMERAL _0))))) = T)
T c= c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 f0 ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL c_0 cT
+ |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (g i)))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) g)))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 * f2 b0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 f2
+ |- ((!n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL _0) < n) ==> (~ (n = (NUMERAL _0))))) /\ ((!n. (((NUMERAL _0) < n) ==> ((NUMERAL (BIT1 _0)) <= n))) /\ ((!n. (((NUMERAL (BIT1 _0)) <= n) ==> ((NUMERAL _0) < n))) /\ (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (~ (n = (NUMERAL _0)))))))))
T c/\ ! c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c< cNUMERAL c_0 b0 c~ c= b0 cNUMERAL c_0 c/\ ! c==> c< cNUMERAL c_0 b0 c<= cNUMERAL cBIT1 c_0 b0 c/\ ! c==> c<= cNUMERAL cBIT1 c_0 b0 c< cNUMERAL c_0 b0 ! c==> c<= cNUMERAL cBIT1 c_0 b0 c~ c= b0 cNUMERAL c_0
+ ((((vector_sub x) y) = z) = (x = ((vector_add z) y))) |- ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))
T c==> c= c= cvector_sub f0 f1 f2 c= f0 cvector_add f2 f1 c= c= f0 cvector_add f2 f1 c= cvector_sub f0 f1 f2
+ |- ((\n. ((n .. n) = (n INSERT EMPTY))) n)
T * / c= * * part c.. b0 b0 * * part cINSERT b0 part cEMPTY f0
+ (~ (n = (NUMERAL _0))) |- ((~ (n = (NUMERAL _0))) /\ (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))))
T c==> c~ c= f0 cNUMERAL c_0 c/\ c~ c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- ((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (Cx (real_of_num (NUMERAL _0)))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0)))))))
T c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ ((~ (n = (NUMERAL _0))) ==> (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))) |- (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))
T c==> c==> c~ c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ (~ (n = (NUMERAL _0))) |- (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))))
T c==> c~ c= f0 cNUMERAL c_0 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f2 b0 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b0 ccomplex_pow f3 b0 ccomplex_mul cvector_sub f2 f3 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f3 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f2 b0
+ |- ((?b. (!z. (((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i)))) = ((vector_add ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i)))))))) = T)
T c= c? / ! c= cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvector_add ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 cT
+ |- (((!y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z)))) ==> ((\y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z)))) y)) = ((\y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z)))) y))
T c= c==> ! ! c= c= f0 cvector_add b1 b0 c= cvector_sub f0 b0 b1 * / ! c= c= f0 cvector_add b1 b0 c= cvector_sub f0 b0 b1 f1 * / ! c= c= f0 cvector_add b1 b0 c= cvector_sub f0 b0 b1 f1
+ |- (!z. (((vector_sub ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))))))
T c= cvector_sub ccomplex_mul * f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub f1 f2 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ (~ (n = (NUMERAL _0))) |- ((?b. (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) = (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))))
T c==> c~ c= f0 cNUMERAL c_0 c= c? / ! c= ccomplex_mul cvector_sub b1 f1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f0 / ccomplex_mul * f2 b3 ccomplex_pow f1 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b2 ccomplex_mul cvector_sub b1 f1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f2 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f2 b2 ccomplex_pow f1 b2 ccomplex_mul cvector_sub b1 f1 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- (((!n. ((n .. n) = (n INSERT EMPTY))) ==> ((\n. ((n .. n) = (n INSERT EMPTY))) n)) = ((\n. ((n .. n) = (n INSERT EMPTY))) n))
T c= c==> ! c= * * part c.. b0 b0 * * part cINSERT b0 part cEMPTY * / c= * * part c.. b0 b0 * * part cINSERT b0 part cEMPTY f0 * / c= * * part c.. b0 b0 * * part cINSERT b0 part cEMPTY f0
+ |- ((!z. ((vec (NUMERAL _0)) = ((complex_mul ((vector_sub z) a)) (vec (NUMERAL _0))))) = (!z. (((vector_sub ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0)))))))))
T c= ! c= cvec cNUMERAL c_0 ccomplex_mul cvector_sub b0 f0 cvec cNUMERAL c_0 ! c= cvector_sub ccomplex_mul * f1 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * f1 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 f0 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ |- ((!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\j. ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) i)) ((complex_pow z) i))))))) = ((\b. (!z. (((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) (\j. ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0))))))))))
T c= ! c= ccomplex_mul cvector_sub b0 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b1 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b2 ccomplex_pow f0 c- c- b2 b1 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b1 ccomplex_mul cvector_sub b0 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b3 ccomplex_pow f0 c- c- b3 b2 cNUMERAL cBIT1 c_0 b1 ccomplex_pow b0 b1 * / ! c= ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b3 ccomplex_pow f0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b2 ccomplex_mul cvector_sub b1 f0 cvsum * * part c.. cNUMERAL c_0 c- f1 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 / cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f1 / ccomplex_mul * f2 b1 ccomplex_pow f0 c- c- b1 b0 cNUMERAL cBIT1 c_0
+ |- (((!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))))) ==> ((\x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))))) x)) = ((\x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j)))))))))) x))
T c= c==> ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b2 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b0 b3 cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b1 b3 ccomplex_mul cvector_sub b0 b1 cvsum * * part c.. cNUMERAL c_0 c- b2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b3 cNUMERAL cBIT1 c_0 b2 / ccomplex_mul * f0 b4 ccomplex_pow b1 c- c- b4 b3 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b3 * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b2 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b0 b3 cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b1 b3 ccomplex_mul cvector_sub b0 b1 cvsum * * part c.. cNUMERAL c_0 c- b2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b3 cNUMERAL cBIT1 c_0 b2 / ccomplex_mul * f0 b4 ccomplex_pow b1 c- c- b4 b3 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b3 f1 * / ! ! c==> c<= cNUMERAL cBIT1 c_0 b2 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b0 b3 cvsum * * part c.. cNUMERAL c_0 b2 / ccomplex_mul * f0 b3 ccomplex_pow b1 b3 ccomplex_mul cvector_sub b0 b1 cvsum * * part c.. cNUMERAL c_0 c- b2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b3 cNUMERAL cBIT1 c_0 b2 / ccomplex_mul * f0 b4 ccomplex_pow b1 c- c- b4 b3 cNUMERAL cBIT1 c_0 ccomplex_pow b0 b3 f1
+ |- ((\a. (!x. (!y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))))) a)
T * / ! ! ! c==> c<= cNUMERAL cBIT1 c_0 b3 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b1 b4 cvsum * * part c.. cNUMERAL c_0 b3 / ccomplex_mul * b0 b4 ccomplex_pow b2 b4 ccomplex_mul cvector_sub b1 b2 cvsum * * part c.. cNUMERAL c_0 c- b3 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b4 cNUMERAL cBIT1 c_0 b3 / ccomplex_mul * b0 b5 ccomplex_pow b2 c- c- b5 b4 cNUMERAL cBIT1 c_0 ccomplex_pow b1 b4 f0
+ |- (((!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (Cx (real_of_num (NUMERAL _0)))))) ==> (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0))))))) = (((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)))) = ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0)))))))
T c= c==> ! c==> c/\ c<= cNUMERAL c_0 b0 c<= b0 c- f0 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 c= cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b0 ccomplex_pow f1 b0 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0
+ (n = (NUMERAL _0)) |- ((!z. (((vector_sub ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) ((complex_mul (c (NUMERAL _0))) (Cx (real_of_num (NUMERAL (BIT1 _0)))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. ((NUMERAL _0) - (NUMERAL (BIT1 _0))))) (\i. (Cx (real_of_num (NUMERAL _0)))))))) = (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i))))))))
T c==> c= f0 cNUMERAL c_0 c= ! c= cvector_sub ccomplex_mul * f1 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul * f1 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0 ccomplex_mul cvector_sub b0 f2 cvsum * * part c.. cNUMERAL c_0 c- cNUMERAL c_0 cNUMERAL cBIT1 c_0 / cCx creal_of_num cNUMERAL c_0 ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow b0 b1 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b1 ccomplex_pow f2 b1 ccomplex_mul cvector_sub b0 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 b1 ccomplex_pow b0 b1
+ |- ((n = (NUMERAL _0)) ==> (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))))
T c==> c= f0 cNUMERAL c_0 c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- (?b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i))))))))
T c? / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2
+ |- ((\x. (!y. (!z. ((x = ((vector_add z) y)) = (((vector_sub x) y) = z))))) x)
T * / ! ! c= c= b0 cvector_add b2 b1 c= cvector_sub b0 b1 b2 f0
+ ((Cx (real_of_num (NUMERAL _0))) = (vec (NUMERAL _0))) |- ((vec (NUMERAL _0)) = (Cx (real_of_num (NUMERAL _0))))
T c==> c= cCx creal_of_num cNUMERAL c_0 cvec cNUMERAL c_0 c= cvec cNUMERAL c_0 cCx creal_of_num cNUMERAL c_0
+ |- ((\x. (((vector_sub x) x) = (Cx (real_of_num (NUMERAL _0))))) x)
T * / c= cvector_sub b0 b0 cCx creal_of_num cNUMERAL c_0 f0
+ |- (((((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j)))))) = T) = ((((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((vsum ((i + (NUMERAL (BIT1 _0))) .. n)) (\i'. ((complex_mul (c i')) ((complex_pow a) ((i' - i) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) i)))))) = T))
T c= c= c= ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 cT c= c= ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 cT
+ |- (!i. ((((NUMERAL _0) <= i) /\ (i <= (n - (NUMERAL (BIT1 _0))))) ==> (((complex_mul ((\i. (Cx (real_of_num (NUMERAL _0)))) i)) ((complex_pow z) i)) = (Cx (real_of_num (NUMERAL _0))))))
T c==> c/\ c<= cNUMERAL c_0 f0 c<= f0 c- f1 cNUMERAL cBIT1 c_0 c= ccomplex_mul * / cCx creal_of_num cNUMERAL c_0 f0 ccomplex_pow f2 f0 cCx creal_of_num cNUMERAL c_0
+ (n = (NUMERAL _0)) |- ((\b. (!z. (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow z) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) i))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul (b i)) ((complex_pow z) i)))))))) (\i. (Cx (real_of_num (NUMERAL _0)))))
T c==> c= f0 cNUMERAL c_0 * / ! c= cvector_sub cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow b1 b2 cvsum * * part c.. cNUMERAL c_0 f0 / ccomplex_mul * f1 b2 ccomplex_pow f2 b2 ccomplex_mul cvector_sub b1 f2 cvsum * * part c.. cNUMERAL c_0 c- f0 cNUMERAL cBIT1 c_0 / ccomplex_mul * b0 b2 ccomplex_pow b1 b2 / cCx creal_of_num cNUMERAL c_0
+ |- ((((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (c i)) ((complex_pow a) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) j))))) = ((complex_mul ((vector_sub z) a)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\i. ((complex_mul ((vsum ((i + (NUMERAL (BIT1 _0))) .. n)) (\i'. ((complex_mul (c i')) ((complex_pow a) ((i' - i) - (NUMERAL (BIT1 _0)))))))) ((complex_pow z) i)))))) = T)
T c= c= ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 ccomplex_mul cvector_sub f0 f1 cvsum * * part c.. cNUMERAL c_0 c- f2 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b0 cNUMERAL cBIT1 c_0 f2 / ccomplex_mul * f3 b1 ccomplex_pow f1 c- c- b1 b0 cNUMERAL cBIT1 c_0 ccomplex_pow f0 b0 cT
+ |- ((\t. (t \/ (~ t))) (n = (NUMERAL _0)))
T * / c\/ b0 c~ b0 c= f0 cNUMERAL c_0
+ |- ((\n. ((~ (n = (NUMERAL _0))) ==> ((NUMERAL (BIT1 _0)) <= n))) n)
T * / c==> c~ c= b0 cNUMERAL c_0 c<= cNUMERAL cBIT1 c_0 b0 f0
+ |- ((\y. (!n. (((NUMERAL (BIT1 _0)) <= n) ==> (((vector_sub ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow x) i))))) ((vsum ((NUMERAL _0) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) i))))) = ((complex_mul ((vector_sub x) y)) ((vsum ((NUMERAL _0) .. (n - (NUMERAL (BIT1 _0))))) (\j. ((complex_mul ((vsum ((j + (NUMERAL (BIT1 _0))) .. n)) (\i. ((complex_mul (a i)) ((complex_pow y) ((i - j) - (NUMERAL (BIT1 _0)))))))) ((complex_pow x) j))))))))) y)
T * / ! c==> c<= cNUMERAL cBIT1 c_0 b1 c= cvector_sub cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow f1 b2 cvsum * * part c.. cNUMERAL c_0 b1 / ccomplex_mul * f0 b2 ccomplex_pow b0 b2 ccomplex_mul cvector_sub f1 b0 cvsum * * part c.. cNUMERAL c_0 c- b1 cNUMERAL cBIT1 c_0 / ccomplex_mul cvsum * * part c.. c+ b2 cNUMERAL cBIT1 c_0 b1 / ccomplex_mul * f0 b3 ccomplex_pow b0 c- c- b3 b2 cNUMERAL cBIT1 c_0 ccomplex_pow f1 b2 f2
+ |- (((complex_pow x) (NUMERAL _0)) = (Cx (real_of_num (NUMERAL (BIT1 _0)))))
T c= ccomplex_pow f0 cNUMERAL c_0 cCx creal_of_num cNUMERAL cBIT1 c_0
+ |- (((!x. (((vsum (x INSERT EMPTY)) f) = (f x))) ==> ((\x. (((vsum (x INSERT EMPTY)) f) = (f x))) x)) = ((\x. (((vsum (x INSERT EMPTY)) f) = (f x))) x))
T c= c==> ! c= cvsum * * part cINSERT b0 part cEMPTY f0 * f0 b0 * / c= cvsum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1 * / c= cvsum * * part cINSERT b0 part cEMPTY f0 * f0 b0 f1
